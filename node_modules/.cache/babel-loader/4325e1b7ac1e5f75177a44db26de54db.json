{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nimport * as React from 'react';\nimport { Popup as PopupComponent } from './Popup';\n/**\n * The PopupPropsContext. It allows to configure the Popup props from a wrapper component.\n *\n * @example\n * ```jsx-no-run\n *  <PopupPropsContext.Provider value={props => ({ ...props, appendTo: document.querySelector('myPopupsContainer') })}>\n *      <DropDownList />\n *      <Editor />\n *  </PopupPropsContext.Provider>\n * ```\n */\n\nexport var PopupPropsContext = React.createContext(function (props) {\n  return props;\n});\n/**\n * The KendoReact Popup component.\n */\n\nexport var Popup = React.forwardRef(function (props, ref) {\n  var contextPropsCallback = React.useContext(PopupPropsContext);\n  var popupProps = contextPropsCallback.call(undefined, props);\n  return React.createElement(PopupComponent, __assign({\n    ref: ref\n  }, popupProps));\n});","map":{"version":3,"sources":["../../src/PopupWithContext.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;AAAA,OAAO,KAAK,KAAZ,MAAuB,OAAvB;AACA,SAAS,KAAK,IAAI,cAAlB,QAAwC,SAAxC;AAGA;;;;;;;;;;AAUG;;AACH,OAAO,IAAM,iBAAiB,GAAG,KAAK,CAAC,aAAN,CAAuD,UAAA,KAAA,EAAK;AAAI,SAAA,KAAA;AAAK,CAArE,CAA1B;AAEP;;AAEG;;AACH,OAAO,IAAM,KAAK,GAAG,KAAK,CAAC,UAAN,CAAiB,UAAC,KAAD,EAAoB,GAApB,EAAkD;AACpF,MAAM,oBAAoB,GAAG,KAAK,CAAC,UAAN,CAAiB,iBAAjB,CAA7B;AACA,MAAM,UAAU,GAAe,oBAAoB,CAAC,IAArB,CAA0B,SAA1B,EAAqC,KAArC,CAA/B;AAEA,SACE,KAAA,CAAA,aAAA,CAAC,cAAD,EAAe,QAAA,CAAA;AACb,IAAA,GAAG,EAAE;AADQ,GAAA,EAET,UAFS,CAAf,CADF;AAMH,CAVoB,CAAd","sourceRoot":"","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport * as React from 'react';\nimport { Popup as PopupComponent } from './Popup';\n/**\n * The PopupPropsContext. It allows to configure the Popup props from a wrapper component.\n *\n * @example\n * ```jsx-no-run\n *  <PopupPropsContext.Provider value={props => ({ ...props, appendTo: document.querySelector('myPopupsContainer') })}>\n *      <DropDownList />\n *      <Editor />\n *  </PopupPropsContext.Provider>\n * ```\n */\nexport var PopupPropsContext = React.createContext(function (props) { return props; });\n/**\n * The KendoReact Popup component.\n */\nexport var Popup = React.forwardRef(function (props, ref) {\n    var contextPropsCallback = React.useContext(PopupPropsContext);\n    var popupProps = contextPropsCallback.call(undefined, props);\n    return (React.createElement(PopupComponent, __assign({ ref: ref }, popupProps)));\n});\n//# sourceMappingURL=PopupWithContext.js.map"]},"metadata":{},"sourceType":"module"}