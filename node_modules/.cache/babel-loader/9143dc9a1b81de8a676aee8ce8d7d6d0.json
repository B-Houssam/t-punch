{"ast":null,"code":"var _jsxFileName = \"/home/houssam/workspace/projects/React/t-punch/src/components/Dashboard/DashboardExplore/ExploreData/index.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { Doughnut, Line } from \"react-chartjs-2\";\nimport { SubWrapper, ExWrapper, ExTxt, FirstRow, SecondRow, DoughnutChart, LineChart, Title, FormInput, TitleWrapper, FirstCol, SecondCol, ThirdCol, FirstSubCol, SecondSubCol, CardSubTitleWrapper, CardTitle } from \"./ExElements\";\nimport { IoMdArrowDropupCircle } from \"react-icons/io\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst AddData = () => {\n  _s();\n\n  const [file, setfile] = useState(null);\n\n  const fetchData = async () => {\n    // eslint-disable-next-line\n    const res = await fetch(\"http://localhost:8000/public\", {\n      method: \"GET\"\n    }).then(res => res.json()).then(res => setfile(res));\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n  /*\n  const hiddenFileInput = React.useRef(null);\n   const handleClick = (event) => {\n    hiddenFileInput.current.click();\n  };\n   \n  const handleAction = async (data) => {\n    const formData = new FormData();\n    formData.append(\"file\", selected);\n    const res = await fetch(\"http://localhost:8000/public\", {\n      method: \"POST\",\n      body: formData,\n    }).then((res) => res.json());\n    if (res.status === true) {\n      toast.success(\"Upload succesful!\", {\n        position: \"bottom-center\",\n        autoClose: 2000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: false,\n        draggable: true,\n        progress: undefined,\n      });\n    } else {\n      toast.error(\"Upload failed!\", {\n        position: \"bottom-center\",\n        autoClose: 2000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: false,\n        draggable: true,\n        progress: undefined,\n      });\n    }\n    setfile(false);\n    setshow(false);\n    fetchData();\n  };\n  */\n\n  const data = {\n    labels: [\"EU\", \"NA\", \"JP\"],\n    datasets: [{\n      label: \"# of Millions\",\n      data: [12, 19, 3],\n      backgroundColor: [\"rgba(255, 99, 132, 0.2)\", \"rgba(54, 162, 235, 0.2)\", \"rgba(255, 206, 86, 0.2)\"],\n      borderColor: [\"rgba(255, 99, 132, 1)\", \"rgba(54, 162, 235, 1)\", \"rgba(255, 206, 86, 1)\"],\n      borderWidth: 1\n    }]\n  };\n  const data2 = {\n    labels: [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\"],\n    datasets: [{\n      label: \"# of sales in Millions\",\n      data: [12, 19, 3, 5, 2, 3],\n      fill: false,\n      backgroundColor: \"rgba(54, 162, 235, 1)\",\n      borderColor: \"rgba(54, 162, 235, 0.2)\"\n    }]\n  };\n  const options = {\n    scales: {\n      yAxes: [{\n        ticks: {\n          beginAtZero: true\n        }\n      }]\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: file === null ? /*#__PURE__*/_jsxDEV(ExWrapper, {\n      children: /*#__PURE__*/_jsxDEV(SubWrapper, {\n        children: /*#__PURE__*/_jsxDEV(ExTxt, {\n          children: \" Click on DATASET to upload a new dataset first!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(ExWrapper, {\n      children: [/*#__PURE__*/_jsxDEV(SecondRow, {\n        children: [/*#__PURE__*/_jsxDEV(FirstCol, {\n          children: [/*#__PURE__*/_jsxDEV(CardTitle, {\n            children: \"Average Value Order\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(CardSubTitleWrapper, {\n            children: [\"12.589 $\", /*#__PURE__*/_jsxDEV(CardIndc, {\n              children: [/*#__PURE__*/_jsxDEV(IoMdArrowDropupCircle, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 19\n              }, this), \"\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(SecondCol, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ThirdCol, {\n          children: [/*#__PURE__*/_jsxDEV(FirstSubCol, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(SecondSubCol, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(FirstRow, {\n        children: [/*#__PURE__*/_jsxDEV(LineChart, {\n          children: [/*#__PURE__*/_jsxDEV(Title, {\n            children: \"Daily Line Chart\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Line, {\n            data: data2,\n            options: options\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(DoughnutChart, {\n          children: [/*#__PURE__*/_jsxDEV(TitleWrapper, {\n            children: [/*#__PURE__*/_jsxDEV(Title, {\n              children: \"Status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n              type: \"text\",\n              placeholder: \"Publisher\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Doughnut, {\n            data: data\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(AddData, \"rvKc6psy+C7aJSBIb1posBLPu1c=\");\n\n_c = AddData;\nexport default AddData;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddData\");","map":{"version":3,"sources":["/home/houssam/workspace/projects/React/t-punch/src/components/Dashboard/DashboardExplore/ExploreData/index.js"],"names":["React","useState","useEffect","Doughnut","Line","SubWrapper","ExWrapper","ExTxt","FirstRow","SecondRow","DoughnutChart","LineChart","Title","FormInput","TitleWrapper","FirstCol","SecondCol","ThirdCol","FirstSubCol","SecondSubCol","CardSubTitleWrapper","CardTitle","IoMdArrowDropupCircle","AddData","file","setfile","fetchData","res","fetch","method","then","json","data","labels","datasets","label","backgroundColor","borderColor","borderWidth","data2","fill","options","scales","yAxes","ticks","beginAtZero"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,QAAT,EAAmBC,IAAnB,QAA+B,iBAA/B;AAEA,SACEC,UADF,EAEEC,SAFF,EAGEC,KAHF,EAIEC,QAJF,EAKEC,SALF,EAMEC,aANF,EAOEC,SAPF,EAQEC,KARF,EASEC,SATF,EAUEC,YAVF,EAWEC,QAXF,EAYEC,SAZF,EAaEC,QAbF,EAcEC,WAdF,EAeEC,YAfF,EAgBEC,mBAhBF,EAiBEC,SAjBF,QAkBO,cAlBP;AAoBA,SAASC,qBAAT,QAAsC,gBAAtC;;;;AAEA,MAAMC,OAAO,GAAG,MAAM;AAAA;;AACpB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBxB,QAAQ,CAAC,IAAD,CAAhC;;AAEA,QAAMyB,SAAS,GAAG,YAAY;AAC5B;AACA,UAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,8BAAD,EAAiC;AACtDC,MAAAA,MAAM,EAAE;AAD8C,KAAjC,CAAL,CAGfC,IAHe,CAGTH,GAAD,IAASA,GAAG,CAACI,IAAJ,EAHC,EAIfD,IAJe,CAITH,GAAD,IAASF,OAAO,CAACE,GAAD,CAJN,CAAlB;AAKD,GAPD;;AASAzB,EAAAA,SAAS,CAAC,MAAM;AACdwB,IAAAA,SAAS;AACV,GAFQ,EAEN,EAFM,CAAT;AAIA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIE,QAAMM,IAAI,GAAG;AACXC,IAAAA,MAAM,EAAE,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,CADG;AAEXC,IAAAA,QAAQ,EAAE,CACR;AACEC,MAAAA,KAAK,EAAE,eADT;AAEEH,MAAAA,IAAI,EAAE,CAAC,EAAD,EAAK,EAAL,EAAS,CAAT,CAFR;AAGEI,MAAAA,eAAe,EAAE,CACf,yBADe,EAEf,yBAFe,EAGf,yBAHe,CAHnB;AAQEC,MAAAA,WAAW,EAAE,CACX,uBADW,EAEX,uBAFW,EAGX,uBAHW,CARf;AAaEC,MAAAA,WAAW,EAAE;AAbf,KADQ;AAFC,GAAb;AAqBA,QAAMC,KAAK,GAAG;AACZN,IAAAA,MAAM,EAAE,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqB,GAArB,EAA0B,GAA1B,CADI;AAEZC,IAAAA,QAAQ,EAAE,CACR;AACEC,MAAAA,KAAK,EAAE,wBADT;AAEEH,MAAAA,IAAI,EAAE,CAAC,EAAD,EAAK,EAAL,EAAS,CAAT,EAAY,CAAZ,EAAe,CAAf,EAAkB,CAAlB,CAFR;AAGEQ,MAAAA,IAAI,EAAE,KAHR;AAIEJ,MAAAA,eAAe,EAAE,uBAJnB;AAKEC,MAAAA,WAAW,EAAE;AALf,KADQ;AAFE,GAAd;AAaA,QAAMI,OAAO,GAAG;AACdC,IAAAA,MAAM,EAAE;AACNC,MAAAA,KAAK,EAAE,CACL;AACEC,QAAAA,KAAK,EAAE;AACLC,UAAAA,WAAW,EAAE;AADR;AADT,OADK;AADD;AADM,GAAhB;AAYA,sBACE;AAAA,cACGrB,IAAI,KAAK,IAAT,gBACC,QAAC,SAAD;AAAA,6BACE,QAAC,UAAD;AAAA,+BACE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADD,gBAOC,QAAC,SAAD;AAAA,8BACE,QAAC,SAAD;AAAA,gCACE,QAAC,QAAD;AAAA,kCACE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,mBAAD;AAAA,uBACG,UADH,eAEE,QAAC,QAAD;AAAA,sCACE,QAAC,qBAAD;AAAA;AAAA;AAAA;AAAA,sBADF,EAEG,EAFH;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAWE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,gBAXF,eAYE,QAAC,QAAD;AAAA,kCACE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAZF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAkBE,QAAC,QAAD;AAAA,gCACE,QAAC,SAAD;AAAA,kCACE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,IAAD;AAAM,YAAA,IAAI,EAAEe,KAAZ;AAAmB,YAAA,OAAO,EAAEE;AAA5B;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAKE,QAAC,aAAD;AAAA,kCACE,QAAC,YAAD;AAAA,oCACE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE,QAAC,SAAD;AAAW,cAAA,IAAI,EAAC,MAAhB;AAAuB,cAAA,WAAW,EAAC;AAAnC;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAKE,QAAC,QAAD;AAAU,YAAA,IAAI,EAAET;AAAhB;AAAA;AAAA;AAAA;AAAA,kBALF;AAAA;AAAA;AAAA;AAAA;AAAA,gBALF;AAAA;AAAA;AAAA;AAAA;AAAA,cAlBF;AAAA;AAAA;AAAA;AAAA;AAAA;AARJ,mBADF;AA4CD,CApJD;;GAAMT,O;;KAAAA,O;AAsJN,eAAeA,OAAf","sourcesContent":["import React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { Doughnut, Line } from \"react-chartjs-2\";\n\nimport {\n  SubWrapper,\n  ExWrapper,\n  ExTxt,\n  FirstRow,\n  SecondRow,\n  DoughnutChart,\n  LineChart,\n  Title,\n  FormInput,\n  TitleWrapper,\n  FirstCol,\n  SecondCol,\n  ThirdCol,\n  FirstSubCol,\n  SecondSubCol,\n  CardSubTitleWrapper,\n  CardTitle,\n} from \"./ExElements\";\n\nimport { IoMdArrowDropupCircle } from \"react-icons/io\";\n\nconst AddData = () => {\n  const [file, setfile] = useState(null);\n\n  const fetchData = async () => {\n    // eslint-disable-next-line\n    const res = await fetch(\"http://localhost:8000/public\", {\n      method: \"GET\",\n    })\n      .then((res) => res.json())\n      .then((res) => setfile(res));\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  /*\n  const hiddenFileInput = React.useRef(null);\n\n  const handleClick = (event) => {\n    hiddenFileInput.current.click();\n  };\n\n  \n  const handleAction = async (data) => {\n    const formData = new FormData();\n    formData.append(\"file\", selected);\n    const res = await fetch(\"http://localhost:8000/public\", {\n      method: \"POST\",\n      body: formData,\n    }).then((res) => res.json());\n    if (res.status === true) {\n      toast.success(\"Upload succesful!\", {\n        position: \"bottom-center\",\n        autoClose: 2000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: false,\n        draggable: true,\n        progress: undefined,\n      });\n    } else {\n      toast.error(\"Upload failed!\", {\n        position: \"bottom-center\",\n        autoClose: 2000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: false,\n        draggable: true,\n        progress: undefined,\n      });\n    }\n    setfile(false);\n    setshow(false);\n    fetchData();\n  };\n  */\n\n  const data = {\n    labels: [\"EU\", \"NA\", \"JP\"],\n    datasets: [\n      {\n        label: \"# of Millions\",\n        data: [12, 19, 3],\n        backgroundColor: [\n          \"rgba(255, 99, 132, 0.2)\",\n          \"rgba(54, 162, 235, 0.2)\",\n          \"rgba(255, 206, 86, 0.2)\",\n        ],\n        borderColor: [\n          \"rgba(255, 99, 132, 1)\",\n          \"rgba(54, 162, 235, 1)\",\n          \"rgba(255, 206, 86, 1)\",\n        ],\n        borderWidth: 1,\n      },\n    ],\n  };\n\n  const data2 = {\n    labels: [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\"],\n    datasets: [\n      {\n        label: \"# of sales in Millions\",\n        data: [12, 19, 3, 5, 2, 3],\n        fill: false,\n        backgroundColor: \"rgba(54, 162, 235, 1)\",\n        borderColor: \"rgba(54, 162, 235, 0.2)\",\n      },\n    ],\n  };\n\n  const options = {\n    scales: {\n      yAxes: [\n        {\n          ticks: {\n            beginAtZero: true,\n          },\n        },\n      ],\n    },\n  };\n\n  return (\n    <>\n      {file === null ? (\n        <ExWrapper>\n          <SubWrapper>\n            <ExTxt> Click on DATASET to upload a new dataset first!</ExTxt>\n          </SubWrapper>\n        </ExWrapper>\n      ) : (\n        <ExWrapper>\n          <SecondRow>\n            <FirstCol>\n              <CardTitle>Average Value Order</CardTitle>\n              <CardSubTitleWrapper>\n                {\"12.589 $\"}\n                <CardIndc>\n                  <IoMdArrowDropupCircle></IoMdArrowDropupCircle>\n                  {\"\"}\n                </CardIndc>\n              </CardSubTitleWrapper>\n            </FirstCol>\n            <SecondCol></SecondCol>\n            <ThirdCol>\n              <FirstSubCol></FirstSubCol>\n              <SecondSubCol></SecondSubCol>\n            </ThirdCol>\n          </SecondRow>\n          <FirstRow>\n            <LineChart>\n              <Title>Daily Line Chart</Title>\n              <Line data={data2} options={options} />\n            </LineChart>\n            <DoughnutChart>\n              <TitleWrapper>\n                <Title>Status</Title>\n                <FormInput type=\"text\" placeholder=\"Publisher\"></FormInput>\n              </TitleWrapper>\n              <Doughnut data={data}></Doughnut>\n            </DoughnutChart>\n          </FirstRow>\n        </ExWrapper>\n      )}\n    </>\n  );\n};\n\nexport default AddData;\n"]},"metadata":{},"sourceType":"module"}