{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nimport * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { Keys, dispatchEvent, guid } from '@progress/kendo-react-common';\nimport nav from './utils/getItemIdUponKeyboardNavigation';\nimport { resolveItemId, isEnabledAndAllParentsEnabled, hasChildren } from './utils/itemUtils';\nimport TreeViewItem from './TreeViewItem';\nimport { ZERO_LEVEL_ZERO_NODE_ID, getItemById } from './utils/itemIdUtils';\nimport FieldsService from './utils/FieldsService';\nimport { validatePackage } from '@progress/kendo-react-common';\nimport { packageMetadata } from './package-metadata';\nimport { CHECK_FIELD, CHECK_INDETERMINATE_FIELD, CHILDREN_FIELD, DISABLED_FIELD, EXPAND_FIELD, HAS_CHILDREN_FIELD, SELECT_FIELD, TEXT_FIELD } from './utils/consts';\n/**\n * Represents the [KendoReact TreeView component]({% slug overview_treeview %}).\n *\n * @example\n * ```jsx\n * const data = [{\n *     text: 'Furniture', expanded: true, items: [\n *         { text: 'Tables & Chairs' }, { text: 'Sofas' }, { text: 'Occasional Furniture' }]\n * }, {\n *     text: 'Decor', expanded: true, items: [\n *         { text: 'Bed Linen' }, { text: 'Curtains & Blinds' }, { text: 'Carpets' }]\n * }];\n * class App extends React.Component {\n *     render() {\n *         return <TreeView data={data} />;\n *     }\n * }\n * ReactDOM.render(<App />, document.querySelector('my-app'));\n * ```\n */\n\nvar TreeView =\n/** @class */\nfunction (_super) {\n  __extends(TreeView, _super);\n\n  function TreeView(props) {\n    var _this = _super.call(this, props) || this;\n    /**\n     * @hidden\n     */\n\n\n    _this.state = {\n      focusedItemId: undefined,\n      focusedItemPublicId: undefined,\n      tabbableItemId: ZERO_LEVEL_ZERO_NODE_ID\n    }; // When there is a change in state.focusedItemId, calling focus() on the dom element of the focused item\n    // is most often not needed, because the browser focuses the element on its own.\n    // https://github.com/telerik/kendo-react/issues/190\n\n    _this.allowExplicitFocus = false;\n    _this.treeGuid = guid();\n    _this._element = null;\n\n    _this.onFocusDomElNeeded = function (domItem) {\n      if (_this.allowExplicitFocus) {\n        _this.focusDomItem(domItem);\n      }\n    };\n\n    _this.onCheckChange = function (event, item, itemId) {\n      _this.setFocus(itemId);\n\n      _this.dispatchCheckChange(event, item, itemId);\n    };\n\n    _this.onExpandChange = function (event, item, itemId) {\n      _this.setFocus(itemId);\n\n      _this.dispatchExpandChange(event, item, itemId);\n    };\n\n    _this.onPress = function (event, item, itemId) {\n      event.originalEvent.preventDefault();\n\n      if (_this.props.onItemDragStart) {\n        _this.props.onItemDragStart.call(undefined, {\n          target: _this,\n          item: item,\n          itemHierarchicalIndex: itemId\n        });\n      }\n    };\n\n    _this.onDrag = function (event, item, itemId) {\n      event.originalEvent.preventDefault();\n      var pageX = event.pageX,\n          pageY = event.pageY,\n          clientX = event.clientX,\n          clientY = event.clientY;\n\n      if (_this.props.onItemDragOver) {\n        _this.props.onItemDragOver.call(undefined, {\n          target: _this,\n          item: item,\n          itemHierarchicalIndex: itemId,\n          pageX: pageX,\n          pageY: pageY,\n          clientX: clientX,\n          clientY: clientY\n        });\n      }\n    };\n\n    _this.onRelease = function (event, item, itemId) {\n      var pageX = event.pageX,\n          pageY = event.pageY,\n          clientX = event.clientX,\n          clientY = event.clientY;\n\n      if (_this.props.onItemDragEnd) {\n        _this.props.onItemDragEnd.call(undefined, {\n          target: _this,\n          item: item,\n          itemHierarchicalIndex: itemId,\n          pageX: pageX,\n          pageY: pageY,\n          clientX: clientX,\n          clientY: clientY\n        });\n      }\n    };\n\n    _this.onItemClick = function (event, item, itemId) {\n      _this.setFocus(itemId);\n\n      _this.dispatchItemClick(event, item, itemId);\n    };\n\n    _this.onFocus = function () {\n      clearTimeout(_this.blurRequest);\n\n      if (_this.state.focusedItemId === undefined && _this.data.length) {\n        _this.setFocus(_this.state.tabbableItemId);\n      }\n    };\n\n    _this.onBlur = function () {\n      clearTimeout(_this.blurRequest);\n      _this.blurRequest = window.setTimeout(function () {\n        return _this.setFocus(undefined);\n      }, 0);\n    };\n\n    _this.onKeyDown = function (event) {\n      var focusedItem = _this.getFocusedItem();\n\n      if (focusedItem) {\n        var newItemId = nav(focusedItem, _this.state.focusedItemId, _this.data, event.keyCode, _this.fieldsSvc);\n\n        if (newItemId !== _this.state.focusedItemId) {\n          // This disables the auto-scroll. The scroll is achieved via item focusing.\n          event.preventDefault();\n          _this.allowExplicitFocus = true;\n\n          _this.setFocus(newItemId);\n        }\n\n        _this.dispatchEventsOnKeyDown(event, focusedItem);\n      }\n    };\n\n    validatePackage(packageMetadata);\n    return _this;\n  }\n\n  Object.defineProperty(TreeView.prototype, \"element\", {\n    /**\n     * @hidden\n     */\n    get: function () {\n      return this._element;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\n   * @hidden\n   */\n\n  TreeView.prototype.render = function () {\n    var _this = this;\n\n    this.fieldsSvc = new FieldsService(this.props);\n    return React.createElement(\"div\", {\n      className: 'k-widget k-treeview' + (this.props.className ? ' ' + this.props.className : ''),\n      onKeyDown: this.onKeyDown,\n      onFocus: this.onFocus,\n      onBlur: this.onBlur,\n      role: \"tree\",\n      \"aria-multiselectable\": this.ariaMultiSelectable ? true : undefined,\n      \"aria-label\": this.props['aria-label'],\n      \"aria-labelledby\": this.props['aria-labelledby'],\n      ref: function (element) {\n        return _this._element = element;\n      },\n      tabIndex: this.props.tabIndex\n    }, React.createElement(\"ul\", {\n      className: \"k-treeview-lines k-group\",\n      role: \"group\"\n    }, this.data.map(function (item, index) {\n      return React.createElement(TreeViewItem, {\n        item: item,\n        itemId: index.toString(),\n        treeGuid: _this.treeGuid,\n        animate: _this.props.animate,\n        focusedItemId: _this.state.focusedItemId,\n        tabbableItemId: _this.state.tabbableItemId,\n        fieldsService: _this.fieldsSvc,\n        itemUI: _this.props.item,\n        checkboxes: _this.props.checkboxes,\n        ariaMultiSelectable: _this.ariaMultiSelectable,\n        onItemClick: _this.onItemClick,\n        onFocusDomElNeeded: _this.onFocusDomElNeeded,\n        draggable: _this.props.draggable,\n        onPress: _this.onPress,\n        onDrag: _this.onDrag,\n        onRelease: _this.onRelease,\n        expandIcons: _this.props.expandIcons,\n        onExpandChange: _this.onExpandChange,\n        onCheckChange: _this.onCheckChange,\n        key: index\n      });\n    })));\n  };\n  /**\n   * @hidden\n   */\n\n\n  TreeView.prototype.componentDidUpdate = function () {\n    this.allowExplicitFocus = false;\n    this.refocusDueToFocusIdField();\n  };\n\n  TreeView.prototype.dispatchEventsOnKeyDown = function (event, focusedItem) {\n    var _this = this; // isEnabled is the most expensive op and that is why is left last.\n\n\n    var isEnabled = function () {\n      return isEnabledAndAllParentsEnabled(_this.state.focusedItemId, _this.data, _this.fieldsSvc);\n    };\n\n    if (event.keyCode === Keys.left && this.fieldsSvc.expanded(focusedItem) && isEnabled()) {\n      this.dispatchExpandChange(event, focusedItem, this.state.focusedItemId);\n    } else if (event.keyCode === Keys.right && !this.fieldsSvc.expanded(focusedItem) && (this.fieldsSvc.hasChildren(focusedItem) || hasChildren(focusedItem, this.props.childrenField)) && isEnabled()) {\n      this.dispatchExpandChange(event, focusedItem, this.state.focusedItemId);\n    } else if (event.keyCode === Keys.enter && isEnabled()) {\n      this.dispatchItemClick(event, focusedItem, this.state.focusedItemId);\n    } else if (event.keyCode === Keys.space && isEnabled()) {\n      // W/o preventDefault() long TreeViews gets incorrectly scrolled.\n      event.preventDefault();\n      this.dispatchCheckChange(event, focusedItem, this.state.focusedItemId);\n    }\n  };\n\n  TreeView.prototype.setFocus = function (focusedItemId) {\n    if (focusedItemId) {\n      if (this.fieldsSvc.focusIdField) {\n        var item = this.getItemById(focusedItemId);\n        this.setState({\n          focusedItemId: focusedItemId,\n          focusedItemPublicId: this.fieldsSvc.focusId(item)\n        });\n      } else {\n        this.setState({\n          focusedItemId: focusedItemId\n        });\n      }\n    } else {\n      this.setState(function (state) {\n        return {\n          focusedItemId: undefined,\n          focusedItemPublicId: undefined,\n          tabbableItemId: state.focusedItemId\n        };\n      });\n    }\n  };\n\n  TreeView.prototype.getFocusedItem = function () {\n    return this.state.focusedItemId ? this.getItemById(this.state.focusedItemId) : undefined;\n  };\n\n  TreeView.prototype.getItemById = function (itemId) {\n    return getItemById(itemId, this.data, this.props.childrenField || CHILDREN_FIELD);\n  };\n\n  TreeView.prototype.dispatchCheckChange = function (dispatchedEvent, item, itemId) {\n    dispatchEvent(this.props.onCheckChange, dispatchedEvent, this, {\n      item: item,\n      itemHierarchicalIndex: itemId\n    });\n  };\n\n  TreeView.prototype.dispatchExpandChange = function (dispatchedEvent, item, itemId) {\n    dispatchEvent(this.props.onExpandChange, dispatchedEvent, this, {\n      item: item,\n      itemHierarchicalIndex: itemId\n    });\n  };\n\n  TreeView.prototype.dispatchItemClick = function (dispatchedEvent, item, itemId) {\n    dispatchEvent(this.props.onItemClick, dispatchedEvent, this, {\n      item: item,\n      itemHierarchicalIndex: itemId\n    });\n  };\n\n  TreeView.prototype.refocusDueToFocusIdField = function () {\n    if (this.fieldsSvc.focusIdField) {\n      var focusedItemPublicId = this.state.focusedItemPublicId;\n\n      if (focusedItemPublicId) {\n        var focusedItemId = this.props.getFocusHierarchicalIndex ? this.props.getFocusHierarchicalIndex(focusedItemPublicId) : resolveItemId(focusedItemPublicId, this.fieldsSvc.focusIdField, this.data, this.props.childrenField);\n\n        if (focusedItemId !== this.state.focusedItemId) {\n          this.allowExplicitFocus = true;\n          this.setState({\n            focusedItemId: focusedItemId\n          });\n        }\n      }\n    }\n  };\n\n  Object.defineProperty(TreeView.prototype, \"ariaMultiSelectable\", {\n    get: function () {\n      return this.props['aria-multiselectable'] === true || this.props['aria-multiselectable'] === 'true';\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(TreeView.prototype, \"data\", {\n    get: function () {\n      return this.props.data || [];\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  TreeView.prototype.focusDomItem = function (domItem) {\n    domItem.focus();\n  };\n\n  Object.defineProperty(TreeView.prototype, \"guid\", {\n    /**\n     * Returns the `guid` which is associated with the TreeView.\n     */\n    get: function () {\n      return this.treeGuid;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\n   * @hidden\n   */\n\n  TreeView.propTypes = {\n    data: PropTypes.arrayOf(PropTypes.any),\n    animate: PropTypes.bool,\n    tabIndex: PropTypes.number,\n    focusIdField: PropTypes.string,\n    getHierarchicalIndexById: PropTypes.func,\n    onExpandChange: PropTypes.func,\n    onItemClick: PropTypes.func,\n    expandField: PropTypes.string,\n    selectField: PropTypes.string,\n    childrenField: PropTypes.string,\n    hasChildrenField: PropTypes.string,\n    textField: PropTypes.string,\n    disableField: PropTypes.string,\n    item: PropTypes.any,\n    'aria-multiselectable': PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['false', 'true'])]),\n    'aria-label': PropTypes.string,\n    'aria-labelledby': PropTypes.string\n  };\n  /**\n   * @hidden\n   */\n\n  TreeView.defaultProps = {\n    animate: true,\n    expandField: EXPAND_FIELD,\n    selectField: SELECT_FIELD,\n    hasChildrenField: HAS_CHILDREN_FIELD,\n    childrenField: CHILDREN_FIELD,\n    textField: TEXT_FIELD,\n    disableField: DISABLED_FIELD,\n    checkField: CHECK_FIELD,\n    checkIndeterminateField: CHECK_INDETERMINATE_FIELD\n  };\n  return TreeView;\n}(React.Component);\n\nexport default TreeView;","map":{"version":3,"sources":["../../src/TreeView.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { Keys, dispatchEvent, guid } from '@progress/kendo-react-common';\nimport nav from './utils/getItemIdUponKeyboardNavigation';\nimport { resolveItemId, isEnabledAndAllParentsEnabled, hasChildren } from './utils/itemUtils';\nimport TreeViewItem from './TreeViewItem';\nimport { ZERO_LEVEL_ZERO_NODE_ID, getItemById } from './utils/itemIdUtils';\nimport FieldsService from './utils/FieldsService';\nimport { validatePackage } from '@progress/kendo-react-common';\nimport { packageMetadata } from './package-metadata';\nimport { CHECK_FIELD, CHECK_INDETERMINATE_FIELD, CHILDREN_FIELD, DISABLED_FIELD, EXPAND_FIELD, HAS_CHILDREN_FIELD, SELECT_FIELD, TEXT_FIELD } from './utils/consts';\n/**\n * Represents the [KendoReact TreeView component]({% slug overview_treeview %}).\n *\n * @example\n * ```jsx\n * const data = [{\n *     text: 'Furniture', expanded: true, items: [\n *         { text: 'Tables & Chairs' }, { text: 'Sofas' }, { text: 'Occasional Furniture' }]\n * }, {\n *     text: 'Decor', expanded: true, items: [\n *         { text: 'Bed Linen' }, { text: 'Curtains & Blinds' }, { text: 'Carpets' }]\n * }];\n * class App extends React.Component {\n *     render() {\n *         return <TreeView data={data} />;\n *     }\n * }\n * ReactDOM.render(<App />, document.querySelector('my-app'));\n * ```\n */\nvar TreeView = /** @class */ (function (_super) {\n    __extends(TreeView, _super);\n    function TreeView(props) {\n        var _this = _super.call(this, props) || this;\n        /**\n         * @hidden\n         */\n        _this.state = { focusedItemId: undefined, focusedItemPublicId: undefined, tabbableItemId: ZERO_LEVEL_ZERO_NODE_ID };\n        // When there is a change in state.focusedItemId, calling focus() on the dom element of the focused item\n        // is most often not needed, because the browser focuses the element on its own.\n        // https://github.com/telerik/kendo-react/issues/190\n        _this.allowExplicitFocus = false;\n        _this.treeGuid = guid();\n        _this._element = null;\n        _this.onFocusDomElNeeded = function (domItem) {\n            if (_this.allowExplicitFocus) {\n                _this.focusDomItem(domItem);\n            }\n        };\n        _this.onCheckChange = function (event, item, itemId) {\n            _this.setFocus(itemId);\n            _this.dispatchCheckChange(event, item, itemId);\n        };\n        _this.onExpandChange = function (event, item, itemId) {\n            _this.setFocus(itemId);\n            _this.dispatchExpandChange(event, item, itemId);\n        };\n        _this.onPress = function (event, item, itemId) {\n            event.originalEvent.preventDefault();\n            if (_this.props.onItemDragStart) {\n                _this.props.onItemDragStart.call(undefined, { target: _this, item: item, itemHierarchicalIndex: itemId });\n            }\n        };\n        _this.onDrag = function (event, item, itemId) {\n            event.originalEvent.preventDefault();\n            var pageX = event.pageX, pageY = event.pageY, clientX = event.clientX, clientY = event.clientY;\n            if (_this.props.onItemDragOver) {\n                _this.props.onItemDragOver.call(undefined, {\n                    target: _this,\n                    item: item,\n                    itemHierarchicalIndex: itemId,\n                    pageX: pageX,\n                    pageY: pageY,\n                    clientX: clientX,\n                    clientY: clientY\n                });\n            }\n        };\n        _this.onRelease = function (event, item, itemId) {\n            var pageX = event.pageX, pageY = event.pageY, clientX = event.clientX, clientY = event.clientY;\n            if (_this.props.onItemDragEnd) {\n                _this.props.onItemDragEnd.call(undefined, {\n                    target: _this,\n                    item: item,\n                    itemHierarchicalIndex: itemId,\n                    pageX: pageX,\n                    pageY: pageY,\n                    clientX: clientX,\n                    clientY: clientY\n                });\n            }\n        };\n        _this.onItemClick = function (event, item, itemId) {\n            _this.setFocus(itemId);\n            _this.dispatchItemClick(event, item, itemId);\n        };\n        _this.onFocus = function () {\n            clearTimeout(_this.blurRequest);\n            if (_this.state.focusedItemId === undefined && _this.data.length) {\n                _this.setFocus(_this.state.tabbableItemId);\n            }\n        };\n        _this.onBlur = function () {\n            clearTimeout(_this.blurRequest);\n            _this.blurRequest = window.setTimeout(function () { return _this.setFocus(undefined); }, 0);\n        };\n        _this.onKeyDown = function (event) {\n            var focusedItem = _this.getFocusedItem();\n            if (focusedItem) {\n                var newItemId = nav(focusedItem, _this.state.focusedItemId, _this.data, event.keyCode, _this.fieldsSvc);\n                if (newItemId !== _this.state.focusedItemId) {\n                    // This disables the auto-scroll. The scroll is achieved via item focusing.\n                    event.preventDefault();\n                    _this.allowExplicitFocus = true;\n                    _this.setFocus(newItemId);\n                }\n                _this.dispatchEventsOnKeyDown(event, focusedItem);\n            }\n        };\n        validatePackage(packageMetadata);\n        return _this;\n    }\n    Object.defineProperty(TreeView.prototype, \"element\", {\n        /**\n         * @hidden\n         */\n        get: function () {\n            return this._element;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @hidden\n     */\n    TreeView.prototype.render = function () {\n        var _this = this;\n        this.fieldsSvc = new FieldsService(this.props);\n        return (React.createElement(\"div\", { className: 'k-widget k-treeview' + (this.props.className ? ' ' + this.props.className : ''), onKeyDown: this.onKeyDown, onFocus: this.onFocus, onBlur: this.onBlur, role: \"tree\", \"aria-multiselectable\": this.ariaMultiSelectable ? true : undefined, \"aria-label\": this.props['aria-label'], \"aria-labelledby\": this.props['aria-labelledby'], ref: function (element) { return _this._element = element; }, tabIndex: this.props.tabIndex },\n            React.createElement(\"ul\", { className: \"k-treeview-lines k-group\", role: \"group\" }, this.data.map(function (item, index) {\n                return (React.createElement(TreeViewItem, { item: item, itemId: index.toString(), treeGuid: _this.treeGuid, animate: _this.props.animate, focusedItemId: _this.state.focusedItemId, tabbableItemId: _this.state.tabbableItemId, fieldsService: _this.fieldsSvc, itemUI: _this.props.item, checkboxes: _this.props.checkboxes, ariaMultiSelectable: _this.ariaMultiSelectable, onItemClick: _this.onItemClick, onFocusDomElNeeded: _this.onFocusDomElNeeded, draggable: _this.props.draggable, onPress: _this.onPress, onDrag: _this.onDrag, onRelease: _this.onRelease, expandIcons: _this.props.expandIcons, onExpandChange: _this.onExpandChange, onCheckChange: _this.onCheckChange, key: index }));\n            }))));\n    };\n    /**\n     * @hidden\n     */\n    TreeView.prototype.componentDidUpdate = function () {\n        this.allowExplicitFocus = false;\n        this.refocusDueToFocusIdField();\n    };\n    TreeView.prototype.dispatchEventsOnKeyDown = function (event, focusedItem) {\n        var _this = this;\n        // isEnabled is the most expensive op and that is why is left last.\n        var isEnabled = function () {\n            return isEnabledAndAllParentsEnabled(_this.state.focusedItemId, _this.data, _this.fieldsSvc);\n        };\n        if (event.keyCode === Keys.left && this.fieldsSvc.expanded(focusedItem) && isEnabled()) {\n            this.dispatchExpandChange(event, focusedItem, this.state.focusedItemId);\n        }\n        else if (event.keyCode === Keys.right && !this.fieldsSvc.expanded(focusedItem) &&\n            (this.fieldsSvc.hasChildren(focusedItem) || hasChildren(focusedItem, this.props.childrenField)) && isEnabled()) {\n            this.dispatchExpandChange(event, focusedItem, this.state.focusedItemId);\n        }\n        else if (event.keyCode === Keys.enter && isEnabled()) {\n            this.dispatchItemClick(event, focusedItem, this.state.focusedItemId);\n        }\n        else if (event.keyCode === Keys.space && isEnabled()) {\n            // W/o preventDefault() long TreeViews gets incorrectly scrolled.\n            event.preventDefault();\n            this.dispatchCheckChange(event, focusedItem, this.state.focusedItemId);\n        }\n    };\n    TreeView.prototype.setFocus = function (focusedItemId) {\n        if (focusedItemId) {\n            if (this.fieldsSvc.focusIdField) {\n                var item = this.getItemById(focusedItemId);\n                this.setState({ focusedItemId: focusedItemId, focusedItemPublicId: this.fieldsSvc.focusId(item) });\n            }\n            else {\n                this.setState({ focusedItemId: focusedItemId });\n            }\n        }\n        else {\n            this.setState(function (state) {\n                return {\n                    focusedItemId: undefined,\n                    focusedItemPublicId: undefined,\n                    tabbableItemId: state.focusedItemId\n                };\n            });\n        }\n    };\n    TreeView.prototype.getFocusedItem = function () {\n        return this.state.focusedItemId ? this.getItemById(this.state.focusedItemId) : undefined;\n    };\n    TreeView.prototype.getItemById = function (itemId) {\n        return getItemById(itemId, this.data, this.props.childrenField || CHILDREN_FIELD);\n    };\n    TreeView.prototype.dispatchCheckChange = function (dispatchedEvent, item, itemId) {\n        dispatchEvent(this.props.onCheckChange, dispatchedEvent, this, { item: item, itemHierarchicalIndex: itemId });\n    };\n    TreeView.prototype.dispatchExpandChange = function (dispatchedEvent, item, itemId) {\n        dispatchEvent(this.props.onExpandChange, dispatchedEvent, this, { item: item, itemHierarchicalIndex: itemId });\n    };\n    TreeView.prototype.dispatchItemClick = function (dispatchedEvent, item, itemId) {\n        dispatchEvent(this.props.onItemClick, dispatchedEvent, this, { item: item, itemHierarchicalIndex: itemId });\n    };\n    TreeView.prototype.refocusDueToFocusIdField = function () {\n        if (this.fieldsSvc.focusIdField) {\n            var focusedItemPublicId = this.state.focusedItemPublicId;\n            if (focusedItemPublicId) {\n                var focusedItemId = this.props.getFocusHierarchicalIndex ?\n                    this.props.getFocusHierarchicalIndex(focusedItemPublicId) :\n                    resolveItemId(focusedItemPublicId, this.fieldsSvc.focusIdField, this.data, this.props.childrenField);\n                if (focusedItemId !== this.state.focusedItemId) {\n                    this.allowExplicitFocus = true;\n                    this.setState({ focusedItemId: focusedItemId });\n                }\n            }\n        }\n    };\n    Object.defineProperty(TreeView.prototype, \"ariaMultiSelectable\", {\n        get: function () {\n            return this.props['aria-multiselectable'] === true || this.props['aria-multiselectable'] === 'true';\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TreeView.prototype, \"data\", {\n        get: function () {\n            return this.props.data || [];\n        },\n        enumerable: true,\n        configurable: true\n    });\n    TreeView.prototype.focusDomItem = function (domItem) {\n        domItem.focus();\n    };\n    Object.defineProperty(TreeView.prototype, \"guid\", {\n        /**\n         * Returns the `guid` which is associated with the TreeView.\n         */\n        get: function () {\n            return this.treeGuid;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @hidden\n     */\n    TreeView.propTypes = {\n        data: PropTypes.arrayOf(PropTypes.any),\n        animate: PropTypes.bool,\n        tabIndex: PropTypes.number,\n        focusIdField: PropTypes.string,\n        getHierarchicalIndexById: PropTypes.func,\n        onExpandChange: PropTypes.func,\n        onItemClick: PropTypes.func,\n        expandField: PropTypes.string,\n        selectField: PropTypes.string,\n        childrenField: PropTypes.string,\n        hasChildrenField: PropTypes.string,\n        textField: PropTypes.string,\n        disableField: PropTypes.string,\n        item: PropTypes.any,\n        'aria-multiselectable': PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['false', 'true'])]),\n        'aria-label': PropTypes.string,\n        'aria-labelledby': PropTypes.string\n    };\n    /**\n     * @hidden\n     */\n    TreeView.defaultProps = {\n        animate: true,\n        expandField: EXPAND_FIELD,\n        selectField: SELECT_FIELD,\n        hasChildrenField: HAS_CHILDREN_FIELD,\n        childrenField: CHILDREN_FIELD,\n        textField: TEXT_FIELD,\n        disableField: DISABLED_FIELD,\n        checkField: CHECK_FIELD,\n        checkIndeterminateField: CHECK_INDETERMINATE_FIELD\n    };\n    return TreeView;\n}(React.Component));\nexport default TreeView;\n//# sourceMappingURL=TreeView.js.map"]},"metadata":{},"sourceType":"module"}