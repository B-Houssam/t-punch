{"ast":null,"code":"var _jsxFileName = \"/home/houssam/workspace/projects/t-punch/t-punch/src/components/Dashboard/DashNewAnal/NewA/index.js\";\nimport React from \"react\";\nimport { Container, Wrapper } from \"./NewAElements.js\";\nimport Select from \"react-select\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst options = [{\n  value: \"chocolate\",\n  label: \"Chocolate\"\n}, {\n  value: \"strawberry\",\n  label: \"Strawberry\"\n}, {\n  value: \"vanilla\",\n  label: \"Vanilla\"\n}];\n\nconst NewA = () => {\n  const customStyles = {\n    option: (provided, state) => ({ ...provided,\n      borderBottom: \"1px dotted pink\",\n      color: state.isSelected ? \"red\" : \"blue\",\n      padding: 20\n    }),\n    control: () => ({\n      // none of react-select's styles are passed to <Control />\n      width: 500\n    }),\n    singleValue: (provided, state) => {\n      const opacity = state.isDisabled ? 0.5 : 1;\n      const transition = \"opacity 300ms\";\n      return { ...provided,\n        opacity,\n        transition\n      };\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Wrapper, {\n        children: /*#__PURE__*/_jsxDEV(Select, {\n          placeholder: \"hi\",\n          styles: customStyles,\n          options: options\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_c = NewA;\nexport default NewA;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewA\");","map":{"version":3,"sources":["/home/houssam/workspace/projects/t-punch/t-punch/src/components/Dashboard/DashNewAnal/NewA/index.js"],"names":["React","Container","Wrapper","Select","options","value","label","NewA","customStyles","option","provided","state","borderBottom","color","isSelected","padding","control","width","singleValue","opacity","isDisabled","transition"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,OAApB,QAAmC,mBAAnC;AACA,OAAOC,MAAP,MAAmB,cAAnB;;;AAEA,MAAMC,OAAO,GAAG,CACd;AAAEC,EAAAA,KAAK,EAAE,WAAT;AAAsBC,EAAAA,KAAK,EAAE;AAA7B,CADc,EAEd;AAAED,EAAAA,KAAK,EAAE,YAAT;AAAuBC,EAAAA,KAAK,EAAE;AAA9B,CAFc,EAGd;AAAED,EAAAA,KAAK,EAAE,SAAT;AAAoBC,EAAAA,KAAK,EAAE;AAA3B,CAHc,CAAhB;;AAMA,MAAMC,IAAI,GAAG,MAAM;AACjB,QAAMC,YAAY,GAAG;AACnBC,IAAAA,MAAM,EAAE,CAACC,QAAD,EAAWC,KAAX,MAAsB,EAC5B,GAAGD,QADyB;AAE5BE,MAAAA,YAAY,EAAE,iBAFc;AAG5BC,MAAAA,KAAK,EAAEF,KAAK,CAACG,UAAN,GAAmB,KAAnB,GAA2B,MAHN;AAI5BC,MAAAA,OAAO,EAAE;AAJmB,KAAtB,CADW;AAOnBC,IAAAA,OAAO,EAAE,OAAO;AACd;AACAC,MAAAA,KAAK,EAAE;AAFO,KAAP,CAPU;AAWnBC,IAAAA,WAAW,EAAE,CAACR,QAAD,EAAWC,KAAX,KAAqB;AAChC,YAAMQ,OAAO,GAAGR,KAAK,CAACS,UAAN,GAAmB,GAAnB,GAAyB,CAAzC;AACA,YAAMC,UAAU,GAAG,eAAnB;AAEA,aAAO,EAAE,GAAGX,QAAL;AAAeS,QAAAA,OAAf;AAAwBE,QAAAA;AAAxB,OAAP;AACD;AAhBkB,GAArB;AAkBA,sBACE;AAAA,2BACE,QAAC,SAAD;AAAA,6BACE,QAAC,OAAD;AAAA,+BACE,QAAC,MAAD;AAAQ,UAAA,WAAW,EAAC,IAApB;AAAyB,UAAA,MAAM,EAAEb,YAAjC;AAA+C,UAAA,OAAO,EAAEJ;AAAxD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AASD,CA5BD;;KAAMG,I;AA8BN,eAAeA,IAAf","sourcesContent":["import React from \"react\";\nimport { Container, Wrapper } from \"./NewAElements.js\";\nimport Select from \"react-select\";\n\nconst options = [\n  { value: \"chocolate\", label: \"Chocolate\" },\n  { value: \"strawberry\", label: \"Strawberry\" },\n  { value: \"vanilla\", label: \"Vanilla\" },\n];\n\nconst NewA = () => {\n  const customStyles = {\n    option: (provided, state) => ({\n      ...provided,\n      borderBottom: \"1px dotted pink\",\n      color: state.isSelected ? \"red\" : \"blue\",\n      padding: 20,\n    }),\n    control: () => ({\n      // none of react-select's styles are passed to <Control />\n      width: 500,\n    }),\n    singleValue: (provided, state) => {\n      const opacity = state.isDisabled ? 0.5 : 1;\n      const transition = \"opacity 300ms\";\n\n      return { ...provided, opacity, transition };\n    },\n  };\n  return (\n    <>\n      <Container>\n        <Wrapper>\n          <Select placeholder=\"hi\" styles={customStyles} options={options} />\n        </Wrapper>\n      </Container>\n    </>\n  );\n};\n\nexport default NewA;\n"]},"metadata":{},"sourceType":"module"}