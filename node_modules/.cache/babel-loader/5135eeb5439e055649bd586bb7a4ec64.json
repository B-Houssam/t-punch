{"ast":null,"code":"import * as React from 'react';\n/**\n * An utility function for asynchronous focus/blur handling.\n *\n * By default, the `onFocus` and `onBlur` callbacks are called every time a child components receives/loses focus.\n * Use this utility hook for scenarios where you need to know if the parent has received focus for the first time, or completely lost focus.\n *\n * @returns\n */\n\nexport function useAsyncFocusBlur(_a) {\n  var onFocus = _a.onFocus,\n      onBlur = _a.onBlur,\n      onSyncFocus = _a.onSyncFocus,\n      onSyncBlur = _a.onSyncBlur;\n  var focused = React.useRef(false);\n  var tick = React.useRef(0);\n  var nextTick = React.useCallback(function (f) {\n    clearTimeout(tick.current);\n    tick.current = window.setTimeout(function () {\n      return f();\n    });\n  }, [tick]);\n  var handleFocus = React.useCallback(function () {\n    var event = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      event[_i] = arguments[_i];\n    }\n\n    clearTimeout(tick.current);\n\n    if (onSyncFocus) {\n      onSyncFocus.call.apply(onSyncFocus, [undefined].concat(event));\n    }\n\n    if (focused.current) {\n      return;\n    }\n\n    ;\n    focused.current = true;\n\n    if (onFocus) {\n      onFocus.call.apply(onFocus, [undefined].concat(event));\n    }\n  }, [focused, onFocus, onSyncFocus]);\n  var handleBlur = React.useCallback(function () {\n    var event = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      event[_i] = arguments[_i];\n    }\n\n    if (onSyncBlur) {\n      onSyncBlur.call.apply(onSyncBlur, [undefined].concat(event));\n    }\n\n    nextTick(function () {\n      if (!focused.current) {\n        return;\n      }\n\n      if (onBlur) {\n        focused.current = false;\n        onBlur.call.apply(onBlur, [undefined].concat(event));\n      }\n    });\n  }, [focused, nextTick, onBlur, onSyncBlur]);\n  React.useEffect(function () {\n    return function () {\n      clearTimeout(tick.current);\n    };\n  }, []);\n  return {\n    onFocus: handleFocus,\n    onBlur: handleBlur\n  };\n}","map":{"version":3,"sources":["../../../src/hooks/useAsyncFocusBlur.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAZ,MAAuB,OAAvB;AAkBA;;;;;;;AAOG;;AACH,OAAM,SAAU,iBAAV,CAA6C,EAA7C,EAAgH;MAAjE,OAAA,GAAA,EAAA,CAAA,O;MAAS,MAAA,GAAA,EAAA,CAAA,M;MAAQ,WAAA,GAAA,EAAA,CAAA,W;MAAa,UAAA,GAAA,EAAA,CAAA,U;AAC/E,MAAM,OAAO,GAAG,KAAK,CAAC,MAAN,CAAa,KAAb,CAAhB;AAEA,MAAM,IAAI,GAAG,KAAK,CAAC,MAAN,CAAa,CAAb,CAAb;AAEA,MAAM,QAAQ,GAAG,KAAK,CAAC,WAAN,CACb,UAAC,CAAD,EAAa;AACT,IAAA,YAAY,CAAC,IAAI,CAAC,OAAN,CAAZ;AACA,IAAA,IAAI,CAAC,OAAL,GAAe,MAAM,CAAC,UAAP,CAAkB,YAAA;AAAM,aAAA,CAAA,EAAA;AAAG,KAA3B,CAAf;AACH,GAJY,EAKb,CAAC,IAAD,CALa,CAAjB;AAOA,MAAM,WAAW,GAAG,KAAK,CAAC,WAAN,CAChB,YAAA;AAAC,QAAA,KAAA,GAAA,EAAA;;SAAA,IAAA,EAAA,GAAA,C,EAAA,EAAA,GAAA,SAAA,CAAA,M,EAAA,EAAA,E,EAAW;AAAX,MAAA,KAAA,CAAA,EAAA,CAAA,GAAA,SAAA,CAAA,EAAA,CAAA;;;AACG,IAAA,YAAY,CAAC,IAAI,CAAC,OAAN,CAAZ;;AAEA,QAAG,WAAH,EAAgB;AAAE,MAAA,WAAW,CAAC,IAAZ,CAAgB,KAAhB,CAAA,WAAA,EAAW,CAAM,SAAN,EAAe,MAAf,CAAoB,KAApB,CAAX;AAAuC;;AAEzD,QAAG,OAAO,CAAC,OAAX,EAAoB;AAAC;AAAQ;;AAAA;AAC7B,IAAA,OAAO,CAAC,OAAR,GAAkB,IAAlB;;AAEA,QAAI,OAAJ,EAAa;AACT,MAAA,OAAO,CAAC,IAAR,CAAY,KAAZ,CAAA,OAAA,EAAO,CAAM,SAAN,EAAe,MAAf,CAAoB,KAApB,CAAP;AACH;AAEJ,GAbe,EAchB,CAAC,OAAD,EAAU,OAAV,EAAmB,WAAnB,CAdgB,CAApB;AAiBA,MAAM,UAAU,GAAG,KAAK,CAAC,WAAN,CACf,YAAA;AAAC,QAAA,KAAA,GAAA,EAAA;;SAAA,IAAA,EAAA,GAAA,C,EAAA,EAAA,GAAA,SAAA,CAAA,M,EAAA,EAAA,E,EAAW;AAAX,MAAA,KAAA,CAAA,EAAA,CAAA,GAAA,SAAA,CAAA,EAAA,CAAA;;;AACG,QAAG,UAAH,EAAe;AAAE,MAAA,UAAU,CAAC,IAAX,CAAe,KAAf,CAAA,UAAA,EAAU,CAAM,SAAN,EAAe,MAAf,CAAoB,KAApB,CAAV;AAAsC;;AAEvD,IAAA,QAAQ,CAAC,YAAA;AACL,UAAG,CAAC,OAAO,CAAC,OAAZ,EAAqB;AAAC;AAAQ;;AAC9B,UAAI,MAAJ,EAAY;AACR,QAAA,OAAO,CAAC,OAAR,GAAkB,KAAlB;AACA,QAAA,MAAM,CAAC,IAAP,CAAW,KAAX,CAAA,MAAA,EAAM,CAAM,SAAN,EAAe,MAAf,CAAoB,KAApB,CAAN;AACH;AACJ,KANO,CAAR;AAOH,GAXc,EAYf,CAAC,OAAD,EAAU,QAAV,EAAoB,MAApB,EAA4B,UAA5B,CAZe,CAAnB;AAeA,EAAA,KAAK,CAAC,SAAN,CAAgB,YAAA;AACZ,WAAO,YAAA;AACH,MAAA,YAAY,CAAC,IAAI,CAAC,OAAN,CAAZ;AACH,KAFD;AAGH,GAJD,EAIG,EAJH;AAOA,SAAO;AACH,IAAA,OAAO,EAAE,WADN;AAEH,IAAA,MAAM,EAAE;AAFL,GAAP;AAIH","sourceRoot":"","sourcesContent":["import * as React from 'react';\n/**\n * An utility function for asynchronous focus/blur handling.\n *\n * By default, the `onFocus` and `onBlur` callbacks are called every time a child components receives/loses focus.\n * Use this utility hook for scenarios where you need to know if the parent has received focus for the first time, or completely lost focus.\n *\n * @returns\n */\nexport function useAsyncFocusBlur(_a) {\n    var onFocus = _a.onFocus, onBlur = _a.onBlur, onSyncFocus = _a.onSyncFocus, onSyncBlur = _a.onSyncBlur;\n    var focused = React.useRef(false);\n    var tick = React.useRef(0);\n    var nextTick = React.useCallback(function (f) {\n        clearTimeout(tick.current);\n        tick.current = window.setTimeout(function () { return f(); });\n    }, [tick]);\n    var handleFocus = React.useCallback(function () {\n        var event = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            event[_i] = arguments[_i];\n        }\n        clearTimeout(tick.current);\n        if (onSyncFocus) {\n            onSyncFocus.call.apply(onSyncFocus, [undefined].concat(event));\n        }\n        if (focused.current) {\n            return;\n        }\n        ;\n        focused.current = true;\n        if (onFocus) {\n            onFocus.call.apply(onFocus, [undefined].concat(event));\n        }\n    }, [focused, onFocus, onSyncFocus]);\n    var handleBlur = React.useCallback(function () {\n        var event = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            event[_i] = arguments[_i];\n        }\n        if (onSyncBlur) {\n            onSyncBlur.call.apply(onSyncBlur, [undefined].concat(event));\n        }\n        nextTick(function () {\n            if (!focused.current) {\n                return;\n            }\n            if (onBlur) {\n                focused.current = false;\n                onBlur.call.apply(onBlur, [undefined].concat(event));\n            }\n        });\n    }, [focused, nextTick, onBlur, onSyncBlur]);\n    React.useEffect(function () {\n        return function () {\n            clearTimeout(tick.current);\n        };\n    }, []);\n    return {\n        onFocus: handleFocus,\n        onBlur: handleBlur\n    };\n}\n//# sourceMappingURL=useAsyncFocusBlur.js.map"]},"metadata":{},"sourceType":"module"}