{"ast":null,"code":"var _jsxFileName = \"/home/houssam/workspace/projects/React/t-punch/src/components/Dashboard/DashboardExplore/ExploreData/index.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { SubWrapper, ExWrapper, ExTxt } from \"./ExElements\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst AddData = () => {\n  _s();\n\n  const [file, setfile] = useState(null);\n  const [selected, setselected] = useState(null);\n  const [show, setshow] = useState(false);\n\n  const fetchData = async () => {\n    // eslint-disable-next-line\n    const res = await fetch(\"http://localhost:8000/public\", {\n      method: \"GET\"\n    }).then(res => res.json()).then(res => setfile(res));\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n  const hiddenFileInput = React.useRef(null);\n\n  const handleClick = event => {\n    hiddenFileInput.current.click();\n  };\n\n  const handleAction = async data => {\n    const formData = new FormData();\n    formData.append(\"file\", selected);\n    const res = await fetch(\"http://localhost:8000/public\", {\n      method: \"POST\",\n      body: formData\n    }).then(res => res.json());\n\n    if (res.status === true) {\n      toast.success(\"Upload succesful!\", {\n        position: \"bottom-center\",\n        autoClose: 2000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: false,\n        draggable: true,\n        progress: undefined\n      });\n    } else {\n      toast.error(\"Upload failed!\", {\n        position: \"bottom-center\",\n        autoClose: 2000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: false,\n        draggable: true,\n        progress: undefined\n      });\n    }\n\n    setfile(false);\n    setshow(false);\n    fetchData();\n  };\n\n  const handleChange = event => {\n    setselected(event.target.files[0]);\n    setshow(true);\n  };\n\n  const clickDel = async () => {\n    const res = await fetch(\"http://localhost:8000/public\", {\n      method: \"DELETE\"\n    }).then(res => res.json());\n\n    if (res.status === true) {\n      toast.success(\"Delete succesful!\", {\n        position: \"bottom-center\",\n        autoClose: 2000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: false,\n        draggable: true,\n        progress: undefined\n      });\n    } else {\n      toast.error(\"Delete failed!\", {\n        position: \"bottom-center\",\n        autoClose: 2000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: false,\n        draggable: true,\n        progress: undefined\n      });\n    }\n\n    setfile(null); //fetchData();\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: file === null ? /*#__PURE__*/_jsxDEV(ExWrapper, {\n      children: /*#__PURE__*/_jsxDEV(SubWrapper, {\n        children: /*#__PURE__*/_jsxDEV(ExTxt, {\n          children: \" Click on DATASET to upload a new dataset first!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(ExWrapper, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(AddData, \"nOEp31Yp8o2DSUQThrCIl0hOTro=\");\n\n_c = AddData;\nexport default AddData;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddData\");","map":{"version":3,"sources":["/home/houssam/workspace/projects/React/t-punch/src/components/Dashboard/DashboardExplore/ExploreData/index.js"],"names":["React","useState","useEffect","SubWrapper","ExWrapper","ExTxt","AddData","file","setfile","selected","setselected","show","setshow","fetchData","res","fetch","method","then","json","hiddenFileInput","useRef","handleClick","event","current","click","handleAction","data","formData","FormData","append","body","status","toast","success","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","error","handleChange","target","files","clickDel"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AAEA,SAASC,UAAT,EAAqBC,SAArB,EAAgCC,KAAhC,QAA6C,cAA7C;AACA,OAAO,uCAAP;;;;AAEA,MAAMC,OAAO,GAAG,MAAM;AAAA;;AACpB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,IAAD,CAAhC;AACA,QAAM,CAACQ,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC,IAAD,CAAxC;AACA,QAAM,CAACU,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAAC,KAAD,CAAhC;;AAEA,QAAMY,SAAS,GAAG,YAAY;AAC5B;AACA,UAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,8BAAD,EAAiC;AACtDC,MAAAA,MAAM,EAAE;AAD8C,KAAjC,CAAL,CAGfC,IAHe,CAGTH,GAAD,IAASA,GAAG,CAACI,IAAJ,EAHC,EAIfD,IAJe,CAITH,GAAD,IAASN,OAAO,CAACM,GAAD,CAJN,CAAlB;AAKD,GAPD;;AASAZ,EAAAA,SAAS,CAAC,MAAM;AACdW,IAAAA,SAAS;AACV,GAFQ,EAEN,EAFM,CAAT;AAIA,QAAMM,eAAe,GAAGnB,KAAK,CAACoB,MAAN,CAAa,IAAb,CAAxB;;AAEA,QAAMC,WAAW,GAAIC,KAAD,IAAW;AAC7BH,IAAAA,eAAe,CAACI,OAAhB,CAAwBC,KAAxB;AACD,GAFD;;AAIA,QAAMC,YAAY,GAAG,MAAOC,IAAP,IAAgB;AACnC,UAAMC,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;AACAD,IAAAA,QAAQ,CAACE,MAAT,CAAgB,MAAhB,EAAwBpB,QAAxB;AACA,UAAMK,GAAG,GAAG,MAAMC,KAAK,CAAC,8BAAD,EAAiC;AACtDC,MAAAA,MAAM,EAAE,MAD8C;AAEtDc,MAAAA,IAAI,EAAEH;AAFgD,KAAjC,CAAL,CAGfV,IAHe,CAGTH,GAAD,IAASA,GAAG,CAACI,IAAJ,EAHC,CAAlB;;AAIA,QAAIJ,GAAG,CAACiB,MAAJ,KAAe,IAAnB,EAAyB;AACvBC,MAAAA,KAAK,CAACC,OAAN,CAAc,mBAAd,EAAmC;AACjCC,QAAAA,QAAQ,EAAE,eADuB;AAEjCC,QAAAA,SAAS,EAAE,IAFsB;AAGjCC,QAAAA,eAAe,EAAE,KAHgB;AAIjCC,QAAAA,YAAY,EAAE,IAJmB;AAKjCC,QAAAA,YAAY,EAAE,KALmB;AAMjCC,QAAAA,SAAS,EAAE,IANsB;AAOjCC,QAAAA,QAAQ,EAAEC;AAPuB,OAAnC;AASD,KAVD,MAUO;AACLT,MAAAA,KAAK,CAACU,KAAN,CAAY,gBAAZ,EAA8B;AAC5BR,QAAAA,QAAQ,EAAE,eADkB;AAE5BC,QAAAA,SAAS,EAAE,IAFiB;AAG5BC,QAAAA,eAAe,EAAE,KAHW;AAI5BC,QAAAA,YAAY,EAAE,IAJc;AAK5BC,QAAAA,YAAY,EAAE,KALc;AAM5BC,QAAAA,SAAS,EAAE,IANiB;AAO5BC,QAAAA,QAAQ,EAAEC;AAPkB,OAA9B;AASD;;AACDjC,IAAAA,OAAO,CAAC,KAAD,CAAP;AACAI,IAAAA,OAAO,CAAC,KAAD,CAAP;AACAC,IAAAA,SAAS;AACV,GA/BD;;AAiCA,QAAM8B,YAAY,GAAIrB,KAAD,IAAW;AAC9BZ,IAAAA,WAAW,CAACY,KAAK,CAACsB,MAAN,CAAaC,KAAb,CAAmB,CAAnB,CAAD,CAAX;AACAjC,IAAAA,OAAO,CAAC,IAAD,CAAP;AACD,GAHD;;AAKA,QAAMkC,QAAQ,GAAG,YAAY;AAC3B,UAAMhC,GAAG,GAAG,MAAMC,KAAK,CAAC,8BAAD,EAAiC;AACtDC,MAAAA,MAAM,EAAE;AAD8C,KAAjC,CAAL,CAEfC,IAFe,CAETH,GAAD,IAASA,GAAG,CAACI,IAAJ,EAFC,CAAlB;;AAGA,QAAIJ,GAAG,CAACiB,MAAJ,KAAe,IAAnB,EAAyB;AACvBC,MAAAA,KAAK,CAACC,OAAN,CAAc,mBAAd,EAAmC;AACjCC,QAAAA,QAAQ,EAAE,eADuB;AAEjCC,QAAAA,SAAS,EAAE,IAFsB;AAGjCC,QAAAA,eAAe,EAAE,KAHgB;AAIjCC,QAAAA,YAAY,EAAE,IAJmB;AAKjCC,QAAAA,YAAY,EAAE,KALmB;AAMjCC,QAAAA,SAAS,EAAE,IANsB;AAOjCC,QAAAA,QAAQ,EAAEC;AAPuB,OAAnC;AASD,KAVD,MAUO;AACLT,MAAAA,KAAK,CAACU,KAAN,CAAY,gBAAZ,EAA8B;AAC5BR,QAAAA,QAAQ,EAAE,eADkB;AAE5BC,QAAAA,SAAS,EAAE,IAFiB;AAG5BC,QAAAA,eAAe,EAAE,KAHW;AAI5BC,QAAAA,YAAY,EAAE,IAJc;AAK5BC,QAAAA,YAAY,EAAE,KALc;AAM5BC,QAAAA,SAAS,EAAE,IANiB;AAO5BC,QAAAA,QAAQ,EAAEC;AAPkB,OAA9B;AASD;;AACDjC,IAAAA,OAAO,CAAC,IAAD,CAAP,CAzB2B,CA0B3B;AACD,GA3BD;;AA6BA,sBACE;AAAA,cACGD,IAAI,KAAK,IAAT,gBACC,QAAC,SAAD;AAAA,6BACE,QAAC,UAAD;AAAA,+BACE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADD,gBAOC,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AARJ,mBADF;AAaD,CAxGD;;GAAMD,O;;KAAAA,O;AA0GN,eAAeA,OAAf","sourcesContent":["import React from \"react\";\nimport { useState, useEffect } from \"react\";\n\nimport { SubWrapper, ExWrapper, ExTxt } from \"./ExElements\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nconst AddData = () => {\n  const [file, setfile] = useState(null);\n  const [selected, setselected] = useState(null);\n  const [show, setshow] = useState(false);\n\n  const fetchData = async () => {\n    // eslint-disable-next-line\n    const res = await fetch(\"http://localhost:8000/public\", {\n      method: \"GET\",\n    })\n      .then((res) => res.json())\n      .then((res) => setfile(res));\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  const hiddenFileInput = React.useRef(null);\n\n  const handleClick = (event) => {\n    hiddenFileInput.current.click();\n  };\n\n  const handleAction = async (data) => {\n    const formData = new FormData();\n    formData.append(\"file\", selected);\n    const res = await fetch(\"http://localhost:8000/public\", {\n      method: \"POST\",\n      body: formData,\n    }).then((res) => res.json());\n    if (res.status === true) {\n      toast.success(\"Upload succesful!\", {\n        position: \"bottom-center\",\n        autoClose: 2000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: false,\n        draggable: true,\n        progress: undefined,\n      });\n    } else {\n      toast.error(\"Upload failed!\", {\n        position: \"bottom-center\",\n        autoClose: 2000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: false,\n        draggable: true,\n        progress: undefined,\n      });\n    }\n    setfile(false);\n    setshow(false);\n    fetchData();\n  };\n\n  const handleChange = (event) => {\n    setselected(event.target.files[0]);\n    setshow(true);\n  };\n\n  const clickDel = async () => {\n    const res = await fetch(\"http://localhost:8000/public\", {\n      method: \"DELETE\",\n    }).then((res) => res.json());\n    if (res.status === true) {\n      toast.success(\"Delete succesful!\", {\n        position: \"bottom-center\",\n        autoClose: 2000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: false,\n        draggable: true,\n        progress: undefined,\n      });\n    } else {\n      toast.error(\"Delete failed!\", {\n        position: \"bottom-center\",\n        autoClose: 2000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: false,\n        draggable: true,\n        progress: undefined,\n      });\n    }\n    setfile(null);\n    //fetchData();\n  };\n\n  return (\n    <>\n      {file === null ? (\n        <ExWrapper>\n          <SubWrapper>\n            <ExTxt> Click on DATASET to upload a new dataset first!</ExTxt>\n          </SubWrapper>\n        </ExWrapper>\n      ) : (\n        <ExWrapper></ExWrapper>\n      )}\n    </>\n  );\n};\n\nexport default AddData;\n"]},"metadata":{},"sourceType":"module"}