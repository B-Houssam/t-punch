{"ast":null,"code":"var _jsxFileName = \"/home/houssam/workspace/projects/React/t-punch/src/components/Signup/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, SyntheticEvent } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport img from \"../../images/svg-7.svg\";\nimport { Container, FormWrap, Icon, FormContent, FormInput, Form, FormH1, FormButton, Img, FormLabel, Txt, OutWrap } from \"./signupElements\";\nimport { ToastContainer, toast, Slide } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst SignUp = () => {\n  _s();\n\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [redirect, setRedirect] = useState(false);\n\n  const handleSubmit = async e => {\n    e.preventDefault(); //console.log(\"hiiiiii\");\n\n    const res = await fetch(\"http://localhost:3001/login\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      },\n      //headers: { \"Content-Type\": \"application/json\" },\n      credentials: \"include\",\n      body: JSON.stringify({\n        username: email,\n        password: password\n      })\n    }).then(res => res.json());\n\n    if (res.status === true) {\n      setRedirect(true);\n    } else {\n      toast.error(\"Login failed!\", {\n        position: \"bottom-center\",\n        autoClose: 2000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: false,\n        draggable: true,\n        progress: undefined\n      });\n    }\n  };\n\n  if (redirect) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/dashboard/explore\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(FormWrap, {\n        children: [/*#__PURE__*/_jsxDEV(Icon, {\n          to: \"/\",\n          children: \"TECH_PUNCH\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(OutWrap, {\n          children: [/*#__PURE__*/_jsxDEV(Txt, {\n            children: \"START BOOSTING YOUR BUSINESS\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Img, {\n            src: img\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormContent, {\n            children: /*#__PURE__*/_jsxDEV(Form, {\n              onSubmit: handleSubmit,\n              children: [/*#__PURE__*/_jsxDEV(FormH1, {\n                children: \"SIGN IN TO YOUR ACCOUNT\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(FormLabel, {\n                htmlFor: \"for\",\n                children: \"KEY\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n                type: \"text\",\n                required: true,\n                onChange: e => setEmail(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(FormLabel, {\n                htmlFor: \"for\",\n                children: \"PASSWORD\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n                type: \"password\",\n                required: true,\n                onChange: e => setPassword(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(FormButton, {\n                type: \"submit\",\n                children: \"CONTINUE\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer //toastStyle={{ backgroundColor: \"#096192\" }}\n    , {\n      position: \"bottom-center\",\n      autoClose: 5000,\n      hideProgressBar: false,\n      newestOnTop: false,\n      closeOnClick: true,\n      rtl: false,\n      pauseOnFocusLoss: false,\n      draggable: true,\n      pauseOnHover: false,\n      transition: Slide\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(SignUp, \"2MrpkrScNcAkyXdLLrpc2nipt+Q=\");\n\n_c = SignUp;\nexport default SignUp;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"sources":["/home/houssam/workspace/projects/React/t-punch/src/components/Signup/index.js"],"names":["React","useState","SyntheticEvent","Redirect","Container","FormWrap","Icon","FormContent","FormInput","Form","FormH1","FormButton","Img","FormLabel","Txt","OutWrap","ToastContainer","toast","Slide","SignUp","email","setEmail","password","setPassword","redirect","setRedirect","handleSubmit","e","preventDefault","res","fetch","method","headers","Accept","credentials","body","JSON","stringify","username","then","json","status","error","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","img","target","value"],"mappings":"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","sourcesContent":["import React, { useState, SyntheticEvent } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport img from \"../../images/svg-7.svg\";\nimport {\n  Container,\n  FormWrap,\n  Icon,\n  FormContent,\n  FormInput,\n  Form,\n  FormH1,\n  FormButton,\n  Img,\n  FormLabel,\n  Txt,\n  OutWrap,\n} from \"./signupElements\";\n\nimport { ToastContainer, toast, Slide } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nconst SignUp = () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [redirect, setRedirect] = useState(false);\n\n  const handleSubmit = async (e: SyntheticEvent) => {\n    e.preventDefault();\n    //console.log(\"hiiiiii\");\n    const res = await fetch(\"http://localhost:3001/login\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      //headers: { \"Content-Type\": \"application/json\" },\n      credentials: \"include\",\n      body: JSON.stringify({\n        username: email,\n        password: password,\n      }),\n    }).then((res) => res.json());\n\n    if (res.status === true) {\n      setRedirect(true);\n    } else {\n      toast.error(\"Login failed!\", {\n        position: \"bottom-center\",\n        autoClose: 2000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: false,\n        draggable: true,\n        progress: undefined,\n      });\n    }\n  };\n\n  if (redirect) {\n    return <Redirect to=\"/dashboard/explore\" />;\n  }\n\n  return (\n    <>\n      <Container>\n        <FormWrap>\n          <Icon to=\"/\">TECH_PUNCH</Icon>\n          <OutWrap>\n            <Txt>START BOOSTING YOUR BUSINESS</Txt>\n            <Img src={img}></Img>\n            <FormContent>\n              <Form onSubmit={handleSubmit}>\n                <FormH1>SIGN IN TO YOUR ACCOUNT</FormH1>\n                <FormLabel htmlFor=\"for\">KEY</FormLabel>\n                <FormInput\n                  type=\"text\"\n                  required\n                  onChange={(e) => setEmail(e.target.value)}\n                ></FormInput>\n                <FormLabel htmlFor=\"for\">PASSWORD</FormLabel>\n                <FormInput\n                  type=\"password\"\n                  required\n                  onChange={(e) => setPassword(e.target.value)}\n                ></FormInput>\n                <FormButton type=\"submit\">CONTINUE</FormButton>\n              </Form>\n            </FormContent>\n          </OutWrap>\n        </FormWrap>\n      </Container>\n      <ToastContainer\n        //toastStyle={{ backgroundColor: \"#096192\" }}\n        position=\"bottom-center\"\n        autoClose={5000}\n        hideProgressBar={false}\n        newestOnTop={false}\n        closeOnClick\n        rtl={false}\n        pauseOnFocusLoss={false}\n        draggable\n        pauseOnHover={false}\n        transition={Slide}\n      />\n    </>\n  );\n};\n\nexport default SignUp;\n"]},"metadata":{},"sourceType":"module"}