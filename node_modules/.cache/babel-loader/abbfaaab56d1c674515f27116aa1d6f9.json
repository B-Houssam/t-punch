{"ast":null,"code":"var _jsxFileName = \"/home/houssam/workspace/projects/React/t-punch/src/components/Dashboard/DashboardExplore/ExploreData/index.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { Doughnut } from \"react-chartjs-2\";\nimport { SubWrapper, ExWrapper, ExTxt } from \"./ExElements\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst AddData = () => {\n  _s();\n\n  const [file, setfile] = useState(null);\n\n  const fetchData = async () => {\n    // eslint-disable-next-line\n    const res = await fetch(\"http://localhost:8000/public\", {\n      method: \"GET\"\n    }).then(res => res.json()).then(res => setfile(res));\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n  /*\n  const hiddenFileInput = React.useRef(null);\n   const handleClick = (event) => {\n    hiddenFileInput.current.click();\n  };\n   \n  const handleAction = async (data) => {\n    const formData = new FormData();\n    formData.append(\"file\", selected);\n    const res = await fetch(\"http://localhost:8000/public\", {\n      method: \"POST\",\n      body: formData,\n    }).then((res) => res.json());\n    if (res.status === true) {\n      toast.success(\"Upload succesful!\", {\n        position: \"bottom-center\",\n        autoClose: 2000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: false,\n        draggable: true,\n        progress: undefined,\n      });\n    } else {\n      toast.error(\"Upload failed!\", {\n        position: \"bottom-center\",\n        autoClose: 2000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: false,\n        draggable: true,\n        progress: undefined,\n      });\n    }\n    setfile(false);\n    setshow(false);\n    fetchData();\n  };\n  */\n\n  const data = {\n    labels: [\"EU\", \"n\", \"Yellow\", \"Green\", \"Purple\", \"Orange\"],\n    datasets: [{\n      label: \"# of Votes\",\n      data: [12, 19, 3, 5, 2, 3],\n      backgroundColor: [\"rgba(255, 99, 132, 0.2)\", \"rgba(54, 162, 235, 0.2)\", \"rgba(255, 206, 86, 0.2)\", \"rgba(75, 192, 192, 0.2)\", \"rgba(153, 102, 255, 0.2)\", \"rgba(255, 159, 64, 0.2)\"],\n      borderColor: [\"rgba(255, 99, 132, 1)\", \"rgba(54, 162, 235, 1)\", \"rgba(255, 206, 86, 1)\", \"rgba(75, 192, 192, 1)\", \"rgba(153, 102, 255, 1)\", \"rgba(255, 159, 64, 1)\"],\n      borderWidth: 1\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: file === null ? /*#__PURE__*/_jsxDEV(ExWrapper, {\n      children: /*#__PURE__*/_jsxDEV(SubWrapper, {\n        children: /*#__PURE__*/_jsxDEV(ExTxt, {\n          children: \" Click on DATASET to upload a new dataset first!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(ExWrapper, {\n      children: /*#__PURE__*/_jsxDEV(Doughnut, {\n        data: data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(AddData, \"rvKc6psy+C7aJSBIb1posBLPu1c=\");\n\n_c = AddData;\nexport default AddData;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddData\");","map":{"version":3,"sources":["/home/houssam/workspace/projects/React/t-punch/src/components/Dashboard/DashboardExplore/ExploreData/index.js"],"names":["React","useState","useEffect","Doughnut","SubWrapper","ExWrapper","ExTxt","AddData","file","setfile","fetchData","res","fetch","method","then","json","data","labels","datasets","label","backgroundColor","borderColor","borderWidth"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,QAAT,QAAyB,iBAAzB;AAEA,SAASC,UAAT,EAAqBC,SAArB,EAAgCC,KAAhC,QAA6C,cAA7C;AACA,OAAO,uCAAP;;;;AAEA,MAAMC,OAAO,GAAG,MAAM;AAAA;;AACpB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,IAAD,CAAhC;;AAEA,QAAMS,SAAS,GAAG,YAAY;AAC5B;AACA,UAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,8BAAD,EAAiC;AACtDC,MAAAA,MAAM,EAAE;AAD8C,KAAjC,CAAL,CAGfC,IAHe,CAGTH,GAAD,IAASA,GAAG,CAACI,IAAJ,EAHC,EAIfD,IAJe,CAITH,GAAD,IAASF,OAAO,CAACE,GAAD,CAJN,CAAlB;AAKD,GAPD;;AASAT,EAAAA,SAAS,CAAC,MAAM;AACdQ,IAAAA,SAAS;AACV,GAFQ,EAEN,EAFM,CAAT;AAIA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIE,QAAMM,IAAI,GAAG;AACXC,IAAAA,MAAM,EAAE,CAAC,IAAD,EAAO,GAAP,EAAY,QAAZ,EAAsB,OAAtB,EAA+B,QAA/B,EAAyC,QAAzC,CADG;AAEXC,IAAAA,QAAQ,EAAE,CACR;AACEC,MAAAA,KAAK,EAAE,YADT;AAEEH,MAAAA,IAAI,EAAE,CAAC,EAAD,EAAK,EAAL,EAAS,CAAT,EAAY,CAAZ,EAAe,CAAf,EAAkB,CAAlB,CAFR;AAGEI,MAAAA,eAAe,EAAE,CACf,yBADe,EAEf,yBAFe,EAGf,yBAHe,EAIf,yBAJe,EAKf,0BALe,EAMf,yBANe,CAHnB;AAWEC,MAAAA,WAAW,EAAE,CACX,uBADW,EAEX,uBAFW,EAGX,uBAHW,EAIX,uBAJW,EAKX,wBALW,EAMX,uBANW,CAXf;AAmBEC,MAAAA,WAAW,EAAE;AAnBf,KADQ;AAFC,GAAb;AA2BA,sBACE;AAAA,cACGd,IAAI,KAAK,IAAT,gBACC,QAAC,SAAD;AAAA,6BACE,QAAC,UAAD;AAAA,+BACE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADD,gBAOC,QAAC,SAAD;AAAA,6BACE,QAAC,QAAD;AAAU,QAAA,IAAI,EAAEQ;AAAhB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AARJ,mBADF;AAeD,CApGD;;GAAMT,O;;KAAAA,O;AAsGN,eAAeA,OAAf","sourcesContent":["import React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { Doughnut } from \"react-chartjs-2\";\n\nimport { SubWrapper, ExWrapper, ExTxt } from \"./ExElements\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nconst AddData = () => {\n  const [file, setfile] = useState(null);\n\n  const fetchData = async () => {\n    // eslint-disable-next-line\n    const res = await fetch(\"http://localhost:8000/public\", {\n      method: \"GET\",\n    })\n      .then((res) => res.json())\n      .then((res) => setfile(res));\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  /*\n  const hiddenFileInput = React.useRef(null);\n\n  const handleClick = (event) => {\n    hiddenFileInput.current.click();\n  };\n\n  \n  const handleAction = async (data) => {\n    const formData = new FormData();\n    formData.append(\"file\", selected);\n    const res = await fetch(\"http://localhost:8000/public\", {\n      method: \"POST\",\n      body: formData,\n    }).then((res) => res.json());\n    if (res.status === true) {\n      toast.success(\"Upload succesful!\", {\n        position: \"bottom-center\",\n        autoClose: 2000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: false,\n        draggable: true,\n        progress: undefined,\n      });\n    } else {\n      toast.error(\"Upload failed!\", {\n        position: \"bottom-center\",\n        autoClose: 2000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: false,\n        draggable: true,\n        progress: undefined,\n      });\n    }\n    setfile(false);\n    setshow(false);\n    fetchData();\n  };\n  */\n\n  const data = {\n    labels: [\"EU\", \"n\", \"Yellow\", \"Green\", \"Purple\", \"Orange\"],\n    datasets: [\n      {\n        label: \"# of Votes\",\n        data: [12, 19, 3, 5, 2, 3],\n        backgroundColor: [\n          \"rgba(255, 99, 132, 0.2)\",\n          \"rgba(54, 162, 235, 0.2)\",\n          \"rgba(255, 206, 86, 0.2)\",\n          \"rgba(75, 192, 192, 0.2)\",\n          \"rgba(153, 102, 255, 0.2)\",\n          \"rgba(255, 159, 64, 0.2)\",\n        ],\n        borderColor: [\n          \"rgba(255, 99, 132, 1)\",\n          \"rgba(54, 162, 235, 1)\",\n          \"rgba(255, 206, 86, 1)\",\n          \"rgba(75, 192, 192, 1)\",\n          \"rgba(153, 102, 255, 1)\",\n          \"rgba(255, 159, 64, 1)\",\n        ],\n        borderWidth: 1,\n      },\n    ],\n  };\n\n  return (\n    <>\n      {file === null ? (\n        <ExWrapper>\n          <SubWrapper>\n            <ExTxt> Click on DATASET to upload a new dataset first!</ExTxt>\n          </SubWrapper>\n        </ExWrapper>\n      ) : (\n        <ExWrapper>\n          <Doughnut data={data} />\n        </ExWrapper>\n      )}\n    </>\n  );\n};\n\nexport default AddData;\n"]},"metadata":{},"sourceType":"module"}