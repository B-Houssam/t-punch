{"ast":null,"code":"import { getNestedValue } from './misc';\n/**\n * @hidden\n */\n\nvar FieldsService =\n/** @class */\nfunction () {\n  function FieldsService(treeViewProps) {\n    this.expandField = treeViewProps.expandField;\n    this.selectField = treeViewProps.selectField;\n    this.hasChildrenField = treeViewProps.hasChildrenField;\n    this.childrenField = treeViewProps.childrenField;\n    this.textField = treeViewProps.textField;\n    this.disableField = treeViewProps.disableField;\n    this.checkField = treeViewProps.checkField;\n    this.checkIndeterminateField = treeViewProps.checkIndeterminateField;\n    this.focusIdField = treeViewProps.focusIdField;\n  }\n\n  FieldsService.prototype.expanded = function (item) {\n    return getNestedValue(this.expandField, item);\n  };\n\n  FieldsService.prototype.selected = function (item) {\n    return getNestedValue(this.selectField, item);\n  };\n\n  FieldsService.prototype.text = function (item) {\n    return getNestedValue(this.textField, item);\n  };\n\n  FieldsService.prototype.disabled = function (item) {\n    return getNestedValue(this.disableField, item);\n  };\n\n  FieldsService.prototype.hasChildren = function (item) {\n    return getNestedValue(this.hasChildrenField, item);\n  };\n\n  FieldsService.prototype.children = function (item) {\n    var children = getNestedValue(this.childrenField, item);\n    return children ? children : [];\n  };\n\n  FieldsService.prototype.checked = function (item) {\n    return getNestedValue(this.checkField, item);\n  };\n\n  FieldsService.prototype.checkIndeterminate = function (item) {\n    return getNestedValue(this.checkIndeterminateField, item);\n  };\n\n  FieldsService.prototype.focusId = function (item) {\n    return this.focusIdField && getNestedValue(this.focusIdField, item);\n  };\n\n  FieldsService.prototype.getChildrenField = function () {\n    return this.childrenField;\n  };\n\n  return FieldsService;\n}();\n\nexport default FieldsService;","map":{"version":3,"sources":["../../../src/utils/FieldsService.ts"],"names":[],"mappings":"AACA,SAAS,cAAT,QAA+B,QAA/B;AAEA;;AAEG;;AACH,IAAA,aAAA;AAAA;AAAA,YAAA;AAWI,WAAA,aAAA,CAAY,aAAZ,EAAwC;AACpC,SAAK,WAAL,GAAmB,aAAa,CAAC,WAAjC;AACA,SAAK,WAAL,GAAmB,aAAa,CAAC,WAAjC;AACA,SAAK,gBAAL,GAAwB,aAAa,CAAC,gBAAtC;AACA,SAAK,aAAL,GAAqB,aAAa,CAAC,aAAnC;AACA,SAAK,SAAL,GAAiB,aAAa,CAAC,SAA/B;AACA,SAAK,YAAL,GAAoB,aAAa,CAAC,YAAlC;AACA,SAAK,UAAL,GAAkB,aAAa,CAAC,UAAhC;AACA,SAAK,uBAAL,GAA+B,aAAa,CAAC,uBAA7C;AACA,SAAK,YAAL,GAAoB,aAAa,CAAC,YAAlC;AACH;;AAEM,EAAA,aAAA,CAAA,SAAA,CAAA,QAAA,GAAP,UAAgB,IAAhB,EAAyB;AACrB,WAAO,cAAc,CAAC,KAAK,WAAN,EAAmB,IAAnB,CAArB;AACH,GAFM;;AAGA,EAAA,aAAA,CAAA,SAAA,CAAA,QAAA,GAAP,UAAgB,IAAhB,EAAyB;AACrB,WAAO,cAAc,CAAC,KAAK,WAAN,EAAmB,IAAnB,CAArB;AACH,GAFM;;AAGA,EAAA,aAAA,CAAA,SAAA,CAAA,IAAA,GAAP,UAAY,IAAZ,EAAqB;AACjB,WAAO,cAAc,CAAC,KAAK,SAAN,EAAiB,IAAjB,CAArB;AACH,GAFM;;AAGA,EAAA,aAAA,CAAA,SAAA,CAAA,QAAA,GAAP,UAAgB,IAAhB,EAAyB;AACrB,WAAO,cAAc,CAAC,KAAK,YAAN,EAAoB,IAApB,CAArB;AACH,GAFM;;AAGA,EAAA,aAAA,CAAA,SAAA,CAAA,WAAA,GAAP,UAAmB,IAAnB,EAA4B;AACxB,WAAO,cAAc,CAAC,KAAK,gBAAN,EAAwB,IAAxB,CAArB;AACH,GAFM;;AAGA,EAAA,aAAA,CAAA,SAAA,CAAA,QAAA,GAAP,UAAgB,IAAhB,EAAyB;AACrB,QAAM,QAAQ,GAAG,cAAc,CAAC,KAAK,aAAN,EAAqB,IAArB,CAA/B;AACA,WAAO,QAAQ,GAAG,QAAH,GAAc,EAA7B;AACH,GAHM;;AAIA,EAAA,aAAA,CAAA,SAAA,CAAA,OAAA,GAAP,UAAe,IAAf,EAAwB;AACpB,WAAO,cAAc,CAAC,KAAK,UAAN,EAAkB,IAAlB,CAArB;AACH,GAFM;;AAGA,EAAA,aAAA,CAAA,SAAA,CAAA,kBAAA,GAAP,UAA0B,IAA1B,EAAmC;AAC/B,WAAO,cAAc,CAAC,KAAK,uBAAN,EAA+B,IAA/B,CAArB;AACH,GAFM;;AAGA,EAAA,aAAA,CAAA,SAAA,CAAA,OAAA,GAAP,UAAe,IAAf,EAAwB;AACpB,WAAO,KAAK,YAAL,IAAqB,cAAc,CAAC,KAAK,YAAN,EAAoB,IAApB,CAA1C;AACH,GAFM;;AAGA,EAAA,aAAA,CAAA,SAAA,CAAA,gBAAA,GAAP,YAAA;AACI,WAAO,KAAK,aAAZ;AACH,GAFM;;AAGX,SAAA,aAAA;AAAC,CAtDD,EAAA","sourceRoot":"","sourcesContent":["import { getNestedValue } from './misc';\n/**\n * @hidden\n */\nvar FieldsService = /** @class */ (function () {\n    function FieldsService(treeViewProps) {\n        this.expandField = treeViewProps.expandField;\n        this.selectField = treeViewProps.selectField;\n        this.hasChildrenField = treeViewProps.hasChildrenField;\n        this.childrenField = treeViewProps.childrenField;\n        this.textField = treeViewProps.textField;\n        this.disableField = treeViewProps.disableField;\n        this.checkField = treeViewProps.checkField;\n        this.checkIndeterminateField = treeViewProps.checkIndeterminateField;\n        this.focusIdField = treeViewProps.focusIdField;\n    }\n    FieldsService.prototype.expanded = function (item) {\n        return getNestedValue(this.expandField, item);\n    };\n    FieldsService.prototype.selected = function (item) {\n        return getNestedValue(this.selectField, item);\n    };\n    FieldsService.prototype.text = function (item) {\n        return getNestedValue(this.textField, item);\n    };\n    FieldsService.prototype.disabled = function (item) {\n        return getNestedValue(this.disableField, item);\n    };\n    FieldsService.prototype.hasChildren = function (item) {\n        return getNestedValue(this.hasChildrenField, item);\n    };\n    FieldsService.prototype.children = function (item) {\n        var children = getNestedValue(this.childrenField, item);\n        return children ? children : [];\n    };\n    FieldsService.prototype.checked = function (item) {\n        return getNestedValue(this.checkField, item);\n    };\n    FieldsService.prototype.checkIndeterminate = function (item) {\n        return getNestedValue(this.checkIndeterminateField, item);\n    };\n    FieldsService.prototype.focusId = function (item) {\n        return this.focusIdField && getNestedValue(this.focusIdField, item);\n    };\n    FieldsService.prototype.getChildrenField = function () {\n        return this.childrenField;\n    };\n    return FieldsService;\n}());\nexport default FieldsService;\n//# sourceMappingURL=FieldsService.js.map"]},"metadata":{},"sourceType":"module"}