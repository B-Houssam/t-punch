{"ast":null,"code":"var _jsxFileName = \"/home/houssam/workspace/projects/React/t-punch/src/components/Dashboard/DashBoardAccount/Account/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { AccWrapper, AccContainer, AccInfoContainer //AccPhContainer,\n//AccTxt,\n//AccPh,\n//AccLo,\n, AccInfoBtnSave, AccInfoBtnWrapper //AccInfoBtnCancel,\n, Form, FormContent, FormInput, FormLabel, FormPass //Overlay,\n} from \"./AccElements\";\nimport { ToastContainer, toast, Slide } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\"; //import img from \"../../../../images/svg-9.svg\";\n//import { MdModeEdit } from \"react-icons/md\";\n//import { FiLogOut } from \"react-icons/fi\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Account = () => {\n  _s();\n\n  const [nick, setnick] = useState();\n  const [key, setkey] = useState();\n  const [newnick, setnewnick] = useState();\n  const [newkey, setnewkey] = useState();\n  const [pass, setpass] = useState();\n  const [conf, setconf] = useState();\n  const [dis, setdis] = useState(false);\n\n  const handleDis = async () => {\n    console.log(\"pressed\");\n\n    if (newnick !== \"\" && newkey !== \"\" && pass !== \"\" && conf !== \"\") {\n      setdis(true);\n    }\n  };\n\n  const fetchData = async () => {\n    // eslint-disable-next-line\n    const res = await fetch(\"http://localhost:3001/show\", {\n      method: \"GET\"\n    }).then(res => res.json());\n\n    if (res.status === true) {\n      setkey(res.show.username);\n      setnick(res.show.nickname);\n    }\n  };\n\n  const handleSubmit = async () => {\n    try {\n      if (pass === conf) {\n        const res = await fetch(\"http://localhost:3001/update\", {\n          method: \"POST\",\n          credentials: \"include\",\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            old: key,\n            nickname: newnick,\n            key: newkey,\n            password: pass\n          })\n        }).then(res => res.json());\n\n        if (res.status === true) {\n          toast.success(\"User Updated!\", {\n            position: \"bottom-center\",\n            autoClose: 2000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: false,\n            draggable: true,\n            progress: undefined\n          });\n        }\n      }\n\n      toast.error(\"Password does not match!\", {\n        position: \"bottom-center\",\n        autoClose: 2000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: false,\n        draggable: true,\n        progress: undefined\n      });\n    } catch (error) {}\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(AccWrapper, {\n      children: /*#__PURE__*/_jsxDEV(AccContainer, {\n        children: /*#__PURE__*/_jsxDEV(AccInfoContainer, {\n          children: [/*#__PURE__*/_jsxDEV(FormContent, {\n            children: /*#__PURE__*/_jsxDEV(Form, {\n              children: [/*#__PURE__*/_jsxDEV(FormPass, {\n                style: {\n                  \"grid-template-columns\": \"1fr 1fr\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                  htmlFor: \"for\",\n                  children: \"Displayed Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 116,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(FormLabel, {\n                  htmlFor: \"for\",\n                  children: \"Key\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 117,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n                  onChange: e => {\n                    setnewnick(e.target.value);\n                    handleDis();\n                  },\n                  placeholder: nick,\n                  type: \"text\",\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 118,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n                  onChange: e => {\n                    setnewkey(e.target.value);\n                    handleDis();\n                  },\n                  placeholder: key,\n                  type: \"text\",\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 127,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(FormPass, {\n                style: {\n                  \"grid-template-columns\": \"1fr 1fr\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                  htmlFor: \"for\",\n                  children: \"Password\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 138,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(FormLabel, {\n                  htmlFor: \"for\",\n                  children: \"Confirm Password\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 139,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n                  onChange: e => {\n                    setpass(e.target.value);\n                    handleDis();\n                  },\n                  type: \"password\",\n                  placeholder: \"****\",\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 140,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n                  onChange: e => {\n                    setconf(e.target.value);\n                    handleDis();\n                  },\n                  type: \"password\",\n                  placeholder: \"****\",\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 149,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(AccInfoBtnWrapper, {\n            children: /*#__PURE__*/_jsxDEV(AccInfoBtnSave, {\n              disable: dis,\n              onClick: handleSubmit,\n              type: \"submit\",\n              children: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer //toastStyle={{ backgroundColor: \"#096192\" }}\n    , {\n      position: \"bottom-center\",\n      autoClose: 5000,\n      hideProgressBar: false,\n      newestOnTop: false,\n      closeOnClick: true,\n      rtl: false,\n      pauseOnFocusLoss: false,\n      draggable: true,\n      pauseOnHover: false,\n      transition: Slide\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Account, \"WayliMYVMglWZkq3uwKA0hHY8Fk=\");\n\n_c = Account;\nexport default Account;\n\nvar _c;\n\n$RefreshReg$(_c, \"Account\");","map":{"version":3,"sources":["/home/houssam/workspace/projects/React/t-punch/src/components/Dashboard/DashBoardAccount/Account/index.js"],"names":["React","useEffect","useState","AccWrapper","AccContainer","AccInfoContainer","AccInfoBtnSave","AccInfoBtnWrapper","Form","FormContent","FormInput","FormLabel","FormPass","ToastContainer","toast","Slide","Account","nick","setnick","key","setkey","newnick","setnewnick","newkey","setnewkey","pass","setpass","conf","setconf","dis","setdis","handleDis","console","log","fetchData","res","fetch","method","then","json","status","show","username","nickname","handleSubmit","credentials","headers","Accept","body","JSON","stringify","old","password","success","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","error","e","target","value"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport {\n  AccWrapper,\n  AccContainer,\n  AccInfoContainer,\n  //AccPhContainer,\n  //AccTxt,\n  //AccPh,\n  //AccLo,\n  AccInfoBtnSave,\n  AccInfoBtnWrapper,\n  //AccInfoBtnCancel,\n  Form,\n  FormContent,\n  FormInput,\n  FormLabel,\n  FormPass,\n  //Overlay,\n} from \"./AccElements\";\nimport { ToastContainer, toast, Slide } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\n//import img from \"../../../../images/svg-9.svg\";\n\n//import { MdModeEdit } from \"react-icons/md\";\n//import { FiLogOut } from \"react-icons/fi\";\n\nconst Account = () => {\n  const [nick, setnick] = useState();\n  const [key, setkey] = useState();\n  const [newnick, setnewnick] = useState();\n  const [newkey, setnewkey] = useState();\n  const [pass, setpass] = useState();\n  const [conf, setconf] = useState();\n  const [dis, setdis] = useState(false);\n\n  const handleDis = async () => {\n    console.log(\"pressed\");\n    if (newnick !== \"\" && newkey !== \"\" && pass !== \"\" && conf !== \"\") {\n      setdis(true);\n    }\n  };\n\n  const fetchData = async () => {\n    // eslint-disable-next-line\n    const res = await fetch(\"http://localhost:3001/show\", {\n      method: \"GET\",\n    }).then((res) => res.json());\n    if (res.status === true) {\n      setkey(res.show.username);\n      setnick(res.show.nickname);\n    }\n  };\n\n  const handleSubmit = async () => {\n    try {\n      if (pass === conf) {\n        const res = await fetch(\"http://localhost:3001/update\", {\n          method: \"POST\",\n          credentials: \"include\",\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify({\n            old: key,\n            nickname: newnick,\n            key: newkey,\n            password: pass,\n          }),\n        }).then((res) => res.json());\n        if (res.status === true) {\n          toast.success(\"User Updated!\", {\n            position: \"bottom-center\",\n            autoClose: 2000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: false,\n            draggable: true,\n            progress: undefined,\n          });\n        }\n      }\n      toast.error(\"Password does not match!\", {\n        position: \"bottom-center\",\n        autoClose: 2000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: false,\n        draggable: true,\n        progress: undefined,\n      });\n    } catch (error) {}\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  return (\n    <>\n      <AccWrapper>\n        <AccContainer>\n          <AccInfoContainer>\n            {/*\n            <AccPhContainer>\n              <Overlay>\n                <MdModeEdit size=\"40px\" color=\"white\"></MdModeEdit>\n              </Overlay>\n              <AccPh src={img}></AccPh>\n            </AccPhContainer>\n            */}\n            <FormContent>\n              <Form>\n                <FormPass style={{ \"grid-template-columns\": \"1fr 1fr\" }}>\n                  <FormLabel htmlFor=\"for\">Displayed Name</FormLabel>\n                  <FormLabel htmlFor=\"for\">Key</FormLabel>\n                  <FormInput\n                    onChange={(e) => {\n                      setnewnick(e.target.value);\n                      handleDis();\n                    }}\n                    placeholder={nick}\n                    type=\"text\"\n                    required\n                  ></FormInput>\n                  <FormInput\n                    onChange={(e) => {\n                      setnewkey(e.target.value);\n                      handleDis();\n                    }}\n                    placeholder={key}\n                    type=\"text\"\n                    required\n                  ></FormInput>\n                </FormPass>\n                <FormPass style={{ \"grid-template-columns\": \"1fr 1fr\" }}>\n                  <FormLabel htmlFor=\"for\">Password</FormLabel>\n                  <FormLabel htmlFor=\"for\">Confirm Password</FormLabel>\n                  <FormInput\n                    onChange={(e) => {\n                      setpass(e.target.value);\n                      handleDis();\n                    }}\n                    type=\"password\"\n                    placeholder=\"****\"\n                    required\n                  ></FormInput>\n                  <FormInput\n                    onChange={(e) => {\n                      setconf(e.target.value);\n                      handleDis();\n                    }}\n                    type=\"password\"\n                    placeholder=\"****\"\n                    required\n                  ></FormInput>\n                </FormPass>\n              </Form>\n            </FormContent>\n            <AccInfoBtnWrapper>\n              <AccInfoBtnSave\n                disable={dis}\n                onClick={handleSubmit}\n                type=\"submit\"\n              >\n                Save\n              </AccInfoBtnSave>\n            </AccInfoBtnWrapper>\n          </AccInfoContainer>\n        </AccContainer>\n      </AccWrapper>\n      <ToastContainer\n        //toastStyle={{ backgroundColor: \"#096192\" }}\n        position=\"bottom-center\"\n        autoClose={5000}\n        hideProgressBar={false}\n        newestOnTop={false}\n        closeOnClick\n        rtl={false}\n        pauseOnFocusLoss={false}\n        draggable\n        pauseOnHover={false}\n        transition={Slide}\n      />\n    </>\n  );\n};\n\nexport default Account;\n"]},"metadata":{},"sourceType":"module"}