{"ast":null,"code":"/*!\n * Chart.js v3.5.0\n * https://www.chartjs.org\n * (c) 2021 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, d as defaults, i as isObject, b as isArray, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as defined, s as sign, j as isNullOrUndef, _ as _arrayUnique, t as toRadians, k as toPercentage, m as toDimension, T as TAU, n as formatNumber, o as _angleBetween, H as HALF_PI, P as PI, p as isNumber, q as _limitValue, w as _lookupByKey, x as getRelativePosition$1, y as _isPointInArea, z as _rlookupByKey, A as toPadding, B as each, C as getMaximumSize, D as _getParentNode, E as readUsedSize, F as throttled, G as supportsEventListenerOptions, I as _isDomSupported, J as log10, K as _factorize, L as finiteOrDefault, M as callback, N as _addGrace, O as toDegrees, Q as _measureText, R as _int16Range, S as _alignPixel, U as clipArea, V as renderText, W as unclipArea, X as toFont, Y as _toLeftRightCenter, Z as _alignStartEnd, $ as overrides, a0 as merge, a1 as _capitalize, a2 as descriptors, a3 as isFunction, a4 as _attachContext, a5 as _createResolver, a6 as _descriptors, a7 as mergeIf, a8 as uid, a9 as debounce, aa as retinaScale, ab as clearCanvas, ac as setsEqual, ad as _elementsEqual, ae as getAngleFromPoint, af as _readValueToProps, ag as _updateBezierControlPoints, ah as _computeSegments, ai as _boundSegments, aj as _steppedInterpolation, ak as _bezierInterpolation, al as _pointInLine, am as _steppedLineTo, an as _bezierCurveTo, ao as drawPoint, ap as addRoundedRectPath, aq as toTRBL, ar as toTRBLCorners, as as _boundSegment, at as _normalizeAngle, au as getRtlAdapter, av as overrideTextDirection, aw as _textX, ax as restoreTextDirection, ay as noop, az as distanceBetweenPoints, aA as _setMinAndMaxByKey, aB as niceNum, aC as almostWhole, aD as almostEquals, aE as _decimalPlaces, aF as _longestText, aG as _filterBetween, aH as _lookup } from './chunks/helpers.segment.js';\nexport { d as defaults } from './chunks/helpers.segment.js';\n\nclass Animator {\n  constructor() {\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n\n  _notify(chart, anims, date, type) {\n    const callbacks = anims.listeners[type];\n    const numSteps = anims.duration;\n    callbacks.forEach(fn => fn({\n      chart,\n      initial: anims.initial,\n      numSteps,\n      currentStep: Math.min(date - anims.start, numSteps)\n    }));\n  }\n\n  _refresh() {\n    const me = this;\n\n    if (me._request) {\n      return;\n    }\n\n    me._running = true;\n    me._request = requestAnimFrame.call(window, () => {\n      me._update();\n\n      me._request = null;\n\n      if (me._running) {\n        me._refresh();\n      }\n    });\n  }\n\n  _update(date = Date.now()) {\n    const me = this;\n    let remaining = 0;\n\n    me._charts.forEach((anims, chart) => {\n      if (!anims.running || !anims.items.length) {\n        return;\n      }\n\n      const items = anims.items;\n      let i = items.length - 1;\n      let draw = false;\n      let item;\n\n      for (; i >= 0; --i) {\n        item = items[i];\n\n        if (item._active) {\n          if (item._total > anims.duration) {\n            anims.duration = item._total;\n          }\n\n          item.tick(date);\n          draw = true;\n        } else {\n          items[i] = items[items.length - 1];\n          items.pop();\n        }\n      }\n\n      if (draw) {\n        chart.draw();\n\n        me._notify(chart, anims, date, 'progress');\n      }\n\n      if (!items.length) {\n        anims.running = false;\n\n        me._notify(chart, anims, date, 'complete');\n\n        anims.initial = false;\n      }\n\n      remaining += items.length;\n    });\n\n    me._lastDate = date;\n\n    if (remaining === 0) {\n      me._running = false;\n    }\n  }\n\n  _getAnims(chart) {\n    const charts = this._charts;\n    let anims = charts.get(chart);\n\n    if (!anims) {\n      anims = {\n        running: false,\n        initial: true,\n        items: [],\n        listeners: {\n          complete: [],\n          progress: []\n        }\n      };\n      charts.set(chart, anims);\n    }\n\n    return anims;\n  }\n\n  listen(chart, event, cb) {\n    this._getAnims(chart).listeners[event].push(cb);\n  }\n\n  add(chart, items) {\n    if (!items || !items.length) {\n      return;\n    }\n\n    this._getAnims(chart).items.push(...items);\n  }\n\n  has(chart) {\n    return this._getAnims(chart).items.length > 0;\n  }\n\n  start(chart) {\n    const anims = this._charts.get(chart);\n\n    if (!anims) {\n      return;\n    }\n\n    anims.running = true;\n    anims.start = Date.now();\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n\n    this._refresh();\n  }\n\n  running(chart) {\n    if (!this._running) {\n      return false;\n    }\n\n    const anims = this._charts.get(chart);\n\n    if (!anims || !anims.running || !anims.items.length) {\n      return false;\n    }\n\n    return true;\n  }\n\n  stop(chart) {\n    const anims = this._charts.get(chart);\n\n    if (!anims || !anims.items.length) {\n      return;\n    }\n\n    const items = anims.items;\n    let i = items.length - 1;\n\n    for (; i >= 0; --i) {\n      items[i].cancel();\n    }\n\n    anims.items = [];\n\n    this._notify(chart, anims, Date.now(), 'complete');\n  }\n\n  remove(chart) {\n    return this._charts.delete(chart);\n  }\n\n}\n\nvar animator = new Animator();\nconst transparent = 'transparent';\nconst interpolators = {\n  boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n\n  color(from, to, factor) {\n    const c0 = color(from || transparent);\n    const c1 = c0.valid && color(to || transparent);\n    return c1 && c1.valid ? c1.mix(c0, factor).hexString() : to;\n  },\n\n  number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n\n};\n\nclass Animation {\n  constructor(cfg, target, prop, to) {\n    const currentValue = target[prop];\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    const from = resolve([cfg.from, currentValue, to]);\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n\n  active() {\n    return this._active;\n  }\n\n  update(cfg, to, date) {\n    const me = this;\n\n    if (me._active) {\n      me._notify(false);\n\n      const currentValue = me._target[me._prop];\n      const elapsed = date - me._start;\n      const remain = me._duration - elapsed;\n      me._start = date;\n      me._duration = Math.floor(Math.max(remain, cfg.duration));\n      me._total += elapsed;\n      me._loop = !!cfg.loop;\n      me._to = resolve([cfg.to, to, currentValue, cfg.from]);\n      me._from = resolve([cfg.from, currentValue, to]);\n    }\n  }\n\n  cancel() {\n    const me = this;\n\n    if (me._active) {\n      me.tick(Date.now());\n      me._active = false;\n\n      me._notify(false);\n    }\n  }\n\n  tick(date) {\n    const me = this;\n    const elapsed = date - me._start;\n    const duration = me._duration;\n    const prop = me._prop;\n    const from = me._from;\n    const loop = me._loop;\n    const to = me._to;\n    let factor;\n    me._active = from !== to && (loop || elapsed < duration);\n\n    if (!me._active) {\n      me._target[prop] = to;\n\n      me._notify(true);\n\n      return;\n    }\n\n    if (elapsed < 0) {\n      me._target[prop] = from;\n      return;\n    }\n\n    factor = elapsed / duration % 2;\n    factor = loop && factor > 1 ? 2 - factor : factor;\n    factor = me._easing(Math.min(1, Math.max(0, factor)));\n    me._target[prop] = me._fn(from, to, factor);\n  }\n\n  wait() {\n    const promises = this._promises || (this._promises = []);\n    return new Promise((res, rej) => {\n      promises.push({\n        res,\n        rej\n      });\n    });\n  }\n\n  _notify(resolved) {\n    const method = resolved ? 'res' : 'rej';\n    const promises = this._promises || [];\n\n    for (let i = 0; i < promises.length; i++) {\n      promises[i][method]();\n    }\n  }\n\n}\n\nconst numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\nconst colors = ['color', 'borderColor', 'backgroundColor'];\ndefaults.set('animation', {\n  delay: undefined,\n  duration: 1000,\n  easing: 'easeOutQuart',\n  fn: undefined,\n  from: undefined,\n  loop: undefined,\n  to: undefined,\n  type: undefined\n});\nconst animationOptions = Object.keys(defaults.animation);\ndefaults.describe('animation', {\n  _fallback: false,\n  _indexable: false,\n  _scriptable: name => name !== 'onProgress' && name !== 'onComplete' && name !== 'fn'\n});\ndefaults.set('animations', {\n  colors: {\n    type: 'color',\n    properties: colors\n  },\n  numbers: {\n    type: 'number',\n    properties: numbers\n  }\n});\ndefaults.describe('animations', {\n  _fallback: 'animation'\n});\ndefaults.set('transitions', {\n  active: {\n    animation: {\n      duration: 400\n    }\n  },\n  resize: {\n    animation: {\n      duration: 0\n    }\n  },\n  show: {\n    animations: {\n      colors: {\n        from: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        duration: 0\n      }\n    }\n  },\n  hide: {\n    animations: {\n      colors: {\n        to: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        easing: 'linear',\n        fn: v => v | 0\n      }\n    }\n  }\n});\n\nclass Animations {\n  constructor(chart, config) {\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n\n  configure(config) {\n    if (!isObject(config)) {\n      return;\n    }\n\n    const animatedProps = this._properties;\n    Object.getOwnPropertyNames(config).forEach(key => {\n      const cfg = config[key];\n\n      if (!isObject(cfg)) {\n        return;\n      }\n\n      const resolved = {};\n\n      for (const option of animationOptions) {\n        resolved[option] = cfg[option];\n      }\n\n      (isArray(cfg.properties) && cfg.properties || [key]).forEach(prop => {\n        if (prop === key || !animatedProps.has(prop)) {\n          animatedProps.set(prop, resolved);\n        }\n      });\n    });\n  }\n\n  _animateOptions(target, values) {\n    const newOptions = values.options;\n    const options = resolveTargetOptions(target, newOptions);\n\n    if (!options) {\n      return [];\n    }\n\n    const animations = this._createAnimations(options, newOptions);\n\n    if (newOptions.$shared) {\n      awaitAll(target.options.$animations, newOptions).then(() => {\n        target.options = newOptions;\n      }, () => {});\n    }\n\n    return animations;\n  }\n\n  _createAnimations(target, values) {\n    const animatedProps = this._properties;\n    const animations = [];\n    const running = target.$animations || (target.$animations = {});\n    const props = Object.keys(values);\n    const date = Date.now();\n    let i;\n\n    for (i = props.length - 1; i >= 0; --i) {\n      const prop = props[i];\n\n      if (prop.charAt(0) === '$') {\n        continue;\n      }\n\n      if (prop === 'options') {\n        animations.push(...this._animateOptions(target, values));\n        continue;\n      }\n\n      const value = values[prop];\n      let animation = running[prop];\n      const cfg = animatedProps.get(prop);\n\n      if (animation) {\n        if (cfg && animation.active()) {\n          animation.update(cfg, value, date);\n          continue;\n        } else {\n          animation.cancel();\n        }\n      }\n\n      if (!cfg || !cfg.duration) {\n        target[prop] = value;\n        continue;\n      }\n\n      running[prop] = animation = new Animation(cfg, target, prop, value);\n      animations.push(animation);\n    }\n\n    return animations;\n  }\n\n  update(target, values) {\n    if (this._properties.size === 0) {\n      Object.assign(target, values);\n      return;\n    }\n\n    const animations = this._createAnimations(target, values);\n\n    if (animations.length) {\n      animator.add(this._chart, animations);\n      return true;\n    }\n  }\n\n}\n\nfunction awaitAll(animations, properties) {\n  const running = [];\n  const keys = Object.keys(properties);\n\n  for (let i = 0; i < keys.length; i++) {\n    const anim = animations[keys[i]];\n\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n\n  return Promise.all(running);\n}\n\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n\n  let options = target.options;\n\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n\n  if (options.$shared) {\n    target.options = options = Object.assign({}, options, {\n      $shared: false,\n      $animations: {}\n    });\n  }\n\n  return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n  const opts = scale && scale.options || {};\n  const reverse = opts.reverse;\n  const min = opts.min === undefined ? allowedOverflow : 0;\n  const max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\n\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n\n  const x = scaleClip(xScale, allowedOverflow);\n  const y = scaleClip(yScale, allowedOverflow);\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\n\nfunction toClip(value) {\n  let t, r, b, l;\n\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l,\n    disabled: value === false\n  };\n}\n\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  const keys = [];\n\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\n\n  let i, ilen;\n\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n\n  return keys;\n}\n\nfunction applyStack(stack, value, dsIndex, options) {\n  const keys = stack.keys;\n  const singleMode = options.mode === 'single';\n  let i, ilen, datasetIndex, otherValue;\n\n  if (value === null) {\n    return;\n  }\n\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n\n    if (datasetIndex === dsIndex) {\n      if (options.all) {\n        continue;\n      }\n\n      break;\n    }\n\n    otherValue = stack.values[datasetIndex];\n\n    if (isNumberFinite(otherValue) && (singleMode || value === 0 || sign(value) === sign(otherValue))) {\n      value += otherValue;\n    }\n  }\n\n  return value;\n}\n\nfunction convertObjectDataToArray(data) {\n  const keys = Object.keys(data);\n  const adata = new Array(keys.length);\n  let i, ilen, key;\n\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      x: key,\n      y: data[key]\n    };\n  }\n\n  return adata;\n}\n\nfunction isStacked(scale, meta) {\n  const stacked = scale && scale.options.stacked;\n  return stacked || stacked === undefined && meta.stack !== undefined;\n}\n\nfunction getStackKey(indexScale, valueScale, meta) {\n  return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\n\nfunction getUserBounds(scale) {\n  const {\n    min,\n    max,\n    minDefined,\n    maxDefined\n  } = scale.getUserBounds();\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\n\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\n\nfunction getLastIndexInStack(stack, vScale, positive) {\n  for (const meta of vScale.getMatchingVisibleMetas('bar').reverse()) {\n    const value = stack[meta.index];\n\n    if (positive && value > 0 || !positive && value < 0) {\n      return meta.index;\n    }\n  }\n\n  return null;\n}\n\nfunction updateStacks(controller, parsed) {\n  const {\n    chart,\n    _cachedMeta: meta\n  } = controller;\n  const stacks = chart._stacks || (chart._stacks = {});\n  const {\n    iScale,\n    vScale,\n    index: datasetIndex\n  } = meta;\n  const iAxis = iScale.axis;\n  const vAxis = vScale.axis;\n  const key = getStackKey(iScale, vScale, meta);\n  const ilen = parsed.length;\n  let stack;\n\n  for (let i = 0; i < ilen; ++i) {\n    const item = parsed[i];\n    const {\n      [iAxis]: index,\n      [vAxis]: value\n    } = item;\n    const itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n    stack._top = getLastIndexInStack(stack, vScale, true);\n    stack._bottom = getLastIndexInStack(stack, vScale, false);\n  }\n}\n\nfunction getFirstScaleId(chart, axis) {\n  const scales = chart.scales;\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n}\n\nfunction createDatasetContext(parent, index) {\n  return Object.assign(Object.create(parent), {\n    active: false,\n    dataset: undefined,\n    datasetIndex: index,\n    index,\n    mode: 'default',\n    type: 'dataset'\n  });\n}\n\nfunction createDataContext(parent, index, element) {\n  return Object.assign(Object.create(parent), {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element,\n    index,\n    mode: 'default',\n    type: 'data'\n  });\n}\n\nfunction clearStacks(meta, items) {\n  const datasetIndex = meta.controller.index;\n  const axis = meta.vScale && meta.vScale.axis;\n\n  if (!axis) {\n    return;\n  }\n\n  items = items || meta._parsed;\n\n  for (const parsed of items) {\n    const stacks = parsed._stacks;\n\n    if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n      return;\n    }\n\n    delete stacks[axis][datasetIndex];\n  }\n}\n\nconst isDirectUpdateMode = mode => mode === 'reset' || mode === 'none';\n\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\n\nclass DatasetController {\n  constructor(chart, datasetIndex) {\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.$context = undefined;\n    this._syncList = [];\n    this.initialize();\n  }\n\n  initialize() {\n    const me = this;\n    const meta = me._cachedMeta;\n    me.configure();\n    me.linkScales();\n    meta._stacked = isStacked(meta.vScale, meta);\n    me.addElements();\n  }\n\n  updateIndex(datasetIndex) {\n    if (this.index !== datasetIndex) {\n      clearStacks(this._cachedMeta);\n    }\n\n    this.index = datasetIndex;\n  }\n\n  linkScales() {\n    const me = this;\n    const chart = me.chart;\n    const meta = me._cachedMeta;\n    const dataset = me.getDataset();\n\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n\n    const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n    const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n    const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n    const indexAxis = meta.indexAxis;\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n    meta.xScale = me.getScaleForId(xid);\n    meta.yScale = me.getScaleForId(yid);\n    meta.rScale = me.getScaleForId(rid);\n    meta.iScale = me.getScaleForId(iid);\n    meta.vScale = me.getScaleForId(vid);\n  }\n\n  getDataset() {\n    return this.chart.data.datasets[this.index];\n  }\n\n  getMeta() {\n    return this.chart.getDatasetMeta(this.index);\n  }\n\n  getScaleForId(scaleID) {\n    return this.chart.scales[scaleID];\n  }\n\n  _getOtherScale(scale) {\n    const meta = this._cachedMeta;\n    return scale === meta.iScale ? meta.vScale : meta.iScale;\n  }\n\n  reset() {\n    this._update('reset');\n  }\n\n  _destroy() {\n    const meta = this._cachedMeta;\n\n    if (this._data) {\n      unlistenArrayEvents(this._data, this);\n    }\n\n    if (meta._stacked) {\n      clearStacks(meta);\n    }\n  }\n\n  _dataCheck() {\n    const me = this;\n    const dataset = me.getDataset();\n    const data = dataset.data || (dataset.data = []);\n    const _data = me._data;\n\n    if (isObject(data)) {\n      me._data = convertObjectDataToArray(data);\n    } else if (_data !== data) {\n      if (_data) {\n        unlistenArrayEvents(_data, me);\n        const meta = me._cachedMeta;\n        clearStacks(meta);\n        meta._parsed = [];\n      }\n\n      if (data && Object.isExtensible(data)) {\n        listenArrayEvents(data, me);\n      }\n\n      me._syncList = [];\n      me._data = data;\n    }\n  }\n\n  addElements() {\n    const me = this;\n    const meta = me._cachedMeta;\n\n    me._dataCheck();\n\n    if (me.datasetElementType) {\n      meta.dataset = new me.datasetElementType();\n    }\n  }\n\n  buildOrUpdateElements(resetNewElements) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const dataset = me.getDataset();\n    let stackChanged = false;\n\n    me._dataCheck();\n\n    const oldStacked = meta._stacked;\n    meta._stacked = isStacked(meta.vScale, meta);\n\n    if (meta.stack !== dataset.stack) {\n      stackChanged = true;\n      clearStacks(meta);\n      meta.stack = dataset.stack;\n    }\n\n    me._resyncElements(resetNewElements);\n\n    if (stackChanged || oldStacked !== meta._stacked) {\n      updateStacks(me, meta._parsed);\n    }\n  }\n\n  configure() {\n    const me = this;\n    const config = me.chart.config;\n    const scopeKeys = config.datasetScopeKeys(me._type);\n    const scopes = config.getOptionScopes(me.getDataset(), scopeKeys, true);\n    me.options = config.createResolver(scopes, me.getContext());\n    me._parsing = me.options.parsing;\n  }\n\n  parse(start, count) {\n    const me = this;\n    const {\n      _cachedMeta: meta,\n      _data: data\n    } = me;\n    const {\n      iScale,\n      _stacked\n    } = meta;\n    const iAxis = iScale.axis;\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\n    let prev = start > 0 && meta._parsed[start - 1];\n    let i, cur, parsed;\n\n    if (me._parsing === false) {\n      meta._parsed = data;\n      meta._sorted = true;\n      parsed = data;\n    } else {\n      if (isArray(data[start])) {\n        parsed = me.parseArrayData(meta, data, start, count);\n      } else if (isObject(data[start])) {\n        parsed = me.parseObjectData(meta, data, start, count);\n      } else {\n        parsed = me.parsePrimitiveData(meta, data, start, count);\n      }\n\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || prev && cur[iAxis] < prev[iAxis];\n\n      for (i = 0; i < count; ++i) {\n        meta._parsed[i + start] = cur = parsed[i];\n\n        if (sorted) {\n          if (isNotInOrderComparedToPrev()) {\n            sorted = false;\n          }\n\n          prev = cur;\n        }\n      }\n\n      meta._sorted = sorted;\n    }\n\n    if (_stacked) {\n      updateStacks(me, parsed);\n    }\n  }\n\n  parsePrimitiveData(meta, data, start, count) {\n    const {\n      iScale,\n      vScale\n    } = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = new Array(count);\n    let i, ilen, index;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      parsed[i] = {\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\n        [vAxis]: vScale.parse(data[index], index)\n      };\n    }\n\n    return parsed;\n  }\n\n  parseArrayData(meta, data, start, count) {\n    const {\n      xScale,\n      yScale\n    } = meta;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(item[0], index),\n        y: yScale.parse(item[1], index)\n      };\n    }\n\n    return parsed;\n  }\n\n  parseObjectData(meta, data, start, count) {\n    const {\n      xScale,\n      yScale\n    } = meta;\n    const {\n      xAxisKey = 'x',\n      yAxisKey = 'y'\n    } = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n      };\n    }\n\n    return parsed;\n  }\n\n  getParsed(index) {\n    return this._cachedMeta._parsed[index];\n  }\n\n  getDataElement(index) {\n    return this._cachedMeta.data[index];\n  }\n\n  applyStack(scale, parsed, mode) {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const value = parsed[scale.axis];\n    const stack = {\n      keys: getSortedDatasetIndices(chart, true),\n      values: parsed._stacks[scale.axis]\n    };\n    return applyStack(stack, value, meta.index, {\n      mode\n    });\n  }\n\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    const parsedValue = parsed[scale.axis];\n    let value = parsedValue === null ? NaN : parsedValue;\n    const values = stack && parsed._stacks[scale.axis];\n\n    if (stack && values) {\n      stack.values = values;\n      range.min = Math.min(range.min, value);\n      range.max = Math.max(range.max, value);\n      value = applyStack(stack, parsedValue, this._cachedMeta.index, {\n        all: true\n      });\n    }\n\n    range.min = Math.min(range.min, value);\n    range.max = Math.max(range.max, value);\n  }\n\n  getMinMax(scale, canStack) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const _parsed = meta._parsed;\n    const sorted = meta._sorted && scale === meta.iScale;\n    const ilen = _parsed.length;\n\n    const otherScale = me._getOtherScale(scale);\n\n    const stack = canStack && meta._stacked && {\n      keys: getSortedDatasetIndices(me.chart, true),\n      values: null\n    };\n    const range = {\n      min: Number.POSITIVE_INFINITY,\n      max: Number.NEGATIVE_INFINITY\n    };\n    const {\n      min: otherMin,\n      max: otherMax\n    } = getUserBounds(otherScale);\n    let i, value, parsed, otherValue;\n\n    function _skip() {\n      parsed = _parsed[i];\n      value = parsed[scale.axis];\n      otherValue = parsed[otherScale.axis];\n      return !isNumberFinite(value) || otherMin > otherValue || otherMax < otherValue;\n    }\n\n    for (i = 0; i < ilen; ++i) {\n      if (_skip()) {\n        continue;\n      }\n\n      me.updateRangeFromParsed(range, scale, parsed, stack);\n\n      if (sorted) {\n        break;\n      }\n    }\n\n    if (sorted) {\n      for (i = ilen - 1; i >= 0; --i) {\n        if (_skip()) {\n          continue;\n        }\n\n        me.updateRangeFromParsed(range, scale, parsed, stack);\n        break;\n      }\n    }\n\n    return range;\n  }\n\n  getAllParsedValues(scale) {\n    const parsed = this._cachedMeta._parsed;\n    const values = [];\n    let i, ilen, value;\n\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n      value = parsed[i][scale.axis];\n\n      if (isNumberFinite(value)) {\n        values.push(value);\n      }\n    }\n\n    return values;\n  }\n\n  getMaxOverflow() {\n    return false;\n  }\n\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const parsed = me.getParsed(index);\n    return {\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n    };\n  }\n\n  _update(mode) {\n    const me = this;\n    const meta = me._cachedMeta;\n    me.configure();\n    me._cachedDataOpts = {};\n    me.update(mode || 'default');\n    meta._clip = toClip(valueOrDefault(me.options.clip, defaultClip(meta.xScale, meta.yScale, me.getMaxOverflow())));\n  }\n\n  update(mode) {}\n\n  draw() {\n    const me = this;\n    const ctx = me._ctx;\n    const chart = me.chart;\n    const meta = me._cachedMeta;\n    const elements = meta.data || [];\n    const area = chart.chartArea;\n    const active = [];\n    const start = me._drawStart || 0;\n    const count = me._drawCount || elements.length - start;\n    let i;\n\n    if (meta.dataset) {\n      meta.dataset.draw(ctx, area, start, count);\n    }\n\n    for (i = start; i < start + count; ++i) {\n      const element = elements[i];\n\n      if (element.hidden) {\n        continue;\n      }\n\n      if (element.active) {\n        active.push(element);\n      } else {\n        element.draw(ctx, area);\n      }\n    }\n\n    for (i = 0; i < active.length; ++i) {\n      active[i].draw(ctx, area);\n    }\n  }\n\n  getStyle(index, active) {\n    const mode = active ? 'active' : 'default';\n    return index === undefined && this._cachedMeta.dataset ? this.resolveDatasetElementOptions(mode) : this.resolveDataElementOptions(index || 0, mode);\n  }\n\n  getContext(index, active, mode) {\n    const me = this;\n    const dataset = me.getDataset();\n    let context;\n\n    if (index >= 0 && index < me._cachedMeta.data.length) {\n      const element = me._cachedMeta.data[index];\n      context = element.$context || (element.$context = createDataContext(me.getContext(), index, element));\n      context.parsed = me.getParsed(index);\n      context.raw = dataset.data[index];\n      context.index = context.dataIndex = index;\n    } else {\n      context = me.$context || (me.$context = createDatasetContext(me.chart.getContext(), me.index));\n      context.dataset = dataset;\n      context.index = context.datasetIndex = me.index;\n    }\n\n    context.active = !!active;\n    context.mode = mode;\n    return context;\n  }\n\n  resolveDatasetElementOptions(mode) {\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\n  }\n\n  resolveDataElementOptions(index, mode) {\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\n  }\n\n  _resolveElementOptions(elementType, mode = 'default', index) {\n    const me = this;\n    const active = mode === 'active';\n    const cache = me._cachedDataOpts;\n    const cacheKey = elementType + '-' + mode;\n    const cached = cache[cacheKey];\n    const sharing = me.enableOptionSharing && defined(index);\n\n    if (cached) {\n      return cloneIfNotShared(cached, sharing);\n    }\n\n    const config = me.chart.config;\n    const scopeKeys = config.datasetElementScopeKeys(me._type, elementType);\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\n    const scopes = config.getOptionScopes(me.getDataset(), scopeKeys);\n    const names = Object.keys(defaults.elements[elementType]);\n\n    const context = () => me.getContext(index, active);\n\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n\n    if (values.$shared) {\n      values.$shared = sharing;\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n    }\n\n    return values;\n  }\n\n  _resolveAnimations(index, transition, active) {\n    const me = this;\n    const chart = me.chart;\n    const cache = me._cachedDataOpts;\n    const cacheKey = `animation-${transition}`;\n    const cached = cache[cacheKey];\n\n    if (cached) {\n      return cached;\n    }\n\n    let options;\n\n    if (chart.options.animation !== false) {\n      const config = me.chart.config;\n      const scopeKeys = config.datasetAnimationScopeKeys(me._type, transition);\n      const scopes = config.getOptionScopes(me.getDataset(), scopeKeys);\n      options = config.createResolver(scopes, me.getContext(index, active, transition));\n    }\n\n    const animations = new Animations(chart, options && options.animations);\n\n    if (options && options._cacheable) {\n      cache[cacheKey] = Object.freeze(animations);\n    }\n\n    return animations;\n  }\n\n  getSharedOptions(options) {\n    if (!options.$shared) {\n      return;\n    }\n\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n  }\n\n  includeOptions(mode, sharedOptions) {\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n  }\n\n  updateElement(element, index, properties, mode) {\n    if (isDirectUpdateMode(mode)) {\n      Object.assign(element, properties);\n    } else {\n      this._resolveAnimations(index, mode).update(element, properties);\n    }\n  }\n\n  updateSharedOptions(sharedOptions, mode, newOptions) {\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n    }\n  }\n\n  _setStyle(element, index, mode, active) {\n    element.active = active;\n    const options = this.getStyle(index, active);\n\n    this._resolveAnimations(index, mode, active).update(element, {\n      options: !active && this.getSharedOptions(options) || options\n    });\n  }\n\n  removeHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', false);\n  }\n\n  setHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', true);\n  }\n\n  _removeDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n\n    if (element) {\n      this._setStyle(element, undefined, 'active', false);\n    }\n  }\n\n  _setDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n\n    if (element) {\n      this._setStyle(element, undefined, 'active', true);\n    }\n  }\n\n  _resyncElements(resetNewElements) {\n    const me = this;\n    const data = me._data;\n    const elements = me._cachedMeta.data;\n\n    for (const [method, arg1, arg2] of me._syncList) {\n      me[method](arg1, arg2);\n    }\n\n    me._syncList = [];\n    const numMeta = elements.length;\n    const numData = data.length;\n    const count = Math.min(numData, numMeta);\n\n    if (count) {\n      me.parse(0, count);\n    }\n\n    if (numData > numMeta) {\n      me._insertElements(numMeta, numData - numMeta, resetNewElements);\n    } else if (numData < numMeta) {\n      me._removeElements(numData, numMeta - numData);\n    }\n  }\n\n  _insertElements(start, count, resetNewElements = true) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const data = meta.data;\n    const end = start + count;\n    let i;\n\n    const move = arr => {\n      arr.length += count;\n\n      for (i = arr.length - 1; i >= end; i--) {\n        arr[i] = arr[i - count];\n      }\n    };\n\n    move(data);\n\n    for (i = start; i < end; ++i) {\n      data[i] = new me.dataElementType();\n    }\n\n    if (me._parsing) {\n      move(meta._parsed);\n    }\n\n    me.parse(start, count);\n\n    if (resetNewElements) {\n      me.updateElements(data, start, count, 'reset');\n    }\n  }\n\n  updateElements(element, start, count, mode) {}\n\n  _removeElements(start, count) {\n    const me = this;\n    const meta = me._cachedMeta;\n\n    if (me._parsing) {\n      const removed = meta._parsed.splice(start, count);\n\n      if (meta._stacked) {\n        clearStacks(meta, removed);\n      }\n    }\n\n    meta.data.splice(start, count);\n  }\n\n  _onDataPush() {\n    const count = arguments.length;\n\n    this._syncList.push(['_insertElements', this.getDataset().data.length - count, count]);\n  }\n\n  _onDataPop() {\n    this._syncList.push(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n  }\n\n  _onDataShift() {\n    this._syncList.push(['_removeElements', 0, 1]);\n  }\n\n  _onDataSplice(start, count) {\n    this._syncList.push(['_removeElements', start, count]);\n\n    this._syncList.push(['_insertElements', start, arguments.length - 2]);\n  }\n\n  _onDataUnshift() {\n    this._syncList.push(['_insertElements', 0, arguments.length]);\n  }\n\n}\n\nDatasetController.defaults = {};\nDatasetController.prototype.datasetElementType = null;\nDatasetController.prototype.dataElementType = null;\n\nfunction getAllScaleValues(scale) {\n  if (!scale._cache.$bar) {\n    const metas = scale.getMatchingVisibleMetas('bar');\n    let values = [];\n\n    for (let i = 0, ilen = metas.length; i < ilen; i++) {\n      values = values.concat(metas[i].controller.getAllParsedValues(scale));\n    }\n\n    scale._cache.$bar = _arrayUnique(values.sort((a, b) => a - b));\n  }\n\n  return scale._cache.$bar;\n}\n\nfunction computeMinSampleSize(scale) {\n  const values = getAllScaleValues(scale);\n  let min = scale._length;\n  let i, ilen, curr, prev;\n\n  const updateMinAndPrev = () => {\n    if (curr === 32767 || curr === -32768) {\n      return;\n    }\n\n    if (defined(prev)) {\n      min = Math.min(min, Math.abs(curr - prev) || min);\n    }\n\n    prev = curr;\n  };\n\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n\n  prev = undefined;\n\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n\n  return min;\n}\n\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  const thickness = options.barThickness;\n  let size, ratio;\n\n  if (isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n\n  return {\n    chunk: size / stackCount,\n    ratio,\n    start: ruler.pixels[index] - size / 2\n  };\n}\n\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  const pixels = ruler.pixels;\n  const curr = pixels[index];\n  let prev = index > 0 ? pixels[index - 1] : null;\n  let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  const percent = options.categoryPercentage;\n\n  if (prev === null) {\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n\n  if (next === null) {\n    next = curr + curr - prev;\n  }\n\n  const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  const size = Math.abs(next - prev) / 2 * percent;\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start\n  };\n}\n\nfunction parseFloatBar(entry, item, vScale, i) {\n  const startValue = vScale.parse(entry[0], i);\n  const endValue = vScale.parse(entry[1], i);\n  const min = Math.min(startValue, endValue);\n  const max = Math.max(startValue, endValue);\n  let barStart = min;\n  let barEnd = max;\n\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n\n  item[vScale.axis] = barEnd;\n  item._custom = {\n    barStart,\n    barEnd,\n    start: startValue,\n    end: endValue,\n    min,\n    max\n  };\n}\n\nfunction parseValue(entry, item, vScale, i) {\n  if (isArray(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n\n  return item;\n}\n\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  const iScale = meta.iScale;\n  const vScale = meta.vScale;\n  const labels = iScale.getLabels();\n  const singleScale = iScale === vScale;\n  const parsed = [];\n  let i, ilen, item, entry;\n\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n\n  return parsed;\n}\n\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\n\nfunction barSign(size, vScale, actualBase) {\n  if (size !== 0) {\n    return sign(size);\n  }\n\n  return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\n\nfunction borderProps(properties) {\n  let reverse, start, end, top, bottom;\n\n  if (properties.horizontal) {\n    reverse = properties.base > properties.x;\n    start = 'left';\n    end = 'right';\n  } else {\n    reverse = properties.base < properties.y;\n    start = 'bottom';\n    end = 'top';\n  }\n\n  if (reverse) {\n    top = 'end';\n    bottom = 'start';\n  } else {\n    top = 'start';\n    bottom = 'end';\n  }\n\n  return {\n    start,\n    end,\n    reverse,\n    top,\n    bottom\n  };\n}\n\nfunction setBorderSkipped(properties, options, stack, index) {\n  let edge = options.borderSkipped;\n  const res = {};\n\n  if (!edge) {\n    properties.borderSkipped = res;\n    return;\n  }\n\n  const {\n    start,\n    end,\n    reverse,\n    top,\n    bottom\n  } = borderProps(properties);\n\n  if (edge === 'middle' && stack) {\n    properties.enableBorderRadius = true;\n\n    if ((stack._top || 0) === index) {\n      edge = top;\n    } else if ((stack._bottom || 0) === index) {\n      edge = bottom;\n    } else {\n      res[parseEdge(bottom, start, end, reverse)] = true;\n      edge = top;\n    }\n  }\n\n  res[parseEdge(edge, start, end, reverse)] = true;\n  properties.borderSkipped = res;\n}\n\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n\n  return edge;\n}\n\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\n\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\n\nclass BarController extends DatasetController {\n  parsePrimitiveData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n\n  parseArrayData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n\n  parseObjectData(meta, data, start, count) {\n    const {\n      iScale,\n      vScale\n    } = meta;\n    const {\n      xAxisKey = 'x',\n      yAxisKey = 'y'\n    } = this._parsing;\n    const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const parsed = [];\n    let i, ilen, item, obj;\n\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      obj = data[i];\n      item = {};\n      item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n      parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n    }\n\n    return parsed;\n  }\n\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    super.updateRangeFromParsed(range, scale, parsed, stack);\n    const custom = parsed._custom;\n\n    if (custom && scale === this._cachedMeta.vScale) {\n      range.min = Math.min(range.min, custom.min);\n      range.max = Math.max(range.max, custom.max);\n    }\n  }\n\n  getMaxOverflow() {\n    return 0;\n  }\n\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const {\n      iScale,\n      vScale\n    } = meta;\n    const parsed = me.getParsed(index);\n    const custom = parsed._custom;\n    const value = isFloatBar(custom) ? '[' + custom.start + ', ' + custom.end + ']' : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n    return {\n      label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n      value\n    };\n  }\n\n  initialize() {\n    const me = this;\n    me.enableOptionSharing = true;\n    super.initialize();\n    const meta = me._cachedMeta;\n    meta.stack = me.getDataset().stack;\n  }\n\n  update(mode) {\n    const me = this;\n    const meta = me._cachedMeta;\n    me.updateElements(meta.data, 0, meta.data.length, mode);\n  }\n\n  updateElements(bars, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const {\n      index,\n      _cachedMeta: {\n        vScale\n      }\n    } = me;\n    const base = vScale.getBasePixel();\n    const horizontal = vScale.isHorizontal();\n\n    const ruler = me._getRuler();\n\n    const firstOpts = me.resolveDataElementOptions(start, mode);\n    const sharedOptions = me.getSharedOptions(firstOpts);\n    const includeOptions = me.includeOptions(mode, sharedOptions);\n    me.updateSharedOptions(sharedOptions, mode, firstOpts);\n\n    for (let i = start; i < start + count; i++) {\n      const parsed = me.getParsed(i);\n      const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {\n        base,\n        head: base\n      } : me._calculateBarValuePixels(i);\n\n      const ipixels = me._calculateBarIndexPixels(i, ruler);\n\n      const stack = (parsed._stacks || {})[vScale.axis];\n      const properties = {\n        horizontal,\n        base: vpixels.base,\n        enableBorderRadius: !stack || isFloatBar(parsed._custom) || index === stack._top || index === stack._bottom,\n        x: horizontal ? vpixels.head : ipixels.center,\n        y: horizontal ? ipixels.center : vpixels.head,\n        height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n        width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n      };\n\n      if (includeOptions) {\n        properties.options = sharedOptions || me.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n      }\n\n      setBorderSkipped(properties, properties.options || bars[i].options, stack, index);\n      me.updateElement(bars[i], i, properties, mode);\n    }\n  }\n\n  _getStacks(last, dataIndex) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const iScale = meta.iScale;\n    const metasets = iScale.getMatchingVisibleMetas(me._type);\n    const stacked = iScale.options.stacked;\n    const ilen = metasets.length;\n    const stacks = [];\n    let i, item;\n\n    for (i = 0; i < ilen; ++i) {\n      item = metasets[i];\n\n      if (!item.controller.options.grouped) {\n        continue;\n      }\n\n      if (typeof dataIndex !== 'undefined') {\n        const val = item.controller.getParsed(dataIndex)[item.controller._cachedMeta.vScale.axis];\n\n        if (isNullOrUndef(val) || isNaN(val)) {\n          continue;\n        }\n      }\n\n      if (stacked === false || stacks.indexOf(item.stack) === -1 || stacked === undefined && item.stack === undefined) {\n        stacks.push(item.stack);\n      }\n\n      if (item.index === last) {\n        break;\n      }\n    }\n\n    if (!stacks.length) {\n      stacks.push(undefined);\n    }\n\n    return stacks;\n  }\n\n  _getStackCount(index) {\n    return this._getStacks(undefined, index).length;\n  }\n\n  _getStackIndex(datasetIndex, name, dataIndex) {\n    const stacks = this._getStacks(datasetIndex, dataIndex);\n\n    const index = name !== undefined ? stacks.indexOf(name) : -1;\n    return index === -1 ? stacks.length - 1 : index;\n  }\n\n  _getRuler() {\n    const me = this;\n    const opts = me.options;\n    const meta = me._cachedMeta;\n    const iScale = meta.iScale;\n    const pixels = [];\n    let i, ilen;\n\n    for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n      pixels.push(iScale.getPixelForValue(me.getParsed(i)[iScale.axis], i));\n    }\n\n    const barThickness = opts.barThickness;\n    const min = barThickness || computeMinSampleSize(iScale);\n    return {\n      min,\n      pixels,\n      start: iScale._startPixel,\n      end: iScale._endPixel,\n      stackCount: me._getStackCount(),\n      scale: iScale,\n      grouped: opts.grouped,\n      ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n    };\n  }\n\n  _calculateBarValuePixels(index) {\n    const me = this;\n    const {\n      _cachedMeta: {\n        vScale,\n        _stacked\n      },\n      options: {\n        base: baseValue,\n        minBarLength\n      }\n    } = me;\n    const actualBase = baseValue || 0;\n    const parsed = me.getParsed(index);\n    const custom = parsed._custom;\n    const floating = isFloatBar(custom);\n    let value = parsed[vScale.axis];\n    let start = 0;\n    let length = _stacked ? me.applyStack(vScale, parsed, _stacked) : value;\n    let head, size;\n\n    if (length !== value) {\n      start = length - value;\n      length = value;\n    }\n\n    if (floating) {\n      value = custom.barStart;\n      length = custom.barEnd - custom.barStart;\n\n      if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n        start = 0;\n      }\n\n      start += value;\n    }\n\n    const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n    let base = vScale.getPixelForValue(startValue);\n\n    if (me.chart.getDataVisibility(index)) {\n      head = vScale.getPixelForValue(start + length);\n    } else {\n      head = base;\n    }\n\n    size = head - base;\n\n    if (Math.abs(size) < minBarLength) {\n      size = barSign(size, vScale, actualBase) * minBarLength;\n\n      if (value === actualBase) {\n        base -= size / 2;\n      }\n\n      head = base + size;\n    }\n\n    if (base === vScale.getPixelForValue(actualBase)) {\n      const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n      base += halfGrid;\n      size -= halfGrid;\n    }\n\n    return {\n      size,\n      base,\n      head,\n      center: head + size / 2\n    };\n  }\n\n  _calculateBarIndexPixels(index, ruler) {\n    const me = this;\n    const scale = ruler.scale;\n    const options = me.options;\n    const skipNull = options.skipNull;\n    const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n    let center, size;\n\n    if (ruler.grouped) {\n      const stackCount = skipNull ? me._getStackCount(index) : ruler.stackCount;\n      const range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options, stackCount) : computeFitCategoryTraits(index, ruler, options, stackCount);\n\n      const stackIndex = me._getStackIndex(me.index, me._cachedMeta.stack, skipNull ? index : undefined);\n\n      center = range.start + range.chunk * stackIndex + range.chunk / 2;\n      size = Math.min(maxBarThickness, range.chunk * range.ratio);\n    } else {\n      center = scale.getPixelForValue(me.getParsed(index)[scale.axis], index);\n      size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n    }\n\n    return {\n      base: center - size / 2,\n      head: center + size / 2,\n      center,\n      size\n    };\n  }\n\n  draw() {\n    const me = this;\n    const meta = me._cachedMeta;\n    const vScale = meta.vScale;\n    const rects = meta.data;\n    const ilen = rects.length;\n    let i = 0;\n\n    for (; i < ilen; ++i) {\n      if (me.getParsed(i)[vScale.axis] !== null) {\n        rects[i].draw(me._ctx);\n      }\n    }\n  }\n\n}\n\nBarController.id = 'bar';\nBarController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'bar',\n  categoryPercentage: 0.8,\n  barPercentage: 0.9,\n  grouped: true,\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'base', 'width', 'height']\n    }\n  }\n};\nBarController.overrides = {\n  interaction: {\n    mode: 'index'\n  },\n  scales: {\n    _index_: {\n      type: 'category',\n      offset: true,\n      grid: {\n        offset: true\n      }\n    },\n    _value_: {\n      type: 'linear',\n      beginAtZero: true\n    }\n  }\n};\n\nclass BubbleController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n\n  parseObjectData(meta, data, start, count) {\n    const {\n      xScale,\n      yScale\n    } = meta;\n    const {\n      xAxisKey = 'x',\n      yAxisKey = 'y'\n    } = this._parsing;\n    const parsed = [];\n    let i, ilen, item;\n\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      item = data[i];\n      parsed.push({\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), i),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), i),\n        _custom: item && item.r && +item.r\n      });\n    }\n\n    return parsed;\n  }\n\n  getMaxOverflow() {\n    const {\n      data,\n      _parsed\n    } = this._cachedMeta;\n    let max = 0;\n\n    for (let i = data.length - 1; i >= 0; --i) {\n      max = Math.max(max, data[i].size() / 2, _parsed[i]._custom);\n    }\n\n    return max > 0 && max;\n  }\n\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const {\n      xScale,\n      yScale\n    } = meta;\n    const parsed = me.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n    const r = parsed._custom;\n    return {\n      label: meta.label,\n      value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n    };\n  }\n\n  update(mode) {\n    const me = this;\n    const points = me._cachedMeta.data;\n    me.updateElements(points, 0, points.length, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const {\n      iScale,\n      vScale\n    } = me._cachedMeta;\n    const firstOpts = me.resolveDataElementOptions(start, mode);\n    const sharedOptions = me.getSharedOptions(firstOpts);\n    const includeOptions = me.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const parsed = !reset && me.getParsed(i);\n      const properties = {};\n      const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n      const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel);\n\n      if (includeOptions) {\n        properties.options = me.resolveDataElementOptions(i, point.active ? 'active' : mode);\n\n        if (reset) {\n          properties.options.radius = 0;\n        }\n      }\n\n      me.updateElement(point, i, properties, mode);\n    }\n\n    me.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n\n  resolveDataElementOptions(index, mode) {\n    const parsed = this.getParsed(index);\n    let values = super.resolveDataElementOptions(index, mode);\n\n    if (values.$shared) {\n      values = Object.assign({}, values, {\n        $shared: false\n      });\n    }\n\n    const radius = values.radius;\n\n    if (mode !== 'active') {\n      values.radius = 0;\n    }\n\n    values.radius += valueOrDefault(parsed && parsed._custom, radius);\n    return values;\n  }\n\n}\n\nBubbleController.id = 'bubble';\nBubbleController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'point',\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'borderWidth', 'radius']\n    }\n  }\n};\nBubbleController.overrides = {\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        }\n\n      }\n    }\n  }\n};\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  let ratioX = 1;\n  let ratioY = 1;\n  let offsetX = 0;\n  let offsetY = 0;\n\n  if (circumference < TAU) {\n    const startAngle = rotation;\n    const endAngle = startAngle + circumference;\n    const startX = Math.cos(startAngle);\n    const startY = Math.sin(startAngle);\n    const endX = Math.cos(endAngle);\n    const endY = Math.sin(endAngle);\n\n    const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n\n    const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n\n    const maxX = calcMax(0, startX, endX);\n    const maxY = calcMax(HALF_PI, startY, endY);\n    const minX = calcMin(PI, startX, endX);\n    const minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n\n  return {\n    ratioX,\n    ratioY,\n    offsetX,\n    offsetY\n  };\n}\n\nclass DoughnutController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.enableOptionSharing = true;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.offsetX = undefined;\n    this.offsetY = undefined;\n  }\n\n  linkScales() {}\n\n  parse(start, count) {\n    const data = this.getDataset().data;\n    const meta = this._cachedMeta;\n    let i, ilen;\n\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      meta._parsed[i] = +data[i];\n    }\n  }\n\n  _getRotation() {\n    return toRadians(this.options.rotation - 90);\n  }\n\n  _getCircumference() {\n    return toRadians(this.options.circumference);\n  }\n\n  _getRotationExtents() {\n    let min = TAU;\n    let max = -TAU;\n    const me = this;\n\n    for (let i = 0; i < me.chart.data.datasets.length; ++i) {\n      if (me.chart.isDatasetVisible(i)) {\n        const controller = me.chart.getDatasetMeta(i).controller;\n\n        const rotation = controller._getRotation();\n\n        const circumference = controller._getCircumference();\n\n        min = Math.min(min, rotation);\n        max = Math.max(max, rotation + circumference);\n      }\n    }\n\n    return {\n      rotation: min,\n      circumference: max - min\n    };\n  }\n\n  update(mode) {\n    const me = this;\n    const chart = me.chart;\n    const {\n      chartArea\n    } = chart;\n    const meta = me._cachedMeta;\n    const arcs = meta.data;\n    const spacing = me.getMaxBorderWidth() + me.getMaxOffset(arcs) + me.options.spacing;\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n    const cutout = Math.min(toPercentage(me.options.cutout, maxSize), 1);\n\n    const chartWeight = me._getRingWeight(me.index);\n\n    const {\n      circumference,\n      rotation\n    } = me._getRotationExtents();\n\n    const {\n      ratioX,\n      ratioY,\n      offsetX,\n      offsetY\n    } = getRatioAndOffset(rotation, circumference, cutout);\n    const maxWidth = (chartArea.width - spacing) / ratioX;\n    const maxHeight = (chartArea.height - spacing) / ratioY;\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n    const outerRadius = toDimension(me.options.radius, maxRadius);\n    const innerRadius = Math.max(outerRadius * cutout, 0);\n\n    const radiusLength = (outerRadius - innerRadius) / me._getVisibleDatasetWeightTotal();\n\n    me.offsetX = offsetX * outerRadius;\n    me.offsetY = offsetY * outerRadius;\n    meta.total = me.calculateTotal();\n    me.outerRadius = outerRadius - radiusLength * me._getRingWeightOffset(me.index);\n    me.innerRadius = Math.max(me.outerRadius - radiusLength * chartWeight, 0);\n    me.updateElements(arcs, 0, arcs.length, mode);\n  }\n\n  _circumference(i, reset) {\n    const me = this;\n    const opts = me.options;\n    const meta = me._cachedMeta;\n\n    const circumference = me._getCircumference();\n\n    if (reset && opts.animation.animateRotate || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n      return 0;\n    }\n\n    return me.calculateCircumference(meta._parsed[i] * circumference / TAU);\n  }\n\n  updateElements(arcs, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const chart = me.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const centerX = (chartArea.left + chartArea.right) / 2;\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\n    const animateScale = reset && animationOpts.animateScale;\n    const innerRadius = animateScale ? 0 : me.innerRadius;\n    const outerRadius = animateScale ? 0 : me.outerRadius;\n    const firstOpts = me.resolveDataElementOptions(start, mode);\n    const sharedOptions = me.getSharedOptions(firstOpts);\n    const includeOptions = me.includeOptions(mode, sharedOptions);\n\n    let startAngle = me._getRotation();\n\n    let i;\n\n    for (i = 0; i < start; ++i) {\n      startAngle += me._circumference(i, reset);\n    }\n\n    for (i = start; i < start + count; ++i) {\n      const circumference = me._circumference(i, reset);\n\n      const arc = arcs[i];\n      const properties = {\n        x: centerX + me.offsetX,\n        y: centerY + me.offsetY,\n        startAngle,\n        endAngle: startAngle + circumference,\n        circumference,\n        outerRadius,\n        innerRadius\n      };\n\n      if (includeOptions) {\n        properties.options = sharedOptions || me.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n      }\n\n      startAngle += circumference;\n      me.updateElement(arc, i, properties, mode);\n    }\n\n    me.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n\n  calculateTotal() {\n    const meta = this._cachedMeta;\n    const metaData = meta.data;\n    let total = 0;\n    let i;\n\n    for (i = 0; i < metaData.length; i++) {\n      const value = meta._parsed[i];\n\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n        total += Math.abs(value);\n      }\n    }\n\n    return total;\n  }\n\n  calculateCircumference(value) {\n    const total = this._cachedMeta.total;\n\n    if (total > 0 && !isNaN(value)) {\n      return TAU * (Math.abs(value) / total);\n    }\n\n    return 0;\n  }\n\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const chart = me.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index], chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value\n    };\n  }\n\n  getMaxBorderWidth(arcs) {\n    const me = this;\n    let max = 0;\n    const chart = me.chart;\n    let i, ilen, meta, controller, options;\n\n    if (!arcs) {\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n          arcs = meta.data;\n          controller = meta.controller;\n\n          if (controller !== me) {\n            controller.configure();\n          }\n\n          break;\n        }\n      }\n    }\n\n    if (!arcs) {\n      return 0;\n    }\n\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n      options = controller.resolveDataElementOptions(i);\n\n      if (options.borderAlign !== 'inner') {\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n      }\n    }\n\n    return max;\n  }\n\n  getMaxOffset(arcs) {\n    let max = 0;\n\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\n      const options = this.resolveDataElementOptions(i);\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n    }\n\n    return max;\n  }\n\n  _getRingWeightOffset(datasetIndex) {\n    let ringWeightOffset = 0;\n\n    for (let i = 0; i < datasetIndex; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        ringWeightOffset += this._getRingWeight(i);\n      }\n    }\n\n    return ringWeightOffset;\n  }\n\n  _getRingWeight(datasetIndex) {\n    return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n  }\n\n  _getVisibleDatasetWeightTotal() {\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n  }\n\n}\n\nDoughnutController.id = 'doughnut';\nDoughnutController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: false\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth', 'spacing']\n    }\n  },\n  cutout: '50%',\n  rotation: 0,\n  circumference: 360,\n  radius: '100%',\n  spacing: 0,\n  indexAxis: 'r'\n};\nDoughnutController.descriptors = {\n  _scriptable: name => name !== 'spacing',\n  _indexable: name => name !== 'spacing'\n};\nDoughnutController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n\n          if (data.labels.length && data.datasets.length) {\n            const {\n              labels: {\n                pointStyle\n              }\n            } = chart.legend.options;\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n\n          return [];\n        }\n\n      },\n\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n\n        label(tooltipItem) {\n          let dataLabel = tooltipItem.label;\n          const value = ': ' + tooltipItem.formattedValue;\n\n          if (isArray(dataLabel)) {\n            dataLabel = dataLabel.slice();\n            dataLabel[0] += value;\n          } else {\n            dataLabel += value;\n          }\n\n          return dataLabel;\n        }\n\n      }\n    }\n  }\n};\n\nclass LineController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n\n  update(mode) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const {\n      dataset: line,\n      data: points = [],\n      _dataset\n    } = meta;\n    const animationsDisabled = me.chart._animationsDisabled;\n    let {\n      start,\n      count\n    } = getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n    me._drawStart = start;\n    me._drawCount = count;\n\n    if (scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n\n    line._datasetIndex = me.index;\n    line._decimated = !!_dataset._decimated;\n    line.points = points;\n    const options = me.resolveDatasetElementOptions(mode);\n\n    if (!me.options.showLine) {\n      options.borderWidth = 0;\n    }\n\n    options.segment = me.options.segment;\n    me.updateElement(line, undefined, {\n      animated: !animationsDisabled,\n      options\n    }, mode);\n    me.updateElements(points, start, count, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const {\n      iScale,\n      vScale,\n      _stacked\n    } = me._cachedMeta;\n    const firstOpts = me.resolveDataElementOptions(start, mode);\n    const sharedOptions = me.getSharedOptions(firstOpts);\n    const includeOptions = me.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const spanGaps = me.options.spanGaps;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = me.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && me.getParsed(start - 1);\n\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = me.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? me.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && parsed[iAxis] - prevParsed[iAxis] > maxGapLength;\n      properties.parsed = parsed;\n\n      if (includeOptions) {\n        properties.options = sharedOptions || me.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n\n      if (!directUpdate) {\n        me.updateElement(point, i, properties, mode);\n      }\n\n      prevParsed = parsed;\n    }\n\n    me.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n\n  getMaxOverflow() {\n    const me = this;\n    const meta = me._cachedMeta;\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    const data = meta.data || [];\n\n    if (!data.length) {\n      return border;\n    }\n\n    const firstPoint = data[0].size(me.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(me.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n\n  draw() {\n    const meta = this._cachedMeta;\n    meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n    super.draw();\n  }\n\n}\n\nLineController.id = 'line';\nLineController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  showLine: true,\n  spanGaps: false\n};\nLineController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category'\n    },\n    _value_: {\n      type: 'linear'\n    }\n  }\n};\n\nfunction getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n  const pointCount = points.length;\n  let start = 0;\n  let count = pointCount;\n\n  if (meta._sorted) {\n    const {\n      iScale,\n      _parsed\n    } = meta;\n    const axis = iScale.axis;\n    const {\n      min,\n      max,\n      minDefined,\n      maxDefined\n    } = iScale.getUserBounds();\n\n    if (minDefined) {\n      start = _limitValue(Math.min(_lookupByKey(_parsed, iScale.axis, min).lo, animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo), 0, pointCount - 1);\n    }\n\n    if (maxDefined) {\n      count = _limitValue(Math.max(_lookupByKey(_parsed, iScale.axis, max).hi + 1, animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max)).hi + 1), start, pointCount) - start;\n    } else {\n      count = pointCount - start;\n    }\n  }\n\n  return {\n    start,\n    count\n  };\n}\n\nfunction scaleRangesChanged(meta) {\n  const {\n    xScale,\n    yScale,\n    _scaleRanges\n  } = meta;\n  const newRanges = {\n    xmin: xScale.min,\n    xmax: xScale.max,\n    ymin: yScale.min,\n    ymax: yScale.max\n  };\n\n  if (!_scaleRanges) {\n    meta._scaleRanges = newRanges;\n    return true;\n  }\n\n  const changed = _scaleRanges.xmin !== xScale.min || _scaleRanges.xmax !== xScale.max || _scaleRanges.ymin !== yScale.min || _scaleRanges.ymax !== yScale.max;\n  Object.assign(_scaleRanges, newRanges);\n  return changed;\n}\n\nclass PolarAreaController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n  }\n\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const chart = me.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value\n    };\n  }\n\n  update(mode) {\n    const arcs = this._cachedMeta.data;\n\n    this._updateRadius();\n\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n\n  _updateRadius() {\n    const me = this;\n    const chart = me.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n    const outerRadius = Math.max(minSize / 2, 0);\n    const innerRadius = Math.max(opts.cutoutPercentage ? outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n    const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n    me.outerRadius = outerRadius - radiusLength * me.index;\n    me.innerRadius = me.outerRadius - radiusLength;\n  }\n\n  updateElements(arcs, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const chart = me.chart;\n    const dataset = me.getDataset();\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const scale = me._cachedMeta.rScale;\n    const centerX = scale.xCenter;\n    const centerY = scale.yCenter;\n    const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n    let angle = datasetStartAngle;\n    let i;\n    const defaultAngle = 360 / me.countVisibleElements();\n\n    for (i = 0; i < start; ++i) {\n      angle += me._computeAngle(i, mode, defaultAngle);\n    }\n\n    for (i = start; i < start + count; i++) {\n      const arc = arcs[i];\n      let startAngle = angle;\n\n      let endAngle = angle + me._computeAngle(i, mode, defaultAngle);\n\n      let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(dataset.data[i]) : 0;\n      angle = endAngle;\n\n      if (reset) {\n        if (animationOpts.animateScale) {\n          outerRadius = 0;\n        }\n\n        if (animationOpts.animateRotate) {\n          startAngle = endAngle = datasetStartAngle;\n        }\n      }\n\n      const properties = {\n        x: centerX,\n        y: centerY,\n        innerRadius: 0,\n        outerRadius,\n        startAngle,\n        endAngle,\n        options: me.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n      };\n      me.updateElement(arc, i, properties, mode);\n    }\n  }\n\n  countVisibleElements() {\n    const dataset = this.getDataset();\n    const meta = this._cachedMeta;\n    let count = 0;\n    meta.data.forEach((element, index) => {\n      if (!isNaN(dataset.data[index]) && this.chart.getDataVisibility(index)) {\n        count++;\n      }\n    });\n    return count;\n  }\n\n  _computeAngle(index, mode, defaultAngle) {\n    return this.chart.getDataVisibility(index) ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle) : 0;\n  }\n\n}\n\nPolarAreaController.id = 'polarArea';\nPolarAreaController.defaults = {\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: true\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n    }\n  },\n  indexAxis: 'r',\n  startAngle: 0\n};\nPolarAreaController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n\n          if (data.labels.length && data.datasets.length) {\n            const {\n              labels: {\n                pointStyle\n              }\n            } = chart.legend.options;\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n\n          return [];\n        }\n\n      },\n\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n\n        label(context) {\n          return context.chart.data.labels[context.dataIndex] + ': ' + context.formattedValue;\n        }\n\n      }\n    }\n  },\n  scales: {\n    r: {\n      type: 'radialLinear',\n      angleLines: {\n        display: false\n      },\n      beginAtZero: true,\n      grid: {\n        circular: true\n      },\n      pointLabels: {\n        display: false\n      },\n      startAngle: 0\n    }\n  }\n};\n\nclass PieController extends DoughnutController {}\n\nPieController.id = 'pie';\nPieController.defaults = {\n  cutout: 0,\n  rotation: 0,\n  circumference: 360,\n  radius: '100%'\n};\n\nclass RadarController extends DatasetController {\n  getLabelAndValue(index) {\n    const me = this;\n    const vScale = me._cachedMeta.vScale;\n    const parsed = me.getParsed(index);\n    return {\n      label: vScale.getLabels()[index],\n      value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n    };\n  }\n\n  update(mode) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const line = meta.dataset;\n    const points = meta.data || [];\n    const labels = meta.iScale.getLabels();\n    line.points = points;\n\n    if (mode !== 'resize') {\n      const options = me.resolveDatasetElementOptions(mode);\n\n      if (!me.options.showLine) {\n        options.borderWidth = 0;\n      }\n\n      const properties = {\n        _loop: true,\n        _fullLoop: labels.length === points.length,\n        options\n      };\n      me.updateElement(line, undefined, properties, mode);\n    }\n\n    me.updateElements(points, 0, points.length, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const me = this;\n    const dataset = me.getDataset();\n    const scale = me._cachedMeta.rScale;\n    const reset = mode === 'reset';\n\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const options = me.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      const pointPosition = scale.getPointPositionForValue(i, dataset.data[i]);\n      const x = reset ? scale.xCenter : pointPosition.x;\n      const y = reset ? scale.yCenter : pointPosition.y;\n      const properties = {\n        x,\n        y,\n        angle: pointPosition.angle,\n        skip: isNaN(x) || isNaN(y),\n        options\n      };\n      me.updateElement(point, i, properties, mode);\n    }\n  }\n\n}\n\nRadarController.id = 'radar';\nRadarController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  indexAxis: 'r',\n  showLine: true,\n  elements: {\n    line: {\n      fill: 'start'\n    }\n  }\n};\nRadarController.overrides = {\n  aspectRatio: 1,\n  scales: {\n    r: {\n      type: 'radialLinear'\n    }\n  }\n};\n\nclass ScatterController extends LineController {}\n\nScatterController.id = 'scatter';\nScatterController.defaults = {\n  showLine: false,\n  fill: false\n};\nScatterController.overrides = {\n  interaction: {\n    mode: 'point'\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n\n        label(item) {\n          return '(' + item.label + ', ' + item.formattedValue + ')';\n        }\n\n      }\n    }\n  },\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  }\n};\nvar controllers = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  BarController: BarController,\n  BubbleController: BubbleController,\n  DoughnutController: DoughnutController,\n  LineController: LineController,\n  PolarAreaController: PolarAreaController,\n  PieController: PieController,\n  RadarController: RadarController,\n  ScatterController: ScatterController\n});\n\nfunction abstract() {\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n\nclass DateAdapter {\n  constructor(options) {\n    this.options = options || {};\n  }\n\n  formats() {\n    return abstract();\n  }\n\n  parse(value, format) {\n    return abstract();\n  }\n\n  format(timestamp, format) {\n    return abstract();\n  }\n\n  add(timestamp, amount, unit) {\n    return abstract();\n  }\n\n  diff(a, b, unit) {\n    return abstract();\n  }\n\n  startOf(timestamp, unit, weekday) {\n    return abstract();\n  }\n\n  endOf(timestamp, unit) {\n    return abstract();\n  }\n\n}\n\nDateAdapter.override = function (members) {\n  Object.assign(DateAdapter.prototype, members);\n};\n\nvar adapters = {\n  _date: DateAdapter\n};\n\nfunction getRelativePosition(e, chart) {\n  if ('native' in e) {\n    return {\n      x: e.x,\n      y: e.y\n    };\n  }\n\n  return getRelativePosition$1(e, chart);\n}\n\nfunction evaluateAllVisibleItems(chart, handler) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  let index, data, element;\n\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    ({\n      index,\n      data\n    } = metasets[i]);\n\n    for (let j = 0, jlen = data.length; j < jlen; ++j) {\n      element = data[j];\n\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\n\nfunction binarySearch(metaset, axis, value, intersect) {\n  const {\n    controller,\n    data,\n    _sorted\n  } = metaset;\n  const iScale = controller._cachedMeta.iScale;\n\n  if (iScale && axis === iScale.axis && _sorted && data.length) {\n    const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n\n    if (!intersect) {\n      return lookupMethod(data, axis, value);\n    } else if (controller._sharedOptions) {\n      const el = data[0];\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\n\n      if (range) {\n        const start = lookupMethod(data, axis, value - range);\n        const end = lookupMethod(data, axis, value + range);\n        return {\n          lo: start.lo,\n          hi: end.hi\n        };\n      }\n    }\n  }\n\n  return {\n    lo: 0,\n    hi: data.length - 1\n  };\n}\n\nfunction optimizedEvaluateItems(chart, axis, position, handler, intersect) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  const value = position[axis];\n\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    const {\n      index,\n      data\n    } = metasets[i];\n    const {\n      lo,\n      hi\n    } = binarySearch(metasets[i], axis, value, intersect);\n\n    for (let j = lo; j <= hi; ++j) {\n      const element = data[j];\n\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\n\nfunction getDistanceMetricForAxis(axis) {\n  const useX = axis.indexOf('x') !== -1;\n  const useY = axis.indexOf('y') !== -1;\n  return function (pt1, pt2) {\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\n\nfunction getIntersectItems(chart, position, axis, useFinalPosition) {\n  const items = [];\n\n  if (!_isPointInArea(position, chart.chartArea, chart._minPadding)) {\n    return items;\n  }\n\n  const evaluationFunc = function (element, datasetIndex, index) {\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({\n        element,\n        datasetIndex,\n        index\n      });\n    }\n  };\n\n  optimizedEvaluateItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\n\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition) {\n  const distanceMetric = getDistanceMetricForAxis(axis);\n  let minDistance = Number.POSITIVE_INFINITY;\n  let items = [];\n\n  if (!_isPointInArea(position, chart.chartArea, chart._minPadding)) {\n    return items;\n  }\n\n  const evaluationFunc = function (element, datasetIndex, index) {\n    if (intersect && !element.inRange(position.x, position.y, useFinalPosition)) {\n      return;\n    }\n\n    const center = element.getCenterPoint(useFinalPosition);\n\n    if (!_isPointInArea(center, chart.chartArea, chart._minPadding) && !element.inRange(position.x, position.y, useFinalPosition)) {\n      return;\n    }\n\n    const distance = distanceMetric(position, center);\n\n    if (distance < minDistance) {\n      items = [{\n        element,\n        datasetIndex,\n        index\n      }];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      items.push({\n        element,\n        datasetIndex,\n        index\n      });\n    }\n  };\n\n  optimizedEvaluateItems(chart, axis, position, evaluationFunc);\n  return items;\n}\n\nfunction getAxisItems(chart, e, options, useFinalPosition) {\n  const position = getRelativePosition(e, chart);\n  const items = [];\n  const axis = options.axis;\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  let intersectsItem = false;\n  evaluateAllVisibleItems(chart, (element, datasetIndex, index) => {\n    if (element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({\n        element,\n        datasetIndex,\n        index\n      });\n    }\n\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      intersectsItem = true;\n    }\n  });\n\n  if (options.intersect && !intersectsItem) {\n    return [];\n  }\n\n  return items;\n}\n\nvar Interaction = {\n  modes: {\n    index(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'x';\n      const items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition) : getNearestItems(chart, position, axis, false, useFinalPosition);\n      const elements = [];\n\n      if (!items.length) {\n        return [];\n      }\n\n      chart.getSortedVisibleDatasetMetas().forEach(meta => {\n        const index = items[0].index;\n        const element = meta.data[index];\n\n        if (element && !element.skip) {\n          elements.push({\n            element,\n            datasetIndex: meta.index,\n            index\n          });\n        }\n      });\n      return elements;\n    },\n\n    dataset(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      let items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition) : getNearestItems(chart, position, axis, false, useFinalPosition);\n\n      if (items.length > 0) {\n        const datasetIndex = items[0].datasetIndex;\n        const data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n\n        for (let i = 0; i < data.length; ++i) {\n          items.push({\n            element: data[i],\n            datasetIndex,\n            index: i\n          });\n        }\n      }\n\n      return items;\n    },\n\n    point(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      return getIntersectItems(chart, position, axis, useFinalPosition);\n    },\n\n    nearest(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition);\n    },\n\n    x(chart, e, options, useFinalPosition) {\n      options.axis = 'x';\n      return getAxisItems(chart, e, options, useFinalPosition);\n    },\n\n    y(chart, e, options, useFinalPosition) {\n      options.axis = 'y';\n      return getAxisItems(chart, e, options, useFinalPosition);\n    }\n\n  }\n};\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\n\nfunction filterByPosition(array, position) {\n  return array.filter(v => v.pos === position);\n}\n\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\n\nfunction sortByWeight(array, reverse) {\n  return array.sort((a, b) => {\n    const v0 = reverse ? b : a;\n    const v1 = reverse ? a : b;\n    return v0.weight === v1.weight ? v0.index - v1.index : v0.weight - v1.weight;\n  });\n}\n\nfunction wrapBoxes(boxes) {\n  const layoutBoxes = [];\n  let i, ilen, box, pos, stack, stackWeight;\n\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    ({\n      position: pos,\n      options: {\n        stack,\n        stackWeight = 1\n      }\n    } = box);\n    layoutBoxes.push({\n      index: i,\n      box,\n      pos,\n      horizontal: box.isHorizontal(),\n      weight: box.weight,\n      stack: stack && pos + stack,\n      stackWeight\n    });\n  }\n\n  return layoutBoxes;\n}\n\nfunction buildStacks(layouts) {\n  const stacks = {};\n\n  for (const wrap of layouts) {\n    const {\n      stack,\n      pos,\n      stackWeight\n    } = wrap;\n\n    if (!stack || !STATIC_POSITIONS.includes(pos)) {\n      continue;\n    }\n\n    const _stack = stacks[stack] || (stacks[stack] = {\n      count: 0,\n      placed: 0,\n      weight: 0,\n      size: 0\n    });\n\n    _stack.count++;\n    _stack.weight += stackWeight;\n  }\n\n  return stacks;\n}\n\nfunction setLayoutDims(layouts, params) {\n  const stacks = buildStacks(layouts);\n  const {\n    vBoxMaxWidth,\n    hBoxMaxHeight\n  } = params;\n  let i, ilen, layout;\n\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    const {\n      fullSize\n    } = layout.box;\n    const stack = stacks[layout.stack];\n    const factor = stack && layout.stackWeight / stack.weight;\n\n    if (layout.horizontal) {\n      layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n      layout.height = hBoxMaxHeight;\n    } else {\n      layout.width = vBoxMaxWidth;\n      layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n    }\n  }\n\n  return stacks;\n}\n\nfunction buildLayoutBoxes(boxes) {\n  const layoutBoxes = wrapBoxes(boxes);\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n  return {\n    fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\n\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\n\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\n\nfunction updateDims(chartArea, params, layout, stacks) {\n  const {\n    pos,\n    box\n  } = layout;\n  const maxPadding = chartArea.maxPadding;\n\n  if (!isObject(pos)) {\n    if (layout.size) {\n      chartArea[pos] -= layout.size;\n    }\n\n    const stack = stacks[layout.stack] || {\n      size: 0,\n      count: 1\n    };\n    stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n    layout.size = stack.size / stack.count;\n    chartArea[pos] += layout.size;\n  }\n\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  const widthChanged = newWidth !== chartArea.w;\n  const heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n  return layout.horizontal ? {\n    same: widthChanged,\n    other: heightChanged\n  } : {\n    same: heightChanged,\n    other: widthChanged\n  };\n}\n\nfunction handleMaxPadding(chartArea) {\n  const maxPadding = chartArea.maxPadding;\n\n  function updatePos(pos) {\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\n\nfunction getMargins(horizontal, chartArea) {\n  const maxPadding = chartArea.maxPadding;\n\n  function marginForPositions(positions) {\n    const margin = {\n      left: 0,\n      top: 0,\n      right: 0,\n      bottom: 0\n    };\n    positions.forEach(pos => {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n\n  return horizontal ? marginForPositions(['left', 'right']) : marginForPositions(['top', 'bottom']);\n}\n\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n  const refitBoxes = [];\n  let i, ilen, layout, box, refit, changed;\n\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n    box.update(layout.width || chartArea.w, layout.height || chartArea.h, getMargins(layout.horizontal, chartArea));\n    const {\n      same,\n      other\n    } = updateDims(chartArea, params, layout, stacks);\n    refit |= same && refitBoxes.length;\n    changed = changed || other;\n\n    if (!box.fullSize) {\n      refitBoxes.push(layout);\n    }\n  }\n\n  return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\n\nfunction setBoxDims(box, left, top, width, height) {\n  box.top = top;\n  box.left = left;\n  box.right = left + width;\n  box.bottom = top + height;\n  box.width = width;\n  box.height = height;\n}\n\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n  const userPadding = params.padding;\n  let {\n    x,\n    y\n  } = chartArea;\n\n  for (const layout of boxes) {\n    const box = layout.box;\n    const stack = stacks[layout.stack] || {\n      count: 1,\n      placed: 0,\n      weight: 1\n    };\n    const weight = layout.stackWeight / stack.weight || 1;\n\n    if (layout.horizontal) {\n      const width = chartArea.w * weight;\n      const height = stack.size || box.height;\n\n      if (defined(stack.start)) {\n        y = stack.start;\n      }\n\n      if (box.fullSize) {\n        setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n      } else {\n        setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n      }\n\n      stack.start = y;\n      stack.placed += width;\n      y = box.bottom;\n    } else {\n      const height = chartArea.h * weight;\n      const width = stack.size || box.width;\n\n      if (defined(stack.start)) {\n        x = stack.start;\n      }\n\n      if (box.fullSize) {\n        setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n      } else {\n        setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n      }\n\n      stack.start = x;\n      stack.placed += height;\n      x = box.right;\n    }\n  }\n\n  chartArea.x = x;\n  chartArea.y = y;\n}\n\ndefaults.set('layout', {\n  padding: {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0\n  }\n});\nvar layouts = {\n  addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n\n    item._layers = item._layers || function () {\n      return [{\n        z: 0,\n\n        draw(chartArea) {\n          item.draw(chartArea);\n        }\n\n      }];\n    };\n\n    chart.boxes.push(item);\n  },\n\n  removeBox(chart, layoutItem) {\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n\n  configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n\n  update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n\n    const padding = toPadding(chart.options.layout.padding);\n    const availableWidth = Math.max(width - padding.width, 0);\n    const availableHeight = Math.max(height - padding.height, 0);\n    const boxes = buildLayoutBoxes(chart.boxes);\n    const verticalBoxes = boxes.vertical;\n    const horizontalBoxes = boxes.horizontal;\n    each(chart.boxes, box => {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) => wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n    const params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding,\n      availableWidth,\n      availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    const maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    const chartArea = Object.assign({\n      maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n    const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n    fitBoxes(boxes.fullSize, chartArea, params, stacks);\n    fitBoxes(verticalBoxes, chartArea, params, stacks);\n\n    if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n      fitBoxes(verticalBoxes, chartArea, params, stacks);\n    }\n\n    handleMaxPadding(chartArea);\n    placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n    placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w\n    };\n    each(boxes.chartArea, layout => {\n      const box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h);\n    });\n  }\n\n};\n\nclass BasePlatform {\n  acquireContext(canvas, aspectRatio) {}\n\n  releaseContext(context) {\n    return false;\n  }\n\n  addEventListener(chart, type, listener) {}\n\n  removeEventListener(chart, type, listener) {}\n\n  getDevicePixelRatio() {\n    return 1;\n  }\n\n  getMaximumSize(element, width, height, aspectRatio) {\n    width = Math.max(0, width || element.width);\n    height = height || element.height;\n    return {\n      width,\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n    };\n  }\n\n  isAttached(canvas) {\n    return true;\n  }\n\n}\n\nclass BasicPlatform extends BasePlatform {\n  acquireContext(item) {\n    return item && item.getContext && item.getContext('2d') || null;\n  }\n\n}\n\nconst EXPANDO_KEY = '$chartjs';\nconst EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\n\nconst isNullOrEmpty = value => value === null || value === '';\n\nfunction initCanvas(canvas, aspectRatio) {\n  const style = canvas.style;\n  const renderHeight = canvas.getAttribute('height');\n  const renderWidth = canvas.getAttribute('width');\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n  style.display = style.display || 'block';\n  style.boxSizing = style.boxSizing || 'border-box';\n\n  if (isNullOrEmpty(renderWidth)) {\n    const displayWidth = readUsedSize(canvas, 'width');\n\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      const displayHeight = readUsedSize(canvas, 'height');\n\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n\n  return canvas;\n}\n\nconst eventListenerOptions = supportsEventListenerOptions ? {\n  passive: true\n} : false;\n\nfunction addListener(node, type, listener) {\n  node.addEventListener(type, listener, eventListenerOptions);\n}\n\nfunction removeListener(chart, type, listener) {\n  chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\n\nfunction fromNativeEvent(event, chart) {\n  const type = EVENT_TYPES[event.type] || event.type;\n  const {\n    x,\n    y\n  } = getRelativePosition$1(event, chart);\n  return {\n    type,\n    chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null\n  };\n}\n\nfunction createAttachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n\n  const container = canvas && _getParentNode(canvas);\n\n  const element = container || canvas;\n  const observer = new MutationObserver(entries => {\n    const parent = _getParentNode(element);\n\n    entries.forEach(entry => {\n      for (let i = 0; i < entry.addedNodes.length; i++) {\n        const added = entry.addedNodes[i];\n\n        if (added === element || added === parent) {\n          listener(entry.target);\n        }\n      }\n    });\n  });\n  observer.observe(document, {\n    childList: true,\n    subtree: true\n  });\n  return observer;\n}\n\nfunction createDetachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n\n  const container = canvas && _getParentNode(canvas);\n\n  if (!container) {\n    return;\n  }\n\n  const observer = new MutationObserver(entries => {\n    entries.forEach(entry => {\n      for (let i = 0; i < entry.removedNodes.length; i++) {\n        if (entry.removedNodes[i] === canvas) {\n          listener();\n          break;\n        }\n      }\n    });\n  });\n  observer.observe(container, {\n    childList: true\n  });\n  return observer;\n}\n\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\n\nfunction onWindowResize() {\n  const dpr = window.devicePixelRatio;\n\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach((resize, chart) => {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\n\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n\n  drpListeningCharts.set(chart, resize);\n}\n\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\n\nfunction createResizeObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n\n  const container = canvas && _getParentNode(canvas);\n\n  if (!container) {\n    return;\n  }\n\n  const resize = throttled((width, height) => {\n    const w = container.clientWidth;\n    listener(width, height);\n\n    if (w < container.clientWidth) {\n      listener();\n    }\n  }, window);\n  const observer = new ResizeObserver(entries => {\n    const entry = entries[0];\n    const width = entry.contentRect.width;\n    const height = entry.contentRect.height;\n\n    if (width === 0 && height === 0) {\n      return;\n    }\n\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n  return observer;\n}\n\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\n\nfunction createProxyAndListen(chart, type, listener) {\n  const canvas = chart.canvas;\n  const proxy = throttled(event => {\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart, args => {\n    const event = args[0];\n    return [event, event.offsetX, event.offsetY];\n  });\n  addListener(canvas, type, proxy);\n  return proxy;\n}\n\nclass DomPlatform extends BasePlatform {\n  acquireContext(canvas, aspectRatio) {\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\n\n    if (context && context.canvas === canvas) {\n      initCanvas(canvas, aspectRatio);\n      return context;\n    }\n\n    return null;\n  }\n\n  releaseContext(context) {\n    const canvas = context.canvas;\n\n    if (!canvas[EXPANDO_KEY]) {\n      return false;\n    }\n\n    const initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach(prop => {\n      const value = initial[prop];\n\n      if (isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n    const style = initial.style || {};\n    Object.keys(style).forEach(key => {\n      canvas.style[key] = style[key];\n    });\n    canvas.width = canvas.width;\n    delete canvas[EXPANDO_KEY];\n    return true;\n  }\n\n  addEventListener(chart, type, listener) {\n    this.removeEventListener(chart, type);\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const handlers = {\n      attach: createAttachObserver,\n      detach: createDetachObserver,\n      resize: createResizeObserver\n    };\n    const handler = handlers[type] || createProxyAndListen;\n    proxies[type] = handler(chart, type, listener);\n  }\n\n  removeEventListener(chart, type) {\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const proxy = proxies[type];\n\n    if (!proxy) {\n      return;\n    }\n\n    const handlers = {\n      attach: releaseObserver,\n      detach: releaseObserver,\n      resize: releaseObserver\n    };\n    const handler = handlers[type] || removeListener;\n    handler(chart, type, proxy);\n    proxies[type] = undefined;\n  }\n\n  getDevicePixelRatio() {\n    return window.devicePixelRatio;\n  }\n\n  getMaximumSize(canvas, width, height, aspectRatio) {\n    return getMaximumSize(canvas, width, height, aspectRatio);\n  }\n\n  isAttached(canvas) {\n    const container = _getParentNode(canvas);\n\n    return !!(container && container.isConnected);\n  }\n\n}\n\nfunction _detectPlatform(canvas) {\n  if (!_isDomSupported() || typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas) {\n    return BasicPlatform;\n  }\n\n  return DomPlatform;\n}\n\nclass Element {\n  constructor() {\n    this.x = undefined;\n    this.y = undefined;\n    this.active = false;\n    this.options = undefined;\n    this.$animations = undefined;\n  }\n\n  tooltipPosition(useFinalPosition) {\n    const {\n      x,\n      y\n    } = this.getProps(['x', 'y'], useFinalPosition);\n    return {\n      x,\n      y\n    };\n  }\n\n  hasValue() {\n    return isNumber(this.x) && isNumber(this.y);\n  }\n\n  getProps(props, final) {\n    const me = this;\n    const anims = this.$animations;\n\n    if (!final || !anims) {\n      return me;\n    }\n\n    const ret = {};\n    props.forEach(prop => {\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : me[prop];\n    });\n    return ret;\n  }\n\n}\n\nElement.defaults = {};\nElement.defaultRoutes = undefined;\nconst formatters = {\n  values(value) {\n    return isArray(value) ? value : '' + value;\n  },\n\n  numeric(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n\n    const locale = this.chart.options.locale;\n    let notation;\n    let delta = tickValue;\n\n    if (ticks.length > 1) {\n      const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\n        notation = 'scientific';\n      }\n\n      delta = calculateDelta(tickValue, ticks);\n    }\n\n    const logDelta = log10(Math.abs(delta));\n    const numDecimal = Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n    const options = {\n      notation,\n      minimumFractionDigits: numDecimal,\n      maximumFractionDigits: numDecimal\n    };\n    Object.assign(options, this.options.ticks.format);\n    return formatNumber(tickValue, locale, options);\n  },\n\n  logarithmic(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n\n    const remain = tickValue / Math.pow(10, Math.floor(log10(tickValue)));\n\n    if (remain === 1 || remain === 2 || remain === 5) {\n      return formatters.numeric.call(this, tickValue, index, ticks);\n    }\n\n    return '';\n  }\n\n};\n\nfunction calculateDelta(tickValue, ticks) {\n  let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n\n  if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n    delta = tickValue - Math.floor(tickValue);\n  }\n\n  return delta;\n}\n\nvar Ticks = {\n  formatters\n};\ndefaults.set('scale', {\n  display: true,\n  offset: false,\n  reverse: false,\n  beginAtZero: false,\n  bounds: 'ticks',\n  grace: 0,\n  grid: {\n    display: true,\n    lineWidth: 1,\n    drawBorder: true,\n    drawOnChartArea: true,\n    drawTicks: true,\n    tickLength: 8,\n    tickWidth: (_ctx, options) => options.lineWidth,\n    tickColor: (_ctx, options) => options.color,\n    offset: false,\n    borderDash: [],\n    borderDashOffset: 0.0,\n    borderWidth: 1\n  },\n  title: {\n    display: false,\n    text: '',\n    padding: {\n      top: 4,\n      bottom: 4\n    }\n  },\n  ticks: {\n    minRotation: 0,\n    maxRotation: 50,\n    mirror: false,\n    textStrokeWidth: 0,\n    textStrokeColor: '',\n    padding: 3,\n    display: true,\n    autoSkip: true,\n    autoSkipPadding: 3,\n    labelOffset: 0,\n    callback: Ticks.formatters.values,\n    minor: {},\n    major: {},\n    align: 'center',\n    crossAlign: 'near',\n    showLabelBackdrop: false,\n    backdropColor: 'rgba(255, 255, 255, 0.75)',\n    backdropPadding: 2\n  }\n});\ndefaults.route('scale.ticks', 'color', '', 'color');\ndefaults.route('scale.grid', 'color', '', 'borderColor');\ndefaults.route('scale.grid', 'borderColor', '', 'borderColor');\ndefaults.route('scale.title', 'color', '', 'color');\ndefaults.describe('scale', {\n  _fallback: false,\n  _scriptable: name => !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n  _indexable: name => name !== 'borderDash' && name !== 'tickBorderDash'\n});\ndefaults.describe('scales', {\n  _fallback: 'scale'\n});\ndefaults.describe('scale.ticks', {\n  _scriptable: name => name !== 'backdropPadding' && name !== 'callback',\n  _indexable: name => name !== 'backdropPadding'\n});\n\nfunction autoSkip(scale, ticks) {\n  const tickOpts = scale.options.ticks;\n  const ticksLimit = tickOpts.maxTicksLimit || determineMaxTicks(scale);\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  const numMajorIndices = majorIndices.length;\n  const first = majorIndices[0];\n  const last = majorIndices[numMajorIndices - 1];\n  const newTicks = [];\n\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n\n  if (numMajorIndices > 0) {\n    let i, ilen;\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\n\nfunction determineMaxTicks(scale) {\n  const offset = scale.options.offset;\n\n  const tickLength = scale._tickSize();\n\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  const maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\n\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\n  const spacing = ticks.length / ticksLimit;\n\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n\n  const factors = _factorize(evenMajorSpacing);\n\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    const factor = factors[i];\n\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n\n  return Math.max(spacing, 1);\n}\n\nfunction getMajorIndices(ticks) {\n  const result = [];\n  let i, ilen;\n\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n\n  return result;\n}\n\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  let count = 0;\n  let next = majorIndices[0];\n  let i;\n  spacing = Math.ceil(spacing);\n\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\n\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  const start = valueOrDefault(majorStart, 0);\n  const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  let count = 0;\n  let length, i, next;\n  spacing = Math.ceil(spacing);\n\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n\n  next = start;\n\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\n\nfunction getEvenSpacing(arr) {\n  const len = arr.length;\n  let i, diff;\n\n  if (len < 2) {\n    return false;\n  }\n\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n\n  return diff;\n}\n\nconst reverseAlign = align => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\n\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\n\nfunction sample(arr, numItems) {\n  const result = [];\n  const increment = arr.length / numItems;\n  const len = arr.length;\n  let i = 0;\n\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n\n  return result;\n}\n\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  const length = scale.ticks.length;\n  const validIndex = Math.min(index, length - 1);\n  const start = scale._startPixel;\n  const end = scale._endPixel;\n  const epsilon = 1e-6;\n  let lineValue = scale.getPixelForTick(validIndex);\n  let offset;\n\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n\n    lineValue += validIndex < index ? offset : -offset;\n\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n\n  return lineValue;\n}\n\nfunction garbageCollect(caches, length) {\n  each(caches, cache => {\n    const gc = cache.gc;\n    const gcLen = gc.length / 2;\n    let i;\n\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n\n      gc.splice(0, gcLen);\n    }\n  });\n}\n\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\n\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n\n  const font = toFont(options.font, fallback);\n  const padding = toPadding(options.padding);\n  const lines = isArray(options.text) ? options.text.length : 1;\n  return lines * font.lineHeight + padding.height;\n}\n\nfunction createScaleContext(parent, scale) {\n  return Object.assign(Object.create(parent), {\n    scale,\n    type: 'scale'\n  });\n}\n\nfunction createTickContext(parent, index, tick) {\n  return Object.assign(Object.create(parent), {\n    tick,\n    index,\n    type: 'tick'\n  });\n}\n\nfunction titleAlign(align, position, reverse) {\n  let ret = _toLeftRightCenter(align);\n\n  if (reverse && position !== 'right' || !reverse && position === 'right') {\n    ret = reverseAlign(ret);\n  }\n\n  return ret;\n}\n\nfunction titleArgs(scale, offset, position, align) {\n  const {\n    top,\n    left,\n    bottom,\n    right,\n    chart\n  } = scale;\n  const {\n    chartArea,\n    scales\n  } = chart;\n  let rotation = 0;\n  let maxWidth, titleX, titleY;\n  const height = bottom - top;\n  const width = right - left;\n\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n    } else if (position === 'center') {\n      titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n    } else {\n      titleY = offsetFromEdge(scale, position, offset);\n    }\n\n    maxWidth = right - left;\n  } else {\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n    } else if (position === 'center') {\n      titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n    } else {\n      titleX = offsetFromEdge(scale, position, offset);\n    }\n\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n\n  return {\n    titleX,\n    titleY,\n    maxWidth,\n    rotation\n  };\n}\n\nclass Scale extends Element {\n  constructor(cfg) {\n    super();\n    this.id = cfg.id;\n    this.type = cfg.type;\n    this.options = undefined;\n    this.ctx = cfg.ctx;\n    this.chart = cfg.chart;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    this.maxWidth = undefined;\n    this.maxHeight = undefined;\n    this.paddingTop = undefined;\n    this.paddingBottom = undefined;\n    this.paddingLeft = undefined;\n    this.paddingRight = undefined;\n    this.axis = undefined;\n    this.labelRotation = undefined;\n    this.min = undefined;\n    this.max = undefined;\n    this._range = undefined;\n    this.ticks = [];\n    this._gridLineItems = null;\n    this._labelItems = null;\n    this._labelSizes = null;\n    this._length = 0;\n    this._maxLength = 0;\n    this._longestTextCache = {};\n    this._startPixel = undefined;\n    this._endPixel = undefined;\n    this._reversePixels = false;\n    this._userMax = undefined;\n    this._userMin = undefined;\n    this._suggestedMax = undefined;\n    this._suggestedMin = undefined;\n    this._ticksLength = 0;\n    this._borderValue = 0;\n    this._cache = {};\n    this._dataLimitsCached = false;\n    this.$context = undefined;\n  }\n\n  init(options) {\n    const me = this;\n    me.options = options.setContext(me.getContext());\n    me.axis = options.axis;\n    me._userMin = me.parse(options.min);\n    me._userMax = me.parse(options.max);\n    me._suggestedMin = me.parse(options.suggestedMin);\n    me._suggestedMax = me.parse(options.suggestedMax);\n  }\n\n  parse(raw, index) {\n    return raw;\n  }\n\n  getUserBounds() {\n    let {\n      _userMin,\n      _userMax,\n      _suggestedMin,\n      _suggestedMax\n    } = this;\n    _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n    _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n    _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n    _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n    return {\n      min: finiteOrDefault(_userMin, _suggestedMin),\n      max: finiteOrDefault(_userMax, _suggestedMax),\n      minDefined: isNumberFinite(_userMin),\n      maxDefined: isNumberFinite(_userMax)\n    };\n  }\n\n  getMinMax(canStack) {\n    const me = this;\n    let {\n      min,\n      max,\n      minDefined,\n      maxDefined\n    } = me.getUserBounds();\n    let range;\n\n    if (minDefined && maxDefined) {\n      return {\n        min,\n        max\n      };\n    }\n\n    const metas = me.getMatchingVisibleMetas();\n\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n      range = metas[i].controller.getMinMax(me, canStack);\n\n      if (!minDefined) {\n        min = Math.min(min, range.min);\n      }\n\n      if (!maxDefined) {\n        max = Math.max(max, range.max);\n      }\n    }\n\n    return {\n      min: finiteOrDefault(min, finiteOrDefault(max, min)),\n      max: finiteOrDefault(max, finiteOrDefault(min, max))\n    };\n  }\n\n  getPadding() {\n    const me = this;\n    return {\n      left: me.paddingLeft || 0,\n      top: me.paddingTop || 0,\n      right: me.paddingRight || 0,\n      bottom: me.paddingBottom || 0\n    };\n  }\n\n  getTicks() {\n    return this.ticks;\n  }\n\n  getLabels() {\n    const data = this.chart.data;\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n  }\n\n  beforeLayout() {\n    this._cache = {};\n    this._dataLimitsCached = false;\n  }\n\n  beforeUpdate() {\n    callback(this.options.beforeUpdate, [this]);\n  }\n\n  update(maxWidth, maxHeight, margins) {\n    const me = this;\n    const tickOpts = me.options.ticks;\n    const sampleSize = tickOpts.sampleSize;\n    me.beforeUpdate();\n    me.maxWidth = maxWidth;\n    me.maxHeight = maxHeight;\n    me._margins = margins = Object.assign({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n    me.ticks = null;\n    me._labelSizes = null;\n    me._gridLineItems = null;\n    me._labelItems = null;\n    me.beforeSetDimensions();\n    me.setDimensions();\n    me.afterSetDimensions();\n    me._maxLength = me.isHorizontal() ? me.width + margins.left + margins.right : me.height + margins.top + margins.bottom;\n\n    if (!me._dataLimitsCached) {\n      me.beforeDataLimits();\n      me.determineDataLimits();\n      me.afterDataLimits();\n      me._range = _addGrace(me, me.options.grace);\n      me._dataLimitsCached = true;\n    }\n\n    me.beforeBuildTicks();\n    me.ticks = me.buildTicks() || [];\n    me.afterBuildTicks();\n    const samplingEnabled = sampleSize < me.ticks.length;\n\n    me._convertTicksToLabels(samplingEnabled ? sample(me.ticks, sampleSize) : me.ticks);\n\n    me.configure();\n    me.beforeCalculateLabelRotation();\n    me.calculateLabelRotation();\n    me.afterCalculateLabelRotation();\n\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n      me.ticks = autoSkip(me, me.ticks);\n      me._labelSizes = null;\n    }\n\n    if (samplingEnabled) {\n      me._convertTicksToLabels(me.ticks);\n    }\n\n    me.beforeFit();\n    me.fit();\n    me.afterFit();\n    me.afterUpdate();\n  }\n\n  configure() {\n    const me = this;\n    let reversePixels = me.options.reverse;\n    let startPixel, endPixel;\n\n    if (me.isHorizontal()) {\n      startPixel = me.left;\n      endPixel = me.right;\n    } else {\n      startPixel = me.top;\n      endPixel = me.bottom;\n      reversePixels = !reversePixels;\n    }\n\n    me._startPixel = startPixel;\n    me._endPixel = endPixel;\n    me._reversePixels = reversePixels;\n    me._length = endPixel - startPixel;\n    me._alignToPixels = me.options.alignToPixels;\n  }\n\n  afterUpdate() {\n    callback(this.options.afterUpdate, [this]);\n  }\n\n  beforeSetDimensions() {\n    callback(this.options.beforeSetDimensions, [this]);\n  }\n\n  setDimensions() {\n    const me = this;\n\n    if (me.isHorizontal()) {\n      me.width = me.maxWidth;\n      me.left = 0;\n      me.right = me.width;\n    } else {\n      me.height = me.maxHeight;\n      me.top = 0;\n      me.bottom = me.height;\n    }\n\n    me.paddingLeft = 0;\n    me.paddingTop = 0;\n    me.paddingRight = 0;\n    me.paddingBottom = 0;\n  }\n\n  afterSetDimensions() {\n    callback(this.options.afterSetDimensions, [this]);\n  }\n\n  _callHooks(name) {\n    const me = this;\n    me.chart.notifyPlugins(name, me.getContext());\n    callback(me.options[name], [me]);\n  }\n\n  beforeDataLimits() {\n    this._callHooks('beforeDataLimits');\n  }\n\n  determineDataLimits() {}\n\n  afterDataLimits() {\n    this._callHooks('afterDataLimits');\n  }\n\n  beforeBuildTicks() {\n    this._callHooks('beforeBuildTicks');\n  }\n\n  buildTicks() {\n    return [];\n  }\n\n  afterBuildTicks() {\n    this._callHooks('afterBuildTicks');\n  }\n\n  beforeTickToLabelConversion() {\n    callback(this.options.beforeTickToLabelConversion, [this]);\n  }\n\n  generateTickLabels(ticks) {\n    const me = this;\n    const tickOpts = me.options.ticks;\n    let i, ilen, tick;\n\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      tick = ticks[i];\n      tick.label = callback(tickOpts.callback, [tick.value, i, ticks], me);\n    }\n  }\n\n  afterTickToLabelConversion() {\n    callback(this.options.afterTickToLabelConversion, [this]);\n  }\n\n  beforeCalculateLabelRotation() {\n    callback(this.options.beforeCalculateLabelRotation, [this]);\n  }\n\n  calculateLabelRotation() {\n    const me = this;\n    const options = me.options;\n    const tickOpts = options.ticks;\n    const numTicks = me.ticks.length;\n    const minRotation = tickOpts.minRotation || 0;\n    const maxRotation = tickOpts.maxRotation;\n    let labelRotation = minRotation;\n    let tickWidth, maxHeight, maxLabelDiagonal;\n\n    if (!me._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !me.isHorizontal()) {\n      me.labelRotation = minRotation;\n      return;\n    }\n\n    const labelSizes = me._getLabelSizes();\n\n    const maxLabelWidth = labelSizes.widest.width;\n    const maxLabelHeight = labelSizes.highest.height;\n\n    const maxWidth = _limitValue(me.chart.width - maxLabelWidth, 0, me.maxWidth);\n\n    tickWidth = options.offset ? me.maxWidth / numTicks : maxWidth / (numTicks - 1);\n\n    if (maxLabelWidth + 6 > tickWidth) {\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n      maxHeight = me.maxHeight - getTickMarkLength(options.grid) - tickOpts.padding - getTitleHeight(options.title, me.chart.options.font);\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n      labelRotation = toDegrees(Math.min(Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)), Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))));\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n    }\n\n    me.labelRotation = labelRotation;\n  }\n\n  afterCalculateLabelRotation() {\n    callback(this.options.afterCalculateLabelRotation, [this]);\n  }\n\n  beforeFit() {\n    callback(this.options.beforeFit, [this]);\n  }\n\n  fit() {\n    const me = this;\n    const minSize = {\n      width: 0,\n      height: 0\n    };\n    const {\n      chart,\n      options: {\n        ticks: tickOpts,\n        title: titleOpts,\n        grid: gridOpts\n      }\n    } = me;\n\n    const display = me._isVisible();\n\n    const isHorizontal = me.isHorizontal();\n\n    if (display) {\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n\n      if (isHorizontal) {\n        minSize.width = me.maxWidth;\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n      } else {\n        minSize.height = me.maxHeight;\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n      }\n\n      if (tickOpts.display && me.ticks.length) {\n        const {\n          first,\n          last,\n          widest,\n          highest\n        } = me._getLabelSizes();\n\n        const tickPadding = tickOpts.padding * 2;\n        const angleRadians = toRadians(me.labelRotation);\n        const cos = Math.cos(angleRadians);\n        const sin = Math.sin(angleRadians);\n\n        if (isHorizontal) {\n          const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n          minSize.height = Math.min(me.maxHeight, minSize.height + labelHeight + tickPadding);\n        } else {\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n          minSize.width = Math.min(me.maxWidth, minSize.width + labelWidth + tickPadding);\n        }\n\n        me._calculatePadding(first, last, sin, cos);\n      }\n    }\n\n    me._handleMargins();\n\n    if (isHorizontal) {\n      me.width = me._length = chart.width - me._margins.left - me._margins.right;\n      me.height = minSize.height;\n    } else {\n      me.width = minSize.width;\n      me.height = me._length = chart.height - me._margins.top - me._margins.bottom;\n    }\n  }\n\n  _calculatePadding(first, last, sin, cos) {\n    const me = this;\n    const {\n      ticks: {\n        align,\n        padding\n      },\n      position\n    } = me.options;\n    const isRotated = me.labelRotation !== 0;\n    const labelsBelowTicks = position !== 'top' && me.axis === 'x';\n\n    if (me.isHorizontal()) {\n      const offsetLeft = me.getPixelForTick(0) - me.left;\n      const offsetRight = me.right - me.getPixelForTick(me.ticks.length - 1);\n      let paddingLeft = 0;\n      let paddingRight = 0;\n\n      if (isRotated) {\n        if (labelsBelowTicks) {\n          paddingLeft = cos * first.width;\n          paddingRight = sin * last.height;\n        } else {\n          paddingLeft = sin * first.height;\n          paddingRight = cos * last.width;\n        }\n      } else if (align === 'start') {\n        paddingRight = last.width;\n      } else if (align === 'end') {\n        paddingLeft = first.width;\n      } else {\n        paddingLeft = first.width / 2;\n        paddingRight = last.width / 2;\n      }\n\n      me.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * me.width / (me.width - offsetLeft), 0);\n      me.paddingRight = Math.max((paddingRight - offsetRight + padding) * me.width / (me.width - offsetRight), 0);\n    } else {\n      let paddingTop = last.height / 2;\n      let paddingBottom = first.height / 2;\n\n      if (align === 'start') {\n        paddingTop = 0;\n        paddingBottom = first.height;\n      } else if (align === 'end') {\n        paddingTop = last.height;\n        paddingBottom = 0;\n      }\n\n      me.paddingTop = paddingTop + padding;\n      me.paddingBottom = paddingBottom + padding;\n    }\n  }\n\n  _handleMargins() {\n    const me = this;\n\n    if (me._margins) {\n      me._margins.left = Math.max(me.paddingLeft, me._margins.left);\n      me._margins.top = Math.max(me.paddingTop, me._margins.top);\n      me._margins.right = Math.max(me.paddingRight, me._margins.right);\n      me._margins.bottom = Math.max(me.paddingBottom, me._margins.bottom);\n    }\n  }\n\n  afterFit() {\n    callback(this.options.afterFit, [this]);\n  }\n\n  isHorizontal() {\n    const {\n      axis,\n      position\n    } = this.options;\n    return position === 'top' || position === 'bottom' || axis === 'x';\n  }\n\n  isFullSize() {\n    return this.options.fullSize;\n  }\n\n  _convertTicksToLabels(ticks) {\n    const me = this;\n    me.beforeTickToLabelConversion();\n    me.generateTickLabels(ticks);\n    let i, ilen;\n\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      if (isNullOrUndef(ticks[i].label)) {\n        ticks.splice(i, 1);\n        ilen--;\n        i--;\n      }\n    }\n\n    me.afterTickToLabelConversion();\n  }\n\n  _getLabelSizes() {\n    const me = this;\n    let labelSizes = me._labelSizes;\n\n    if (!labelSizes) {\n      const sampleSize = me.options.ticks.sampleSize;\n      let ticks = me.ticks;\n\n      if (sampleSize < ticks.length) {\n        ticks = sample(ticks, sampleSize);\n      }\n\n      me._labelSizes = labelSizes = me._computeLabelSizes(ticks, ticks.length);\n    }\n\n    return labelSizes;\n  }\n\n  _computeLabelSizes(ticks, length) {\n    const {\n      ctx,\n      _longestTextCache: caches\n    } = this;\n    const widths = [];\n    const heights = [];\n    let widestLabelSize = 0;\n    let highestLabelSize = 0;\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n\n    for (i = 0; i < length; ++i) {\n      label = ticks[i].label;\n      tickFont = this._resolveTickFontOptions(i);\n      ctx.font = fontString = tickFont.string;\n      cache = caches[fontString] = caches[fontString] || {\n        data: {},\n        gc: []\n      };\n      lineHeight = tickFont.lineHeight;\n      width = height = 0;\n\n      if (!isNullOrUndef(label) && !isArray(label)) {\n        width = _measureText(ctx, cache.data, cache.gc, width, label);\n        height = lineHeight;\n      } else if (isArray(label)) {\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\n          nestedLabel = label[j];\n\n          if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n            height += lineHeight;\n          }\n        }\n      }\n\n      widths.push(width);\n      heights.push(height);\n      widestLabelSize = Math.max(width, widestLabelSize);\n      highestLabelSize = Math.max(height, highestLabelSize);\n    }\n\n    garbageCollect(caches, length);\n    const widest = widths.indexOf(widestLabelSize);\n    const highest = heights.indexOf(highestLabelSize);\n\n    const valueAt = idx => ({\n      width: widths[idx] || 0,\n      height: heights[idx] || 0\n    });\n\n    return {\n      first: valueAt(0),\n      last: valueAt(length - 1),\n      widest: valueAt(widest),\n      highest: valueAt(highest),\n      widths,\n      heights\n    };\n  }\n\n  getLabelForValue(value) {\n    return value;\n  }\n\n  getPixelForValue(value, index) {\n    return NaN;\n  }\n\n  getValueForPixel(pixel) {}\n\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n\n    return this.getPixelForValue(ticks[index].value);\n  }\n\n  getPixelForDecimal(decimal) {\n    const me = this;\n\n    if (me._reversePixels) {\n      decimal = 1 - decimal;\n    }\n\n    const pixel = me._startPixel + decimal * me._length;\n    return _int16Range(me._alignToPixels ? _alignPixel(me.chart, pixel, 0) : pixel);\n  }\n\n  getDecimalForPixel(pixel) {\n    const decimal = (pixel - this._startPixel) / this._length;\n    return this._reversePixels ? 1 - decimal : decimal;\n  }\n\n  getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  }\n\n  getBaseValue() {\n    const {\n      min,\n      max\n    } = this;\n    return min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n  }\n\n  getContext(index) {\n    const me = this;\n    const ticks = me.ticks || [];\n\n    if (index >= 0 && index < ticks.length) {\n      const tick = ticks[index];\n      return tick.$context || (tick.$context = createTickContext(me.getContext(), index, tick));\n    }\n\n    return me.$context || (me.$context = createScaleContext(me.chart.getContext(), me));\n  }\n\n  _tickSize() {\n    const me = this;\n    const optionTicks = me.options.ticks;\n    const rot = toRadians(me.labelRotation);\n    const cos = Math.abs(Math.cos(rot));\n    const sin = Math.abs(Math.sin(rot));\n\n    const labelSizes = me._getLabelSizes();\n\n    const padding = optionTicks.autoSkipPadding || 0;\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\n    return me.isHorizontal() ? h * cos > w * sin ? w / cos : h / sin : h * sin < w * cos ? h / cos : w / sin;\n  }\n\n  _isVisible() {\n    const display = this.options.display;\n\n    if (display !== 'auto') {\n      return !!display;\n    }\n\n    return this.getMatchingVisibleMetas().length > 0;\n  }\n\n  _computeGridLineItems(chartArea) {\n    const me = this;\n    const axis = me.axis;\n    const chart = me.chart;\n    const options = me.options;\n    const {\n      grid,\n      position\n    } = options;\n    const offset = grid.offset;\n    const isHorizontal = me.isHorizontal();\n    const ticks = me.ticks;\n    const ticksLength = ticks.length + (offset ? 1 : 0);\n    const tl = getTickMarkLength(grid);\n    const items = [];\n    const borderOpts = grid.setContext(me.getContext());\n    const axisWidth = borderOpts.drawBorder ? borderOpts.borderWidth : 0;\n    const axisHalfWidth = axisWidth / 2;\n\n    const alignBorderValue = function (pixel) {\n      return _alignPixel(chart, pixel, axisWidth);\n    };\n\n    let borderValue, i, lineValue, alignedLineValue;\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n\n    if (position === 'top') {\n      borderValue = alignBorderValue(me.bottom);\n      ty1 = me.bottom - tl;\n      ty2 = borderValue - axisHalfWidth;\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n      y2 = chartArea.bottom;\n    } else if (position === 'bottom') {\n      borderValue = alignBorderValue(me.top);\n      y1 = chartArea.top;\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = me.top + tl;\n    } else if (position === 'left') {\n      borderValue = alignBorderValue(me.right);\n      tx1 = me.right - tl;\n      tx2 = borderValue - axisHalfWidth;\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n      x2 = chartArea.right;\n    } else if (position === 'right') {\n      borderValue = alignBorderValue(me.left);\n      x1 = chartArea.left;\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n      tx1 = borderValue + axisHalfWidth;\n      tx2 = me.left + tl;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(me.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n\n      y1 = chartArea.top;\n      y2 = chartArea.bottom;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = ty1 + tl;\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(me.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n\n      tx1 = borderValue - axisHalfWidth;\n      tx2 = tx1 - tl;\n      x1 = chartArea.left;\n      x2 = chartArea.right;\n    }\n\n    const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n    const step = Math.max(1, Math.ceil(ticksLength / limit));\n\n    for (i = 0; i < ticksLength; i += step) {\n      const optsAtIndex = grid.setContext(me.getContext(i));\n      const lineWidth = optsAtIndex.lineWidth;\n      const lineColor = optsAtIndex.color;\n      const borderDash = grid.borderDash || [];\n      const borderDashOffset = optsAtIndex.borderDashOffset;\n      const tickWidth = optsAtIndex.tickWidth;\n      const tickColor = optsAtIndex.tickColor;\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n      lineValue = getPixelForGridLine(me, i, offset);\n\n      if (lineValue === undefined) {\n        continue;\n      }\n\n      alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n\n      if (isHorizontal) {\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\n      } else {\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\n      }\n\n      items.push({\n        tx1,\n        ty1,\n        tx2,\n        ty2,\n        x1,\n        y1,\n        x2,\n        y2,\n        width: lineWidth,\n        color: lineColor,\n        borderDash,\n        borderDashOffset,\n        tickWidth,\n        tickColor,\n        tickBorderDash,\n        tickBorderDashOffset\n      });\n    }\n\n    me._ticksLength = ticksLength;\n    me._borderValue = borderValue;\n    return items;\n  }\n\n  _computeLabelItems(chartArea) {\n    const me = this;\n    const axis = me.axis;\n    const options = me.options;\n    const {\n      position,\n      ticks: optionTicks\n    } = options;\n    const isHorizontal = me.isHorizontal();\n    const ticks = me.ticks;\n    const {\n      align,\n      crossAlign,\n      padding,\n      mirror\n    } = optionTicks;\n    const tl = getTickMarkLength(options.grid);\n    const tickAndPadding = tl + padding;\n    const hTickAndPadding = mirror ? -padding : tickAndPadding;\n    const rotation = -toRadians(me.labelRotation);\n    const items = [];\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n    let textBaseline = 'middle';\n\n    if (position === 'top') {\n      y = me.bottom - hTickAndPadding;\n      textAlign = me._getXAxisLabelAlignment();\n    } else if (position === 'bottom') {\n      y = me.top + hTickAndPadding;\n      textAlign = me._getXAxisLabelAlignment();\n    } else if (position === 'left') {\n      const ret = me._getYAxisLabelAlignment(tl);\n\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (position === 'right') {\n      const ret = me._getYAxisLabelAlignment(tl);\n\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        y = (chartArea.top + chartArea.bottom) / 2 + tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        y = me.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n      }\n\n      textAlign = me._getXAxisLabelAlignment();\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        x = (chartArea.left + chartArea.right) / 2 - tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        x = me.chart.scales[positionAxisID].getPixelForValue(value);\n      }\n\n      textAlign = me._getYAxisLabelAlignment(tl).textAlign;\n    }\n\n    if (axis === 'y') {\n      if (align === 'start') {\n        textBaseline = 'top';\n      } else if (align === 'end') {\n        textBaseline = 'bottom';\n      }\n    }\n\n    const labelSizes = me._getLabelSizes();\n\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      label = tick.label;\n      const optsAtIndex = optionTicks.setContext(me.getContext(i));\n      pixel = me.getPixelForTick(i) + optionTicks.labelOffset;\n      font = me._resolveTickFontOptions(i);\n      lineHeight = font.lineHeight;\n      lineCount = isArray(label) ? label.length : 1;\n      const halfCount = lineCount / 2;\n      const color = optsAtIndex.color;\n      const strokeColor = optsAtIndex.textStrokeColor;\n      const strokeWidth = optsAtIndex.textStrokeWidth;\n\n      if (isHorizontal) {\n        x = pixel;\n\n        if (position === 'top') {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n          } else {\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\n          }\n        } else {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n          } else {\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\n          }\n        }\n\n        if (mirror) {\n          textOffset *= -1;\n        }\n      } else {\n        y = pixel;\n        textOffset = (1 - lineCount) * lineHeight / 2;\n      }\n\n      let backdrop;\n\n      if (optsAtIndex.showLabelBackdrop) {\n        const labelPadding = toPadding(optsAtIndex.backdropPadding);\n        const height = labelSizes.heights[i];\n        const width = labelSizes.widths[i];\n        let top = y + textOffset - labelPadding.top;\n        let left = x - labelPadding.left;\n\n        switch (textBaseline) {\n          case 'middle':\n            top -= height / 2;\n            break;\n\n          case 'bottom':\n            top -= height;\n            break;\n        }\n\n        switch (textAlign) {\n          case 'center':\n            left -= width / 2;\n            break;\n\n          case 'right':\n            left -= width;\n            break;\n        }\n\n        backdrop = {\n          left,\n          top,\n          width: width + labelPadding.width,\n          height: height + labelPadding.height,\n          color: optsAtIndex.backdropColor\n        };\n      }\n\n      items.push({\n        rotation,\n        label,\n        font,\n        color,\n        strokeColor,\n        strokeWidth,\n        textOffset,\n        textAlign,\n        textBaseline,\n        translation: [x, y],\n        backdrop\n      });\n    }\n\n    return items;\n  }\n\n  _getXAxisLabelAlignment() {\n    const me = this;\n    const {\n      position,\n      ticks\n    } = me.options;\n    const rotation = -toRadians(me.labelRotation);\n\n    if (rotation) {\n      return position === 'top' ? 'left' : 'right';\n    }\n\n    let align = 'center';\n\n    if (ticks.align === 'start') {\n      align = 'left';\n    } else if (ticks.align === 'end') {\n      align = 'right';\n    }\n\n    return align;\n  }\n\n  _getYAxisLabelAlignment(tl) {\n    const me = this;\n    const {\n      position,\n      ticks: {\n        crossAlign,\n        mirror,\n        padding\n      }\n    } = me.options;\n\n    const labelSizes = me._getLabelSizes();\n\n    const tickAndPadding = tl + padding;\n    const widest = labelSizes.widest.width;\n    let textAlign;\n    let x;\n\n    if (position === 'left') {\n      if (mirror) {\n        textAlign = 'left';\n        x = me.right + padding;\n      } else {\n        x = me.right - tickAndPadding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= widest / 2;\n        } else {\n          textAlign = 'left';\n          x = me.left;\n        }\n      }\n    } else if (position === 'right') {\n      if (mirror) {\n        textAlign = 'right';\n        x = me.left + padding;\n      } else {\n        x = me.left + tickAndPadding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x = me.right;\n        }\n      }\n    } else {\n      textAlign = 'right';\n    }\n\n    return {\n      textAlign,\n      x\n    };\n  }\n\n  _computeLabelArea() {\n    const me = this;\n\n    if (me.options.ticks.mirror) {\n      return;\n    }\n\n    const chart = me.chart;\n    const position = me.options.position;\n\n    if (position === 'left' || position === 'right') {\n      return {\n        top: 0,\n        left: me.left,\n        bottom: chart.height,\n        right: me.right\n      };\n    }\n\n    if (position === 'top' || position === 'bottom') {\n      return {\n        top: me.top,\n        left: 0,\n        bottom: me.bottom,\n        right: chart.width\n      };\n    }\n  }\n\n  drawBackground() {\n    const {\n      ctx,\n      options: {\n        backgroundColor\n      },\n      left,\n      top,\n      width,\n      height\n    } = this;\n\n    if (backgroundColor) {\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(left, top, width, height);\n      ctx.restore();\n    }\n  }\n\n  getLineWidthForValue(value) {\n    const me = this;\n    const grid = me.options.grid;\n\n    if (!me._isVisible() || !grid.display) {\n      return 0;\n    }\n\n    const ticks = me.ticks;\n    const index = ticks.findIndex(t => t.value === value);\n\n    if (index >= 0) {\n      const opts = grid.setContext(me.getContext(index));\n      return opts.lineWidth;\n    }\n\n    return 0;\n  }\n\n  drawGrid(chartArea) {\n    const me = this;\n    const grid = me.options.grid;\n    const ctx = me.ctx;\n\n    const items = me._gridLineItems || (me._gridLineItems = me._computeGridLineItems(chartArea));\n\n    let i, ilen;\n\n    const drawLine = (p1, p2, style) => {\n      if (!style.width || !style.color) {\n        return;\n      }\n\n      ctx.save();\n      ctx.lineWidth = style.width;\n      ctx.strokeStyle = style.color;\n      ctx.setLineDash(style.borderDash || []);\n      ctx.lineDashOffset = style.borderDashOffset;\n      ctx.beginPath();\n      ctx.moveTo(p1.x, p1.y);\n      ctx.lineTo(p2.x, p2.y);\n      ctx.stroke();\n      ctx.restore();\n    };\n\n    if (grid.display) {\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n\n        if (grid.drawOnChartArea) {\n          drawLine({\n            x: item.x1,\n            y: item.y1\n          }, {\n            x: item.x2,\n            y: item.y2\n          }, item);\n        }\n\n        if (grid.drawTicks) {\n          drawLine({\n            x: item.tx1,\n            y: item.ty1\n          }, {\n            x: item.tx2,\n            y: item.ty2\n          }, {\n            color: item.tickColor,\n            width: item.tickWidth,\n            borderDash: item.tickBorderDash,\n            borderDashOffset: item.tickBorderDashOffset\n          });\n        }\n      }\n    }\n  }\n\n  drawBorder() {\n    const me = this;\n    const {\n      chart,\n      ctx,\n      options: {\n        grid\n      }\n    } = me;\n    const borderOpts = grid.setContext(me.getContext());\n    const axisWidth = grid.drawBorder ? borderOpts.borderWidth : 0;\n\n    if (!axisWidth) {\n      return;\n    }\n\n    const lastLineWidth = grid.setContext(me.getContext(0)).lineWidth;\n    const borderValue = me._borderValue;\n    let x1, x2, y1, y2;\n\n    if (me.isHorizontal()) {\n      x1 = _alignPixel(chart, me.left, axisWidth) - axisWidth / 2;\n      x2 = _alignPixel(chart, me.right, lastLineWidth) + lastLineWidth / 2;\n      y1 = y2 = borderValue;\n    } else {\n      y1 = _alignPixel(chart, me.top, axisWidth) - axisWidth / 2;\n      y2 = _alignPixel(chart, me.bottom, lastLineWidth) + lastLineWidth / 2;\n      x1 = x2 = borderValue;\n    }\n\n    ctx.save();\n    ctx.lineWidth = borderOpts.borderWidth;\n    ctx.strokeStyle = borderOpts.borderColor;\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n    ctx.restore();\n  }\n\n  drawLabels(chartArea) {\n    const me = this;\n    const optionTicks = me.options.ticks;\n\n    if (!optionTicks.display) {\n      return;\n    }\n\n    const ctx = me.ctx;\n\n    const area = me._computeLabelArea();\n\n    if (area) {\n      clipArea(ctx, area);\n    }\n\n    const items = me._labelItems || (me._labelItems = me._computeLabelItems(chartArea));\n\n    let i, ilen;\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      const item = items[i];\n      const tickFont = item.font;\n      const label = item.label;\n\n      if (item.backdrop) {\n        ctx.fillStyle = item.backdrop.color;\n        ctx.fillRect(item.backdrop.left, item.backdrop.top, item.backdrop.width, item.backdrop.height);\n      }\n\n      let y = item.textOffset;\n      renderText(ctx, label, 0, y, tickFont, item);\n    }\n\n    if (area) {\n      unclipArea(ctx);\n    }\n  }\n\n  drawTitle() {\n    const {\n      ctx,\n      options: {\n        position,\n        title,\n        reverse\n      }\n    } = this;\n\n    if (!title.display) {\n      return;\n    }\n\n    const font = toFont(title.font);\n    const padding = toPadding(title.padding);\n    const align = title.align;\n    let offset = font.lineHeight / 2;\n\n    if (position === 'bottom' || position === 'center' || isObject(position)) {\n      offset += padding.bottom;\n\n      if (isArray(title.text)) {\n        offset += font.lineHeight * (title.text.length - 1);\n      }\n    } else {\n      offset += padding.top;\n    }\n\n    const {\n      titleX,\n      titleY,\n      maxWidth,\n      rotation\n    } = titleArgs(this, offset, position, align);\n    renderText(ctx, title.text, 0, 0, font, {\n      color: title.color,\n      maxWidth,\n      rotation,\n      textAlign: titleAlign(align, position, reverse),\n      textBaseline: 'middle',\n      translation: [titleX, titleY]\n    });\n  }\n\n  draw(chartArea) {\n    const me = this;\n\n    if (!me._isVisible()) {\n      return;\n    }\n\n    me.drawBackground();\n    me.drawGrid(chartArea);\n    me.drawBorder();\n    me.drawTitle();\n    me.drawLabels(chartArea);\n  }\n\n  _layers() {\n    const me = this;\n    const opts = me.options;\n    const tz = opts.ticks && opts.ticks.z || 0;\n    const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n\n    if (!me._isVisible() || me.draw !== Scale.prototype.draw) {\n      return [{\n        z: tz,\n\n        draw(chartArea) {\n          me.draw(chartArea);\n        }\n\n      }];\n    }\n\n    return [{\n      z: gz,\n\n      draw(chartArea) {\n        me.drawBackground();\n        me.drawGrid(chartArea);\n        me.drawTitle();\n      }\n\n    }, {\n      z: gz + 1,\n\n      draw() {\n        me.drawBorder();\n      }\n\n    }, {\n      z: tz,\n\n      draw(chartArea) {\n        me.drawLabels(chartArea);\n      }\n\n    }];\n  }\n\n  getMatchingVisibleMetas(type) {\n    const me = this;\n    const metas = me.chart.getSortedVisibleDatasetMetas();\n    const axisID = me.axis + 'AxisID';\n    const result = [];\n    let i, ilen;\n\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      const meta = metas[i];\n\n      if (meta[axisID] === me.id && (!type || meta.type === type)) {\n        result.push(meta);\n      }\n    }\n\n    return result;\n  }\n\n  _resolveTickFontOptions(index) {\n    const opts = this.options.ticks.setContext(this.getContext(index));\n    return toFont(opts.font);\n  }\n\n  _maxDigits() {\n    const me = this;\n\n    const fontSize = me._resolveTickFontOptions(0).lineHeight;\n\n    return (me.isHorizontal() ? me.width : me.height) / fontSize;\n  }\n\n}\n\nclass TypedRegistry {\n  constructor(type, scope, override) {\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n\n  isForType(type) {\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n  }\n\n  register(item) {\n    const me = this;\n    const proto = Object.getPrototypeOf(item);\n    let parentScope;\n\n    if (isIChartComponent(proto)) {\n      parentScope = me.register(proto);\n    }\n\n    const items = me.items;\n    const id = item.id;\n    const scope = me.scope + '.' + id;\n\n    if (!id) {\n      throw new Error('class does not have id: ' + item);\n    }\n\n    if (id in items) {\n      return scope;\n    }\n\n    items[id] = item;\n    registerDefaults(item, scope, parentScope);\n\n    if (me.override) {\n      defaults.override(item.id, item.overrides);\n    }\n\n    return scope;\n  }\n\n  get(id) {\n    return this.items[id];\n  }\n\n  unregister(item) {\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope;\n\n    if (id in items) {\n      delete items[id];\n    }\n\n    if (scope && id in defaults[scope]) {\n      delete defaults[scope][id];\n\n      if (this.override) {\n        delete overrides[id];\n      }\n    }\n  }\n\n}\n\nfunction registerDefaults(item, scope, parentScope) {\n  const itemDefaults = merge(Object.create(null), [parentScope ? defaults.get(parentScope) : {}, defaults.get(scope), item.defaults]);\n  defaults.set(scope, itemDefaults);\n\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\n\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(property => {\n    const propertyParts = property.split('.');\n    const sourceName = propertyParts.pop();\n    const sourceScope = [scope].concat(propertyParts).join('.');\n    const parts = routes[property].split('.');\n    const targetName = parts.pop();\n    const targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\n\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n  constructor() {\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n\n  add(...args) {\n    this._each('register', args);\n  }\n\n  remove(...args) {\n    this._each('unregister', args);\n  }\n\n  addControllers(...args) {\n    this._each('register', args, this.controllers);\n  }\n\n  addElements(...args) {\n    this._each('register', args, this.elements);\n  }\n\n  addPlugins(...args) {\n    this._each('register', args, this.plugins);\n  }\n\n  addScales(...args) {\n    this._each('register', args, this.scales);\n  }\n\n  getController(id) {\n    return this._get(id, this.controllers, 'controller');\n  }\n\n  getElement(id) {\n    return this._get(id, this.elements, 'element');\n  }\n\n  getPlugin(id) {\n    return this._get(id, this.plugins, 'plugin');\n  }\n\n  getScale(id) {\n    return this._get(id, this.scales, 'scale');\n  }\n\n  removeControllers(...args) {\n    this._each('unregister', args, this.controllers);\n  }\n\n  removeElements(...args) {\n    this._each('unregister', args, this.elements);\n  }\n\n  removePlugins(...args) {\n    this._each('unregister', args, this.plugins);\n  }\n\n  removeScales(...args) {\n    this._each('unregister', args, this.scales);\n  }\n\n  _each(method, args, typedRegistry) {\n    const me = this;\n    [...args].forEach(arg => {\n      const reg = typedRegistry || me._getRegistryForType(arg);\n\n      if (typedRegistry || reg.isForType(arg) || reg === me.plugins && arg.id) {\n        me._exec(method, reg, arg);\n      } else {\n        each(arg, item => {\n          const itemReg = typedRegistry || me._getRegistryForType(item);\n\n          me._exec(method, itemReg, item);\n        });\n      }\n    });\n  }\n\n  _exec(method, registry, component) {\n    const camelMethod = _capitalize(method);\n\n    callback(component['before' + camelMethod], [], component);\n    registry[method](component);\n    callback(component['after' + camelMethod], [], component);\n  }\n\n  _getRegistryForType(type) {\n    for (let i = 0; i < this._typedRegistries.length; i++) {\n      const reg = this._typedRegistries[i];\n\n      if (reg.isForType(type)) {\n        return reg;\n      }\n    }\n\n    return this.plugins;\n  }\n\n  _get(id, typedRegistry, type) {\n    const item = typedRegistry.get(id);\n\n    if (item === undefined) {\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n    }\n\n    return item;\n  }\n\n}\n\nvar registry = new Registry();\n\nclass PluginService {\n  constructor() {\n    this._init = [];\n  }\n\n  notify(chart, hook, args, filter) {\n    const me = this;\n\n    if (hook === 'beforeInit') {\n      me._init = me._createDescriptors(chart, true);\n\n      me._notify(me._init, chart, 'install');\n    }\n\n    const descriptors = filter ? me._descriptors(chart).filter(filter) : me._descriptors(chart);\n\n    const result = me._notify(descriptors, chart, hook, args);\n\n    if (hook === 'destroy') {\n      me._notify(descriptors, chart, 'stop');\n\n      me._notify(me._init, chart, 'uninstall');\n    }\n\n    return result;\n  }\n\n  _notify(descriptors, chart, hook, args) {\n    args = args || {};\n\n    for (const descriptor of descriptors) {\n      const plugin = descriptor.plugin;\n      const method = plugin[hook];\n      const params = [chart, args, descriptor.options];\n\n      if (callback(method, params, plugin) === false && args.cancelable) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  invalidate() {\n    if (!isNullOrUndef(this._cache)) {\n      this._oldCache = this._cache;\n      this._cache = undefined;\n    }\n  }\n\n  _descriptors(chart) {\n    if (this._cache) {\n      return this._cache;\n    }\n\n    const descriptors = this._cache = this._createDescriptors(chart);\n\n    this._notifyStateChanges(chart);\n\n    return descriptors;\n  }\n\n  _createDescriptors(chart, all) {\n    const config = chart && chart.config;\n    const options = valueOrDefault(config.options && config.options.plugins, {});\n    const plugins = allPlugins(config);\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n  }\n\n  _notifyStateChanges(chart) {\n    const previousDescriptors = this._oldCache || [];\n    const descriptors = this._cache;\n\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n  }\n\n}\n\nfunction allPlugins(config) {\n  const plugins = [];\n  const keys = Object.keys(registry.plugins.items);\n\n  for (let i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n\n  const local = config.plugins || [];\n\n  for (let i = 0; i < local.length; i++) {\n    const plugin = local[i];\n\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n    }\n  }\n\n  return plugins;\n}\n\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n\n  if (options === true) {\n    return {};\n  }\n\n  return options;\n}\n\nfunction createDescriptors(chart, plugins, options, all) {\n  const result = [];\n  const context = chart.getContext();\n\n  for (let i = 0; i < plugins.length; i++) {\n    const plugin = plugins[i];\n    const id = plugin.id;\n    const opts = getOpts(options[id], all);\n\n    if (opts === null) {\n      continue;\n    }\n\n    result.push({\n      plugin,\n      options: pluginOpts(chart.config, plugin, opts, context)\n    });\n  }\n\n  return result;\n}\n\nfunction pluginOpts(config, plugin, opts, context) {\n  const keys = config.pluginScopeKeys(plugin);\n  const scopes = config.getOptionScopes(opts, keys);\n  return config.createResolver(scopes, context, [''], {\n    scriptable: false,\n    indexable: false,\n    allKeys: true\n  });\n}\n\nfunction getIndexAxis(type, options) {\n  const datasetDefaults = defaults.datasets[type] || {};\n  const datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\n\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  let axis = id;\n\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n\n  return axis;\n}\n\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\n\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\n\nfunction determineAxis(id, scaleOptions) {\n  if (id === 'x' || id === 'y') {\n    return id;\n  }\n\n  return scaleOptions.axis || axisFromPosition(scaleOptions.position) || id.charAt(0).toLowerCase();\n}\n\nfunction mergeScaleConfig(config, options) {\n  const chartDefaults = overrides[config.type] || {\n    scales: {}\n  };\n  const configScales = options.scales || {};\n  const chartIndexAxis = getIndexAxis(config.type, options);\n  const firstIDs = Object.create(null);\n  const scales = Object.create(null);\n  Object.keys(configScales).forEach(id => {\n    const scaleConf = configScales[id];\n    const axis = determineAxis(id, scaleConf);\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    const defaultScaleOptions = chartDefaults.scales || {};\n    firstIDs[axis] = firstIDs[axis] || id;\n    scales[id] = mergeIf(Object.create(null), [{\n      axis\n    }, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n  config.data.datasets.forEach(dataset => {\n    const type = dataset.type || config.type;\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    const datasetDefaults = overrides[type] || {};\n    const defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      const id = dataset[axis + 'AxisID'] || firstIDs[axis] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{\n        axis\n      }, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n  Object.keys(scales).forEach(key => {\n    const scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n  return scales;\n}\n\nfunction initOptions(config) {\n  const options = config.options || (config.options = {});\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\n\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\n\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n  initOptions(config);\n  return config;\n}\n\nconst keyCache = new Map();\nconst keysCached = new Set();\n\nfunction cachedKeys(cacheKey, generate) {\n  let keys = keyCache.get(cacheKey);\n\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n\n  return keys;\n}\n\nconst addIfFound = (set, obj, key) => {\n  const opts = resolveObjectKey(obj, key);\n\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\n\nclass Config {\n  constructor(config) {\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n\n  get platform() {\n    return this._config.platform;\n  }\n\n  get type() {\n    return this._config.type;\n  }\n\n  set type(type) {\n    this._config.type = type;\n  }\n\n  get data() {\n    return this._config.data;\n  }\n\n  set data(data) {\n    this._config.data = initData(data);\n  }\n\n  get options() {\n    return this._config.options;\n  }\n\n  set options(options) {\n    this._config.options = options;\n  }\n\n  get plugins() {\n    return this._config.plugins;\n  }\n\n  update() {\n    const config = this._config;\n    this.clearCache();\n    initOptions(config);\n  }\n\n  clearCache() {\n    this._scopeCache.clear();\n\n    this._resolverCache.clear();\n  }\n\n  datasetScopeKeys(datasetType) {\n    return cachedKeys(datasetType, () => [[`datasets.${datasetType}`, '']]);\n  }\n\n  datasetAnimationScopeKeys(datasetType, transition) {\n    return cachedKeys(`${datasetType}.transition.${transition}`, () => [[`datasets.${datasetType}.transitions.${transition}`, `transitions.${transition}`], [`datasets.${datasetType}`, '']]);\n  }\n\n  datasetElementScopeKeys(datasetType, elementType) {\n    return cachedKeys(`${datasetType}-${elementType}`, () => [[`datasets.${datasetType}.elements.${elementType}`, `datasets.${datasetType}`, `elements.${elementType}`, '']]);\n  }\n\n  pluginScopeKeys(plugin) {\n    const id = plugin.id;\n    const type = this.type;\n    return cachedKeys(`${type}-plugin-${id}`, () => [[`plugins.${id}`, ...(plugin.additionalOptionScopes || [])]]);\n  }\n\n  _cachedScopes(mainScope, resetCache) {\n    const _scopeCache = this._scopeCache;\n\n    let cache = _scopeCache.get(mainScope);\n\n    if (!cache || resetCache) {\n      cache = new Map();\n\n      _scopeCache.set(mainScope, cache);\n    }\n\n    return cache;\n  }\n\n  getOptionScopes(mainScope, keyLists, resetCache) {\n    const {\n      options,\n      type\n    } = this;\n\n    const cache = this._cachedScopes(mainScope, resetCache);\n\n    const cached = cache.get(keyLists);\n\n    if (cached) {\n      return cached;\n    }\n\n    const scopes = new Set();\n    keyLists.forEach(keys => {\n      if (mainScope) {\n        scopes.add(mainScope);\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\n      }\n\n      keys.forEach(key => addIfFound(scopes, options, key));\n      keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\n      keys.forEach(key => addIfFound(scopes, defaults, key));\n      keys.forEach(key => addIfFound(scopes, descriptors, key));\n    });\n    const array = Array.from(scopes);\n\n    if (array.length === 0) {\n      array.push(Object.create(null));\n    }\n\n    if (keysCached.has(keyLists)) {\n      cache.set(keyLists, array);\n    }\n\n    return array;\n  }\n\n  chartOptionScopes() {\n    const {\n      options,\n      type\n    } = this;\n    return [options, overrides[type] || {}, defaults.datasets[type] || {}, {\n      type\n    }, defaults, descriptors];\n  }\n\n  resolveNamedOptions(scopes, names, context, prefixes = ['']) {\n    const result = {\n      $shared: true\n    };\n    const {\n      resolver,\n      subPrefixes\n    } = getResolver(this._resolverCache, scopes, prefixes);\n    let options = resolver;\n\n    if (needContext(resolver, names)) {\n      result.$shared = false;\n      context = isFunction(context) ? context() : context;\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\n      options = _attachContext(resolver, context, subResolver);\n    }\n\n    for (const prop of names) {\n      result[prop] = options[prop];\n    }\n\n    return result;\n  }\n\n  createResolver(scopes, context, prefixes = [''], descriptorDefaults) {\n    const {\n      resolver\n    } = getResolver(this._resolverCache, scopes, prefixes);\n    return isObject(context) ? _attachContext(resolver, context, undefined, descriptorDefaults) : resolver;\n  }\n\n}\n\nfunction getResolver(resolverCache, scopes, prefixes) {\n  let cache = resolverCache.get(scopes);\n\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n\n  const cacheKey = prefixes.join();\n  let cached = cache.get(cacheKey);\n\n  if (!cached) {\n    const resolver = _createResolver(scopes, prefixes);\n\n    cached = {\n      resolver,\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n    };\n    cache.set(cacheKey, cached);\n  }\n\n  return cached;\n}\n\nfunction needContext(proxy, names) {\n  const {\n    isScriptable,\n    isIndexable\n  } = _descriptors(proxy);\n\n  for (const prop of names) {\n    if (isScriptable(prop) && isFunction(proxy[prop]) || isIndexable(prop) && isArray(proxy[prop])) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nvar version = \"3.5.0\";\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\n\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x';\n}\n\nfunction compare2Level(l1, l2) {\n  return function (a, b) {\n    return a[l1] === b[l1] ? a[l2] - b[l2] : a[l1] - b[l1];\n  };\n}\n\nfunction onAnimationsComplete(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  chart.notifyPlugins('afterRender');\n  callback(animationOptions && animationOptions.onComplete, [context], chart);\n}\n\nfunction onAnimationProgress(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  callback(animationOptions && animationOptions.onProgress, [context], chart);\n}\n\nfunction getCanvas(item) {\n  if (_isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    item = item[0];\n  }\n\n  if (item && item.canvas) {\n    item = item.canvas;\n  }\n\n  return item;\n}\n\nconst instances = {};\n\nconst getChart = key => {\n  const canvas = getCanvas(key);\n  return Object.values(instances).filter(c => c.canvas === canvas).pop();\n};\n\nclass Chart {\n  constructor(item, userConfig) {\n    const me = this;\n    const config = this.config = new Config(userConfig);\n    const initialCanvas = getCanvas(item);\n    const existingChart = getChart(initialCanvas);\n\n    if (existingChart) {\n      throw new Error('Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' + ' must be destroyed before the canvas can be reused.');\n    }\n\n    const options = config.createResolver(config.chartOptionScopes(), me.getContext());\n    this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n    const context = me.platform.acquireContext(initialCanvas, options.aspectRatio);\n    const canvas = context && context.canvas;\n    const height = canvas && canvas.height;\n    const width = canvas && canvas.width;\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    this._responsiveListeners = undefined;\n    this._sortedMetasets = [];\n    this.scales = {};\n    this.scale = undefined;\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(() => this.update('resize'), options.resizeDelay || 0);\n    instances[me.id] = me;\n\n    if (!context || !canvas) {\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n\n    animator.listen(me, 'complete', onAnimationsComplete);\n    animator.listen(me, 'progress', onAnimationProgress);\n\n    me._initialize();\n\n    if (me.attached) {\n      me.update();\n    }\n  }\n\n  get aspectRatio() {\n    const {\n      options: {\n        aspectRatio,\n        maintainAspectRatio\n      },\n      width,\n      height,\n      _aspectRatio\n    } = this;\n\n    if (!isNullOrUndef(aspectRatio)) {\n      return aspectRatio;\n    }\n\n    if (maintainAspectRatio && _aspectRatio) {\n      return _aspectRatio;\n    }\n\n    return height ? width / height : null;\n  }\n\n  get data() {\n    return this.config.data;\n  }\n\n  set data(data) {\n    this.config.data = data;\n  }\n\n  get options() {\n    return this._options;\n  }\n\n  set options(options) {\n    this.config.options = options;\n  }\n\n  _initialize() {\n    const me = this;\n    me.notifyPlugins('beforeInit');\n\n    if (me.options.responsive) {\n      me.resize();\n    } else {\n      retinaScale(me, me.options.devicePixelRatio);\n    }\n\n    me.bindEvents();\n    me.notifyPlugins('afterInit');\n    return me;\n  }\n\n  clear() {\n    clearCanvas(this.canvas, this.ctx);\n    return this;\n  }\n\n  stop() {\n    animator.stop(this);\n    return this;\n  }\n\n  resize(width, height) {\n    if (!animator.running(this)) {\n      this._resize(width, height);\n    } else {\n      this._resizeBeforeDraw = {\n        width,\n        height\n      };\n    }\n  }\n\n  _resize(width, height) {\n    const me = this;\n    const options = me.options;\n    const canvas = me.canvas;\n    const aspectRatio = options.maintainAspectRatio && me.aspectRatio;\n    const newSize = me.platform.getMaximumSize(canvas, width, height, aspectRatio);\n    const newRatio = options.devicePixelRatio || me.platform.getDevicePixelRatio();\n    me.width = newSize.width;\n    me.height = newSize.height;\n    me._aspectRatio = me.aspectRatio;\n\n    if (!retinaScale(me, newRatio, true)) {\n      return;\n    }\n\n    me.notifyPlugins('resize', {\n      size: newSize\n    });\n    callback(options.onResize, [me, newSize], me);\n\n    if (me.attached) {\n      if (me._doResize()) {\n        me.render();\n      }\n    }\n  }\n\n  ensureScalesHaveIDs() {\n    const options = this.options;\n    const scalesOptions = options.scales || {};\n    each(scalesOptions, (axisOptions, axisID) => {\n      axisOptions.id = axisID;\n    });\n  }\n\n  buildOrUpdateScales() {\n    const me = this;\n    const options = me.options;\n    const scaleOpts = options.scales;\n    const scales = me.scales;\n    const updated = Object.keys(scales).reduce((obj, id) => {\n      obj[id] = false;\n      return obj;\n    }, {});\n    let items = [];\n\n    if (scaleOpts) {\n      items = items.concat(Object.keys(scaleOpts).map(id => {\n        const scaleOptions = scaleOpts[id];\n        const axis = determineAxis(id, scaleOptions);\n        const isRadial = axis === 'r';\n        const isHorizontal = axis === 'x';\n        return {\n          options: scaleOptions,\n          dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n          dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n        };\n      }));\n    }\n\n    each(items, item => {\n      const scaleOptions = item.options;\n      const id = scaleOptions.id;\n      const axis = determineAxis(id, scaleOptions);\n      const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n        scaleOptions.position = item.dposition;\n      }\n\n      updated[id] = true;\n      let scale = null;\n\n      if (id in scales && scales[id].type === scaleType) {\n        scale = scales[id];\n      } else {\n        const scaleClass = registry.getScale(scaleType);\n        scale = new scaleClass({\n          id,\n          type: scaleType,\n          ctx: me.ctx,\n          chart: me\n        });\n        scales[scale.id] = scale;\n      }\n\n      scale.init(scaleOptions, options);\n    });\n    each(updated, (hasUpdated, id) => {\n      if (!hasUpdated) {\n        delete scales[id];\n      }\n    });\n    each(scales, scale => {\n      layouts.configure(me, scale, scale.options);\n      layouts.addBox(me, scale);\n    });\n  }\n\n  _updateMetasets() {\n    const me = this;\n    const metasets = me._metasets;\n    const numData = me.data.datasets.length;\n    const numMeta = metasets.length;\n    metasets.sort((a, b) => a.index - b.index);\n\n    if (numMeta > numData) {\n      for (let i = numData; i < numMeta; ++i) {\n        me._destroyDatasetMeta(i);\n      }\n\n      metasets.splice(numData, numMeta - numData);\n    }\n\n    me._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n  }\n\n  _removeUnreferencedMetasets() {\n    const me = this;\n    const {\n      _metasets: metasets,\n      data: {\n        datasets\n      }\n    } = me;\n\n    if (metasets.length > datasets.length) {\n      delete me._stacks;\n    }\n\n    metasets.forEach((meta, index) => {\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\n        me._destroyDatasetMeta(index);\n      }\n    });\n  }\n\n  buildOrUpdateControllers() {\n    const me = this;\n    const newControllers = [];\n    const datasets = me.data.datasets;\n    let i, ilen;\n\n    me._removeUnreferencedMetasets();\n\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\n      const dataset = datasets[i];\n      let meta = me.getDatasetMeta(i);\n      const type = dataset.type || me.config.type;\n\n      if (meta.type && meta.type !== type) {\n        me._destroyDatasetMeta(i);\n\n        meta = me.getDatasetMeta(i);\n      }\n\n      meta.type = type;\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, me.options);\n      meta.order = dataset.order || 0;\n      meta.index = i;\n      meta.label = '' + dataset.label;\n      meta.visible = me.isDatasetVisible(i);\n\n      if (meta.controller) {\n        meta.controller.updateIndex(i);\n        meta.controller.linkScales();\n      } else {\n        const ControllerClass = registry.getController(type);\n        const {\n          datasetElementType,\n          dataElementType\n        } = defaults.datasets[type];\n        Object.assign(ControllerClass.prototype, {\n          dataElementType: registry.getElement(dataElementType),\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n        });\n        meta.controller = new ControllerClass(me, i);\n        newControllers.push(meta.controller);\n      }\n    }\n\n    me._updateMetasets();\n\n    return newControllers;\n  }\n\n  _resetElements() {\n    const me = this;\n    each(me.data.datasets, (dataset, datasetIndex) => {\n      me.getDatasetMeta(datasetIndex).controller.reset();\n    }, me);\n  }\n\n  reset() {\n    this._resetElements();\n\n    this.notifyPlugins('reset');\n  }\n\n  update(mode) {\n    const me = this;\n    const config = me.config;\n    config.update();\n    me._options = config.createResolver(config.chartOptionScopes(), me.getContext());\n    each(me.scales, scale => {\n      layouts.removeBox(me, scale);\n    });\n    const animsDisabled = me._animationsDisabled = !me.options.animation;\n    me.ensureScalesHaveIDs();\n    me.buildOrUpdateScales();\n    const existingEvents = new Set(Object.keys(me._listeners));\n    const newEvents = new Set(me.options.events);\n\n    if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== me.options.responsive) {\n      me.unbindEvents();\n      me.bindEvents();\n    }\n\n    me._plugins.invalidate();\n\n    if (me.notifyPlugins('beforeUpdate', {\n      mode,\n      cancelable: true\n    }) === false) {\n      return;\n    }\n\n    const newControllers = me.buildOrUpdateControllers();\n    me.notifyPlugins('beforeElementsUpdate');\n    let minPadding = 0;\n\n    for (let i = 0, ilen = me.data.datasets.length; i < ilen; i++) {\n      const {\n        controller\n      } = me.getDatasetMeta(i);\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n      controller.buildOrUpdateElements(reset);\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n    }\n\n    me._minPadding = minPadding;\n\n    me._updateLayout(minPadding);\n\n    if (!animsDisabled) {\n      each(newControllers, controller => {\n        controller.reset();\n      });\n    }\n\n    me._updateDatasets(mode);\n\n    me.notifyPlugins('afterUpdate', {\n      mode\n    });\n\n    me._layers.sort(compare2Level('z', '_idx'));\n\n    if (me._lastEvent) {\n      me._eventHandler(me._lastEvent, true);\n    }\n\n    me.render();\n  }\n\n  _updateLayout(minPadding) {\n    const me = this;\n\n    if (me.notifyPlugins('beforeLayout', {\n      cancelable: true\n    }) === false) {\n      return;\n    }\n\n    layouts.update(me, me.width, me.height, minPadding);\n    const area = me.chartArea;\n    const noArea = area.width <= 0 || area.height <= 0;\n    me._layers = [];\n    each(me.boxes, box => {\n      if (noArea && box.position === 'chartArea') {\n        return;\n      }\n\n      if (box.configure) {\n        box.configure();\n      }\n\n      me._layers.push(...box._layers());\n    }, me);\n\n    me._layers.forEach((item, index) => {\n      item._idx = index;\n    });\n\n    me.notifyPlugins('afterLayout');\n  }\n\n  _updateDatasets(mode) {\n    const me = this;\n    const isFunction = typeof mode === 'function';\n\n    if (me.notifyPlugins('beforeDatasetsUpdate', {\n      mode,\n      cancelable: true\n    }) === false) {\n      return;\n    }\n\n    for (let i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n      me._updateDataset(i, isFunction ? mode({\n        datasetIndex: i\n      }) : mode);\n    }\n\n    me.notifyPlugins('afterDatasetsUpdate', {\n      mode\n    });\n  }\n\n  _updateDataset(index, mode) {\n    const me = this;\n    const meta = me.getDatasetMeta(index);\n    const args = {\n      meta,\n      index,\n      mode,\n      cancelable: true\n    };\n\n    if (me.notifyPlugins('beforeDatasetUpdate', args) === false) {\n      return;\n    }\n\n    meta.controller._update(mode);\n\n    args.cancelable = false;\n    me.notifyPlugins('afterDatasetUpdate', args);\n  }\n\n  render() {\n    const me = this;\n\n    if (me.notifyPlugins('beforeRender', {\n      cancelable: true\n    }) === false) {\n      return;\n    }\n\n    if (animator.has(me)) {\n      if (me.attached && !animator.running(me)) {\n        animator.start(me);\n      }\n    } else {\n      me.draw();\n      onAnimationsComplete({\n        chart: me\n      });\n    }\n  }\n\n  draw() {\n    const me = this;\n    let i;\n\n    if (me._resizeBeforeDraw) {\n      const {\n        width,\n        height\n      } = me._resizeBeforeDraw;\n\n      me._resize(width, height);\n\n      me._resizeBeforeDraw = null;\n    }\n\n    me.clear();\n\n    if (me.width <= 0 || me.height <= 0) {\n      return;\n    }\n\n    if (me.notifyPlugins('beforeDraw', {\n      cancelable: true\n    }) === false) {\n      return;\n    }\n\n    const layers = me._layers;\n\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n      layers[i].draw(me.chartArea);\n    }\n\n    me._drawDatasets();\n\n    for (; i < layers.length; ++i) {\n      layers[i].draw(me.chartArea);\n    }\n\n    me.notifyPlugins('afterDraw');\n  }\n\n  _getSortedDatasetMetas(filterVisible) {\n    const me = this;\n    const metasets = me._sortedMetasets;\n    const result = [];\n    let i, ilen;\n\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const meta = metasets[i];\n\n      if (!filterVisible || meta.visible) {\n        result.push(meta);\n      }\n    }\n\n    return result;\n  }\n\n  getSortedVisibleDatasetMetas() {\n    return this._getSortedDatasetMetas(true);\n  }\n\n  _drawDatasets() {\n    const me = this;\n\n    if (me.notifyPlugins('beforeDatasetsDraw', {\n      cancelable: true\n    }) === false) {\n      return;\n    }\n\n    const metasets = me.getSortedVisibleDatasetMetas();\n\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      me._drawDataset(metasets[i]);\n    }\n\n    me.notifyPlugins('afterDatasetsDraw');\n  }\n\n  _drawDataset(meta) {\n    const me = this;\n    const ctx = me.ctx;\n    const clip = meta._clip;\n    const useClip = !clip.disabled;\n    const area = me.chartArea;\n    const args = {\n      meta,\n      index: meta.index,\n      cancelable: true\n    };\n\n    if (me.notifyPlugins('beforeDatasetDraw', args) === false) {\n      return;\n    }\n\n    if (useClip) {\n      clipArea(ctx, {\n        left: clip.left === false ? 0 : area.left - clip.left,\n        right: clip.right === false ? me.width : area.right + clip.right,\n        top: clip.top === false ? 0 : area.top - clip.top,\n        bottom: clip.bottom === false ? me.height : area.bottom + clip.bottom\n      });\n    }\n\n    meta.controller.draw();\n\n    if (useClip) {\n      unclipArea(ctx);\n    }\n\n    args.cancelable = false;\n    me.notifyPlugins('afterDatasetDraw', args);\n  }\n\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n    const method = Interaction.modes[mode];\n\n    if (typeof method === 'function') {\n      return method(this, e, options, useFinalPosition);\n    }\n\n    return [];\n  }\n\n  getDatasetMeta(datasetIndex) {\n    const me = this;\n    const dataset = me.data.datasets[datasetIndex];\n    const metasets = me._metasets;\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n\n    if (!meta) {\n      meta = {\n        type: null,\n        data: [],\n        dataset: null,\n        controller: null,\n        hidden: null,\n        xAxisID: null,\n        yAxisID: null,\n        order: dataset && dataset.order || 0,\n        index: datasetIndex,\n        _dataset: dataset,\n        _parsed: [],\n        _sorted: false\n      };\n      metasets.push(meta);\n    }\n\n    return meta;\n  }\n\n  getContext() {\n    return this.$context || (this.$context = {\n      chart: this,\n      type: 'chart'\n    });\n  }\n\n  getVisibleDatasetCount() {\n    return this.getSortedVisibleDatasetMetas().length;\n  }\n\n  isDatasetVisible(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n\n    if (!dataset) {\n      return false;\n    }\n\n    const meta = this.getDatasetMeta(datasetIndex);\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n  }\n\n  setDatasetVisibility(datasetIndex, visible) {\n    const meta = this.getDatasetMeta(datasetIndex);\n    meta.hidden = !visible;\n  }\n\n  toggleDataVisibility(index) {\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\n  }\n\n  getDataVisibility(index) {\n    return !this._hiddenIndices[index];\n  }\n\n  _updateVisibility(datasetIndex, dataIndex, visible) {\n    const me = this;\n    const mode = visible ? 'show' : 'hide';\n    const meta = me.getDatasetMeta(datasetIndex);\n\n    const anims = meta.controller._resolveAnimations(undefined, mode);\n\n    if (defined(dataIndex)) {\n      meta.data[dataIndex].hidden = !visible;\n      me.update();\n    } else {\n      me.setDatasetVisibility(datasetIndex, visible);\n      anims.update(meta, {\n        visible\n      });\n      me.update(ctx => ctx.datasetIndex === datasetIndex ? mode : undefined);\n    }\n  }\n\n  hide(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, false);\n  }\n\n  show(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, true);\n  }\n\n  _destroyDatasetMeta(datasetIndex) {\n    const me = this;\n    const meta = me._metasets && me._metasets[datasetIndex];\n\n    if (meta && meta.controller) {\n      meta.controller._destroy();\n\n      delete me._metasets[datasetIndex];\n    }\n  }\n\n  destroy() {\n    const me = this;\n    const {\n      canvas,\n      ctx\n    } = me;\n    let i, ilen;\n    me.stop();\n    animator.remove(me);\n\n    for (i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n      me._destroyDatasetMeta(i);\n    }\n\n    me.config.clearCache();\n\n    if (canvas) {\n      me.unbindEvents();\n      clearCanvas(canvas, ctx);\n      me.platform.releaseContext(ctx);\n      me.canvas = null;\n      me.ctx = null;\n    }\n\n    me.notifyPlugins('destroy');\n    delete instances[me.id];\n  }\n\n  toBase64Image(...args) {\n    return this.canvas.toDataURL(...args);\n  }\n\n  bindEvents() {\n    this.bindUserEvents();\n\n    if (this.options.responsive) {\n      this.bindResponsiveEvents();\n    } else {\n      this.attached = true;\n    }\n  }\n\n  bindUserEvents() {\n    const me = this;\n    const listeners = me._listeners;\n    const platform = me.platform;\n\n    const _add = (type, listener) => {\n      platform.addEventListener(me, type, listener);\n      listeners[type] = listener;\n    };\n\n    const listener = function (e, x, y) {\n      e.offsetX = x;\n      e.offsetY = y;\n\n      me._eventHandler(e);\n    };\n\n    each(me.options.events, type => _add(type, listener));\n  }\n\n  bindResponsiveEvents() {\n    const me = this;\n\n    if (!me._responsiveListeners) {\n      me._responsiveListeners = {};\n    }\n\n    const listeners = me._responsiveListeners;\n    const platform = me.platform;\n\n    const _add = (type, listener) => {\n      platform.addEventListener(me, type, listener);\n      listeners[type] = listener;\n    };\n\n    const _remove = (type, listener) => {\n      if (listeners[type]) {\n        platform.removeEventListener(me, type, listener);\n        delete listeners[type];\n      }\n    };\n\n    const listener = (width, height) => {\n      if (me.canvas) {\n        me.resize(width, height);\n      }\n    };\n\n    let detached;\n\n    const attached = () => {\n      _remove('attach', attached);\n\n      me.attached = true;\n      me.resize();\n\n      _add('resize', listener);\n\n      _add('detach', detached);\n    };\n\n    detached = () => {\n      me.attached = false;\n\n      _remove('resize', listener);\n\n      _add('attach', attached);\n    };\n\n    if (platform.isAttached(me.canvas)) {\n      attached();\n    } else {\n      detached();\n    }\n  }\n\n  unbindEvents() {\n    const me = this;\n    each(me._listeners, (listener, type) => {\n      me.platform.removeEventListener(me, type, listener);\n    });\n    me._listeners = {};\n    each(me._responsiveListeners, (listener, type) => {\n      me.platform.removeEventListener(me, type, listener);\n    });\n    me._responsiveListeners = undefined;\n  }\n\n  updateHoverStyle(items, mode, enabled) {\n    const prefix = enabled ? 'set' : 'remove';\n    let meta, item, i, ilen;\n\n    if (mode === 'dataset') {\n      meta = this.getDatasetMeta(items[0].datasetIndex);\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\n    }\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n\n      if (controller) {\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n      }\n    }\n  }\n\n  getActiveElements() {\n    return this._active || [];\n  }\n\n  setActiveElements(activeElements) {\n    const me = this;\n    const lastActive = me._active || [];\n    const active = activeElements.map(({\n      datasetIndex,\n      index\n    }) => {\n      const meta = me.getDatasetMeta(datasetIndex);\n\n      if (!meta) {\n        throw new Error('No dataset found at index ' + datasetIndex);\n      }\n\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index\n      };\n    });\n    const changed = !_elementsEqual(active, lastActive);\n\n    if (changed) {\n      me._active = active;\n\n      me._updateHoverStyles(active, lastActive);\n    }\n  }\n\n  notifyPlugins(hook, args, filter) {\n    return this._plugins.notify(this, hook, args, filter);\n  }\n\n  _updateHoverStyles(active, lastActive, replay) {\n    const me = this;\n    const hoverOptions = me.options.hover;\n\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n\n    const deactivated = diff(lastActive, active);\n    const activated = replay ? active : diff(active, lastActive);\n\n    if (deactivated.length) {\n      me.updateHoverStyle(deactivated, hoverOptions.mode, false);\n    }\n\n    if (activated.length && hoverOptions.mode) {\n      me.updateHoverStyle(activated, hoverOptions.mode, true);\n    }\n  }\n\n  _eventHandler(e, replay) {\n    const me = this;\n    const args = {\n      event: e,\n      replay,\n      cancelable: true\n    };\n\n    const eventFilter = plugin => (plugin.options.events || this.options.events).includes(e.type);\n\n    if (me.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n      return;\n    }\n\n    const changed = me._handleEvent(e, replay);\n\n    args.cancelable = false;\n    me.notifyPlugins('afterEvent', args, eventFilter);\n\n    if (changed || args.changed) {\n      me.render();\n    }\n\n    return me;\n  }\n\n  _handleEvent(e, replay) {\n    const me = this;\n    const {\n      _active: lastActive = [],\n      options\n    } = me;\n    const hoverOptions = options.hover;\n    const useFinalPosition = replay;\n    let active = [];\n    let changed = false;\n    let lastEvent = null;\n\n    if (e.type !== 'mouseout') {\n      active = me.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n      lastEvent = e.type === 'click' ? me._lastEvent : e;\n    }\n\n    me._lastEvent = null;\n\n    if (_isPointInArea(e, me.chartArea, me._minPadding)) {\n      callback(options.onHover, [e, active, me], me);\n\n      if (e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu') {\n        callback(options.onClick, [e, active, me], me);\n      }\n    }\n\n    changed = !_elementsEqual(active, lastActive);\n\n    if (changed || replay) {\n      me._active = active;\n\n      me._updateHoverStyles(active, lastActive, replay);\n    }\n\n    me._lastEvent = lastEvent;\n    return changed;\n  }\n\n}\n\nconst invalidatePlugins = () => each(Chart.instances, chart => chart._plugins.invalidate());\n\nconst enumerable = true;\nObject.defineProperties(Chart, {\n  defaults: {\n    enumerable,\n    value: defaults\n  },\n  instances: {\n    enumerable,\n    value: instances\n  },\n  overrides: {\n    enumerable,\n    value: overrides\n  },\n  registry: {\n    enumerable,\n    value: registry\n  },\n  version: {\n    enumerable,\n    value: version\n  },\n  getChart: {\n    enumerable,\n    value: getChart\n  },\n  register: {\n    enumerable,\n    value: (...items) => {\n      registry.add(...items);\n      invalidatePlugins();\n    }\n  },\n  unregister: {\n    enumerable,\n    value: (...items) => {\n      registry.remove(...items);\n      invalidatePlugins();\n    }\n  }\n});\n\nfunction clipArc(ctx, element, endAngle) {\n  const {\n    startAngle,\n    pixelMargin,\n    x,\n    y,\n    outerRadius,\n    innerRadius\n  } = element;\n  let angleMargin = pixelMargin / outerRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n\n  ctx.closePath();\n  ctx.clip();\n}\n\nfunction toRadiusCorners(value) {\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\n\nfunction parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n  const o = toRadiusCorners(arc.options.borderRadius);\n  const halfThickness = (outerRadius - innerRadius) / 2;\n  const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n\n  const computeOuterLimit = val => {\n    const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit)\n  };\n}\n\nfunction rThetaToXY(r, theta, x, y) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta)\n  };\n}\n\nfunction pathArc(ctx, element, offset, spacing, end) {\n  const {\n    x,\n    y,\n    startAngle: start,\n    pixelMargin,\n    innerRadius: innerR\n  } = element;\n  const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n  const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n  let spacingOffset = 0;\n  const alpha = end - start;\n\n  if (spacing) {\n    const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n    const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n    const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n    const adjustedAngle = avNogSpacingRadius !== 0 ? alpha * avNogSpacingRadius / (avNogSpacingRadius + spacing) : alpha;\n    spacingOffset = (alpha - adjustedAngle) / 2;\n  }\n\n  const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n  const angleOffset = (alpha - beta) / 2;\n  const startAngle = start + angleOffset + spacingOffset;\n  const endAngle = end - angleOffset - spacingOffset;\n  const {\n    outerStart,\n    outerEnd,\n    innerStart,\n    innerEnd\n  } = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n  const outerStartAdjustedRadius = outerRadius - outerStart;\n  const outerEndAdjustedRadius = outerRadius - outerEnd;\n  const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n  const innerStartAdjustedRadius = innerRadius + innerStart;\n  const innerEndAdjustedRadius = innerRadius + innerEnd;\n  const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerEndAdjustedAngle);\n\n  if (outerEnd > 0) {\n    const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n  }\n\n  const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n  ctx.lineTo(p4.x, p4.y);\n\n  if (innerEnd > 0) {\n    const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n  }\n\n  ctx.arc(x, y, innerRadius, endAngle - innerEnd / innerRadius, startAngle + innerStart / innerRadius, true);\n\n  if (innerStart > 0) {\n    const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n  }\n\n  const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n  ctx.lineTo(p8.x, p8.y);\n\n  if (outerStart > 0) {\n    const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n  }\n\n  ctx.closePath();\n}\n\nfunction drawArc(ctx, element, offset, spacing) {\n  const {\n    fullCircles,\n    startAngle,\n    circumference\n  } = element;\n  let endAngle = element.endAngle;\n\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, startAngle + TAU);\n\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.fill();\n    }\n\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + circumference % TAU;\n\n      if (circumference % TAU === 0) {\n        endAngle += TAU;\n      }\n    }\n  }\n\n  pathArc(ctx, element, offset, spacing, endAngle);\n  ctx.fill();\n  return endAngle;\n}\n\nfunction drawFullCircleBorders(ctx, element, inner) {\n  const {\n    x,\n    y,\n    startAngle,\n    pixelMargin,\n    fullCircles\n  } = element;\n  const outerRadius = Math.max(element.outerRadius - pixelMargin, 0);\n  const innerRadius = element.innerRadius + pixelMargin;\n  let i;\n\n  if (inner) {\n    clipArc(ctx, element, startAngle + TAU);\n  }\n\n  ctx.beginPath();\n  ctx.arc(x, y, innerRadius, startAngle + TAU, startAngle, true);\n\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle, startAngle + TAU);\n\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n}\n\nfunction drawBorder(ctx, element, offset, spacing, endAngle) {\n  const {\n    options\n  } = element;\n  const inner = options.borderAlign === 'inner';\n\n  if (!options.borderWidth) {\n    return;\n  }\n\n  if (inner) {\n    ctx.lineWidth = options.borderWidth * 2;\n    ctx.lineJoin = 'round';\n  } else {\n    ctx.lineWidth = options.borderWidth;\n    ctx.lineJoin = 'bevel';\n  }\n\n  if (element.fullCircles) {\n    drawFullCircleBorders(ctx, element, inner);\n  }\n\n  if (inner) {\n    clipArc(ctx, element, endAngle);\n  }\n\n  pathArc(ctx, element, offset, spacing, endAngle);\n  ctx.stroke();\n}\n\nclass ArcElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.circumference = undefined;\n    this.startAngle = undefined;\n    this.endAngle = undefined;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.pixelMargin = 0;\n    this.fullCircles = 0;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  inRange(chartX, chartY, useFinalPosition) {\n    const point = this.getProps(['x', 'y'], useFinalPosition);\n    const {\n      angle,\n      distance\n    } = getAngleFromPoint(point, {\n      x: chartX,\n      y: chartY\n    });\n    const {\n      startAngle,\n      endAngle,\n      innerRadius,\n      outerRadius,\n      circumference\n    } = this.getProps(['startAngle', 'endAngle', 'innerRadius', 'outerRadius', 'circumference'], useFinalPosition);\n    const rAdjust = this.options.spacing / 2;\n\n    const betweenAngles = circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n\n    const withinRadius = distance >= innerRadius + rAdjust && distance <= outerRadius + rAdjust;\n    return betweenAngles && withinRadius;\n  }\n\n  getCenterPoint(useFinalPosition) {\n    const {\n      x,\n      y,\n      startAngle,\n      endAngle,\n      innerRadius,\n      outerRadius\n    } = this.getProps(['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius', 'circumference'], useFinalPosition);\n    const {\n      offset,\n      spacing\n    } = this.options;\n    const halfAngle = (startAngle + endAngle) / 2;\n    const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n    return {\n      x: x + Math.cos(halfAngle) * halfRadius,\n      y: y + Math.sin(halfAngle) * halfRadius\n    };\n  }\n\n  tooltipPosition(useFinalPosition) {\n    return this.getCenterPoint(useFinalPosition);\n  }\n\n  draw(ctx) {\n    const me = this;\n    const {\n      options,\n      circumference\n    } = me;\n    const offset = (options.offset || 0) / 2;\n    const spacing = (options.spacing || 0) / 2;\n    me.pixelMargin = options.borderAlign === 'inner' ? 0.33 : 0;\n    me.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n\n    if (circumference === 0 || me.innerRadius < 0 || me.outerRadius < 0) {\n      return;\n    }\n\n    ctx.save();\n    let radiusOffset = 0;\n\n    if (offset) {\n      radiusOffset = offset / 2;\n      const halfAngle = (me.startAngle + me.endAngle) / 2;\n      ctx.translate(Math.cos(halfAngle) * radiusOffset, Math.sin(halfAngle) * radiusOffset);\n\n      if (me.circumference >= PI) {\n        radiusOffset = offset;\n      }\n    }\n\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    const endAngle = drawArc(ctx, me, radiusOffset, spacing);\n    drawBorder(ctx, me, radiusOffset, spacing, endAngle);\n    ctx.restore();\n  }\n\n}\n\nArcElement.id = 'arc';\nArcElement.defaults = {\n  borderAlign: 'center',\n  borderColor: '#fff',\n  borderRadius: 0,\n  borderWidth: 2,\n  offset: 0,\n  spacing: 0,\n  angle: undefined\n};\nArcElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor'\n};\n\nfunction setStyle(ctx, options, style = options) {\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\n\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\n\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierCurveTo;\n  }\n\n  return lineTo;\n}\n\nfunction pathVars(points, segment, params = {}) {\n  const count = points.length;\n  const {\n    start: paramsStart = 0,\n    end: paramsEnd = count - 1\n  } = params;\n  const {\n    start: segmentStart,\n    end: segmentEnd\n  } = segment;\n  const start = Math.max(paramsStart, segmentStart);\n  const end = Math.min(paramsEnd, segmentEnd);\n  const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n  return {\n    count,\n    start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\n\nfunction pathSegment(ctx, line, segment, params) {\n  const {\n    points,\n    options\n  } = line;\n  const {\n    count,\n    start,\n    loop,\n    ilen\n  } = pathVars(points, segment, params);\n  const lineMethod = getLineMethod(options);\n  let {\n    move = true,\n    reverse\n  } = params || {};\n  let i, point, prev;\n\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n\n    if (point.skip) {\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n\n    prev = point;\n  }\n\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n\n  return !!loop;\n}\n\nfunction fastPathSegment(ctx, line, segment, params) {\n  const points = line.points;\n  const {\n    count,\n    start,\n    ilen\n  } = pathVars(points, segment, params);\n  const {\n    move = true,\n    reverse\n  } = params || {};\n  let avgX = 0;\n  let countX = 0;\n  let i, point, prevX, minY, maxY, lastY;\n\n  const pointIndex = index => (start + (reverse ? ilen - index : index)) % count;\n\n  const drawX = () => {\n    if (minY !== maxY) {\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n\n    if (point.skip) {\n      continue;\n    }\n\n    const x = point.x;\n    const y = point.y;\n    const truncX = x | 0;\n\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      ctx.lineTo(x, y);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n\n    lastY = y;\n  }\n\n  drawX();\n}\n\nfunction _getSegmentMethod(line) {\n  const opts = line.options;\n  const borderDash = opts.borderDash && opts.borderDash.length;\n  const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\n\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierInterpolation;\n  }\n\n  return _pointInLine;\n}\n\nfunction strokePathWithCache(ctx, line, start, count) {\n  let path = line._path;\n\n  if (!path) {\n    path = line._path = new Path2D();\n\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\n\nfunction strokePathDirect(ctx, line, start, count) {\n  const {\n    segments,\n    options\n  } = line;\n\n  const segmentMethod = _getSegmentMethod(line);\n\n  for (const segment of segments) {\n    setStyle(ctx, options, segment.style);\n    ctx.beginPath();\n\n    if (segmentMethod(ctx, line, segment, {\n      start,\n      end: start + count - 1\n    })) {\n      ctx.closePath();\n    }\n\n    ctx.stroke();\n  }\n}\n\nconst usePath2D = typeof Path2D === 'function';\n\nfunction draw(ctx, line, start, count) {\n  if (usePath2D && line.segments.length === 1) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\n\nclass LineElement extends Element {\n  constructor(cfg) {\n    super();\n    this.animated = true;\n    this.options = undefined;\n    this._loop = undefined;\n    this._fullLoop = undefined;\n    this._path = undefined;\n    this._points = undefined;\n    this._segments = undefined;\n    this._decimated = false;\n    this._pointsUpdated = false;\n    this._datasetIndex = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  updateControlPoints(chartArea, indexAxis) {\n    const me = this;\n    const options = me.options;\n\n    if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !me._pointsUpdated) {\n      const loop = options.spanGaps ? me._loop : me._fullLoop;\n\n      _updateBezierControlPoints(me._points, options, chartArea, loop, indexAxis);\n\n      me._pointsUpdated = true;\n    }\n  }\n\n  set points(points) {\n    const me = this;\n    me._points = points;\n    delete me._segments;\n    delete me._path;\n    me._pointsUpdated = false;\n  }\n\n  get points() {\n    return this._points;\n  }\n\n  get segments() {\n    return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n  }\n\n  first() {\n    const segments = this.segments;\n    const points = this.points;\n    return segments.length && points[segments[0].start];\n  }\n\n  last() {\n    const segments = this.segments;\n    const points = this.points;\n    const count = segments.length;\n    return count && points[segments[count - 1].end];\n  }\n\n  interpolate(point, property) {\n    const me = this;\n    const options = me.options;\n    const value = point[property];\n    const points = me.points;\n\n    const segments = _boundSegments(me, {\n      property,\n      start: value,\n      end: value\n    });\n\n    if (!segments.length) {\n      return;\n    }\n\n    const result = [];\n\n    const _interpolate = _getInterpolationMethod(options);\n\n    let i, ilen;\n\n    for (i = 0, ilen = segments.length; i < ilen; ++i) {\n      const {\n        start,\n        end\n      } = segments[i];\n      const p1 = points[start];\n      const p2 = points[end];\n\n      if (p1 === p2) {\n        result.push(p1);\n        continue;\n      }\n\n      const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n\n      const interpolated = _interpolate(p1, p2, t, options.stepped);\n\n      interpolated[property] = point[property];\n      result.push(interpolated);\n    }\n\n    return result.length === 1 ? result[0] : result;\n  }\n\n  pathSegment(ctx, segment, params) {\n    const segmentMethod = _getSegmentMethod(this);\n\n    return segmentMethod(ctx, this, segment, params);\n  }\n\n  path(ctx, start, count) {\n    const me = this;\n    const segments = me.segments;\n\n    const segmentMethod = _getSegmentMethod(me);\n\n    let loop = me._loop;\n    start = start || 0;\n    count = count || me.points.length - start;\n\n    for (const segment of segments) {\n      loop &= segmentMethod(ctx, me, segment, {\n        start,\n        end: start + count - 1\n      });\n    }\n\n    return !!loop;\n  }\n\n  draw(ctx, chartArea, start, count) {\n    const me = this;\n    const options = me.options || {};\n    const points = me.points || [];\n\n    if (!points.length || !options.borderWidth) {\n      return;\n    }\n\n    ctx.save();\n    draw(ctx, me, start, count);\n    ctx.restore();\n\n    if (me.animated) {\n      me._pointsUpdated = false;\n      me._path = undefined;\n    }\n  }\n\n}\n\nLineElement.id = 'line';\nLineElement.defaults = {\n  borderCapStyle: 'butt',\n  borderDash: [],\n  borderDashOffset: 0,\n  borderJoinStyle: 'miter',\n  borderWidth: 3,\n  capBezierPoints: true,\n  cubicInterpolationMode: 'default',\n  fill: false,\n  spanGaps: false,\n  stepped: false,\n  tension: 0\n};\nLineElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\nLineElement.descriptors = {\n  _scriptable: true,\n  _indexable: name => name !== 'borderDash' && name !== 'fill'\n};\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n  const options = el.options;\n  const {\n    [axis]: value\n  } = el.getProps([axis], useFinalPosition);\n  return Math.abs(pos - value) < options.radius + options.hitRadius;\n}\n\nclass PointElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.parsed = undefined;\n    this.skip = undefined;\n    this.stop = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  inRange(mouseX, mouseY, useFinalPosition) {\n    const options = this.options;\n    const {\n      x,\n      y\n    } = this.getProps(['x', 'y'], useFinalPosition);\n    return Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2) < Math.pow(options.hitRadius + options.radius, 2);\n  }\n\n  inXRange(mouseX, useFinalPosition) {\n    return inRange$1(this, mouseX, 'x', useFinalPosition);\n  }\n\n  inYRange(mouseY, useFinalPosition) {\n    return inRange$1(this, mouseY, 'y', useFinalPosition);\n  }\n\n  getCenterPoint(useFinalPosition) {\n    const {\n      x,\n      y\n    } = this.getProps(['x', 'y'], useFinalPosition);\n    return {\n      x,\n      y\n    };\n  }\n\n  size(options) {\n    options = options || this.options || {};\n    let radius = options.radius || 0;\n    radius = Math.max(radius, radius && options.hoverRadius || 0);\n    const borderWidth = radius && options.borderWidth || 0;\n    return (radius + borderWidth) * 2;\n  }\n\n  draw(ctx, area) {\n    const me = this;\n    const options = me.options;\n\n    if (me.skip || options.radius < 0.1 || !_isPointInArea(me, area, me.size(options) / 2)) {\n      return;\n    }\n\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.fillStyle = options.backgroundColor;\n    drawPoint(ctx, options, me.x, me.y);\n  }\n\n  getRange() {\n    const options = this.options || {};\n    return options.radius + options.hitRadius;\n  }\n\n}\n\nPointElement.id = 'point';\nPointElement.defaults = {\n  borderWidth: 1,\n  hitRadius: 1,\n  hoverBorderWidth: 1,\n  hoverRadius: 4,\n  pointStyle: 'circle',\n  radius: 3,\n  rotation: 0\n};\nPointElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\n\nfunction getBarBounds(bar, useFinalPosition) {\n  const {\n    x,\n    y,\n    base,\n    width,\n    height\n  } = bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition);\n  let left, right, top, bottom, half;\n\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n\n  return {\n    left,\n    top,\n    right,\n    bottom\n  };\n}\n\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : _limitValue(value, min, max);\n}\n\nfunction parseBorderWidth(bar, maxW, maxH) {\n  const value = bar.options.borderWidth;\n  const skip = bar.borderSkipped;\n  const o = toTRBL(value);\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\n\nfunction parseBorderRadius(bar, maxW, maxH) {\n  const {\n    enableBorderRadius\n  } = bar.getProps(['enableBorderRadius']);\n  const value = bar.options.borderRadius;\n  const o = toTRBLCorners(value);\n  const maxR = Math.min(maxW, maxH);\n  const skip = bar.borderSkipped;\n  const enableBorder = enableBorderRadius || isObject(value);\n  return {\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\n\nfunction boundingRects(bar) {\n  const bounds = getBarBounds(bar);\n  const width = bounds.right - bounds.left;\n  const height = bounds.bottom - bounds.top;\n  const border = parseBorderWidth(bar, width / 2, height / 2);\n  const radius = parseBorderRadius(bar, width / 2, height / 2);\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r))\n      }\n    }\n  };\n}\n\nfunction inRange(bar, x, y, useFinalPosition) {\n  const skipX = x === null;\n  const skipY = y === null;\n  const skipBoth = skipX && skipY;\n  const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n  return bounds && (skipX || x >= bounds.left && x <= bounds.right) && (skipY || y >= bounds.top && y <= bounds.bottom);\n}\n\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\n\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\n\nfunction inflateRect(rect, amount, refRect = {}) {\n  const x = rect.x !== refRect.x ? -amount : 0;\n  const y = rect.y !== refRect.y ? -amount : 0;\n  const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n  const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n  return {\n    x: rect.x + x,\n    y: rect.y + y,\n    w: rect.w + w,\n    h: rect.h + h,\n    radius: rect.radius\n  };\n}\n\nclass BarElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.horizontal = undefined;\n    this.base = undefined;\n    this.width = undefined;\n    this.height = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  draw(ctx) {\n    const options = this.options;\n    const {\n      inner,\n      outer\n    } = boundingRects(this);\n    const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n    const inflateAmount = 0.33;\n    ctx.save();\n\n    if (outer.w !== inner.w || outer.h !== inner.h) {\n      ctx.beginPath();\n      addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n      ctx.clip();\n      addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n      ctx.fillStyle = options.borderColor;\n      ctx.fill('evenodd');\n    }\n\n    ctx.beginPath();\n    addRectPath(ctx, inflateRect(inner, inflateAmount, outer));\n    ctx.fillStyle = options.backgroundColor;\n    ctx.fill();\n    ctx.restore();\n  }\n\n  inRange(mouseX, mouseY, useFinalPosition) {\n    return inRange(this, mouseX, mouseY, useFinalPosition);\n  }\n\n  inXRange(mouseX, useFinalPosition) {\n    return inRange(this, mouseX, null, useFinalPosition);\n  }\n\n  inYRange(mouseY, useFinalPosition) {\n    return inRange(this, null, mouseY, useFinalPosition);\n  }\n\n  getCenterPoint(useFinalPosition) {\n    const {\n      x,\n      y,\n      base,\n      horizontal\n    } = this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition);\n    return {\n      x: horizontal ? (x + base) / 2 : x,\n      y: horizontal ? y : (y + base) / 2\n    };\n  }\n\n  getRange(axis) {\n    return axis === 'x' ? this.width / 2 : this.height / 2;\n  }\n\n}\n\nBarElement.id = 'bar';\nBarElement.defaults = {\n  borderSkipped: 'start',\n  borderWidth: 0,\n  borderRadius: 0,\n  enableBorderRadius: true,\n  pointStyle: undefined\n};\nBarElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\nvar elements = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  ArcElement: ArcElement,\n  LineElement: LineElement,\n  PointElement: PointElement,\n  BarElement: BarElement\n});\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n  const samples = options.samples || availableWidth;\n\n  if (samples >= count) {\n    return data.slice(start, start + count);\n  }\n\n  const decimated = [];\n  const bucketWidth = (count - 2) / (samples - 2);\n  let sampledIndex = 0;\n  const endIndex = start + count - 1;\n  let a = start;\n  let i, maxAreaPoint, maxArea, area, nextA;\n  decimated[sampledIndex++] = data[a];\n\n  for (i = 0; i < samples - 2; i++) {\n    let avgX = 0;\n    let avgY = 0;\n    let j;\n    const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n    const avgRangeLength = avgRangeEnd - avgRangeStart;\n\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\n      avgX += data[j].x;\n      avgY += data[j].y;\n    }\n\n    avgX /= avgRangeLength;\n    avgY /= avgRangeLength;\n    const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n    const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n    const {\n      x: pointAx,\n      y: pointAy\n    } = data[a];\n    maxArea = area = -1;\n\n    for (j = rangeOffs; j < rangeTo; j++) {\n      area = 0.5 * Math.abs((pointAx - avgX) * (data[j].y - pointAy) - (pointAx - data[j].x) * (avgY - pointAy));\n\n      if (area > maxArea) {\n        maxArea = area;\n        maxAreaPoint = data[j];\n        nextA = j;\n      }\n    }\n\n    decimated[sampledIndex++] = maxAreaPoint;\n    a = nextA;\n  }\n\n  decimated[sampledIndex++] = data[endIndex];\n  return decimated;\n}\n\nfunction minMaxDecimation(data, start, count, availableWidth) {\n  let avgX = 0;\n  let countX = 0;\n  let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n  const decimated = [];\n  const endIndex = start + count - 1;\n  const xMin = data[start].x;\n  const xMax = data[endIndex].x;\n  const dx = xMax - xMin;\n\n  for (i = start; i < start + count; ++i) {\n    point = data[i];\n    x = (point.x - xMin) / dx * availableWidth;\n    y = point.y;\n    const truncX = x | 0;\n\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n        minIndex = i;\n      } else if (y > maxY) {\n        maxY = y;\n        maxIndex = i;\n      }\n\n      avgX = (countX * avgX + point.x) / ++countX;\n    } else {\n      const lastIndex = i - 1;\n\n      if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n        const intermediateIndex1 = Math.min(minIndex, maxIndex);\n        const intermediateIndex2 = Math.max(minIndex, maxIndex);\n\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n          decimated.push({ ...data[intermediateIndex1],\n            x: avgX\n          });\n        }\n\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n          decimated.push({ ...data[intermediateIndex2],\n            x: avgX\n          });\n        }\n      }\n\n      if (i > 0 && lastIndex !== startIndex) {\n        decimated.push(data[lastIndex]);\n      }\n\n      decimated.push(point);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n      minIndex = maxIndex = startIndex = i;\n    }\n  }\n\n  return decimated;\n}\n\nfunction cleanDecimatedDataset(dataset) {\n  if (dataset._decimated) {\n    const data = dataset._data;\n    delete dataset._decimated;\n    delete dataset._data;\n    Object.defineProperty(dataset, 'data', {\n      value: data\n    });\n  }\n}\n\nfunction cleanDecimatedData(chart) {\n  chart.data.datasets.forEach(dataset => {\n    cleanDecimatedDataset(dataset);\n  });\n}\n\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n  const pointCount = points.length;\n  let start = 0;\n  let count;\n  const {\n    iScale\n  } = meta;\n  const {\n    min,\n    max,\n    minDefined,\n    maxDefined\n  } = iScale.getUserBounds();\n\n  if (minDefined) {\n    start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n  }\n\n  if (maxDefined) {\n    count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n  } else {\n    count = pointCount - start;\n  }\n\n  return {\n    start,\n    count\n  };\n}\n\nvar plugin_decimation = {\n  id: 'decimation',\n  defaults: {\n    algorithm: 'min-max',\n    enabled: false\n  },\n  beforeElementsUpdate: (chart, args, options) => {\n    if (!options.enabled) {\n      cleanDecimatedData(chart);\n      return;\n    }\n\n    const availableWidth = chart.width;\n    chart.data.datasets.forEach((dataset, datasetIndex) => {\n      const {\n        _data,\n        indexAxis\n      } = dataset;\n      const meta = chart.getDatasetMeta(datasetIndex);\n      const data = _data || dataset.data;\n\n      if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\n        return;\n      }\n\n      if (meta.type !== 'line') {\n        return;\n      }\n\n      const xAxis = chart.scales[meta.xAxisID];\n\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n        return;\n      }\n\n      if (chart.options.parsing) {\n        return;\n      }\n\n      let {\n        start,\n        count\n      } = getStartAndCountOfVisiblePointsSimplified(meta, data);\n      const threshold = options.threshold || 4 * availableWidth;\n\n      if (count <= threshold) {\n        cleanDecimatedDataset(dataset);\n        return;\n      }\n\n      if (isNullOrUndef(_data)) {\n        dataset._data = data;\n        delete dataset.data;\n        Object.defineProperty(dataset, 'data', {\n          configurable: true,\n          enumerable: true,\n          get: function () {\n            return this._decimated;\n          },\n          set: function (d) {\n            this._data = d;\n          }\n        });\n      }\n\n      let decimated;\n\n      switch (options.algorithm) {\n        case 'lttb':\n          decimated = lttbDecimation(data, start, count, availableWidth, options);\n          break;\n\n        case 'min-max':\n          decimated = minMaxDecimation(data, start, count, availableWidth);\n          break;\n\n        default:\n          throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n      }\n\n      dataset._decimated = decimated;\n    });\n  },\n\n  destroy(chart) {\n    cleanDecimatedData(chart);\n  }\n\n};\n\nfunction getLineByIndex(chart, index) {\n  const meta = chart.getDatasetMeta(index);\n  const visible = meta && chart.isDatasetVisible(index);\n  return visible ? meta.dataset : null;\n}\n\nfunction parseFillOption(line) {\n  const options = line.options;\n  const fillOption = options.fill;\n  let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n\n  if (fill === undefined) {\n    fill = !!options.backgroundColor;\n  }\n\n  if (fill === false || fill === null) {\n    return false;\n  }\n\n  if (fill === true) {\n    return 'origin';\n  }\n\n  return fill;\n}\n\nfunction decodeFill(line, index, count) {\n  const fill = parseFillOption(line);\n\n  if (isObject(fill)) {\n    return isNaN(fill.value) ? false : fill;\n  }\n\n  let target = parseFloat(fill);\n\n  if (isNumberFinite(target) && Math.floor(target) === target) {\n    if (fill[0] === '-' || fill[0] === '+') {\n      target = index + target;\n    }\n\n    if (target === index || target < 0 || target >= count) {\n      return false;\n    }\n\n    return target;\n  }\n\n  return ['origin', 'start', 'end', 'stack', 'shape'].indexOf(fill) >= 0 && fill;\n}\n\nfunction computeLinearBoundary(source) {\n  const {\n    scale = {},\n    fill\n  } = source;\n  let target = null;\n  let horizontal;\n\n  if (fill === 'start') {\n    target = scale.bottom;\n  } else if (fill === 'end') {\n    target = scale.top;\n  } else if (isObject(fill)) {\n    target = scale.getPixelForValue(fill.value);\n  } else if (scale.getBasePixel) {\n    target = scale.getBasePixel();\n  }\n\n  if (isNumberFinite(target)) {\n    horizontal = scale.isHorizontal();\n    return {\n      x: horizontal ? target : null,\n      y: horizontal ? null : target\n    };\n  }\n\n  return null;\n}\n\nclass simpleArc {\n  constructor(opts) {\n    this.x = opts.x;\n    this.y = opts.y;\n    this.radius = opts.radius;\n  }\n\n  pathSegment(ctx, bounds, opts) {\n    const {\n      x,\n      y,\n      radius\n    } = this;\n    bounds = bounds || {\n      start: 0,\n      end: TAU\n    };\n    ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n    return !opts.bounds;\n  }\n\n  interpolate(point) {\n    const {\n      x,\n      y,\n      radius\n    } = this;\n    const angle = point.angle;\n    return {\n      x: x + Math.cos(angle) * radius,\n      y: y + Math.sin(angle) * radius,\n      angle\n    };\n  }\n\n}\n\nfunction computeCircularBoundary(source) {\n  const {\n    scale,\n    fill\n  } = source;\n  const options = scale.options;\n  const length = scale.getLabels().length;\n  const target = [];\n  const start = options.reverse ? scale.max : scale.min;\n  const end = options.reverse ? scale.min : scale.max;\n  let i, center, value;\n\n  if (fill === 'start') {\n    value = start;\n  } else if (fill === 'end') {\n    value = end;\n  } else if (isObject(fill)) {\n    value = fill.value;\n  } else {\n    value = scale.getBaseValue();\n  }\n\n  if (options.grid.circular) {\n    center = scale.getPointPositionForValue(0, start);\n    return new simpleArc({\n      x: center.x,\n      y: center.y,\n      radius: scale.getDistanceFromCenterForValue(value)\n    });\n  }\n\n  for (i = 0; i < length; ++i) {\n    target.push(scale.getPointPositionForValue(i, value));\n  }\n\n  return target;\n}\n\nfunction computeBoundary(source) {\n  const scale = source.scale || {};\n\n  if (scale.getPointPositionForValue) {\n    return computeCircularBoundary(source);\n  }\n\n  return computeLinearBoundary(source);\n}\n\nfunction findSegmentEnd(start, end, points) {\n  for (; end > start; end--) {\n    const point = points[end];\n\n    if (!isNaN(point.x) && !isNaN(point.y)) {\n      break;\n    }\n  }\n\n  return end;\n}\n\nfunction pointsFromSegments(boundary, line) {\n  const {\n    x = null,\n    y = null\n  } = boundary || {};\n  const linePoints = line.points;\n  const points = [];\n  line.segments.forEach(({\n    start,\n    end\n  }) => {\n    end = findSegmentEnd(start, end, linePoints);\n    const first = linePoints[start];\n    const last = linePoints[end];\n\n    if (y !== null) {\n      points.push({\n        x: first.x,\n        y\n      });\n      points.push({\n        x: last.x,\n        y\n      });\n    } else if (x !== null) {\n      points.push({\n        x,\n        y: first.y\n      });\n      points.push({\n        x,\n        y: last.y\n      });\n    }\n  });\n  return points;\n}\n\nfunction buildStackLine(source) {\n  const {\n    chart,\n    scale,\n    index,\n    line\n  } = source;\n  const points = [];\n  const segments = line.segments;\n  const sourcePoints = line.points;\n  const linesBelow = getLinesBelow(chart, index);\n  linesBelow.push(createBoundaryLine({\n    x: null,\n    y: scale.bottom\n  }, line));\n\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n\n    for (let j = segment.start; j <= segment.end; j++) {\n      addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n  }\n\n  return new LineElement({\n    points,\n    options: {}\n  });\n}\n\nconst isLineAndNotInHideAnimation = meta => meta.type === 'line' && !meta.hidden;\n\nfunction getLinesBelow(chart, index) {\n  const below = [];\n  const metas = chart.getSortedVisibleDatasetMetas();\n\n  for (let i = 0; i < metas.length; i++) {\n    const meta = metas[i];\n\n    if (meta.index === index) {\n      break;\n    }\n\n    if (isLineAndNotInHideAnimation(meta)) {\n      below.unshift(meta.dataset);\n    }\n  }\n\n  return below;\n}\n\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\n  const postponed = [];\n\n  for (let j = 0; j < linesBelow.length; j++) {\n    const line = linesBelow[j];\n    const {\n      first,\n      last,\n      point\n    } = findPoint(line, sourcePoint, 'x');\n\n    if (!point || first && last) {\n      continue;\n    }\n\n    if (first) {\n      postponed.unshift(point);\n    } else {\n      points.push(point);\n\n      if (!last) {\n        break;\n      }\n    }\n  }\n\n  points.push(...postponed);\n}\n\nfunction findPoint(line, sourcePoint, property) {\n  const point = line.interpolate(sourcePoint, property);\n\n  if (!point) {\n    return {};\n  }\n\n  const pointValue = point[property];\n  const segments = line.segments;\n  const linePoints = line.points;\n  let first = false;\n  let last = false;\n\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    const firstValue = linePoints[segment.start][property];\n    const lastValue = linePoints[segment.end][property];\n\n    if (pointValue >= firstValue && pointValue <= lastValue) {\n      first = pointValue === firstValue;\n      last = pointValue === lastValue;\n      break;\n    }\n  }\n\n  return {\n    first,\n    last,\n    point\n  };\n}\n\nfunction getTarget(source) {\n  const {\n    chart,\n    fill,\n    line\n  } = source;\n\n  if (isNumberFinite(fill)) {\n    return getLineByIndex(chart, fill);\n  }\n\n  if (fill === 'stack') {\n    return buildStackLine(source);\n  }\n\n  if (fill === 'shape') {\n    return true;\n  }\n\n  const boundary = computeBoundary(source);\n\n  if (boundary instanceof simpleArc) {\n    return boundary;\n  }\n\n  return createBoundaryLine(boundary, line);\n}\n\nfunction createBoundaryLine(boundary, line) {\n  let points = [];\n  let _loop = false;\n\n  if (isArray(boundary)) {\n    _loop = true;\n    points = boundary;\n  } else {\n    points = pointsFromSegments(boundary, line);\n  }\n\n  return points.length ? new LineElement({\n    points,\n    options: {\n      tension: 0\n    },\n    _loop,\n    _fullLoop: _loop\n  }) : null;\n}\n\nfunction resolveTarget(sources, index, propagate) {\n  const source = sources[index];\n  let fill = source.fill;\n  const visited = [index];\n  let target;\n\n  if (!propagate) {\n    return fill;\n  }\n\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isNumberFinite(fill)) {\n      return fill;\n    }\n\n    target = sources[fill];\n\n    if (!target) {\n      return false;\n    }\n\n    if (target.visible) {\n      return fill;\n    }\n\n    visited.push(fill);\n    fill = target.fill;\n  }\n\n  return false;\n}\n\nfunction _clip(ctx, target, clipY) {\n  ctx.beginPath();\n  target.path(ctx);\n  ctx.lineTo(target.last().x, clipY);\n  ctx.lineTo(target.first().x, clipY);\n  ctx.closePath();\n  ctx.clip();\n}\n\nfunction getBounds(property, first, last, loop) {\n  if (loop) {\n    return;\n  }\n\n  let start = first[property];\n  let end = last[property];\n\n  if (property === 'angle') {\n    start = _normalizeAngle(start);\n    end = _normalizeAngle(end);\n  }\n\n  return {\n    property,\n    start,\n    end\n  };\n}\n\nfunction _getEdge(a, b, prop, fn) {\n  if (a && b) {\n    return fn(a[prop], b[prop]);\n  }\n\n  return a ? a[prop] : b ? b[prop] : 0;\n}\n\nfunction _segments(line, target, property) {\n  const segments = line.segments;\n  const points = line.points;\n  const tpoints = target.points;\n  const parts = [];\n\n  for (const segment of segments) {\n    let {\n      start,\n      end\n    } = segment;\n    end = findSegmentEnd(start, end, points);\n    const bounds = getBounds(property, points[start], points[end], segment.loop);\n\n    if (!target.segments) {\n      parts.push({\n        source: segment,\n        target: bounds,\n        start: points[start],\n        end: points[end]\n      });\n      continue;\n    }\n\n    const targetSegments = _boundSegments(target, bounds);\n\n    for (const tgt of targetSegments) {\n      const subBounds = getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n\n      const fillSources = _boundSegment(segment, points, subBounds);\n\n      for (const fillSource of fillSources) {\n        parts.push({\n          source: fillSource,\n          target: tgt,\n          start: {\n            [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n          },\n          end: {\n            [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n          }\n        });\n      }\n    }\n  }\n\n  return parts;\n}\n\nfunction clipBounds(ctx, scale, bounds) {\n  const {\n    top,\n    bottom\n  } = scale.chart.chartArea;\n  const {\n    property,\n    start,\n    end\n  } = bounds || {};\n\n  if (property === 'x') {\n    ctx.beginPath();\n    ctx.rect(start, top, end - start, bottom - top);\n    ctx.clip();\n  }\n}\n\nfunction interpolatedLineTo(ctx, target, point, property) {\n  const interpolatedPoint = target.interpolate(point, property);\n\n  if (interpolatedPoint) {\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n  }\n}\n\nfunction _fill(ctx, cfg) {\n  const {\n    line,\n    target,\n    property,\n    color,\n    scale\n  } = cfg;\n\n  const segments = _segments(line, target, property);\n\n  for (const {\n    source: src,\n    target: tgt,\n    start,\n    end\n  } of segments) {\n    const {\n      style: {\n        backgroundColor = color\n      } = {}\n    } = src;\n    const notShape = target !== true;\n    ctx.save();\n    ctx.fillStyle = backgroundColor;\n    clipBounds(ctx, scale, notShape && getBounds(property, start, end));\n    ctx.beginPath();\n    const lineLoop = !!line.pathSegment(ctx, src);\n    let loop;\n\n    if (notShape) {\n      if (lineLoop) {\n        ctx.closePath();\n      } else {\n        interpolatedLineTo(ctx, target, end, property);\n      }\n\n      const targetLoop = !!target.pathSegment(ctx, tgt, {\n        move: lineLoop,\n        reverse: true\n      });\n      loop = lineLoop && targetLoop;\n\n      if (!loop) {\n        interpolatedLineTo(ctx, target, start, property);\n      }\n    }\n\n    ctx.closePath();\n    ctx.fill(loop ? 'evenodd' : 'nonzero');\n    ctx.restore();\n  }\n}\n\nfunction doFill(ctx, cfg) {\n  const {\n    line,\n    target,\n    above,\n    below,\n    area,\n    scale\n  } = cfg;\n  const property = line._loop ? 'angle' : cfg.axis;\n  ctx.save();\n\n  if (property === 'x' && below !== above) {\n    _clip(ctx, target, area.top);\n\n    _fill(ctx, {\n      line,\n      target,\n      color: above,\n      scale,\n      property\n    });\n\n    ctx.restore();\n    ctx.save();\n\n    _clip(ctx, target, area.bottom);\n  }\n\n  _fill(ctx, {\n    line,\n    target,\n    color: below,\n    scale,\n    property\n  });\n\n  ctx.restore();\n}\n\nfunction drawfill(ctx, source, area) {\n  const target = getTarget(source);\n  const {\n    line,\n    scale,\n    axis\n  } = source;\n  const lineOpts = line.options;\n  const fillOption = lineOpts.fill;\n  const color = lineOpts.backgroundColor;\n  const {\n    above = color,\n    below = color\n  } = fillOption || {};\n\n  if (target && line.points.length) {\n    clipArea(ctx, area);\n    doFill(ctx, {\n      line,\n      target,\n      above,\n      below,\n      area,\n      scale,\n      axis\n    });\n    unclipArea(ctx);\n  }\n}\n\nvar plugin_filler = {\n  id: 'filler',\n\n  afterDatasetsUpdate(chart, _args, options) {\n    const count = (chart.data.datasets || []).length;\n    const sources = [];\n    let meta, i, line, source;\n\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      line = meta.dataset;\n      source = null;\n\n      if (line && line.options && line instanceof LineElement) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          index: i,\n          fill: decodeFill(line, i, count),\n          chart,\n          axis: meta.controller.options.indexAxis,\n          scale: meta.vScale,\n          line\n        };\n      }\n\n      meta.$filler = source;\n      sources.push(source);\n    }\n\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n\n      if (!source || source.fill === false) {\n        continue;\n      }\n\n      source.fill = resolveTarget(sources, i, options.propagate);\n    }\n  },\n\n  beforeDraw(chart, _args, options) {\n    const draw = options.drawTime === 'beforeDraw';\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const area = chart.chartArea;\n\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n\n      if (!source) {\n        continue;\n      }\n\n      source.line.updateControlPoints(area, source.axis);\n\n      if (draw) {\n        drawfill(chart.ctx, source, area);\n      }\n    }\n  },\n\n  beforeDatasetsDraw(chart, _args, options) {\n    if (options.drawTime !== 'beforeDatasetsDraw') {\n      return;\n    }\n\n    const metasets = chart.getSortedVisibleDatasetMetas();\n\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n\n      if (source) {\n        drawfill(chart.ctx, source, chart.chartArea);\n      }\n    }\n  },\n\n  beforeDatasetDraw(chart, args, options) {\n    const source = args.meta.$filler;\n\n    if (!source || source.fill === false || options.drawTime !== 'beforeDatasetDraw') {\n      return;\n    }\n\n    drawfill(chart.ctx, source, chart.chartArea);\n  },\n\n  defaults: {\n    propagate: true,\n    drawTime: 'beforeDatasetDraw'\n  }\n};\n\nconst getBoxSize = (labelOpts, fontSize) => {\n  let {\n    boxHeight = fontSize,\n    boxWidth = fontSize\n  } = labelOpts;\n\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = Math.min(boxWidth, fontSize);\n  }\n\n  return {\n    boxWidth,\n    boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\n\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\n\nclass Legend extends Element {\n  constructor(config) {\n    super();\n    this._added = false;\n    this.legendHitBoxes = [];\n    this._hoveredItem = null;\n    this.doughnutMode = false;\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this.legendItems = undefined;\n    this.columnSizes = undefined;\n    this.lineWidths = undefined;\n    this.maxHeight = undefined;\n    this.maxWidth = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this._margins = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n\n  update(maxWidth, maxHeight, margins) {\n    const me = this;\n    me.maxWidth = maxWidth;\n    me.maxHeight = maxHeight;\n    me._margins = margins;\n    me.setDimensions();\n    me.buildLabels();\n    me.fit();\n  }\n\n  setDimensions() {\n    const me = this;\n\n    if (me.isHorizontal()) {\n      me.width = me.maxWidth;\n      me.left = me._margins.left;\n      me.right = me.width;\n    } else {\n      me.height = me.maxHeight;\n      me.top = me._margins.top;\n      me.bottom = me.height;\n    }\n  }\n\n  buildLabels() {\n    const me = this;\n    const labelOpts = me.options.labels || {};\n    let legendItems = callback(labelOpts.generateLabels, [me.chart], me) || [];\n\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter(item => labelOpts.filter(item, me.chart.data));\n    }\n\n    if (labelOpts.sort) {\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, me.chart.data));\n    }\n\n    if (me.options.reverse) {\n      legendItems.reverse();\n    }\n\n    me.legendItems = legendItems;\n  }\n\n  fit() {\n    const me = this;\n    const {\n      options,\n      ctx\n    } = me;\n\n    if (!options.display) {\n      me.width = me.height = 0;\n      return;\n    }\n\n    const labelOpts = options.labels;\n    const labelFont = toFont(labelOpts.font);\n    const fontSize = labelFont.size;\n\n    const titleHeight = me._computeTitleHeight();\n\n    const {\n      boxWidth,\n      itemHeight\n    } = getBoxSize(labelOpts, fontSize);\n    let width, height;\n    ctx.font = labelFont.string;\n\n    if (me.isHorizontal()) {\n      width = me.maxWidth;\n      height = me._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    } else {\n      height = me.maxHeight;\n      width = me._fitCols(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    }\n\n    me.width = Math.min(width, options.maxWidth || me.maxWidth);\n    me.height = Math.min(height, options.maxHeight || me.maxHeight);\n  }\n\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n    const me = this;\n    const {\n      ctx,\n      maxWidth,\n      options: {\n        labels: {\n          padding\n        }\n      }\n    } = me;\n    const hitboxes = me.legendHitBoxes = [];\n    const lineWidths = me.lineWidths = [0];\n    const lineHeight = itemHeight + padding;\n    let totalHeight = titleHeight;\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n    let row = -1;\n    let top = -lineHeight;\n    me.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n        totalHeight += lineHeight;\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n        top += lineHeight;\n        row++;\n      }\n\n      hitboxes[i] = {\n        left: 0,\n        top,\n        row,\n        width: itemWidth,\n        height: itemHeight\n      };\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\n    });\n    return totalHeight;\n  }\n\n  _fitCols(titleHeight, fontSize, boxWidth, itemHeight) {\n    const me = this;\n    const {\n      ctx,\n      maxHeight,\n      options: {\n        labels: {\n          padding\n        }\n      }\n    } = me;\n    const hitboxes = me.legendHitBoxes = [];\n    const columnSizes = me.columnSizes = [];\n    const heightLimit = maxHeight - titleHeight;\n    let totalWidth = padding;\n    let currentColWidth = 0;\n    let currentColHeight = 0;\n    let left = 0;\n    let col = 0;\n    me.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n\n      if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n        totalWidth += currentColWidth + padding;\n        columnSizes.push({\n          width: currentColWidth,\n          height: currentColHeight\n        });\n        left += currentColWidth + padding;\n        col++;\n        currentColWidth = currentColHeight = 0;\n      }\n\n      hitboxes[i] = {\n        left,\n        top: currentColHeight,\n        col,\n        width: itemWidth,\n        height: itemHeight\n      };\n      currentColWidth = Math.max(currentColWidth, itemWidth);\n      currentColHeight += itemHeight + padding;\n    });\n    totalWidth += currentColWidth;\n    columnSizes.push({\n      width: currentColWidth,\n      height: currentColHeight\n    });\n    return totalWidth;\n  }\n\n  adjustHitBoxes() {\n    const me = this;\n\n    if (!me.options.display) {\n      return;\n    }\n\n    const titleHeight = me._computeTitleHeight();\n\n    const {\n      legendHitBoxes: hitboxes,\n      options: {\n        align,\n        labels: {\n          padding\n        },\n        rtl\n      }\n    } = me;\n    const rtlHelper = getRtlAdapter(rtl, me.left, me.width);\n\n    if (this.isHorizontal()) {\n      let row = 0;\n\n      let left = _alignStartEnd(align, me.left + padding, me.right - me.lineWidths[row]);\n\n      for (const hitbox of hitboxes) {\n        if (row !== hitbox.row) {\n          row = hitbox.row;\n          left = _alignStartEnd(align, me.left + padding, me.right - me.lineWidths[row]);\n        }\n\n        hitbox.top += me.top + titleHeight + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n        left += hitbox.width + padding;\n      }\n    } else {\n      let col = 0;\n\n      let top = _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - me.columnSizes[col].height);\n\n      for (const hitbox of hitboxes) {\n        if (hitbox.col !== col) {\n          col = hitbox.col;\n          top = _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - me.columnSizes[col].height);\n        }\n\n        hitbox.top = top;\n        hitbox.left += me.left + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n        top += hitbox.height + padding;\n      }\n    }\n  }\n\n  isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  }\n\n  draw() {\n    const me = this;\n\n    if (me.options.display) {\n      const ctx = me.ctx;\n      clipArea(ctx, me);\n\n      me._draw();\n\n      unclipArea(ctx);\n    }\n  }\n\n  _draw() {\n    const me = this;\n    const {\n      options: opts,\n      columnSizes,\n      lineWidths,\n      ctx\n    } = me;\n    const {\n      align,\n      labels: labelOpts\n    } = opts;\n    const defaultColor = defaults.color;\n    const rtlHelper = getRtlAdapter(opts.rtl, me.left, me.width);\n    const labelFont = toFont(labelOpts.font);\n    const {\n      color: fontColor,\n      padding\n    } = labelOpts;\n    const fontSize = labelFont.size;\n    const halfFontSize = fontSize / 2;\n    let cursor;\n    me.drawTitle();\n    ctx.textAlign = rtlHelper.textAlign('left');\n    ctx.textBaseline = 'middle';\n    ctx.lineWidth = 0.5;\n    ctx.font = labelFont.string;\n    const {\n      boxWidth,\n      boxHeight,\n      itemHeight\n    } = getBoxSize(labelOpts, fontSize);\n\n    const drawLegendBox = function (x, y, legendItem) {\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n        return;\n      }\n\n      ctx.save();\n      const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n      ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n      ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n      ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n      ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n      ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n\n      if (labelOpts.usePointStyle) {\n        const drawOptions = {\n          radius: boxWidth * Math.SQRT2 / 2,\n          pointStyle: legendItem.pointStyle,\n          rotation: legendItem.rotation,\n          borderWidth: lineWidth\n        };\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n        const centerY = y + halfFontSize;\n        drawPoint(ctx, drawOptions, centerX, centerY);\n      } else {\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n        const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n        const borderRadius = toTRBLCorners(legendItem.borderRadius);\n        ctx.beginPath();\n\n        if (Object.values(borderRadius).some(v => v !== 0)) {\n          addRoundedRectPath(ctx, {\n            x: xBoxLeft,\n            y: yBoxTop,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius\n          });\n        } else {\n          ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n        }\n\n        ctx.fill();\n\n        if (lineWidth !== 0) {\n          ctx.stroke();\n        }\n      }\n\n      ctx.restore();\n    };\n\n    const fillText = function (x, y, legendItem) {\n      renderText(ctx, legendItem.text, x, y + itemHeight / 2, labelFont, {\n        strikethrough: legendItem.hidden,\n        textAlign: rtlHelper.textAlign(legendItem.textAlign)\n      });\n    };\n\n    const isHorizontal = me.isHorizontal();\n\n    const titleHeight = this._computeTitleHeight();\n\n    if (isHorizontal) {\n      cursor = {\n        x: _alignStartEnd(align, me.left + padding, me.right - lineWidths[0]),\n        y: me.top + padding + titleHeight,\n        line: 0\n      };\n    } else {\n      cursor = {\n        x: me.left + padding,\n        y: _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - columnSizes[0].height),\n        line: 0\n      };\n    }\n\n    overrideTextDirection(me.ctx, opts.textDirection);\n    const lineHeight = itemHeight + padding;\n    me.legendItems.forEach((legendItem, i) => {\n      ctx.strokeStyle = legendItem.fontColor || fontColor;\n      ctx.fillStyle = legendItem.fontColor || fontColor;\n      const textWidth = ctx.measureText(legendItem.text).width;\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n      const width = boxWidth + halfFontSize + textWidth;\n      let x = cursor.x;\n      let y = cursor.y;\n      rtlHelper.setWidth(me.width);\n\n      if (isHorizontal) {\n        if (i > 0 && x + width + padding > me.right) {\n          y = cursor.y += lineHeight;\n          cursor.line++;\n          x = cursor.x = _alignStartEnd(align, me.left + padding, me.right - lineWidths[cursor.line]);\n        }\n      } else if (i > 0 && y + lineHeight > me.bottom) {\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\n        cursor.line++;\n        y = cursor.y = _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - columnSizes[cursor.line].height);\n      }\n\n      const realX = rtlHelper.x(x);\n      drawLegendBox(realX, y, legendItem);\n      x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : me.right, opts.rtl);\n      fillText(rtlHelper.x(x), y, legendItem);\n\n      if (isHorizontal) {\n        cursor.x += width + padding;\n      } else {\n        cursor.y += lineHeight;\n      }\n    });\n    restoreTextDirection(me.ctx, opts.textDirection);\n  }\n\n  drawTitle() {\n    const me = this;\n    const opts = me.options;\n    const titleOpts = opts.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n\n    if (!titleOpts.display) {\n      return;\n    }\n\n    const rtlHelper = getRtlAdapter(opts.rtl, me.left, me.width);\n    const ctx = me.ctx;\n    const position = titleOpts.position;\n    const halfFontSize = titleFont.size / 2;\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n    let y;\n    let left = me.left;\n    let maxWidth = me.width;\n\n    if (this.isHorizontal()) {\n      maxWidth = Math.max(...me.lineWidths);\n      y = me.top + topPaddingPlusHalfFontSize;\n      left = _alignStartEnd(opts.align, left, me.right - maxWidth);\n    } else {\n      const maxHeight = me.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\n      y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, me.top, me.bottom - maxHeight - opts.labels.padding - me._computeTitleHeight());\n    }\n\n    const x = _alignStartEnd(position, left, left + maxWidth);\n\n    ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n    ctx.textBaseline = 'middle';\n    ctx.strokeStyle = titleOpts.color;\n    ctx.fillStyle = titleOpts.color;\n    ctx.font = titleFont.string;\n    renderText(ctx, titleOpts.text, x, y, titleFont);\n  }\n\n  _computeTitleHeight() {\n    const titleOpts = this.options.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n  }\n\n  _getLegendItemAt(x, y) {\n    const me = this;\n    let i, hitBox, lh;\n\n    if (x >= me.left && x <= me.right && y >= me.top && y <= me.bottom) {\n      lh = me.legendHitBoxes;\n\n      for (i = 0; i < lh.length; ++i) {\n        hitBox = lh[i];\n\n        if (x >= hitBox.left && x <= hitBox.left + hitBox.width && y >= hitBox.top && y <= hitBox.top + hitBox.height) {\n          return me.legendItems[i];\n        }\n      }\n    }\n\n    return null;\n  }\n\n  handleEvent(e) {\n    const me = this;\n    const opts = me.options;\n\n    if (!isListened(e.type, opts)) {\n      return;\n    }\n\n    const hoveredItem = me._getLegendItemAt(e.x, e.y);\n\n    if (e.type === 'mousemove') {\n      const previous = me._hoveredItem;\n      const sameItem = itemsEqual(previous, hoveredItem);\n\n      if (previous && !sameItem) {\n        callback(opts.onLeave, [e, previous, me], me);\n      }\n\n      me._hoveredItem = hoveredItem;\n\n      if (hoveredItem && !sameItem) {\n        callback(opts.onHover, [e, hoveredItem, me], me);\n      }\n    } else if (hoveredItem) {\n      callback(opts.onClick, [e, hoveredItem, me], me);\n    }\n  }\n\n}\n\nfunction isListened(type, opts) {\n  if (type === 'mousemove' && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n\n  return false;\n}\n\nvar plugin_legend = {\n  id: 'legend',\n  _element: Legend,\n\n  start(chart, _args, options) {\n    const legend = chart.legend = new Legend({\n      ctx: chart.ctx,\n      options,\n      chart\n    });\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n\n  stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n\n  beforeUpdate(chart, _args, options) {\n    const legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n\n  afterUpdate(chart) {\n    const legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n\n  afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n\n    onClick(e, legendItem, legend) {\n      const index = legendItem.datasetIndex;\n      const ci = legend.chart;\n\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n\n    onHover: null,\n    onLeave: null,\n    labels: {\n      color: ctx => ctx.chart.options.color,\n      boxWidth: 40,\n      padding: 10,\n\n      generateLabels(chart) {\n        const datasets = chart.data.datasets;\n        const {\n          labels: {\n            usePointStyle,\n            pointStyle,\n            textAlign,\n            color\n          }\n        } = chart.legend.options;\n        return chart._getSortedDatasetMetas().map(meta => {\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          const borderWidth = toPadding(style.borderWidth);\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: 0,\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n\n    },\n    title: {\n      color: ctx => ctx.chart.options.color,\n      display: false,\n      position: 'center',\n      text: ''\n    }\n  },\n  descriptors: {\n    _scriptable: name => !name.startsWith('on'),\n    labels: {\n      _scriptable: name => !['generateLabels', 'filter', 'sort'].includes(name)\n    }\n  }\n};\n\nclass Title extends Element {\n  constructor(config) {\n    super();\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this._padding = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n\n  update(maxWidth, maxHeight) {\n    const me = this;\n    const opts = me.options;\n    me.left = 0;\n    me.top = 0;\n\n    if (!opts.display) {\n      me.width = me.height = me.right = me.bottom = 0;\n      return;\n    }\n\n    me.width = me.right = maxWidth;\n    me.height = me.bottom = maxHeight;\n    const lineCount = isArray(opts.text) ? opts.text.length : 1;\n    me._padding = toPadding(opts.padding);\n\n    const textSize = lineCount * toFont(opts.font).lineHeight + me._padding.height;\n\n    if (me.isHorizontal()) {\n      me.height = textSize;\n    } else {\n      me.width = textSize;\n    }\n  }\n\n  isHorizontal() {\n    const pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  }\n\n  _drawArgs(offset) {\n    const {\n      top,\n      left,\n      bottom,\n      right,\n      options\n    } = this;\n    const align = options.align;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n\n    if (this.isHorizontal()) {\n      titleX = _alignStartEnd(align, left, right);\n      titleY = top + offset;\n      maxWidth = right - left;\n    } else {\n      if (options.position === 'left') {\n        titleX = left + offset;\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = PI * -0.5;\n      } else {\n        titleX = right - offset;\n        titleY = _alignStartEnd(align, top, bottom);\n        rotation = PI * 0.5;\n      }\n\n      maxWidth = bottom - top;\n    }\n\n    return {\n      titleX,\n      titleY,\n      maxWidth,\n      rotation\n    };\n  }\n\n  draw() {\n    const me = this;\n    const ctx = me.ctx;\n    const opts = me.options;\n\n    if (!opts.display) {\n      return;\n    }\n\n    const fontOpts = toFont(opts.font);\n    const lineHeight = fontOpts.lineHeight;\n    const offset = lineHeight / 2 + me._padding.top;\n\n    const {\n      titleX,\n      titleY,\n      maxWidth,\n      rotation\n    } = me._drawArgs(offset);\n\n    renderText(ctx, opts.text, 0, 0, fontOpts, {\n      color: opts.color,\n      maxWidth,\n      rotation,\n      textAlign: _toLeftRightCenter(opts.align),\n      textBaseline: 'middle',\n      translation: [titleX, titleY]\n    });\n  }\n\n}\n\nfunction createTitle(chart, titleOpts) {\n  const title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart\n  });\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\n\nvar plugin_title = {\n  id: 'title',\n  _element: Title,\n\n  start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n\n  stop(chart) {\n    const titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n\n  beforeUpdate(chart, _args, options) {\n    const title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold'\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false\n  }\n};\nconst map = new WeakMap();\nvar plugin_subtitle = {\n  id: 'subtitle',\n\n  start(chart, _args, options) {\n    const title = new Title({\n      ctx: chart.ctx,\n      options,\n      chart\n    });\n    layouts.configure(chart, title, options);\n    layouts.addBox(chart, title);\n    map.set(chart, title);\n  },\n\n  stop(chart) {\n    layouts.removeBox(chart, map.get(chart));\n    map.delete(chart);\n  },\n\n  beforeUpdate(chart, _args, options) {\n    const title = map.get(chart);\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'normal'\n    },\n    fullSize: true,\n    padding: 0,\n    position: 'top',\n    text: '',\n    weight: 1500\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false\n  }\n};\nconst positioners = {\n  average(items) {\n    if (!items.length) {\n      return false;\n    }\n\n    let i, len;\n    let x = 0;\n    let y = 0;\n    let count = 0;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n\n      if (el && el.hasValue()) {\n        const pos = el.tooltipPosition();\n        x += pos.x;\n        y += pos.y;\n        ++count;\n      }\n    }\n\n    return {\n      x: x / count,\n      y: y / count\n    };\n  },\n\n  nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n\n    let x = eventPosition.x;\n    let y = eventPosition.y;\n    let minDistance = Number.POSITIVE_INFINITY;\n    let i, len, nearestElement;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n\n      if (el && el.hasValue()) {\n        const center = el.getCenterPoint();\n        const d = distanceBetweenPoints(eventPosition, center);\n\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n\n    if (nearestElement) {\n      const tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n\n    return {\n      x,\n      y\n    };\n  }\n\n};\n\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n\n  return base;\n}\n\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n\n  return str;\n}\n\nfunction createTooltipItem(chart, item) {\n  const {\n    element,\n    datasetIndex,\n    index\n  } = item;\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\n  const {\n    label,\n    value\n  } = controller.getLabelAndValue(index);\n  return {\n    chart,\n    label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex,\n    element\n  };\n}\n\nfunction getTooltipSize(tooltip, options) {\n  const ctx = tooltip._chart.ctx;\n  const {\n    body,\n    footer,\n    title\n  } = tooltip;\n  const {\n    boxWidth,\n    boxHeight\n  } = options;\n  const bodyFont = toFont(options.bodyFont);\n  const titleFont = toFont(options.titleFont);\n  const footerFont = toFont(options.footerFont);\n  const titleLineCount = title.length;\n  const footerLineCount = footer.length;\n  const bodyLineItemCount = body.length;\n  const padding = toPadding(options.padding);\n  let height = padding.height;\n  let width = 0;\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight + (titleLineCount - 1) * options.titleSpacing + options.titleMarginBottom;\n  }\n\n  if (combinedBodyLength) {\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight + (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight + (combinedBodyLength - 1) * options.bodySpacing;\n  }\n\n  if (footerLineCount) {\n    height += options.footerMarginTop + footerLineCount * footerFont.lineHeight + (footerLineCount - 1) * options.footerSpacing;\n  }\n\n  let widthPadding = 0;\n\n  const maxLineWidth = function (line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n\n  ctx.save();\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n  widthPadding = options.displayColors ? boxWidth + 2 : 0;\n  each(body, bodyItem => {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n  widthPadding = 0;\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n  ctx.restore();\n  width += padding.width;\n  return {\n    width,\n    height\n  };\n}\n\nfunction determineYAlign(chart, size) {\n  const {\n    y,\n    height\n  } = size;\n\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > chart.height - height / 2) {\n    return 'bottom';\n  }\n\n  return 'center';\n}\n\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  const {\n    x,\n    width\n  } = size;\n  const caret = options.caretSize + options.caretPadding;\n\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\n\nfunction determineXAlign(chart, options, size, yAlign) {\n  const {\n    x,\n    width\n  } = size;\n  const {\n    width: chartWidth,\n    chartArea: {\n      left,\n      right\n    }\n  } = chart;\n  let xAlign = 'center';\n\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n\n  return xAlign;\n}\n\nfunction determineAlignment(chart, options, size) {\n  const yAlign = options.yAlign || determineYAlign(chart, size);\n  return {\n    xAlign: options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign\n  };\n}\n\nfunction alignX(size, xAlign) {\n  let {\n    x,\n    width\n  } = size;\n\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= width / 2;\n  }\n\n  return x;\n}\n\nfunction alignY(size, yAlign, paddingAndSize) {\n  let {\n    y,\n    height\n  } = size;\n\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= height / 2;\n  }\n\n  return y;\n}\n\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  const {\n    caretSize,\n    caretPadding,\n    cornerRadius\n  } = options;\n  const {\n    xAlign,\n    yAlign\n  } = alignment;\n  const paddingAndSize = caretSize + caretPadding;\n  const radiusAndPadding = cornerRadius + caretPadding;\n  let x = alignX(size, xAlign);\n  const y = alignY(size, yAlign, paddingAndSize);\n\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= radiusAndPadding;\n  } else if (xAlign === 'right') {\n    x += radiusAndPadding;\n  }\n\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\n\nfunction getAlignedX(tooltip, align, options) {\n  const padding = toPadding(options.padding);\n  return align === 'center' ? tooltip.x + tooltip.width / 2 : align === 'right' ? tooltip.x + tooltip.width - padding.right : tooltip.x + padding.left;\n}\n\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\n\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return Object.assign(Object.create(parent), {\n    tooltip,\n    tooltipItems,\n    type: 'tooltip'\n  });\n}\n\nfunction overrideCallbacks(callbacks, context) {\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\n\nclass Tooltip extends Element {\n  constructor(config) {\n    super();\n    this.opacity = 0;\n    this._active = [];\n    this._chart = config._chart;\n    this._eventPosition = undefined;\n    this._size = undefined;\n    this._cachedAnimations = undefined;\n    this._tooltipItems = [];\n    this.$animations = undefined;\n    this.$context = undefined;\n    this.options = config.options;\n    this.dataPoints = undefined;\n    this.title = undefined;\n    this.beforeBody = undefined;\n    this.body = undefined;\n    this.afterBody = undefined;\n    this.footer = undefined;\n    this.xAlign = undefined;\n    this.yAlign = undefined;\n    this.x = undefined;\n    this.y = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this.caretX = undefined;\n    this.caretY = undefined;\n    this.labelColors = undefined;\n    this.labelPointStyles = undefined;\n    this.labelTextColors = undefined;\n  }\n\n  initialize(options) {\n    this.options = options;\n    this._cachedAnimations = undefined;\n    this.$context = undefined;\n  }\n\n  _resolveAnimations() {\n    const me = this;\n    const cached = me._cachedAnimations;\n\n    if (cached) {\n      return cached;\n    }\n\n    const chart = me._chart;\n    const options = me.options.setContext(me.getContext());\n    const opts = options.enabled && chart.options.animation && options.animations;\n    const animations = new Animations(me._chart, opts);\n\n    if (opts._cacheable) {\n      me._cachedAnimations = Object.freeze(animations);\n    }\n\n    return animations;\n  }\n\n  getContext() {\n    const me = this;\n    return me.$context || (me.$context = createTooltipContext(me._chart.getContext(), me, me._tooltipItems));\n  }\n\n  getTitle(context, options) {\n    const me = this;\n    const {\n      callbacks\n    } = options;\n    const beforeTitle = callbacks.beforeTitle.apply(me, [context]);\n    const title = callbacks.title.apply(me, [context]);\n    const afterTitle = callbacks.afterTitle.apply(me, [context]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n    return lines;\n  }\n\n  getBeforeBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.beforeBody.apply(this, [tooltipItems]));\n  }\n\n  getBody(tooltipItems, options) {\n    const me = this;\n    const {\n      callbacks\n    } = options;\n    const bodyItems = [];\n    each(tooltipItems, context => {\n      const bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      const scoped = overrideCallbacks(callbacks, context);\n      pushOrConcat(bodyItem.before, splitNewlines(scoped.beforeLabel.call(me, context)));\n      pushOrConcat(bodyItem.lines, scoped.label.call(me, context));\n      pushOrConcat(bodyItem.after, splitNewlines(scoped.afterLabel.call(me, context)));\n      bodyItems.push(bodyItem);\n    });\n    return bodyItems;\n  }\n\n  getAfterBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.afterBody.apply(this, [tooltipItems]));\n  }\n\n  getFooter(tooltipItems, options) {\n    const me = this;\n    const {\n      callbacks\n    } = options;\n    const beforeFooter = callbacks.beforeFooter.apply(me, [tooltipItems]);\n    const footer = callbacks.footer.apply(me, [tooltipItems]);\n    const afterFooter = callbacks.afterFooter.apply(me, [tooltipItems]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n    return lines;\n  }\n\n  _createItems(options) {\n    const me = this;\n    const active = me._active;\n    const data = me._chart.data;\n    const labelColors = [];\n    const labelPointStyles = [];\n    const labelTextColors = [];\n    let tooltipItems = [];\n    let i, len;\n\n    for (i = 0, len = active.length; i < len; ++i) {\n      tooltipItems.push(createTooltipItem(me._chart, active[i]));\n    }\n\n    if (options.filter) {\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n    }\n\n    if (options.itemSort) {\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n    }\n\n    each(tooltipItems, context => {\n      const scoped = overrideCallbacks(options.callbacks, context);\n      labelColors.push(scoped.labelColor.call(me, context));\n      labelPointStyles.push(scoped.labelPointStyle.call(me, context));\n      labelTextColors.push(scoped.labelTextColor.call(me, context));\n    });\n    me.labelColors = labelColors;\n    me.labelPointStyles = labelPointStyles;\n    me.labelTextColors = labelTextColors;\n    me.dataPoints = tooltipItems;\n    return tooltipItems;\n  }\n\n  update(changed, replay) {\n    const me = this;\n    const options = me.options.setContext(me.getContext());\n    const active = me._active;\n    let properties;\n    let tooltipItems = [];\n\n    if (!active.length) {\n      if (me.opacity !== 0) {\n        properties = {\n          opacity: 0\n        };\n      }\n    } else {\n      const position = positioners[options.position].call(me, active, me._eventPosition);\n      tooltipItems = me._createItems(options);\n      me.title = me.getTitle(tooltipItems, options);\n      me.beforeBody = me.getBeforeBody(tooltipItems, options);\n      me.body = me.getBody(tooltipItems, options);\n      me.afterBody = me.getAfterBody(tooltipItems, options);\n      me.footer = me.getFooter(tooltipItems, options);\n      const size = me._size = getTooltipSize(me, options);\n      const positionAndSize = Object.assign({}, position, size);\n      const alignment = determineAlignment(me._chart, options, positionAndSize);\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, me._chart);\n      me.xAlign = alignment.xAlign;\n      me.yAlign = alignment.yAlign;\n      properties = {\n        opacity: 1,\n        x: backgroundPoint.x,\n        y: backgroundPoint.y,\n        width: size.width,\n        height: size.height,\n        caretX: position.x,\n        caretY: position.y\n      };\n    }\n\n    me._tooltipItems = tooltipItems;\n    me.$context = undefined;\n\n    if (properties) {\n      me._resolveAnimations().update(me, properties);\n    }\n\n    if (changed && options.external) {\n      options.external.call(me, {\n        chart: me._chart,\n        tooltip: me,\n        replay\n      });\n    }\n  }\n\n  drawCaret(tooltipPoint, ctx, size, options) {\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  }\n\n  getCaretPosition(tooltipPoint, size, options) {\n    const {\n      xAlign,\n      yAlign\n    } = this;\n    const {\n      cornerRadius,\n      caretSize\n    } = options;\n    const {\n      x: ptX,\n      y: ptY\n    } = tooltipPoint;\n    const {\n      width,\n      height\n    } = size;\n    let x1, x2, x3, y1, y2, y3;\n\n    if (yAlign === 'center') {\n      y2 = ptY + height / 2;\n\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n\n      x3 = x1;\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + cornerRadius + caretSize;\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - cornerRadius - caretSize;\n      } else {\n        x2 = this.caretX;\n      }\n\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n        x1 = x2 + caretSize;\n        x3 = x2 - caretSize;\n      }\n\n      y3 = y1;\n    }\n\n    return {\n      x1,\n      x2,\n      x3,\n      y1,\n      y2,\n      y3\n    };\n  }\n\n  drawTitle(pt, ctx, options) {\n    const me = this;\n    const title = me.title;\n    const length = title.length;\n    let titleFont, titleSpacing, i;\n\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, me.x, me.width);\n      pt.x = getAlignedX(me, options.titleAlign, options);\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n      ctx.textBaseline = 'middle';\n      titleFont = toFont(options.titleFont);\n      titleSpacing = options.titleSpacing;\n      ctx.fillStyle = options.titleColor;\n      ctx.font = titleFont.string;\n\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n        pt.y += titleFont.lineHeight + titleSpacing;\n\n        if (i + 1 === length) {\n          pt.y += options.titleMarginBottom - titleSpacing;\n        }\n      }\n    }\n  }\n\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\n    const me = this;\n    const labelColors = me.labelColors[i];\n    const labelPointStyle = me.labelPointStyles[i];\n    const {\n      boxHeight,\n      boxWidth\n    } = options;\n    const bodyFont = toFont(options.bodyFont);\n    const colorX = getAlignedX(me, 'left', options);\n    const rtlColorX = rtlHelper.x(colorX);\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n    const colorY = pt.y + yOffSet;\n\n    if (options.usePointStyle) {\n      const drawOptions = {\n        radius: Math.min(boxWidth, boxHeight) / 2,\n        pointStyle: labelPointStyle.pointStyle,\n        rotation: labelPointStyle.rotation,\n        borderWidth: 1\n      };\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n      const centerY = colorY + boxHeight / 2;\n      ctx.strokeStyle = options.multiKeyBackground;\n      ctx.fillStyle = options.multiKeyBackground;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.fillStyle = labelColors.backgroundColor;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n    } else {\n      ctx.lineWidth = labelColors.borderWidth || 1;\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.setLineDash(labelColors.borderDash || []);\n      ctx.lineDashOffset = labelColors.borderDashOffset || 0;\n      const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth);\n      const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2);\n      const borderRadius = toTRBLCorners(labelColors.borderRadius);\n\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        ctx.fillStyle = options.multiKeyBackground;\n        addRoundedRectPath(ctx, {\n          x: outerX,\n          y: colorY,\n          w: boxWidth,\n          h: boxHeight,\n          radius: borderRadius\n        });\n        ctx.fill();\n        ctx.stroke();\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: innerX,\n          y: colorY + 1,\n          w: boxWidth - 2,\n          h: boxHeight - 2,\n          radius: borderRadius\n        });\n        ctx.fill();\n      } else {\n        ctx.fillStyle = options.multiKeyBackground;\n        ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n      }\n    }\n\n    ctx.fillStyle = me.labelTextColors[i];\n  }\n\n  drawBody(pt, ctx, options) {\n    const me = this;\n    const {\n      body\n    } = me;\n    const {\n      bodySpacing,\n      bodyAlign,\n      displayColors,\n      boxHeight,\n      boxWidth\n    } = options;\n    const bodyFont = toFont(options.bodyFont);\n    let bodyLineHeight = bodyFont.lineHeight;\n    let xLinePadding = 0;\n    const rtlHelper = getRtlAdapter(options.rtl, me.x, me.width);\n\n    const fillLineOfText = function (line) {\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n      pt.y += bodyLineHeight + bodySpacing;\n    };\n\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\n    ctx.textAlign = bodyAlign;\n    ctx.textBaseline = 'middle';\n    ctx.font = bodyFont.string;\n    pt.x = getAlignedX(me, bodyAlignForCalculation, options);\n    ctx.fillStyle = options.bodyColor;\n    each(me.beforeBody, fillLineOfText);\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right' ? bodyAlign === 'center' ? boxWidth / 2 + 1 : boxWidth + 2 : 0;\n\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\n      bodyItem = body[i];\n      textColor = me.labelTextColors[i];\n      ctx.fillStyle = textColor;\n      each(bodyItem.before, fillLineOfText);\n      lines = bodyItem.lines;\n\n      if (displayColors && lines.length) {\n        me._drawColorBox(ctx, pt, i, rtlHelper, options);\n\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n      }\n\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\n        fillLineOfText(lines[j]);\n        bodyLineHeight = bodyFont.lineHeight;\n      }\n\n      each(bodyItem.after, fillLineOfText);\n    }\n\n    xLinePadding = 0;\n    bodyLineHeight = bodyFont.lineHeight;\n    each(me.afterBody, fillLineOfText);\n    pt.y -= bodySpacing;\n  }\n\n  drawFooter(pt, ctx, options) {\n    const me = this;\n    const footer = me.footer;\n    const length = footer.length;\n    let footerFont, i;\n\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, me.x, me.width);\n      pt.x = getAlignedX(me, options.footerAlign, options);\n      pt.y += options.footerMarginTop;\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n      ctx.textBaseline = 'middle';\n      footerFont = toFont(options.footerFont);\n      ctx.fillStyle = options.footerColor;\n      ctx.font = footerFont.string;\n\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n        pt.y += footerFont.lineHeight + options.footerSpacing;\n      }\n    }\n  }\n\n  drawBackground(pt, ctx, tooltipSize, options) {\n    const {\n      xAlign,\n      yAlign\n    } = this;\n    const {\n      x,\n      y\n    } = pt;\n    const {\n      width,\n      height\n    } = tooltipSize;\n    const radius = options.cornerRadius;\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.beginPath();\n    ctx.moveTo(x + radius, y);\n\n    if (yAlign === 'top') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n\n    ctx.lineTo(x + width - radius, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n\n    ctx.lineTo(x + width, y + height - radius);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n\n    ctx.lineTo(x + radius, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n\n    ctx.lineTo(x, y + radius);\n    ctx.quadraticCurveTo(x, y, x + radius, y);\n    ctx.closePath();\n    ctx.fill();\n\n    if (options.borderWidth > 0) {\n      ctx.stroke();\n    }\n  }\n\n  _updateAnimationTarget(options) {\n    const me = this;\n    const chart = me._chart;\n    const anims = me.$animations;\n    const animX = anims && anims.x;\n    const animY = anims && anims.y;\n\n    if (animX || animY) {\n      const position = positioners[options.position].call(me, me._active, me._eventPosition);\n\n      if (!position) {\n        return;\n      }\n\n      const size = me._size = getTooltipSize(me, options);\n      const positionAndSize = Object.assign({}, position, me._size);\n      const alignment = determineAlignment(chart, options, positionAndSize);\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n\n      if (animX._to !== point.x || animY._to !== point.y) {\n        me.xAlign = alignment.xAlign;\n        me.yAlign = alignment.yAlign;\n        me.width = size.width;\n        me.height = size.height;\n        me.caretX = position.x;\n        me.caretY = position.y;\n\n        me._resolveAnimations().update(me, point);\n      }\n    }\n  }\n\n  draw(ctx) {\n    const me = this;\n    const options = me.options.setContext(me.getContext());\n    let opacity = me.opacity;\n\n    if (!opacity) {\n      return;\n    }\n\n    me._updateAnimationTarget(options);\n\n    const tooltipSize = {\n      width: me.width,\n      height: me.height\n    };\n    const pt = {\n      x: me.x,\n      y: me.y\n    };\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n    const padding = toPadding(options.padding);\n    const hasTooltipContent = me.title.length || me.beforeBody.length || me.body.length || me.afterBody.length || me.footer.length;\n\n    if (options.enabled && hasTooltipContent) {\n      ctx.save();\n      ctx.globalAlpha = opacity;\n      me.drawBackground(pt, ctx, tooltipSize, options);\n      overrideTextDirection(ctx, options.textDirection);\n      pt.y += padding.top;\n      me.drawTitle(pt, ctx, options);\n      me.drawBody(pt, ctx, options);\n      me.drawFooter(pt, ctx, options);\n      restoreTextDirection(ctx, options.textDirection);\n      ctx.restore();\n    }\n  }\n\n  getActiveElements() {\n    return this._active || [];\n  }\n\n  setActiveElements(activeElements, eventPosition) {\n    const me = this;\n    const lastActive = me._active;\n    const active = activeElements.map(({\n      datasetIndex,\n      index\n    }) => {\n      const meta = me._chart.getDatasetMeta(datasetIndex);\n\n      if (!meta) {\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\n      }\n\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index\n      };\n    });\n    const changed = !_elementsEqual(lastActive, active);\n\n    const positionChanged = me._positionChanged(active, eventPosition);\n\n    if (changed || positionChanged) {\n      me._active = active;\n      me._eventPosition = eventPosition;\n      me.update(true);\n    }\n  }\n\n  handleEvent(e, replay) {\n    const me = this;\n    const options = me.options;\n    const lastActive = me._active || [];\n    let changed = false;\n    let active = [];\n\n    if (e.type !== 'mouseout') {\n      active = me._chart.getElementsAtEventForMode(e, options.mode, options, replay);\n\n      if (options.reverse) {\n        active.reverse();\n      }\n    }\n\n    const positionChanged = me._positionChanged(active, e);\n\n    changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n\n    if (changed) {\n      me._active = active;\n\n      if (options.enabled || options.external) {\n        me._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n        me.update(true, replay);\n      }\n    }\n\n    return changed;\n  }\n\n  _positionChanged(active, e) {\n    const {\n      caretX,\n      caretY,\n      options\n    } = this;\n    const position = positioners[options.position].call(this, active, e);\n    return position !== false && (caretX !== position.x || caretY !== position.y);\n  }\n\n}\n\nTooltip.positioners = positioners;\nvar plugin_tooltip = {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners,\n\n  afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({\n        _chart: chart,\n        options\n      });\n    }\n  },\n\n  beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n\n  reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n\n  afterDraw(chart) {\n    const tooltip = chart.tooltip;\n    const args = {\n      tooltip\n    };\n\n    if (chart.notifyPlugins('beforeTooltipDraw', args) === false) {\n      return;\n    }\n\n    if (tooltip) {\n      tooltip.draw(chart.ctx);\n    }\n\n    chart.notifyPlugins('afterTooltipDraw', args);\n  },\n\n  afterEvent(chart, args) {\n    if (chart.tooltip) {\n      const useFinalPosition = args.replay;\n\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition)) {\n        args.changed = true;\n      }\n    }\n  },\n\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold'\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {},\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold'\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart'\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY']\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: {\n      beforeTitle: noop,\n\n      title(tooltipItems) {\n        if (tooltipItems.length > 0) {\n          const item = tooltipItems[0];\n          const labels = item.chart.data.labels;\n          const labelCount = labels ? labels.length : 0;\n\n          if (this && this.options && this.options.mode === 'dataset') {\n            return item.dataset.label || '';\n          } else if (item.label) {\n            return item.label;\n          } else if (labelCount > 0 && item.dataIndex < labelCount) {\n            return labels[item.dataIndex];\n          }\n        }\n\n        return '';\n      },\n\n      afterTitle: noop,\n      beforeBody: noop,\n      beforeLabel: noop,\n\n      label(tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n          return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n\n        let label = tooltipItem.dataset.label || '';\n\n        if (label) {\n          label += ': ';\n        }\n\n        const value = tooltipItem.formattedValue;\n\n        if (!isNullOrUndef(value)) {\n          label += value;\n        }\n\n        return label;\n      },\n\n      labelColor(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          borderColor: options.borderColor,\n          backgroundColor: options.backgroundColor,\n          borderWidth: options.borderWidth,\n          borderDash: options.borderDash,\n          borderDashOffset: options.borderDashOffset,\n          borderRadius: 0\n        };\n      },\n\n      labelTextColor() {\n        return this.options.bodyColor;\n      },\n\n      labelPointStyle(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          pointStyle: options.pointStyle,\n          rotation: options.rotation\n        };\n      },\n\n      afterLabel: noop,\n      afterBody: noop,\n      beforeFooter: noop,\n      footer: noop,\n      afterFooter: noop\n    }\n  },\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n  descriptors: {\n    _scriptable: name => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n  additionalOptionScopes: ['interaction']\n};\nvar plugins = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  Decimation: plugin_decimation,\n  Filler: plugin_filler,\n  Legend: plugin_legend,\n  SubTitle: plugin_subtitle,\n  Title: plugin_title,\n  Tooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index) => typeof raw === 'string' ? labels.push(raw) - 1 : isNaN(raw) ? null : index;\n\nfunction findOrAddLabel(labels, raw, index) {\n  const first = labels.indexOf(raw);\n\n  if (first === -1) {\n    return addIfString(labels, raw, index);\n  }\n\n  const last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\n\nconst validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\n\nclass CategoryScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n\n    const labels = this.getLabels();\n    index = isFinite(index) && labels[index] === raw ? index : findOrAddLabel(labels, raw, valueOrDefault(index, raw));\n    return validIndex(index, labels.length - 1);\n  }\n\n  determineDataLimits() {\n    const me = this;\n    const {\n      minDefined,\n      maxDefined\n    } = me.getUserBounds();\n    let {\n      min,\n      max\n    } = me.getMinMax(true);\n\n    if (me.options.bounds === 'ticks') {\n      if (!minDefined) {\n        min = 0;\n      }\n\n      if (!maxDefined) {\n        max = me.getLabels().length - 1;\n      }\n    }\n\n    me.min = min;\n    me.max = max;\n  }\n\n  buildTicks() {\n    const me = this;\n    const min = me.min;\n    const max = me.max;\n    const offset = me.options.offset;\n    const ticks = [];\n    let labels = me.getLabels();\n    labels = min === 0 && max === labels.length - 1 ? labels : labels.slice(min, max + 1);\n    me._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n    me._startValue = me.min - (offset ? 0.5 : 0);\n\n    for (let value = min; value <= max; value++) {\n      ticks.push({\n        value\n      });\n    }\n\n    return ticks;\n  }\n\n  getLabelForValue(value) {\n    const me = this;\n    const labels = me.getLabels();\n\n    if (value >= 0 && value < labels.length) {\n      return labels[value];\n    }\n\n    return value;\n  }\n\n  configure() {\n    const me = this;\n    super.configure();\n\n    if (!me.isHorizontal()) {\n      me._reversePixels = !me._reversePixels;\n    }\n  }\n\n  getPixelForValue(value) {\n    const me = this;\n\n    if (typeof value !== 'number') {\n      value = me.parse(value);\n    }\n\n    return value === null ? NaN : me.getPixelForDecimal((value - me._startValue) / me._valueRange);\n  }\n\n  getPixelForTick(index) {\n    const me = this;\n    const ticks = me.ticks;\n\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n\n    return me.getPixelForValue(ticks[index].value);\n  }\n\n  getValueForPixel(pixel) {\n    const me = this;\n    return Math.round(me._startValue + me.getDecimalForPixel(pixel) * me._valueRange);\n  }\n\n  getBasePixel() {\n    return this.bottom;\n  }\n\n}\n\nCategoryScale.id = 'category';\nCategoryScale.defaults = {\n  ticks: {\n    callback: CategoryScale.prototype.getLabelForValue\n  }\n};\n\nfunction generateTicks$1(generationOptions, dataRange) {\n  const ticks = [];\n  const MIN_SPACING = 1e-14;\n  const {\n    bounds,\n    step,\n    min,\n    max,\n    precision,\n    count,\n    maxTicks,\n    maxDigits,\n    includeBounds\n  } = generationOptions;\n  const unit = step || 1;\n  const maxSpaces = maxTicks - 1;\n  const {\n    min: rmin,\n    max: rmax\n  } = dataRange;\n  const minDefined = !isNullOrUndef(min);\n  const maxDefined = !isNullOrUndef(max);\n  const countDefined = !isNullOrUndef(count);\n  const minSpacing = (rmax - rmin) / (maxDigits + 1);\n  let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  let factor, niceMin, niceMax, numSpaces;\n\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{\n      value: rmin\n    }, {\n      value: rmax\n    }];\n  }\n\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n\n  if (numSpaces > maxSpaces) {\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n\n  if (!isNullOrUndef(precision)) {\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n\n  if (bounds === 'ticks') {\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing;\n  } else {\n    niceMin = rmin;\n    niceMax = rmax;\n  }\n\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    numSpaces = (niceMax - niceMin) / spacing;\n\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n\n  const decimalPlaces = Math.max(_decimalPlaces(spacing), _decimalPlaces(niceMin));\n  factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n  let j = 0;\n\n  if (minDefined) {\n    if (includeBounds && niceMin !== min) {\n      ticks.push({\n        value: min\n      });\n\n      if (niceMin < min) {\n        j++;\n      }\n\n      if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n        j++;\n      }\n    } else if (niceMin < min) {\n      j++;\n    }\n  }\n\n  for (; j < numSpaces; ++j) {\n    ticks.push({\n      value: Math.round((niceMin + j * spacing) * factor) / factor\n    });\n  }\n\n  if (maxDefined && includeBounds && niceMax !== max) {\n    if (almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({\n        value: max\n      });\n    }\n  } else if (!maxDefined || niceMax === max) {\n    ticks.push({\n      value: niceMax\n    });\n  }\n\n  return ticks;\n}\n\nfunction relativeLabelSize(value, minSpacing, {\n  horizontal,\n  minRotation\n}) {\n  const rad = toRadians(minRotation);\n  const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n  const length = 0.75 * minSpacing * ('' + value).length;\n  return Math.min(minSpacing / ratio, length);\n}\n\nclass LinearScaleBase extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._endValue = undefined;\n    this._valueRange = 0;\n  }\n\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n      return null;\n    }\n\n    return +raw;\n  }\n\n  handleTickRangeOptions() {\n    const me = this;\n    const {\n      beginAtZero\n    } = me.options;\n    const {\n      minDefined,\n      maxDefined\n    } = me.getUserBounds();\n    let {\n      min,\n      max\n    } = me;\n\n    const setMin = v => min = minDefined ? min : v;\n\n    const setMax = v => max = maxDefined ? max : v;\n\n    if (beginAtZero) {\n      const minSign = sign(min);\n      const maxSign = sign(max);\n\n      if (minSign < 0 && maxSign < 0) {\n        setMax(0);\n      } else if (minSign > 0 && maxSign > 0) {\n        setMin(0);\n      }\n    }\n\n    if (min === max) {\n      let offset = 1;\n\n      if (max >= Number.MAX_SAFE_INTEGER || min <= Number.MIN_SAFE_INTEGER) {\n        offset = Math.abs(max * 0.05);\n      }\n\n      setMax(max + offset);\n\n      if (!beginAtZero) {\n        setMin(min - offset);\n      }\n    }\n\n    me.min = min;\n    me.max = max;\n  }\n\n  getTickLimit() {\n    const me = this;\n    const tickOpts = me.options.ticks;\n    let {\n      maxTicksLimit,\n      stepSize\n    } = tickOpts;\n    let maxTicks;\n\n    if (stepSize) {\n      maxTicks = Math.ceil(me.max / stepSize) - Math.floor(me.min / stepSize) + 1;\n    } else {\n      maxTicks = me.computeTickLimit();\n      maxTicksLimit = maxTicksLimit || 11;\n    }\n\n    if (maxTicksLimit) {\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\n    }\n\n    return maxTicks;\n  }\n\n  computeTickLimit() {\n    return Number.POSITIVE_INFINITY;\n  }\n\n  buildTicks() {\n    const me = this;\n    const opts = me.options;\n    const tickOpts = opts.ticks;\n    let maxTicks = me.getTickLimit();\n    maxTicks = Math.max(2, maxTicks);\n    const numericGeneratorOptions = {\n      maxTicks,\n      bounds: opts.bounds,\n      min: opts.min,\n      max: opts.max,\n      precision: tickOpts.precision,\n      step: tickOpts.stepSize,\n      count: tickOpts.count,\n      maxDigits: me._maxDigits(),\n      horizontal: me.isHorizontal(),\n      minRotation: tickOpts.minRotation || 0,\n      includeBounds: tickOpts.includeBounds !== false\n    };\n    const dataRange = me._range || me;\n    const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, me, 'value');\n    }\n\n    if (opts.reverse) {\n      ticks.reverse();\n      me.start = me.max;\n      me.end = me.min;\n    } else {\n      me.start = me.min;\n      me.end = me.max;\n    }\n\n    return ticks;\n  }\n\n  configure() {\n    const me = this;\n    const ticks = me.ticks;\n    let start = me.min;\n    let end = me.max;\n    super.configure();\n\n    if (me.options.offset && ticks.length) {\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n      start -= offset;\n      end += offset;\n    }\n\n    me._startValue = start;\n    me._endValue = end;\n    me._valueRange = end - start;\n  }\n\n  getLabelForValue(value) {\n    return formatNumber(value, this.chart.options.locale);\n  }\n\n}\n\nclass LinearScale extends LinearScaleBase {\n  determineDataLimits() {\n    const me = this;\n    const {\n      min,\n      max\n    } = me.getMinMax(true);\n    me.min = isNumberFinite(min) ? min : 0;\n    me.max = isNumberFinite(max) ? max : 1;\n    me.handleTickRangeOptions();\n  }\n\n  computeTickLimit() {\n    const me = this;\n    const horizontal = me.isHorizontal();\n    const length = horizontal ? me.width : me.height;\n    const minRotation = toRadians(me.options.ticks.minRotation);\n    const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n\n    const tickFont = me._resolveTickFontOptions(0);\n\n    return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n  }\n\n  getPixelForValue(value) {\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n\n  getValueForPixel(pixel) {\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n  }\n\n}\n\nLinearScale.id = 'linear';\nLinearScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.numeric\n  }\n};\n\nfunction isMajor(tickVal) {\n  const remain = tickVal / Math.pow(10, Math.floor(log10(tickVal)));\n  return remain === 1;\n}\n\nfunction generateTicks(generationOptions, dataRange) {\n  const endExp = Math.floor(log10(dataRange.max));\n  const endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n  const ticks = [];\n  let tickVal = finiteOrDefault(generationOptions.min, Math.pow(10, Math.floor(log10(dataRange.min))));\n  let exp = Math.floor(log10(tickVal));\n  let significand = Math.floor(tickVal / Math.pow(10, exp));\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n\n  do {\n    ticks.push({\n      value: tickVal,\n      major: isMajor(tickVal)\n    });\n    ++significand;\n\n    if (significand === 10) {\n      significand = 1;\n      ++exp;\n      precision = exp >= 0 ? 1 : precision;\n    }\n\n    tickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n  } while (exp < endExp || exp === endExp && significand < endSignificand);\n\n  const lastTick = finiteOrDefault(generationOptions.max, tickVal);\n  ticks.push({\n    value: lastTick,\n    major: isMajor(tickVal)\n  });\n  return ticks;\n}\n\nclass LogarithmicScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n\n  parse(raw, index) {\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n\n    if (value === 0) {\n      this._zero = true;\n      return undefined;\n    }\n\n    return isNumberFinite(value) && value > 0 ? value : null;\n  }\n\n  determineDataLimits() {\n    const me = this;\n    const {\n      min,\n      max\n    } = me.getMinMax(true);\n    me.min = isNumberFinite(min) ? Math.max(0, min) : null;\n    me.max = isNumberFinite(max) ? Math.max(0, max) : null;\n\n    if (me.options.beginAtZero) {\n      me._zero = true;\n    }\n\n    me.handleTickRangeOptions();\n  }\n\n  handleTickRangeOptions() {\n    const me = this;\n    const {\n      minDefined,\n      maxDefined\n    } = me.getUserBounds();\n    let min = me.min;\n    let max = me.max;\n\n    const setMin = v => min = minDefined ? min : v;\n\n    const setMax = v => max = maxDefined ? max : v;\n\n    const exp = (v, m) => Math.pow(10, Math.floor(log10(v)) + m);\n\n    if (min === max) {\n      if (min <= 0) {\n        setMin(1);\n        setMax(10);\n      } else {\n        setMin(exp(min, -1));\n        setMax(exp(max, +1));\n      }\n    }\n\n    if (min <= 0) {\n      setMin(exp(max, -1));\n    }\n\n    if (max <= 0) {\n      setMax(exp(min, +1));\n    }\n\n    if (me._zero && me.min !== me._suggestedMin && min === exp(me.min, 0)) {\n      setMin(exp(min, -1));\n    }\n\n    me.min = min;\n    me.max = max;\n  }\n\n  buildTicks() {\n    const me = this;\n    const opts = me.options;\n    const generationOptions = {\n      min: me._userMin,\n      max: me._userMax\n    };\n    const ticks = generateTicks(generationOptions, me);\n\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, me, 'value');\n    }\n\n    if (opts.reverse) {\n      ticks.reverse();\n      me.start = me.max;\n      me.end = me.min;\n    } else {\n      me.start = me.min;\n      me.end = me.max;\n    }\n\n    return ticks;\n  }\n\n  getLabelForValue(value) {\n    return value === undefined ? '0' : formatNumber(value, this.chart.options.locale);\n  }\n\n  configure() {\n    const me = this;\n    const start = me.min;\n    super.configure();\n    me._startValue = log10(start);\n    me._valueRange = log10(me.max) - log10(start);\n  }\n\n  getPixelForValue(value) {\n    const me = this;\n\n    if (value === undefined || value === 0) {\n      value = me.min;\n    }\n\n    if (value === null || isNaN(value)) {\n      return NaN;\n    }\n\n    return me.getPixelForDecimal(value === me.min ? 0 : (log10(value) - me._startValue) / me._valueRange);\n  }\n\n  getValueForPixel(pixel) {\n    const me = this;\n    const decimal = me.getDecimalForPixel(pixel);\n    return Math.pow(10, me._startValue + decimal * me._valueRange);\n  }\n\n}\n\nLogarithmicScale.id = 'logarithmic';\nLogarithmicScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.logarithmic,\n    major: {\n      enabled: true\n    }\n  }\n};\n\nfunction getTickBackdropHeight(opts) {\n  const tickOpts = opts.ticks;\n\n  if (tickOpts.display && opts.display) {\n    const padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n\n  return 0;\n}\n\nfunction measureLabelSize(ctx, font, label) {\n  label = isArray(label) ? label : [label];\n  return {\n    w: _longestText(ctx, font.string, label),\n    h: label.length * font.lineHeight\n  };\n}\n\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - size / 2,\n      end: pos + size / 2\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\n\nfunction fitWithPointLabels(scale) {\n  const furthestLimits = {\n    l: 0,\n    r: scale.width,\n    t: 0,\n    b: scale.height - scale.paddingTop\n  };\n  const furthestAngles = {};\n  const labelSizes = [];\n  const padding = [];\n  const valueCount = scale.getLabels().length;\n\n  for (let i = 0; i < valueCount; i++) {\n    const opts = scale.options.pointLabels.setContext(scale.getPointLabelContext(i));\n    padding[i] = opts.padding;\n    const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i]);\n    const plFont = toFont(opts.font);\n    const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n    const angleRadians = scale.getIndexAngle(i);\n    const angle = toDegrees(angleRadians);\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n\n    if (hLimits.start < furthestLimits.l) {\n      furthestLimits.l = hLimits.start;\n      furthestAngles.l = angleRadians;\n    }\n\n    if (hLimits.end > furthestLimits.r) {\n      furthestLimits.r = hLimits.end;\n      furthestAngles.r = angleRadians;\n    }\n\n    if (vLimits.start < furthestLimits.t) {\n      furthestLimits.t = vLimits.start;\n      furthestAngles.t = angleRadians;\n    }\n\n    if (vLimits.end > furthestLimits.b) {\n      furthestLimits.b = vLimits.end;\n      furthestAngles.b = angleRadians;\n    }\n  }\n\n  scale._setReductions(scale.drawingArea, furthestLimits, furthestAngles);\n\n  scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\n\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n  const items = [];\n  const valueCount = scale.getLabels().length;\n  const opts = scale.options;\n  const tickBackdropHeight = getTickBackdropHeight(opts);\n  const outerDistance = scale.getDistanceFromCenterForValue(opts.ticks.reverse ? scale.min : scale.max);\n\n  for (let i = 0; i < valueCount; i++) {\n    const extra = i === 0 ? tickBackdropHeight / 2 : 0;\n    const pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + padding[i]);\n    const angle = toDegrees(scale.getIndexAngle(i));\n    const size = labelSizes[i];\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n    items.push({\n      x: pointLabelPosition.x,\n      y,\n      textAlign,\n      left,\n      top: y,\n      right: left + size.w,\n      bottom: y + size.h\n    });\n  }\n\n  return items;\n}\n\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n\n  return 'right';\n}\n\nfunction leftForTextAlign(x, w, align) {\n  if (align === 'right') {\n    x -= w;\n  } else if (align === 'center') {\n    x -= w / 2;\n  }\n\n  return x;\n}\n\nfunction yForAngle(y, h, angle) {\n  if (angle === 90 || angle === 270) {\n    y -= h / 2;\n  } else if (angle > 270 || angle < 90) {\n    y -= h;\n  }\n\n  return y;\n}\n\nfunction drawPointLabels(scale, labelCount) {\n  const {\n    ctx,\n    options: {\n      pointLabels\n    }\n  } = scale;\n\n  for (let i = labelCount - 1; i >= 0; i--) {\n    const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n    const plFont = toFont(optsAtIndex.font);\n    const {\n      x,\n      y,\n      textAlign,\n      left,\n      top,\n      right,\n      bottom\n    } = scale._pointLabelItems[i];\n    const {\n      backdropColor\n    } = optsAtIndex;\n\n    if (!isNullOrUndef(backdropColor)) {\n      const padding = toPadding(optsAtIndex.backdropPadding);\n      ctx.fillStyle = backdropColor;\n      ctx.fillRect(left - padding.left, top - padding.top, right - left + padding.width, bottom - top + padding.height);\n    }\n\n    renderText(ctx, scale._pointLabels[i], x, y + plFont.lineHeight / 2, plFont, {\n      color: optsAtIndex.color,\n      textAlign: textAlign,\n      textBaseline: 'middle'\n    });\n  }\n}\n\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  const {\n    ctx\n  } = scale;\n\n  if (circular) {\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    let pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n\n    for (let i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\n\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount) {\n  const ctx = scale.ctx;\n  const circular = gridLineOpts.circular;\n  const {\n    color,\n    lineWidth\n  } = gridLineOpts;\n\n  if (!circular && !labelCount || !color || !lineWidth || radius < 0) {\n    return;\n  }\n\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(gridLineOpts.borderDash);\n  ctx.lineDashOffset = gridLineOpts.borderDashOffset;\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\n\nfunction numberOrZero(param) {\n  return isNumber(param) ? param : 0;\n}\n\nfunction createPointLabelContext(parent, index, label) {\n  return Object.assign(Object.create(parent), {\n    label,\n    index,\n    type: 'pointLabel'\n  });\n}\n\nclass RadialLinearScale extends LinearScaleBase {\n  constructor(cfg) {\n    super(cfg);\n    this.xCenter = undefined;\n    this.yCenter = undefined;\n    this.drawingArea = undefined;\n    this._pointLabels = [];\n    this._pointLabelItems = [];\n  }\n\n  setDimensions() {\n    const me = this;\n    me.width = me.maxWidth;\n    me.height = me.maxHeight;\n    me.paddingTop = getTickBackdropHeight(me.options) / 2;\n    me.xCenter = Math.floor(me.width / 2);\n    me.yCenter = Math.floor((me.height - me.paddingTop) / 2);\n    me.drawingArea = Math.min(me.height - me.paddingTop, me.width) / 2;\n  }\n\n  determineDataLimits() {\n    const me = this;\n    const {\n      min,\n      max\n    } = me.getMinMax(false);\n    me.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n    me.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n    me.handleTickRangeOptions();\n  }\n\n  computeTickLimit() {\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n  }\n\n  generateTickLabels(ticks) {\n    const me = this;\n    LinearScaleBase.prototype.generateTickLabels.call(me, ticks);\n    me._pointLabels = me.getLabels().map((value, index) => {\n      const label = callback(me.options.pointLabels.callback, [value, index], me);\n      return label || label === 0 ? label : '';\n    });\n  }\n\n  fit() {\n    const me = this;\n    const opts = me.options;\n\n    if (opts.display && opts.pointLabels.display) {\n      fitWithPointLabels(me);\n    } else {\n      me.setCenterPoint(0, 0, 0, 0);\n    }\n  }\n\n  _setReductions(largestPossibleRadius, furthestLimits, furthestAngles) {\n    const me = this;\n    let radiusReductionLeft = furthestLimits.l / Math.sin(furthestAngles.l);\n    let radiusReductionRight = Math.max(furthestLimits.r - me.width, 0) / Math.sin(furthestAngles.r);\n    let radiusReductionTop = -furthestLimits.t / Math.cos(furthestAngles.t);\n    let radiusReductionBottom = -Math.max(furthestLimits.b - (me.height - me.paddingTop), 0) / Math.cos(furthestAngles.b);\n    radiusReductionLeft = numberOrZero(radiusReductionLeft);\n    radiusReductionRight = numberOrZero(radiusReductionRight);\n    radiusReductionTop = numberOrZero(radiusReductionTop);\n    radiusReductionBottom = numberOrZero(radiusReductionBottom);\n    me.drawingArea = Math.max(largestPossibleRadius / 2, Math.min(Math.floor(largestPossibleRadius - (radiusReductionLeft + radiusReductionRight) / 2), Math.floor(largestPossibleRadius - (radiusReductionTop + radiusReductionBottom) / 2)));\n    me.setCenterPoint(radiusReductionLeft, radiusReductionRight, radiusReductionTop, radiusReductionBottom);\n  }\n\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n    const me = this;\n    const maxRight = me.width - rightMovement - me.drawingArea;\n    const maxLeft = leftMovement + me.drawingArea;\n    const maxTop = topMovement + me.drawingArea;\n    const maxBottom = me.height - me.paddingTop - bottomMovement - me.drawingArea;\n    me.xCenter = Math.floor((maxLeft + maxRight) / 2 + me.left);\n    me.yCenter = Math.floor((maxTop + maxBottom) / 2 + me.top + me.paddingTop);\n  }\n\n  getIndexAngle(index) {\n    const angleMultiplier = TAU / this.getLabels().length;\n    const startAngle = this.options.startAngle || 0;\n    return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n  }\n\n  getDistanceFromCenterForValue(value) {\n    const me = this;\n\n    if (isNullOrUndef(value)) {\n      return NaN;\n    }\n\n    const scalingFactor = me.drawingArea / (me.max - me.min);\n\n    if (me.options.reverse) {\n      return (me.max - value) * scalingFactor;\n    }\n\n    return (value - me.min) * scalingFactor;\n  }\n\n  getValueForDistanceFromCenter(distance) {\n    if (isNullOrUndef(distance)) {\n      return NaN;\n    }\n\n    const me = this;\n    const scaledDistance = distance / (me.drawingArea / (me.max - me.min));\n    return me.options.reverse ? me.max - scaledDistance : me.min + scaledDistance;\n  }\n\n  getPointLabelContext(index) {\n    const me = this;\n    const pointLabels = me._pointLabels || [];\n\n    if (index >= 0 && index < pointLabels.length) {\n      const pointLabel = pointLabels[index];\n      return createPointLabelContext(me.getContext(), index, pointLabel);\n    }\n  }\n\n  getPointPosition(index, distanceFromCenter) {\n    const me = this;\n    const angle = me.getIndexAngle(index) - HALF_PI;\n    return {\n      x: Math.cos(angle) * distanceFromCenter + me.xCenter,\n      y: Math.sin(angle) * distanceFromCenter + me.yCenter,\n      angle\n    };\n  }\n\n  getPointPositionForValue(index, value) {\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n  }\n\n  getBasePosition(index) {\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\n  }\n\n  getPointLabelPosition(index) {\n    const {\n      left,\n      top,\n      right,\n      bottom\n    } = this._pointLabelItems[index];\n    return {\n      left,\n      top,\n      right,\n      bottom\n    };\n  }\n\n  drawBackground() {\n    const me = this;\n    const {\n      backgroundColor,\n      grid: {\n        circular\n      }\n    } = me.options;\n\n    if (backgroundColor) {\n      const ctx = me.ctx;\n      ctx.save();\n      ctx.beginPath();\n      pathRadiusLine(me, me.getDistanceFromCenterForValue(me._endValue), circular, me.getLabels().length);\n      ctx.closePath();\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }\n\n  drawGrid() {\n    const me = this;\n    const ctx = me.ctx;\n    const opts = me.options;\n    const {\n      angleLines,\n      grid\n    } = opts;\n    const labelCount = me.getLabels().length;\n    let i, offset, position;\n\n    if (opts.pointLabels.display) {\n      drawPointLabels(me, labelCount);\n    }\n\n    if (grid.display) {\n      me.ticks.forEach((tick, index) => {\n        if (index !== 0) {\n          offset = me.getDistanceFromCenterForValue(tick.value);\n          const optsAtIndex = grid.setContext(me.getContext(index - 1));\n          drawRadiusLine(me, optsAtIndex, offset, labelCount);\n        }\n      });\n    }\n\n    if (angleLines.display) {\n      ctx.save();\n\n      for (i = me.getLabels().length - 1; i >= 0; i--) {\n        const optsAtIndex = angleLines.setContext(me.getPointLabelContext(i));\n        const {\n          color,\n          lineWidth\n        } = optsAtIndex;\n\n        if (!lineWidth || !color) {\n          continue;\n        }\n\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = color;\n        ctx.setLineDash(optsAtIndex.borderDash);\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n        offset = me.getDistanceFromCenterForValue(opts.ticks.reverse ? me.min : me.max);\n        position = me.getPointPosition(i, offset);\n        ctx.beginPath();\n        ctx.moveTo(me.xCenter, me.yCenter);\n        ctx.lineTo(position.x, position.y);\n        ctx.stroke();\n      }\n\n      ctx.restore();\n    }\n  }\n\n  drawBorder() {}\n\n  drawLabels() {\n    const me = this;\n    const ctx = me.ctx;\n    const opts = me.options;\n    const tickOpts = opts.ticks;\n\n    if (!tickOpts.display) {\n      return;\n    }\n\n    const startAngle = me.getIndexAngle(0);\n    let offset, width;\n    ctx.save();\n    ctx.translate(me.xCenter, me.yCenter);\n    ctx.rotate(startAngle);\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n    me.ticks.forEach((tick, index) => {\n      if (index === 0 && !opts.reverse) {\n        return;\n      }\n\n      const optsAtIndex = tickOpts.setContext(me.getContext(index));\n      const tickFont = toFont(optsAtIndex.font);\n      offset = me.getDistanceFromCenterForValue(me.ticks[index].value);\n\n      if (optsAtIndex.showLabelBackdrop) {\n        ctx.font = tickFont.string;\n        width = ctx.measureText(tick.label).width;\n        ctx.fillStyle = optsAtIndex.backdropColor;\n        const padding = toPadding(optsAtIndex.backdropPadding);\n        ctx.fillRect(-width / 2 - padding.left, -offset - tickFont.size / 2 - padding.top, width + padding.width, tickFont.size + padding.height);\n      }\n\n      renderText(ctx, tick.label, 0, -offset, tickFont, {\n        color: optsAtIndex.color\n      });\n    });\n    ctx.restore();\n  }\n\n  drawTitle() {}\n\n}\n\nRadialLinearScale.id = 'radialLinear';\nRadialLinearScale.defaults = {\n  display: true,\n  animate: true,\n  position: 'chartArea',\n  angleLines: {\n    display: true,\n    lineWidth: 1,\n    borderDash: [],\n    borderDashOffset: 0.0\n  },\n  grid: {\n    circular: false\n  },\n  startAngle: 0,\n  ticks: {\n    showLabelBackdrop: true,\n    callback: Ticks.formatters.numeric\n  },\n  pointLabels: {\n    backdropColor: undefined,\n    backdropPadding: 2,\n    display: true,\n    font: {\n      size: 10\n    },\n\n    callback(label) {\n      return label;\n    },\n\n    padding: 5\n  }\n};\nRadialLinearScale.defaultRoutes = {\n  'angleLines.color': 'borderColor',\n  'pointLabels.color': 'color',\n  'ticks.color': 'color'\n};\nRadialLinearScale.descriptors = {\n  angleLines: {\n    _fallback: 'grid'\n  }\n};\nconst INTERVALS = {\n  millisecond: {\n    common: true,\n    size: 1,\n    steps: 1000\n  },\n  second: {\n    common: true,\n    size: 1000,\n    steps: 60\n  },\n  minute: {\n    common: true,\n    size: 60000,\n    steps: 60\n  },\n  hour: {\n    common: true,\n    size: 3600000,\n    steps: 24\n  },\n  day: {\n    common: true,\n    size: 86400000,\n    steps: 30\n  },\n  week: {\n    common: false,\n    size: 604800000,\n    steps: 4\n  },\n  month: {\n    common: true,\n    size: 2.628e9,\n    steps: 12\n  },\n  quarter: {\n    common: false,\n    size: 7.884e9,\n    steps: 4\n  },\n  year: {\n    common: true,\n    size: 3.154e10\n  }\n};\nconst UNITS = Object.keys(INTERVALS);\n\nfunction sorter(a, b) {\n  return a - b;\n}\n\nfunction parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n\n  const adapter = scale._adapter;\n  const {\n    parser,\n    round,\n    isoWeekday\n  } = scale._parseOpts;\n  let value = input;\n\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n\n  if (!isNumberFinite(value)) {\n    value = typeof parser === 'string' ? adapter.parse(value, parser) : adapter.parse(value);\n  }\n\n  if (value === null) {\n    return null;\n  }\n\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true) ? adapter.startOf(value, 'isoWeek', isoWeekday) : adapter.startOf(value, round);\n  }\n\n  return +value;\n}\n\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  const ilen = UNITS.length;\n\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    const interval = INTERVALS[UNITS[i]];\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n\n  return UNITS[ilen - 1];\n}\n\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    const unit = UNITS[i];\n\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n\nfunction determineMajorUnit(unit) {\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\n\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    const {\n      lo,\n      hi\n    } = _lookup(timestamps, time);\n\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\n\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  const adapter = scale._adapter;\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\n  const last = ticks[ticks.length - 1].value;\n  let major, index;\n\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n\n  return ticks;\n}\n\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  const ticks = [];\n  const map = {};\n  const ilen = values.length;\n  let i, value;\n\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n    ticks.push({\n      value,\n      major: false\n    });\n  }\n\n  return ilen === 0 || !majorUnit ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\n\nclass TimeScale extends Scale {\n  constructor(props) {\n    super(props);\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n    this._unit = 'day';\n    this._majorUnit = undefined;\n    this._offsets = {};\n    this._normalized = false;\n    this._parseOpts = undefined;\n  }\n\n  init(scaleOpts, opts) {\n    const time = scaleOpts.time || (scaleOpts.time = {});\n    const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n    mergeIf(time.displayFormats, adapter.formats());\n    this._parseOpts = {\n      parser: time.parser,\n      round: time.round,\n      isoWeekday: time.isoWeekday\n    };\n    super.init(scaleOpts);\n    this._normalized = opts.normalized;\n  }\n\n  parse(raw, index) {\n    if (raw === undefined) {\n      return null;\n    }\n\n    return parse(this, raw);\n  }\n\n  beforeLayout() {\n    super.beforeLayout();\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n  }\n\n  determineDataLimits() {\n    const me = this;\n    const options = me.options;\n    const adapter = me._adapter;\n    const unit = options.time.unit || 'day';\n    let {\n      min,\n      max,\n      minDefined,\n      maxDefined\n    } = me.getUserBounds();\n\n    function _applyBounds(bounds) {\n      if (!minDefined && !isNaN(bounds.min)) {\n        min = Math.min(min, bounds.min);\n      }\n\n      if (!maxDefined && !isNaN(bounds.max)) {\n        max = Math.max(max, bounds.max);\n      }\n    }\n\n    if (!minDefined || !maxDefined) {\n      _applyBounds(me._getLabelBounds());\n\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n        _applyBounds(me.getMinMax(false));\n      }\n    }\n\n    min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n    max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n    me.min = Math.min(min, max - 1);\n    me.max = Math.max(min + 1, max);\n  }\n\n  _getLabelBounds() {\n    const arr = this.getLabelTimestamps();\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n\n    if (arr.length) {\n      min = arr[0];\n      max = arr[arr.length - 1];\n    }\n\n    return {\n      min,\n      max\n    };\n  }\n\n  buildTicks() {\n    const me = this;\n    const options = me.options;\n    const timeOpts = options.time;\n    const tickOpts = options.ticks;\n    const timestamps = tickOpts.source === 'labels' ? me.getLabelTimestamps() : me._generate();\n\n    if (options.bounds === 'ticks' && timestamps.length) {\n      me.min = me._userMin || timestamps[0];\n      me.max = me._userMax || timestamps[timestamps.length - 1];\n    }\n\n    const min = me.min;\n    const max = me.max;\n\n    const ticks = _filterBetween(timestamps, min, max);\n\n    me._unit = timeOpts.unit || (tickOpts.autoSkip ? determineUnitForAutoTicks(timeOpts.minUnit, me.min, me.max, me._getLabelCapacity(min)) : determineUnitForFormatting(me, ticks.length, timeOpts.minUnit, me.min, me.max));\n    me._majorUnit = !tickOpts.major.enabled || me._unit === 'year' ? undefined : determineMajorUnit(me._unit);\n    me.initOffsets(timestamps);\n\n    if (options.reverse) {\n      ticks.reverse();\n    }\n\n    return ticksFromTimestamps(me, ticks, me._majorUnit);\n  }\n\n  initOffsets(timestamps) {\n    const me = this;\n    let start = 0;\n    let end = 0;\n    let first, last;\n\n    if (me.options.offset && timestamps.length) {\n      first = me.getDecimalForValue(timestamps[0]);\n\n      if (timestamps.length === 1) {\n        start = 1 - first;\n      } else {\n        start = (me.getDecimalForValue(timestamps[1]) - first) / 2;\n      }\n\n      last = me.getDecimalForValue(timestamps[timestamps.length - 1]);\n\n      if (timestamps.length === 1) {\n        end = last;\n      } else {\n        end = (last - me.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n      }\n    }\n\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\n    start = _limitValue(start, 0, limit);\n    end = _limitValue(end, 0, limit);\n    me._offsets = {\n      start,\n      end,\n      factor: 1 / (start + 1 + end)\n    };\n  }\n\n  _generate() {\n    const me = this;\n    const adapter = me._adapter;\n    const min = me.min;\n    const max = me.max;\n    const options = me.options;\n    const timeOpts = options.time;\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, me._getLabelCapacity(min));\n    const stepSize = valueOrDefault(timeOpts.stepSize, 1);\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    const hasWeekday = isNumber(weekday) || weekday === true;\n    const ticks = {};\n    let first = min;\n    let time, count;\n\n    if (hasWeekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n    }\n\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n    }\n\n    const timestamps = options.ticks.source === 'data' && me.getDataTimestamps();\n\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n      addTick(ticks, time, timestamps);\n    }\n\n    if (time === max || options.bounds === 'ticks' || count === 1) {\n      addTick(ticks, time, timestamps);\n    }\n\n    return Object.keys(ticks).sort((a, b) => a - b).map(x => +x);\n  }\n\n  getLabelForValue(value) {\n    const me = this;\n    const adapter = me._adapter;\n    const timeOpts = me.options.time;\n\n    if (timeOpts.tooltipFormat) {\n      return adapter.format(value, timeOpts.tooltipFormat);\n    }\n\n    return adapter.format(value, timeOpts.displayFormats.datetime);\n  }\n\n  _tickFormatFunction(time, index, ticks, format) {\n    const me = this;\n    const options = me.options;\n    const formats = options.time.displayFormats;\n    const unit = me._unit;\n    const majorUnit = me._majorUnit;\n    const minorFormat = unit && formats[unit];\n    const majorFormat = majorUnit && formats[majorUnit];\n    const tick = ticks[index];\n    const major = majorUnit && majorFormat && tick && tick.major;\n\n    const label = me._adapter.format(time, format || (major ? majorFormat : minorFormat));\n\n    const formatter = options.ticks.callback;\n    return formatter ? callback(formatter, [label, index, ticks], me) : label;\n  }\n\n  generateTickLabels(ticks) {\n    let i, ilen, tick;\n\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\n    }\n  }\n\n  getDecimalForValue(value) {\n    const me = this;\n    return value === null ? NaN : (value - me.min) / (me.max - me.min);\n  }\n\n  getPixelForValue(value) {\n    const me = this;\n    const offsets = me._offsets;\n    const pos = me.getDecimalForValue(value);\n    return me.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n\n  getValueForPixel(pixel) {\n    const me = this;\n    const offsets = me._offsets;\n    const pos = me.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return me.min + pos * (me.max - me.min);\n  }\n\n  _getLabelSize(label) {\n    const me = this;\n    const ticksOpts = me.options.ticks;\n    const tickLabelWidth = me.ctx.measureText(label).width;\n    const angle = toRadians(me.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n    const cosRotation = Math.cos(angle);\n    const sinRotation = Math.sin(angle);\n\n    const tickFontSize = me._resolveTickFontOptions(0).size;\n\n    return {\n      w: tickLabelWidth * cosRotation + tickFontSize * sinRotation,\n      h: tickLabelWidth * sinRotation + tickFontSize * cosRotation\n    };\n  }\n\n  _getLabelCapacity(exampleTime) {\n    const me = this;\n    const timeOpts = me.options.time;\n    const displayFormats = timeOpts.displayFormats;\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n\n    const exampleLabel = me._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(me, [exampleTime], me._majorUnit), format);\n\n    const size = me._getLabelSize(exampleLabel);\n\n    const capacity = Math.floor(me.isHorizontal() ? me.width / size.w : me.height / size.h) - 1;\n    return capacity > 0 ? capacity : 1;\n  }\n\n  getDataTimestamps() {\n    const me = this;\n    let timestamps = me._cache.data || [];\n    let i, ilen;\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const metas = me.getMatchingVisibleMetas();\n\n    if (me._normalized && metas.length) {\n      return me._cache.data = metas[0].controller.getAllParsedValues(me);\n    }\n\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(me));\n    }\n\n    return me._cache.data = me.normalize(timestamps);\n  }\n\n  getLabelTimestamps() {\n    const me = this;\n    const timestamps = me._cache.labels || [];\n    let i, ilen;\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const labels = me.getLabels();\n\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      timestamps.push(parse(me, labels[i]));\n    }\n\n    return me._cache.labels = me._normalized ? timestamps : me.normalize(timestamps);\n  }\n\n  normalize(values) {\n    return _arrayUnique(values.sort(sorter));\n  }\n\n}\n\nTimeScale.id = 'time';\nTimeScale.defaults = {\n  bounds: 'data',\n  adapters: {},\n  time: {\n    parser: false,\n    unit: false,\n    round: false,\n    isoWeekday: false,\n    minUnit: 'millisecond',\n    displayFormats: {}\n  },\n  ticks: {\n    source: 'auto',\n    major: {\n      enabled: false\n    }\n  }\n};\n\nfunction interpolate(table, val, reverse) {\n  let lo = 0;\n  let hi = table.length - 1;\n  let prevSource, nextSource, prevTarget, nextTarget;\n\n  if (reverse) {\n    if (val >= table[lo].pos && val <= table[hi].pos) {\n      ({\n        lo,\n        hi\n      } = _lookupByKey(table, 'pos', val));\n    }\n\n    ({\n      pos: prevSource,\n      time: prevTarget\n    } = table[lo]);\n    ({\n      pos: nextSource,\n      time: nextTarget\n    } = table[hi]);\n  } else {\n    if (val >= table[lo].time && val <= table[hi].time) {\n      ({\n        lo,\n        hi\n      } = _lookupByKey(table, 'time', val));\n    }\n\n    ({\n      time: prevSource,\n      pos: prevTarget\n    } = table[lo]);\n    ({\n      time: nextSource,\n      pos: nextTarget\n    } = table[hi]);\n  }\n\n  const span = nextSource - prevSource;\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\n\nclass TimeSeriesScale extends TimeScale {\n  constructor(props) {\n    super(props);\n    this._table = [];\n    this._minPos = undefined;\n    this._tableRange = undefined;\n  }\n\n  initOffsets() {\n    const me = this;\n\n    const timestamps = me._getTimestampsForTable();\n\n    const table = me._table = me.buildLookupTable(timestamps);\n    me._minPos = interpolate(table, me.min);\n    me._tableRange = interpolate(table, me.max) - me._minPos;\n    super.initOffsets(timestamps);\n  }\n\n  buildLookupTable(timestamps) {\n    const {\n      min,\n      max\n    } = this;\n    const items = [];\n    const table = [];\n    let i, ilen, prev, curr, next;\n\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n\n      if (curr >= min && curr <= max) {\n        items.push(curr);\n      }\n    }\n\n    if (items.length < 2) {\n      return [{\n        time: min,\n        pos: 0\n      }, {\n        time: max,\n        pos: 1\n      }];\n    }\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      next = items[i + 1];\n      prev = items[i - 1];\n      curr = items[i];\n\n      if (Math.round((next + prev) / 2) !== curr) {\n        table.push({\n          time: curr,\n          pos: i / (ilen - 1)\n        });\n      }\n    }\n\n    return table;\n  }\n\n  _getTimestampsForTable() {\n    const me = this;\n    let timestamps = me._cache.all || [];\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const data = me.getDataTimestamps();\n    const label = me.getLabelTimestamps();\n\n    if (data.length && label.length) {\n      timestamps = me.normalize(data.concat(label));\n    } else {\n      timestamps = data.length ? data : label;\n    }\n\n    timestamps = me._cache.all = timestamps;\n    return timestamps;\n  }\n\n  getDecimalForValue(value) {\n    return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n  }\n\n  getValueForPixel(pixel) {\n    const me = this;\n    const offsets = me._offsets;\n    const decimal = me.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return interpolate(me._table, decimal * me._tableRange + me._minPos, true);\n  }\n\n}\n\nTimeSeriesScale.id = 'timeseries';\nTimeSeriesScale.defaults = TimeScale.defaults;\nvar scales = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  CategoryScale: CategoryScale,\n  LinearScale: LinearScale,\n  LogarithmicScale: LogarithmicScale,\n  RadialLinearScale: RadialLinearScale,\n  TimeScale: TimeScale,\n  TimeSeriesScale: TimeSeriesScale\n});\nconst registerables = [controllers, elements, plugins, scales];\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, plugin_filler as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, plugin_subtitle as SubTitle, Ticks, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, _detectPlatform, animator, controllers, elements, layouts, plugins, registerables, registry, scales };","map":{"version":3,"sources":["/home/houssam/workspace/projects/React/t-punch/node_modules/chart.js/dist/chart.esm.js"],"names":["r","requestAnimFrame","a","resolve","e","effects","c","color","d","defaults","i","isObject","b","isArray","v","valueOrDefault","u","unlistenArrayEvents","l","listenArrayEvents","f","resolveObjectKey","g","isNumberFinite","h","defined","s","sign","j","isNullOrUndef","_","_arrayUnique","t","toRadians","k","toPercentage","m","toDimension","T","TAU","n","formatNumber","o","_angleBetween","H","HALF_PI","P","PI","p","isNumber","q","_limitValue","w","_lookupByKey","x","getRelativePosition$1","y","_isPointInArea","z","_rlookupByKey","A","toPadding","B","each","C","getMaximumSize","D","_getParentNode","E","readUsedSize","F","throttled","G","supportsEventListenerOptions","I","_isDomSupported","J","log10","K","_factorize","L","finiteOrDefault","M","callback","N","_addGrace","O","toDegrees","Q","_measureText","R","_int16Range","S","_alignPixel","U","clipArea","V","renderText","W","unclipArea","X","toFont","Y","_toLeftRightCenter","Z","_alignStartEnd","$","overrides","a0","merge","a1","_capitalize","a2","descriptors","a3","isFunction","a4","_attachContext","a5","_createResolver","a6","_descriptors","a7","mergeIf","a8","uid","a9","debounce","aa","retinaScale","ab","clearCanvas","ac","setsEqual","ad","_elementsEqual","ae","getAngleFromPoint","af","_readValueToProps","ag","_updateBezierControlPoints","ah","_computeSegments","ai","_boundSegments","aj","_steppedInterpolation","ak","_bezierInterpolation","al","_pointInLine","am","_steppedLineTo","an","_bezierCurveTo","ao","drawPoint","ap","addRoundedRectPath","aq","toTRBL","ar","toTRBLCorners","as","_boundSegment","at","_normalizeAngle","au","getRtlAdapter","av","overrideTextDirection","aw","_textX","ax","restoreTextDirection","ay","noop","az","distanceBetweenPoints","aA","_setMinAndMaxByKey","aB","niceNum","aC","almostWhole","aD","almostEquals","aE","_decimalPlaces","aF","_longestText","aG","_filterBetween","aH","_lookup","Animator","constructor","_request","_charts","Map","_running","_lastDate","undefined","_notify","chart","anims","date","type","callbacks","listeners","numSteps","duration","forEach","fn","initial","currentStep","Math","min","start","_refresh","me","call","window","_update","Date","now","remaining","running","items","length","draw","item","_active","_total","tick","pop","_getAnims","charts","get","complete","progress","set","listen","event","cb","push","add","has","reduce","acc","cur","max","_duration","stop","cancel","remove","delete","animator","transparent","interpolators","boolean","from","to","factor","c0","c1","valid","mix","hexString","number","Animation","cfg","target","prop","currentValue","_fn","_easing","easing","linear","_start","floor","delay","_loop","loop","_target","_prop","_from","_to","_promises","active","update","elapsed","remain","wait","promises","Promise","res","rej","resolved","method","numbers","colors","animationOptions","Object","keys","animation","describe","_fallback","_indexable","_scriptable","name","properties","resize","show","animations","visible","hide","Animations","config","_chart","_properties","configure","animatedProps","getOwnPropertyNames","key","option","_animateOptions","values","newOptions","options","resolveTargetOptions","_createAnimations","$shared","awaitAll","$animations","then","props","charAt","value","size","assign","anim","all","scaleClip","scale","allowedOverflow","opts","reverse","end","defaultClip","xScale","yScale","top","right","bottom","left","toClip","disabled","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","ilen","index","applyStack","stack","dsIndex","singleMode","mode","datasetIndex","otherValue","convertObjectDataToArray","data","adata","Array","isStacked","meta","stacked","getStackKey","indexScale","valueScale","id","getUserBounds","minDefined","maxDefined","Number","NEGATIVE_INFINITY","POSITIVE_INFINITY","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","vScale","positive","getMatchingVisibleMetas","updateStacks","controller","parsed","_cachedMeta","_stacks","iScale","iAxis","axis","vAxis","itemStacks","_top","_bottom","getFirstScaleId","scales","filter","shift","createDatasetContext","parent","create","dataset","createDataContext","element","dataIndex","raw","clearStacks","_parsed","isDirectUpdateMode","cloneIfNotShared","cached","shared","DatasetController","_ctx","ctx","_cachedDataOpts","getMeta","_type","_parsing","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","$context","_syncList","initialize","linkScales","_stacked","addElements","updateIndex","getDataset","chooseId","xid","xAxisID","yid","yAxisID","rid","rAxisID","indexAxis","iid","iAxisID","vid","vAxisID","getScaleForId","rScale","datasets","getDatasetMeta","scaleID","_getOtherScale","reset","_destroy","_dataCheck","isExtensible","datasetElementType","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","scopes","getOptionScopes","createResolver","getContext","parsing","parse","count","sorted","_sorted","prev","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","xAxisKey","yAxisKey","getParsed","getDataElement","updateRangeFromParsed","range","parsedValue","NaN","getMinMax","canStack","otherScale","otherMin","otherMax","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","label","getLabelForValue","_clip","clip","elements","area","chartArea","hidden","getStyle","resolveDatasetElementOptions","resolveDataElementOptions","context","_resolveElementOptions","dataElementType","elementType","cache","cacheKey","sharing","datasetElementScopeKeys","prefixes","names","resolveNamedOptions","freeze","_resolveAnimations","transition","datasetAnimationScopeKeys","_cacheable","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","updateElement","updateSharedOptions","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","arr","updateElements","removed","splice","_onDataPush","arguments","_onDataPop","_onDataShift","_onDataSplice","_onDataUnshift","prototype","getAllScaleValues","_cache","$bar","metas","concat","sort","computeMinSampleSize","_length","curr","updateMinAndPrev","abs","getPixelForValue","ticks","getPixelForTick","computeFitCategoryTraits","ruler","stackCount","thickness","barThickness","ratio","categoryPercentage","barPercentage","chunk","pixels","computeFlexCategoryTraits","next","percent","parseFloatBar","entry","startValue","endValue","barStart","barEnd","_custom","parseValue","parseArrayOrPrimitive","isFloatBar","custom","barSign","actualBase","isHorizontal","borderProps","horizontal","base","setBorderSkipped","edge","borderSkipped","enableBorderRadius","parseEdge","swap","startEnd","orig","v1","v2","BarController","iAxisKey","vAxisKey","obj","bars","getBasePixel","_getRuler","firstOpts","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","center","height","width","_getStacks","last","grouped","val","isNaN","indexOf","_getStackCount","_getStackIndex","_startPixel","_endPixel","baseValue","minBarLength","floating","getDataVisibility","halfGrid","getLineWidthForValue","skipNull","maxBarThickness","Infinity","stackIndex","rects","interaction","_index_","offset","grid","_value_","beginAtZero","BubbleController","points","point","iPixel","getPixelForDecimal","vPixel","skip","radius","plugins","tooltip","title","getRatioAndOffset","rotation","circumference","cutout","ratioX","ratioY","offsetX","offsetY","startAngle","endAngle","startX","cos","startY","sin","endX","endY","calcMax","angle","calcMin","maxX","maxY","minX","minY","DoughnutController","innerRadius","outerRadius","_getRotation","_getCircumference","_getRotationExtents","isDatasetVisible","arcs","spacing","getMaxBorderWidth","getMaxOffset","maxSize","chartWeight","_getRingWeight","maxWidth","maxHeight","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","_circumference","animateRotate","calculateCircumference","animationOpts","centerX","centerY","animateScale","arc","metaData","locale","borderAlign","borderWidth","hoverBorderWidth","hoverOffset","ringWeightOffset","weight","aspectRatio","legend","generateLabels","pointStyle","map","style","text","fillStyle","backgroundColor","strokeStyle","borderColor","lineWidth","onClick","legendItem","toggleDataVisibility","tooltipItem","dataLabel","formattedValue","slice","LineController","line","_dataset","animationsDisabled","getStartAndCountOfVisiblePoints","scaleRangesChanged","_datasetIndex","_decimated","showLine","segment","animated","spanGaps","maxGapLength","directUpdate","prevParsed","nullData","border","firstPoint","lastPoint","updateControlPoints","pointCount","lo","hi","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","changed","PolarAreaController","_updateRadius","minSize","cutoutPercentage","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","angleLines","display","circular","pointLabels","PieController","RadarController","_fullLoop","pointPosition","getPointPositionForValue","fill","ScatterController","controllers","__proto__","abstract","Error","DateAdapter","formats","format","timestamp","amount","unit","diff","startOf","weekday","endOf","override","members","adapters","_date","getRelativePosition","evaluateAllVisibleItems","handler","getSortedVisibleDatasetMetas","jlen","binarySearch","metaset","intersect","lookupMethod","_reversePixels","el","getRange","optimizedEvaluateItems","position","getDistanceMetricForAxis","useX","useY","pt1","pt2","deltaX","deltaY","sqrt","pow","getIntersectItems","useFinalPosition","_minPadding","evaluationFunc","inRange","getNearestItems","distanceMetric","minDistance","getCenterPoint","distance","getAxisItems","rangeMethod","intersectsItem","Interaction","modes","nearest","STATIC_POSITIONS","filterByPosition","array","pos","filterDynamicPositionByAxis","box","sortByWeight","v0","wrapBoxes","boxes","layoutBoxes","stackWeight","buildStacks","layouts","wrap","includes","_stack","placed","setLayoutDims","params","vBoxMaxWidth","hBoxMaxHeight","layout","fullSize","availableWidth","availableHeight","buildLayoutBoxes","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","heightChanged","same","other","handleMaxPadding","updatePos","change","getMargins","marginForPositions","positions","margin","fitBoxes","refitBoxes","refit","setBoxDims","placeBoxes","userPadding","padding","addBox","_layers","removeBox","layoutItem","minPadding","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","BasePlatform","acquireContext","canvas","releaseContext","addEventListener","listener","removeEventListener","getDevicePixelRatio","isAttached","BasicPlatform","EXPANDO_KEY","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","initCanvas","renderHeight","getAttribute","renderWidth","boxSizing","displayWidth","displayHeight","eventListenerOptions","passive","addListener","node","removeListener","fromNativeEvent","native","createAttachObserver","container","observer","MutationObserver","entries","addedNodes","added","observe","document","childList","subtree","createDetachObserver","removedNodes","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","devicePixelRatio","currentDevicePixelRatio","listenDevicePixelRatioChanges","unlistenDevicePixelRatioChanges","createResizeObserver","clientWidth","ResizeObserver","contentRect","releaseObserver","disconnect","createProxyAndListen","proxy","args","DomPlatform","removeAttribute","setAttribute","proxies","$proxies","handlers","attach","detach","isConnected","_detectPlatform","OffscreenCanvas","Element","tooltipPosition","getProps","hasValue","final","ret","defaultRoutes","formatters","numeric","tickValue","notation","delta","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","logarithmic","Ticks","bounds","grace","drawBorder","drawOnChartArea","drawTicks","tickLength","tickWidth","tickColor","borderDash","borderDashOffset","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkip","autoSkipPadding","labelOffset","minor","major","align","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","route","startsWith","tickOpts","ticksLimit","maxTicksLimit","determineMaxTicks","majorIndices","enabled","getMajorIndices","numMajorIndices","first","newTicks","skipMajors","calculateSpacing","avgMajorSpacing","round","_tickSize","maxScale","maxChart","_maxLength","evenMajorSpacing","getEvenSpacing","factors","result","ceil","majorStart","majorEnd","len","reverseAlign","offsetFromEdge","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","epsilon","lineValue","garbageCollect","caches","gc","gcLen","getTickMarkLength","getTitleHeight","fallback","font","lines","lineHeight","createScaleContext","createTickContext","titleAlign","titleArgs","titleX","titleY","positionAxisID","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","init","setContext","suggestedMin","suggestedMax","getTicks","xLabels","yLabels","beforeUpdate","margins","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","source","beforeFit","fit","afterFit","afterUpdate","reversePixels","startPixel","endPixel","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","afterTickToLabelConversion","numTicks","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","asin","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","isFullSize","_computeLabelSizes","widths","heights","widestLabelSize","highestLabelSize","tickFont","fontString","nestedLabel","_resolveTickFontOptions","string","valueAt","idx","getValueForPixel","pixel","decimal","getDecimalForPixel","getBaseValue","optionTicks","rot","_computeGridLineItems","ticksLength","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","limit","step","optsAtIndex","lineColor","tickBorderDash","tickBorderDashOffset","_computeLabelItems","tickAndPadding","hTickAndPadding","textAlign","lineCount","textOffset","textBaseline","_getXAxisLabelAlignment","_getYAxisLabelAlignment","halfCount","strokeColor","strokeWidth","backdrop","labelPadding","translation","_computeLabelArea","drawBackground","save","fillRect","restore","findIndex","drawGrid","drawLine","p1","p2","setLineDash","lineDashOffset","beginPath","moveTo","lineTo","stroke","lastLineWidth","drawLabels","drawTitle","tz","gz","axisID","_maxDigits","fontSize","TypedRegistry","scope","isForType","isPrototypeOf","register","proto","getPrototypeOf","parentScope","isIChartComponent","registerDefaults","unregister","itemDefaults","routeDefaults","routes","property","propertyParts","split","sourceName","sourceScope","join","parts","targetName","targetScope","Registry","_typedRegistries","_each","addControllers","addPlugins","addScales","getController","_get","getElement","getPlugin","getScale","removeControllers","removeElements","removePlugins","removeScales","typedRegistry","arg","reg","_getRegistryForType","_exec","itemReg","registry","component","camelMethod","PluginService","_init","notify","hook","_createDescriptors","descriptor","plugin","cancelable","invalidate","_oldCache","_notifyStateChanges","allPlugins","createDescriptors","previousDescriptors","some","local","getOpts","pluginOpts","pluginScopeKeys","scriptable","indexable","allKeys","getIndexAxis","datasetDefaults","datasetOptions","getAxisFromDefaultScaleID","getDefaultScaleIDFromAxis","axisFromPosition","determineAxis","scaleOptions","toLowerCase","mergeScaleConfig","chartDefaults","configScales","chartIndexAxis","firstIDs","scaleConf","defaultId","defaultScaleOptions","defaultID","initOptions","initData","initConfig","keyCache","keysCached","Set","cachedKeys","generate","addIfFound","Config","_config","_scopeCache","_resolverCache","platform","clearCache","clear","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","resolver","subPrefixes","getResolver","needContext","subResolver","descriptorDefaults","resolverCache","isScriptable","isIndexable","version","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","Chart","userConfig","initialCanvas","existingChart","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","resizeDelay","console","error","_initialize","maintainAspectRatio","responsive","bindEvents","_resize","_resizeBeforeDraw","newSize","newRatio","onResize","render","ensureScalesHaveIDs","scalesOptions","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","scaleClass","hasUpdated","_updateMetasets","_destroyDatasetMeta","_removeUnreferencedMetasets","buildOrUpdateControllers","newControllers","order","ControllerClass","_resetElements","animsDisabled","existingEvents","newEvents","events","unbindEvents","_updateLayout","_updateDatasets","_eventHandler","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","useClip","getElementsAtEventForMode","setDatasetVisibility","_updateVisibility","destroy","toBase64Image","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","updateHoverStyle","prefix","getActiveElements","setActiveElements","activeElements","lastActive","_updateHoverStyles","replay","hoverOptions","hover","deactivated","activated","eventFilter","_handleEvent","lastEvent","onHover","invalidatePlugins","enumerable","defineProperties","clipArc","pixelMargin","angleMargin","closePath","toRadiusCorners","parseBorderRadius$1","angleDelta","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","innerR","spacingOffset","alpha","noSpacingInnerRadius","noSpacingOuterRadius","avNogSpacingRadius","adjustedAngle","beta","angleOffset","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","pCenter","p4","p8","drawArc","fullCircles","drawFullCircleBorders","inner","lineJoin","ArcElement","chartX","chartY","rAdjust","betweenAngles","withinRadius","halfAngle","halfRadius","radiusOffset","translate","setStyle","lineCap","borderCapStyle","borderJoinStyle","previous","getLineMethod","stepped","tension","cubicInterpolationMode","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","fastPathSegment","avgX","countX","prevX","lastY","pointIndex","drawX","truncX","_getSegmentMethod","useFastPath","_getInterpolationMethod","strokePathWithCache","path","_path","Path2D","strokePathDirect","segments","segmentMethod","usePath2D","LineElement","_points","_segments","_pointsUpdated","interpolate","_interpolate","interpolated","capBezierPoints","inRange$1","hitRadius","PointElement","mouseX","mouseY","inXRange","inYRange","hoverRadius","getBarBounds","bar","half","skipOrLimit","parseBorderWidth","maxW","maxH","parseBorderRadius","maxR","enableBorder","topLeft","topRight","bottomLeft","bottomRight","boundingRects","outer","skipX","skipY","skipBoth","hasRadius","addNormalRectPath","rect","inflateRect","refRect","BarElement","addRectPath","inflateAmount","lttbDecimation","samples","decimated","bucketWidth","sampledIndex","endIndex","maxAreaPoint","maxArea","nextA","avgY","avgRangeStart","avgRangeEnd","avgRangeLength","rangeOffs","rangeTo","pointAx","pointAy","minMaxDecimation","minIndex","maxIndex","startIndex","xMin","xMax","dx","lastIndex","intermediateIndex1","intermediateIndex2","cleanDecimatedDataset","defineProperty","cleanDecimatedData","getStartAndCountOfVisiblePointsSimplified","plugin_decimation","algorithm","beforeElementsUpdate","xAxis","threshold","configurable","getLineByIndex","parseFillOption","fillOption","decodeFill","parseFloat","computeLinearBoundary","simpleArc","computeCircularBoundary","computeBoundary","findSegmentEnd","pointsFromSegments","boundary","linePoints","buildStackLine","sourcePoints","linesBelow","getLinesBelow","createBoundaryLine","addPointsBelow","isLineAndNotInHideAnimation","below","unshift","sourcePoint","postponed","findPoint","pointValue","firstValue","lastValue","getTarget","resolveTarget","sources","propagate","visited","clipY","getBounds","_getEdge","tpoints","targetSegments","tgt","subBounds","fillSources","fillSource","clipBounds","interpolatedLineTo","interpolatedPoint","_fill","src","notShape","lineLoop","targetLoop","doFill","above","drawfill","lineOpts","plugin_filler","afterDatasetsUpdate","_args","$filler","beforeDraw","drawTime","beforeDatasetsDraw","beforeDatasetDraw","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","itemHeight","itemsEqual","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","itemWidth","measureText","heightLimit","totalWidth","currentColWidth","currentColHeight","col","adjustHitBoxes","rtl","rtlHelper","hitbox","leftForLtr","_draw","defaultColor","fontColor","halfFontSize","cursor","drawLegendBox","lineDash","drawOptions","SQRT2","xPlus","yBoxTop","xBoxLeft","fillText","strikethrough","textDirection","textWidth","setWidth","realX","titleFont","titlePadding","topPaddingPlusHalfFontSize","_getLegendItemAt","hitBox","lh","handleEvent","isListened","hoveredItem","sameItem","onLeave","plugin_legend","_element","afterEvent","ci","Title","_padding","textSize","_drawArgs","fontOpts","createTitle","titleBlock","plugin_title","WeakMap","plugin_subtitle","positioners","average","eventPosition","nearestElement","tp","pushOrConcat","toPush","apply","splitNewlines","str","String","createTooltipItem","getTooltipSize","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","bodyLineHeight","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineYAlign","doesNotFitWithAlign","xAlign","caret","caretSize","caretPadding","determineXAlign","yAlign","chartWidth","determineAlignment","alignX","alignY","paddingAndSize","getBackgroundPoint","alignment","cornerRadius","radiusAndPadding","getAlignedX","getBeforeAfterBodyLines","createTooltipContext","tooltipItems","overrideCallbacks","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","getTitle","beforeTitle","afterTitle","getBeforeBody","getBody","bodyItems","scoped","beforeLabel","afterLabel","getAfterBody","getFooter","beforeFooter","afterFooter","_createItems","itemSort","labelColor","labelPointStyle","labelTextColor","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","pt","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","drawBody","bodyAlign","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","bodyColor","drawFooter","footerAlign","footerColor","tooltipSize","quadraticCurveTo","_updateAnimationTarget","animX","animY","hasTooltipContent","globalAlpha","positionChanged","_positionChanged","plugin_tooltip","afterInit","afterDraw","labelCount","Decimation","Filler","SubTitle","addIfString","findOrAddLabel","lastIndexOf","CategoryScale","_startValue","_valueRange","isFinite","generateTicks$1","generationOptions","dataRange","MIN_SPACING","precision","maxTicks","maxDigits","includeBounds","maxSpaces","rmin","rmax","countDefined","minSpacing","niceMin","niceMax","numSpaces","decimalPlaces","relativeLabelSize","rad","LinearScaleBase","_endValue","handleTickRangeOptions","setMin","setMax","minSign","maxSign","MAX_SAFE_INTEGER","MIN_SAFE_INTEGER","getTickLimit","stepSize","computeTickLimit","numericGeneratorOptions","LinearScale","isMajor","tickVal","generateTicks","endExp","endSignificand","exp","significand","lastTick","LogarithmicScale","_zero","getTickBackdropHeight","measureLabelSize","determineLimits","fitWithPointLabels","furthestLimits","furthestAngles","valueCount","getPointLabelContext","getPointPosition","drawingArea","plFont","_pointLabels","hLimits","vLimits","_setReductions","_pointLabelItems","buildPointLabelItems","tickBackdropHeight","outerDistance","extra","pointLabelPosition","yForAngle","getTextAlignForAngle","leftForTextAlign","drawPointLabels","pathRadiusLine","drawRadiusLine","gridLineOpts","numberOrZero","param","createPointLabelContext","RadialLinearScale","setCenterPoint","largestPossibleRadius","radiusReductionLeft","radiusReductionRight","radiusReductionTop","radiusReductionBottom","leftMovement","rightMovement","topMovement","bottomMovement","maxRight","maxLeft","maxTop","maxBottom","angleMultiplier","scalingFactor","getValueForDistanceFromCenter","scaledDistance","pointLabel","distanceFromCenter","getBasePosition","getPointLabelPosition","rotate","animate","INTERVALS","millisecond","common","steps","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","input","adapter","_adapter","parser","isoWeekday","_parseOpts","determineUnitForAutoTicks","minUnit","capacity","interval","determineUnitForFormatting","determineMajorUnit","addTick","time","timestamps","setMajorTicks","majorUnit","ticksFromTimestamps","TimeScale","_unit","_majorUnit","_offsets","_normalized","displayFormats","normalized","_applyBounds","_getLabelBounds","getLabelTimestamps","timeOpts","_generate","_getLabelCapacity","initOffsets","getDecimalForValue","hasWeekday","getDataTimestamps","tooltipFormat","datetime","_tickFormatFunction","minorFormat","majorFormat","formatter","offsets","_getLabelSize","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","normalize","table","prevSource","nextSource","prevTarget","nextTarget","span","TimeSeriesScale","_table","_minPos","_tableRange","_getTimestampsForTable","buildLookupTable","registerables","_adapters"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,CAAC,IAAIC,gBAAd,EAAgCC,CAAC,IAAIC,OAArC,EAA8CC,CAAC,IAAIC,OAAnD,EAA4DC,CAAC,IAAIC,KAAjE,EAAwEC,CAAC,IAAIC,QAA7E,EAAuFC,CAAC,IAAIC,QAA5F,EAAsGC,CAAC,IAAIC,OAA3G,EAAoHC,CAAC,IAAIC,cAAzH,EAAyIC,CAAC,IAAIC,mBAA9I,EAAmKC,CAAC,IAAIC,iBAAxK,EAA2LC,CAAC,IAAIC,gBAAhM,EAAkNC,CAAC,IAAIC,cAAvN,EAAuOC,CAAC,IAAIC,OAA5O,EAAqPC,CAAC,IAAIC,IAA1P,EAAgQC,CAAC,IAAIC,aAArQ,EAAoRC,CAAC,IAAIC,YAAzR,EAAuSC,CAAC,IAAIC,SAA5S,EAAuTC,CAAC,IAAIC,YAA5T,EAA0UC,CAAC,IAAIC,WAA/U,EAA4VC,CAAC,IAAIC,GAAjW,EAAsWC,CAAC,IAAIC,YAA3W,EAAyXC,CAAC,IAAIC,aAA9X,EAA6YC,CAAC,IAAIC,OAAlZ,EAA2ZC,CAAC,IAAIC,EAAha,EAAoaC,CAAC,IAAIC,QAAza,EAAmbC,CAAC,IAAIC,WAAxb,EAAqcC,CAAC,IAAIC,YAA1c,EAAwdC,CAAC,IAAIC,qBAA7d,EAAofC,CAAC,IAAIC,cAAzf,EAAygBC,CAAC,IAAIC,aAA9gB,EAA6hBC,CAAC,IAAIC,SAAliB,EAA6iBC,CAAC,IAAIC,IAAljB,EAAwjBC,CAAC,IAAIC,cAA7jB,EAA6kBC,CAAC,IAAIC,cAAllB,EAAkmBC,CAAC,IAAIC,YAAvmB,EAAqnBC,CAAC,IAAIC,SAA1nB,EAAqoBC,CAAC,IAAIC,4BAA1oB,EAAwqBC,CAAC,IAAIC,eAA7qB,EAA8rBC,CAAC,IAAIC,KAAnsB,EAA0sBC,CAAC,IAAIC,UAA/sB,EAA2tBC,CAAC,IAAIC,eAAhuB,EAAivBC,CAAC,IAAIC,QAAtvB,EAAgwBC,CAAC,IAAIC,SAArwB,EAAgxBC,CAAC,IAAIC,SAArxB,EAAgyBC,CAAC,IAAIC,YAAryB,EAAmzBC,CAAC,IAAIC,WAAxzB,EAAq0BC,CAAC,IAAIC,WAA10B,EAAu1BC,CAAC,IAAIC,QAA51B,EAAs2BC,CAAC,IAAIC,UAA32B,EAAu3BC,CAAC,IAAIC,UAA53B,EAAw4BC,CAAC,IAAIC,MAA74B,EAAq5BC,CAAC,IAAIC,kBAA15B,EAA86BC,CAAC,IAAIC,cAAn7B,EAAm8BC,CAAC,IAAIC,SAAx8B,EAAm9BC,EAAE,IAAIC,KAAz9B,EAAg+BC,EAAE,IAAIC,WAAt+B,EAAm/BC,EAAE,IAAIC,WAAz/B,EAAsgCC,EAAE,IAAIC,UAA5gC,EAAwhCC,EAAE,IAAIC,cAA9hC,EAA8iCC,EAAE,IAAIC,eAApjC,EAAqkCC,EAAE,IAAIC,YAA3kC,EAAylCC,EAAE,IAAIC,OAA/lC,EAAwmCC,EAAE,IAAIC,GAA9mC,EAAmnCC,EAAE,IAAIC,QAAznC,EAAmoCC,EAAE,IAAIC,WAAzoC,EAAspCC,EAAE,IAAIC,WAA5pC,EAAyqCC,EAAE,IAAIC,SAA/qC,EAA0rCC,EAAE,IAAIC,cAAhsC,EAAgtCC,EAAE,IAAIC,iBAAttC,EAAyuCC,EAAE,IAAIC,iBAA/uC,EAAkwCC,EAAE,IAAIC,0BAAxwC,EAAoyCC,EAAE,IAAIC,gBAA1yC,EAA4zCC,EAAE,IAAIC,cAAl0C,EAAk1CC,EAAE,IAAIC,qBAAx1C,EAA+2CC,EAAE,IAAIC,oBAAr3C,EAA24CC,EAAE,IAAIC,YAAj5C,EAA+5CC,EAAE,IAAIC,cAAr6C,EAAq7CC,EAAE,IAAIC,cAA37C,EAA28CC,EAAE,IAAIC,SAAj9C,EAA49CC,EAAE,IAAIC,kBAAl+C,EAAs/CC,EAAE,IAAIC,MAA5/C,EAAogDC,EAAE,IAAIC,aAA1gD,EAAyhDC,EAAE,IAAIC,aAA/hD,EAA8iDC,EAAE,IAAIC,eAApjD,EAAqkDC,EAAE,IAAIC,aAA3kD,EAA0lDC,EAAE,IAAIC,qBAAhmD,EAAunDC,EAAE,IAAIC,MAA7nD,EAAqoDC,EAAE,IAAIC,oBAA3oD,EAAiqDC,EAAE,IAAIC,IAAvqD,EAA6qDC,EAAE,IAAIC,qBAAnrD,EAA0sDC,EAAE,IAAIC,kBAAhtD,EAAouDC,EAAE,IAAIC,OAA1uD,EAAmvDC,EAAE,IAAIC,WAAzvD,EAAswDC,EAAE,IAAIC,YAA5wD,EAA0xDC,EAAE,IAAIC,cAAhyD,EAAgzDC,EAAE,IAAIC,YAAtzD,EAAo0DC,EAAE,IAAIC,cAA10D,EAA01DC,EAAE,IAAIC,OAAh2D,QAA+2D,6BAA/2D;AACA,SAAS3L,CAAC,IAAIC,QAAd,QAA8B,6BAA9B;;AAEA,MAAM2L,QAAN,CAAe;AACbC,EAAAA,WAAW,GAAG;AACZ,SAAKC,QAAL,GAAgB,IAAhB;AACA,SAAKC,OAAL,GAAe,IAAIC,GAAJ,EAAf;AACA,SAAKC,QAAL,GAAgB,KAAhB;AACA,SAAKC,SAAL,GAAiBC,SAAjB;AACD;;AACDC,EAAAA,OAAO,CAACC,KAAD,EAAQC,KAAR,EAAeC,IAAf,EAAqBC,IAArB,EAA2B;AAChC,UAAMC,SAAS,GAAGH,KAAK,CAACI,SAAN,CAAgBF,IAAhB,CAAlB;AACA,UAAMG,QAAQ,GAAGL,KAAK,CAACM,QAAvB;AACAH,IAAAA,SAAS,CAACI,OAAV,CAAkBC,EAAE,IAAIA,EAAE,CAAC;AACzBT,MAAAA,KADyB;AAEzBU,MAAAA,OAAO,EAAET,KAAK,CAACS,OAFU;AAGzBJ,MAAAA,QAHyB;AAIzBK,MAAAA,WAAW,EAAEC,IAAI,CAACC,GAAL,CAASX,IAAI,GAAGD,KAAK,CAACa,KAAtB,EAA6BR,QAA7B;AAJY,KAAD,CAA1B;AAMD;;AACDS,EAAAA,QAAQ,GAAG;AACT,UAAMC,EAAE,GAAG,IAAX;;AACA,QAAIA,EAAE,CAACvB,QAAP,EAAiB;AACf;AACD;;AACDuB,IAAAA,EAAE,CAACpB,QAAH,GAAc,IAAd;AACAoB,IAAAA,EAAE,CAACvB,QAAH,GAAcrM,gBAAgB,CAAC6N,IAAjB,CAAsBC,MAAtB,EAA8B,MAAM;AAChDF,MAAAA,EAAE,CAACG,OAAH;;AACAH,MAAAA,EAAE,CAACvB,QAAH,GAAc,IAAd;;AACA,UAAIuB,EAAE,CAACpB,QAAP,EAAiB;AACfoB,QAAAA,EAAE,CAACD,QAAH;AACD;AACF,KANa,CAAd;AAOD;;AACDI,EAAAA,OAAO,CAACjB,IAAI,GAAGkB,IAAI,CAACC,GAAL,EAAR,EAAoB;AACzB,UAAML,EAAE,GAAG,IAAX;AACA,QAAIM,SAAS,GAAG,CAAhB;;AACAN,IAAAA,EAAE,CAACtB,OAAH,CAAWc,OAAX,CAAmB,CAACP,KAAD,EAAQD,KAAR,KAAkB;AACnC,UAAI,CAACC,KAAK,CAACsB,OAAP,IAAkB,CAACtB,KAAK,CAACuB,KAAN,CAAYC,MAAnC,EAA2C;AACzC;AACD;;AACD,YAAMD,KAAK,GAAGvB,KAAK,CAACuB,KAApB;AACA,UAAI3N,CAAC,GAAG2N,KAAK,CAACC,MAAN,GAAe,CAAvB;AACA,UAAIC,IAAI,GAAG,KAAX;AACA,UAAIC,IAAJ;;AACA,aAAO9N,CAAC,IAAI,CAAZ,EAAe,EAAEA,CAAjB,EAAoB;AAClB8N,QAAAA,IAAI,GAAGH,KAAK,CAAC3N,CAAD,CAAZ;;AACA,YAAI8N,IAAI,CAACC,OAAT,EAAkB;AAChB,cAAID,IAAI,CAACE,MAAL,GAAc5B,KAAK,CAACM,QAAxB,EAAkC;AAChCN,YAAAA,KAAK,CAACM,QAAN,GAAiBoB,IAAI,CAACE,MAAtB;AACD;;AACDF,UAAAA,IAAI,CAACG,IAAL,CAAU5B,IAAV;AACAwB,UAAAA,IAAI,GAAG,IAAP;AACD,SAND,MAMO;AACLF,UAAAA,KAAK,CAAC3N,CAAD,CAAL,GAAW2N,KAAK,CAACA,KAAK,CAACC,MAAN,GAAe,CAAhB,CAAhB;AACAD,UAAAA,KAAK,CAACO,GAAN;AACD;AACF;;AACD,UAAIL,IAAJ,EAAU;AACR1B,QAAAA,KAAK,CAAC0B,IAAN;;AACAV,QAAAA,EAAE,CAACjB,OAAH,CAAWC,KAAX,EAAkBC,KAAlB,EAAyBC,IAAzB,EAA+B,UAA/B;AACD;;AACD,UAAI,CAACsB,KAAK,CAACC,MAAX,EAAmB;AACjBxB,QAAAA,KAAK,CAACsB,OAAN,GAAgB,KAAhB;;AACAP,QAAAA,EAAE,CAACjB,OAAH,CAAWC,KAAX,EAAkBC,KAAlB,EAAyBC,IAAzB,EAA+B,UAA/B;;AACAD,QAAAA,KAAK,CAACS,OAAN,GAAgB,KAAhB;AACD;;AACDY,MAAAA,SAAS,IAAIE,KAAK,CAACC,MAAnB;AACD,KA/BD;;AAgCAT,IAAAA,EAAE,CAACnB,SAAH,GAAeK,IAAf;;AACA,QAAIoB,SAAS,KAAK,CAAlB,EAAqB;AACnBN,MAAAA,EAAE,CAACpB,QAAH,GAAc,KAAd;AACD;AACF;;AACDoC,EAAAA,SAAS,CAAChC,KAAD,EAAQ;AACf,UAAMiC,MAAM,GAAG,KAAKvC,OAApB;AACA,QAAIO,KAAK,GAAGgC,MAAM,CAACC,GAAP,CAAWlC,KAAX,CAAZ;;AACA,QAAI,CAACC,KAAL,EAAY;AACVA,MAAAA,KAAK,GAAG;AACNsB,QAAAA,OAAO,EAAE,KADH;AAENb,QAAAA,OAAO,EAAE,IAFH;AAGNc,QAAAA,KAAK,EAAE,EAHD;AAINnB,QAAAA,SAAS,EAAE;AACT8B,UAAAA,QAAQ,EAAE,EADD;AAETC,UAAAA,QAAQ,EAAE;AAFD;AAJL,OAAR;AASAH,MAAAA,MAAM,CAACI,GAAP,CAAWrC,KAAX,EAAkBC,KAAlB;AACD;;AACD,WAAOA,KAAP;AACD;;AACDqC,EAAAA,MAAM,CAACtC,KAAD,EAAQuC,KAAR,EAAeC,EAAf,EAAmB;AACvB,SAAKR,SAAL,CAAehC,KAAf,EAAsBK,SAAtB,CAAgCkC,KAAhC,EAAuCE,IAAvC,CAA4CD,EAA5C;AACD;;AACDE,EAAAA,GAAG,CAAC1C,KAAD,EAAQwB,KAAR,EAAe;AAChB,QAAI,CAACA,KAAD,IAAU,CAACA,KAAK,CAACC,MAArB,EAA6B;AAC3B;AACD;;AACD,SAAKO,SAAL,CAAehC,KAAf,EAAsBwB,KAAtB,CAA4BiB,IAA5B,CAAiC,GAAGjB,KAApC;AACD;;AACDmB,EAAAA,GAAG,CAAC3C,KAAD,EAAQ;AACT,WAAO,KAAKgC,SAAL,CAAehC,KAAf,EAAsBwB,KAAtB,CAA4BC,MAA5B,GAAqC,CAA5C;AACD;;AACDX,EAAAA,KAAK,CAACd,KAAD,EAAQ;AACX,UAAMC,KAAK,GAAG,KAAKP,OAAL,CAAawC,GAAb,CAAiBlC,KAAjB,CAAd;;AACA,QAAI,CAACC,KAAL,EAAY;AACV;AACD;;AACDA,IAAAA,KAAK,CAACsB,OAAN,GAAgB,IAAhB;AACAtB,IAAAA,KAAK,CAACa,KAAN,GAAcM,IAAI,CAACC,GAAL,EAAd;AACApB,IAAAA,KAAK,CAACM,QAAN,GAAiBN,KAAK,CAACuB,KAAN,CAAYoB,MAAZ,CAAmB,CAACC,GAAD,EAAMC,GAAN,KAAclC,IAAI,CAACmC,GAAL,CAASF,GAAT,EAAcC,GAAG,CAACE,SAAlB,CAAjC,EAA+D,CAA/D,CAAjB;;AACA,SAAKjC,QAAL;AACD;;AACDQ,EAAAA,OAAO,CAACvB,KAAD,EAAQ;AACb,QAAI,CAAC,KAAKJ,QAAV,EAAoB;AAClB,aAAO,KAAP;AACD;;AACD,UAAMK,KAAK,GAAG,KAAKP,OAAL,CAAawC,GAAb,CAAiBlC,KAAjB,CAAd;;AACA,QAAI,CAACC,KAAD,IAAU,CAACA,KAAK,CAACsB,OAAjB,IAA4B,CAACtB,KAAK,CAACuB,KAAN,CAAYC,MAA7C,EAAqD;AACnD,aAAO,KAAP;AACD;;AACD,WAAO,IAAP;AACD;;AACDwB,EAAAA,IAAI,CAACjD,KAAD,EAAQ;AACV,UAAMC,KAAK,GAAG,KAAKP,OAAL,CAAawC,GAAb,CAAiBlC,KAAjB,CAAd;;AACA,QAAI,CAACC,KAAD,IAAU,CAACA,KAAK,CAACuB,KAAN,CAAYC,MAA3B,EAAmC;AACjC;AACD;;AACD,UAAMD,KAAK,GAAGvB,KAAK,CAACuB,KAApB;AACA,QAAI3N,CAAC,GAAG2N,KAAK,CAACC,MAAN,GAAe,CAAvB;;AACA,WAAO5N,CAAC,IAAI,CAAZ,EAAe,EAAEA,CAAjB,EAAoB;AAClB2N,MAAAA,KAAK,CAAC3N,CAAD,CAAL,CAASqP,MAAT;AACD;;AACDjD,IAAAA,KAAK,CAACuB,KAAN,GAAc,EAAd;;AACA,SAAKzB,OAAL,CAAaC,KAAb,EAAoBC,KAApB,EAA2BmB,IAAI,CAACC,GAAL,EAA3B,EAAuC,UAAvC;AACD;;AACD8B,EAAAA,MAAM,CAACnD,KAAD,EAAQ;AACZ,WAAO,KAAKN,OAAL,CAAa0D,MAAb,CAAoBpD,KAApB,CAAP;AACD;;AAvIY;;AAyIf,IAAIqD,QAAQ,GAAG,IAAI9D,QAAJ,EAAf;AAEA,MAAM+D,WAAW,GAAG,aAApB;AACA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,OAAO,CAACC,IAAD,EAAOC,EAAP,EAAWC,MAAX,EAAmB;AACxB,WAAOA,MAAM,GAAG,GAAT,GAAeD,EAAf,GAAoBD,IAA3B;AACD,GAHmB;;AAIpB/P,EAAAA,KAAK,CAAC+P,IAAD,EAAOC,EAAP,EAAWC,MAAX,EAAmB;AACtB,UAAMC,EAAE,GAAGlQ,KAAK,CAAC+P,IAAI,IAAIH,WAAT,CAAhB;AACA,UAAMO,EAAE,GAAGD,EAAE,CAACE,KAAH,IAAYpQ,KAAK,CAACgQ,EAAE,IAAIJ,WAAP,CAA5B;AACA,WAAOO,EAAE,IAAIA,EAAE,CAACC,KAAT,GACHD,EAAE,CAACE,GAAH,CAAOH,EAAP,EAAWD,MAAX,EAAmBK,SAAnB,EADG,GAEHN,EAFJ;AAGD,GAVmB;;AAWpBO,EAAAA,MAAM,CAACR,IAAD,EAAOC,EAAP,EAAWC,MAAX,EAAmB;AACvB,WAAOF,IAAI,GAAG,CAACC,EAAE,GAAGD,IAAN,IAAcE,MAA5B;AACD;;AAbmB,CAAtB;;AAeA,MAAMO,SAAN,CAAgB;AACd1E,EAAAA,WAAW,CAAC2E,GAAD,EAAMC,MAAN,EAAcC,IAAd,EAAoBX,EAApB,EAAwB;AACjC,UAAMY,YAAY,GAAGF,MAAM,CAACC,IAAD,CAA3B;AACAX,IAAAA,EAAE,GAAGpQ,OAAO,CAAC,CAAC6Q,GAAG,CAACT,EAAL,EAASA,EAAT,EAAaY,YAAb,EAA2BH,GAAG,CAACV,IAA/B,CAAD,CAAZ;AACA,UAAMA,IAAI,GAAGnQ,OAAO,CAAC,CAAC6Q,GAAG,CAACV,IAAL,EAAWa,YAAX,EAAyBZ,EAAzB,CAAD,CAApB;AACA,SAAK9B,OAAL,GAAe,IAAf;AACA,SAAK2C,GAAL,GAAWJ,GAAG,CAAC1D,EAAJ,IAAU8C,aAAa,CAACY,GAAG,CAAChE,IAAJ,IAAY,OAAOsD,IAApB,CAAlC;AACA,SAAKe,OAAL,GAAehR,OAAO,CAAC2Q,GAAG,CAACM,MAAL,CAAP,IAAuBjR,OAAO,CAACkR,MAA9C;AACA,SAAKC,MAAL,GAAc/D,IAAI,CAACgE,KAAL,CAAWxD,IAAI,CAACC,GAAL,MAAc8C,GAAG,CAACU,KAAJ,IAAa,CAA3B,CAAX,CAAd;AACA,SAAK7B,SAAL,GAAiB,KAAKnB,MAAL,GAAcjB,IAAI,CAACgE,KAAL,CAAWT,GAAG,CAAC5D,QAAf,CAA/B;AACA,SAAKuE,KAAL,GAAa,CAAC,CAACX,GAAG,CAACY,IAAnB;AACA,SAAKC,OAAL,GAAeZ,MAAf;AACA,SAAKa,KAAL,GAAaZ,IAAb;AACA,SAAKa,KAAL,GAAazB,IAAb;AACA,SAAK0B,GAAL,GAAWzB,EAAX;AACA,SAAK0B,SAAL,GAAiBtF,SAAjB;AACD;;AACDuF,EAAAA,MAAM,GAAG;AACP,WAAO,KAAKzD,OAAZ;AACD;;AACD0D,EAAAA,MAAM,CAACnB,GAAD,EAAMT,EAAN,EAAUxD,IAAV,EAAgB;AACpB,UAAMc,EAAE,GAAG,IAAX;;AACA,QAAIA,EAAE,CAACY,OAAP,EAAgB;AACdZ,MAAAA,EAAE,CAACjB,OAAH,CAAW,KAAX;;AACA,YAAMuE,YAAY,GAAGtD,EAAE,CAACgE,OAAH,CAAWhE,EAAE,CAACiE,KAAd,CAArB;AACA,YAAMM,OAAO,GAAGrF,IAAI,GAAGc,EAAE,CAAC2D,MAA1B;AACA,YAAMa,MAAM,GAAGxE,EAAE,CAACgC,SAAH,GAAeuC,OAA9B;AACAvE,MAAAA,EAAE,CAAC2D,MAAH,GAAYzE,IAAZ;AACAc,MAAAA,EAAE,CAACgC,SAAH,GAAepC,IAAI,CAACgE,KAAL,CAAWhE,IAAI,CAACmC,GAAL,CAASyC,MAAT,EAAiBrB,GAAG,CAAC5D,QAArB,CAAX,CAAf;AACAS,MAAAA,EAAE,CAACa,MAAH,IAAa0D,OAAb;AACAvE,MAAAA,EAAE,CAAC8D,KAAH,GAAW,CAAC,CAACX,GAAG,CAACY,IAAjB;AACA/D,MAAAA,EAAE,CAACmE,GAAH,GAAS7R,OAAO,CAAC,CAAC6Q,GAAG,CAACT,EAAL,EAASA,EAAT,EAAaY,YAAb,EAA2BH,GAAG,CAACV,IAA/B,CAAD,CAAhB;AACAzC,MAAAA,EAAE,CAACkE,KAAH,GAAW5R,OAAO,CAAC,CAAC6Q,GAAG,CAACV,IAAL,EAAWa,YAAX,EAAyBZ,EAAzB,CAAD,CAAlB;AACD;AACF;;AACDR,EAAAA,MAAM,GAAG;AACP,UAAMlC,EAAE,GAAG,IAAX;;AACA,QAAIA,EAAE,CAACY,OAAP,EAAgB;AACdZ,MAAAA,EAAE,CAACc,IAAH,CAAQV,IAAI,CAACC,GAAL,EAAR;AACAL,MAAAA,EAAE,CAACY,OAAH,GAAa,KAAb;;AACAZ,MAAAA,EAAE,CAACjB,OAAH,CAAW,KAAX;AACD;AACF;;AACD+B,EAAAA,IAAI,CAAC5B,IAAD,EAAO;AACT,UAAMc,EAAE,GAAG,IAAX;AACA,UAAMuE,OAAO,GAAGrF,IAAI,GAAGc,EAAE,CAAC2D,MAA1B;AACA,UAAMpE,QAAQ,GAAGS,EAAE,CAACgC,SAApB;AACA,UAAMqB,IAAI,GAAGrD,EAAE,CAACiE,KAAhB;AACA,UAAMxB,IAAI,GAAGzC,EAAE,CAACkE,KAAhB;AACA,UAAMH,IAAI,GAAG/D,EAAE,CAAC8D,KAAhB;AACA,UAAMpB,EAAE,GAAG1C,EAAE,CAACmE,GAAd;AACA,QAAIxB,MAAJ;AACA3C,IAAAA,EAAE,CAACY,OAAH,GAAa6B,IAAI,KAAKC,EAAT,KAAgBqB,IAAI,IAAKQ,OAAO,GAAGhF,QAAnC,CAAb;;AACA,QAAI,CAACS,EAAE,CAACY,OAAR,EAAiB;AACfZ,MAAAA,EAAE,CAACgE,OAAH,CAAWX,IAAX,IAAmBX,EAAnB;;AACA1C,MAAAA,EAAE,CAACjB,OAAH,CAAW,IAAX;;AACA;AACD;;AACD,QAAIwF,OAAO,GAAG,CAAd,EAAiB;AACfvE,MAAAA,EAAE,CAACgE,OAAH,CAAWX,IAAX,IAAmBZ,IAAnB;AACA;AACD;;AACDE,IAAAA,MAAM,GAAI4B,OAAO,GAAGhF,QAAX,GAAuB,CAAhC;AACAoD,IAAAA,MAAM,GAAGoB,IAAI,IAAIpB,MAAM,GAAG,CAAjB,GAAqB,IAAIA,MAAzB,GAAkCA,MAA3C;AACAA,IAAAA,MAAM,GAAG3C,EAAE,CAACwD,OAAH,CAAW5D,IAAI,CAACC,GAAL,CAAS,CAAT,EAAYD,IAAI,CAACmC,GAAL,CAAS,CAAT,EAAYY,MAAZ,CAAZ,CAAX,CAAT;AACA3C,IAAAA,EAAE,CAACgE,OAAH,CAAWX,IAAX,IAAmBrD,EAAE,CAACuD,GAAH,CAAOd,IAAP,EAAaC,EAAb,EAAiBC,MAAjB,CAAnB;AACD;;AACD8B,EAAAA,IAAI,GAAG;AACL,UAAMC,QAAQ,GAAG,KAAKN,SAAL,KAAmB,KAAKA,SAAL,GAAiB,EAApC,CAAjB;AACA,WAAO,IAAIO,OAAJ,CAAY,CAACC,GAAD,EAAMC,GAAN,KAAc;AAC/BH,MAAAA,QAAQ,CAACjD,IAAT,CAAc;AAACmD,QAAAA,GAAD;AAAMC,QAAAA;AAAN,OAAd;AACD,KAFM,CAAP;AAGD;;AACD9F,EAAAA,OAAO,CAAC+F,QAAD,EAAW;AAChB,UAAMC,MAAM,GAAGD,QAAQ,GAAG,KAAH,GAAW,KAAlC;AACA,UAAMJ,QAAQ,GAAG,KAAKN,SAAL,IAAkB,EAAnC;;AACA,SAAK,IAAIvR,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG6R,QAAQ,CAACjE,MAA7B,EAAqC5N,CAAC,EAAtC,EAA0C;AACxC6R,MAAAA,QAAQ,CAAC7R,CAAD,CAAR,CAAYkS,MAAZ;AACD;AACF;;AA/Ea;;AAkFhB,MAAMC,OAAO,GAAG,CAAC,GAAD,EAAM,GAAN,EAAW,aAAX,EAA0B,QAA1B,EAAoC,SAApC,CAAhB;AACA,MAAMC,MAAM,GAAG,CAAC,OAAD,EAAU,aAAV,EAAyB,iBAAzB,CAAf;AACArS,QAAQ,CAACyO,GAAT,CAAa,WAAb,EAA0B;AACxBwC,EAAAA,KAAK,EAAE/E,SADiB;AAExBS,EAAAA,QAAQ,EAAE,IAFc;AAGxBkE,EAAAA,MAAM,EAAE,cAHgB;AAIxBhE,EAAAA,EAAE,EAAEX,SAJoB;AAKxB2D,EAAAA,IAAI,EAAE3D,SALkB;AAMxBiF,EAAAA,IAAI,EAAEjF,SANkB;AAOxB4D,EAAAA,EAAE,EAAE5D,SAPoB;AAQxBK,EAAAA,IAAI,EAAEL;AARkB,CAA1B;AAUA,MAAMoG,gBAAgB,GAAGC,MAAM,CAACC,IAAP,CAAYxS,QAAQ,CAACyS,SAArB,CAAzB;AACAzS,QAAQ,CAAC0S,QAAT,CAAkB,WAAlB,EAA+B;AAC7BC,EAAAA,SAAS,EAAE,KADkB;AAE7BC,EAAAA,UAAU,EAAE,KAFiB;AAG7BC,EAAAA,WAAW,EAAGC,IAAD,IAAUA,IAAI,KAAK,YAAT,IAAyBA,IAAI,KAAK,YAAlC,IAAkDA,IAAI,KAAK;AAHrD,CAA/B;AAKA9S,QAAQ,CAACyO,GAAT,CAAa,YAAb,EAA2B;AACzB4D,EAAAA,MAAM,EAAE;AACN9F,IAAAA,IAAI,EAAE,OADA;AAENwG,IAAAA,UAAU,EAAEV;AAFN,GADiB;AAKzBD,EAAAA,OAAO,EAAE;AACP7F,IAAAA,IAAI,EAAE,QADC;AAEPwG,IAAAA,UAAU,EAAEX;AAFL;AALgB,CAA3B;AAUApS,QAAQ,CAAC0S,QAAT,CAAkB,YAAlB,EAAgC;AAC9BC,EAAAA,SAAS,EAAE;AADmB,CAAhC;AAGA3S,QAAQ,CAACyO,GAAT,CAAa,aAAb,EAA4B;AAC1BgD,EAAAA,MAAM,EAAE;AACNgB,IAAAA,SAAS,EAAE;AACT9F,MAAAA,QAAQ,EAAE;AADD;AADL,GADkB;AAM1BqG,EAAAA,MAAM,EAAE;AACNP,IAAAA,SAAS,EAAE;AACT9F,MAAAA,QAAQ,EAAE;AADD;AADL,GANkB;AAW1BsG,EAAAA,IAAI,EAAE;AACJC,IAAAA,UAAU,EAAE;AACVb,MAAAA,MAAM,EAAE;AACNxC,QAAAA,IAAI,EAAE;AADA,OADE;AAIVsD,MAAAA,OAAO,EAAE;AACP5G,QAAAA,IAAI,EAAE,SADC;AAEPI,QAAAA,QAAQ,EAAE;AAFH;AAJC;AADR,GAXoB;AAsB1ByG,EAAAA,IAAI,EAAE;AACJF,IAAAA,UAAU,EAAE;AACVb,MAAAA,MAAM,EAAE;AACNvC,QAAAA,EAAE,EAAE;AADE,OADE;AAIVqD,MAAAA,OAAO,EAAE;AACP5G,QAAAA,IAAI,EAAE,SADC;AAEPsE,QAAAA,MAAM,EAAE,QAFD;AAGPhE,QAAAA,EAAE,EAAExM,CAAC,IAAIA,CAAC,GAAG;AAHN;AAJC;AADR;AAtBoB,CAA5B;;AAmCA,MAAMgT,UAAN,CAAiB;AACfzH,EAAAA,WAAW,CAACQ,KAAD,EAAQkH,MAAR,EAAgB;AACzB,SAAKC,MAAL,GAAcnH,KAAd;AACA,SAAKoH,WAAL,GAAmB,IAAIzH,GAAJ,EAAnB;AACA,SAAK0H,SAAL,CAAeH,MAAf;AACD;;AACDG,EAAAA,SAAS,CAACH,MAAD,EAAS;AAChB,QAAI,CAACpT,QAAQ,CAACoT,MAAD,CAAb,EAAuB;AACrB;AACD;;AACD,UAAMI,aAAa,GAAG,KAAKF,WAA3B;AACAjB,IAAAA,MAAM,CAACoB,mBAAP,CAA2BL,MAA3B,EAAmC1G,OAAnC,CAA2CgH,GAAG,IAAI;AAChD,YAAMrD,GAAG,GAAG+C,MAAM,CAACM,GAAD,CAAlB;;AACA,UAAI,CAAC1T,QAAQ,CAACqQ,GAAD,CAAb,EAAoB;AAClB;AACD;;AACD,YAAM2B,QAAQ,GAAG,EAAjB;;AACA,WAAK,MAAM2B,MAAX,IAAqBvB,gBAArB,EAAuC;AACrCJ,QAAAA,QAAQ,CAAC2B,MAAD,CAAR,GAAmBtD,GAAG,CAACsD,MAAD,CAAtB;AACD;;AACD,OAACzT,OAAO,CAACmQ,GAAG,CAACwC,UAAL,CAAP,IAA2BxC,GAAG,CAACwC,UAA/B,IAA6C,CAACa,GAAD,CAA9C,EAAqDhH,OAArD,CAA8D6D,IAAD,IAAU;AACrE,YAAIA,IAAI,KAAKmD,GAAT,IAAgB,CAACF,aAAa,CAAC3E,GAAd,CAAkB0B,IAAlB,CAArB,EAA8C;AAC5CiD,UAAAA,aAAa,CAACjF,GAAd,CAAkBgC,IAAlB,EAAwByB,QAAxB;AACD;AACF,OAJD;AAKD,KAdD;AAeD;;AACD4B,EAAAA,eAAe,CAACtD,MAAD,EAASuD,MAAT,EAAiB;AAC9B,UAAMC,UAAU,GAAGD,MAAM,CAACE,OAA1B;AACA,UAAMA,OAAO,GAAGC,oBAAoB,CAAC1D,MAAD,EAASwD,UAAT,CAApC;;AACA,QAAI,CAACC,OAAL,EAAc;AACZ,aAAO,EAAP;AACD;;AACD,UAAMf,UAAU,GAAG,KAAKiB,iBAAL,CAAuBF,OAAvB,EAAgCD,UAAhC,CAAnB;;AACA,QAAIA,UAAU,CAACI,OAAf,EAAwB;AACtBC,MAAAA,QAAQ,CAAC7D,MAAM,CAACyD,OAAP,CAAeK,WAAhB,EAA6BN,UAA7B,CAAR,CAAiDO,IAAjD,CAAsD,MAAM;AAC1D/D,QAAAA,MAAM,CAACyD,OAAP,GAAiBD,UAAjB;AACD,OAFD,EAEG,MAAM,CACR,CAHD;AAID;;AACD,WAAOd,UAAP;AACD;;AACDiB,EAAAA,iBAAiB,CAAC3D,MAAD,EAASuD,MAAT,EAAiB;AAChC,UAAML,aAAa,GAAG,KAAKF,WAA3B;AACA,UAAMN,UAAU,GAAG,EAAnB;AACA,UAAMvF,OAAO,GAAG6C,MAAM,CAAC8D,WAAP,KAAuB9D,MAAM,CAAC8D,WAAP,GAAqB,EAA5C,CAAhB;AACA,UAAME,KAAK,GAAGjC,MAAM,CAACC,IAAP,CAAYuB,MAAZ,CAAd;AACA,UAAMzH,IAAI,GAAGkB,IAAI,CAACC,GAAL,EAAb;AACA,QAAIxN,CAAJ;;AACA,SAAKA,CAAC,GAAGuU,KAAK,CAAC3G,MAAN,GAAe,CAAxB,EAA2B5N,CAAC,IAAI,CAAhC,EAAmC,EAAEA,CAArC,EAAwC;AACtC,YAAMwQ,IAAI,GAAG+D,KAAK,CAACvU,CAAD,CAAlB;;AACA,UAAIwQ,IAAI,CAACgE,MAAL,CAAY,CAAZ,MAAmB,GAAvB,EAA4B;AAC1B;AACD;;AACD,UAAIhE,IAAI,KAAK,SAAb,EAAwB;AACtByC,QAAAA,UAAU,CAACrE,IAAX,CAAgB,GAAG,KAAKiF,eAAL,CAAqBtD,MAArB,EAA6BuD,MAA7B,CAAnB;AACA;AACD;;AACD,YAAMW,KAAK,GAAGX,MAAM,CAACtD,IAAD,CAApB;AACA,UAAIgC,SAAS,GAAG9E,OAAO,CAAC8C,IAAD,CAAvB;AACA,YAAMF,GAAG,GAAGmD,aAAa,CAACpF,GAAd,CAAkBmC,IAAlB,CAAZ;;AACA,UAAIgC,SAAJ,EAAe;AACb,YAAIlC,GAAG,IAAIkC,SAAS,CAAChB,MAAV,EAAX,EAA+B;AAC7BgB,UAAAA,SAAS,CAACf,MAAV,CAAiBnB,GAAjB,EAAsBmE,KAAtB,EAA6BpI,IAA7B;AACA;AACD,SAHD,MAGO;AACLmG,UAAAA,SAAS,CAACnD,MAAV;AACD;AACF;;AACD,UAAI,CAACiB,GAAD,IAAQ,CAACA,GAAG,CAAC5D,QAAjB,EAA2B;AACzB6D,QAAAA,MAAM,CAACC,IAAD,CAAN,GAAeiE,KAAf;AACA;AACD;;AACD/G,MAAAA,OAAO,CAAC8C,IAAD,CAAP,GAAgBgC,SAAS,GAAG,IAAInC,SAAJ,CAAcC,GAAd,EAAmBC,MAAnB,EAA2BC,IAA3B,EAAiCiE,KAAjC,CAA5B;AACAxB,MAAAA,UAAU,CAACrE,IAAX,CAAgB4D,SAAhB;AACD;;AACD,WAAOS,UAAP;AACD;;AACDxB,EAAAA,MAAM,CAAClB,MAAD,EAASuD,MAAT,EAAiB;AACrB,QAAI,KAAKP,WAAL,CAAiBmB,IAAjB,KAA0B,CAA9B,EAAiC;AAC/BpC,MAAAA,MAAM,CAACqC,MAAP,CAAcpE,MAAd,EAAsBuD,MAAtB;AACA;AACD;;AACD,UAAMb,UAAU,GAAG,KAAKiB,iBAAL,CAAuB3D,MAAvB,EAA+BuD,MAA/B,CAAnB;;AACA,QAAIb,UAAU,CAACrF,MAAf,EAAuB;AACrB4B,MAAAA,QAAQ,CAACX,GAAT,CAAa,KAAKyE,MAAlB,EAA0BL,UAA1B;AACA,aAAO,IAAP;AACD;AACF;;AAxFc;;AA0FjB,SAASmB,QAAT,CAAkBnB,UAAlB,EAA8BH,UAA9B,EAA0C;AACxC,QAAMpF,OAAO,GAAG,EAAhB;AACA,QAAM6E,IAAI,GAAGD,MAAM,CAACC,IAAP,CAAYO,UAAZ,CAAb;;AACA,OAAK,IAAI9S,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGuS,IAAI,CAAC3E,MAAzB,EAAiC5N,CAAC,EAAlC,EAAsC;AACpC,UAAM4U,IAAI,GAAG3B,UAAU,CAACV,IAAI,CAACvS,CAAD,CAAL,CAAvB;;AACA,QAAI4U,IAAI,IAAIA,IAAI,CAACpD,MAAL,EAAZ,EAA2B;AACzB9D,MAAAA,OAAO,CAACkB,IAAR,CAAagG,IAAI,CAAChD,IAAL,EAAb;AACD;AACF;;AACD,SAAOE,OAAO,CAAC+C,GAAR,CAAYnH,OAAZ,CAAP;AACD;;AACD,SAASuG,oBAAT,CAA8B1D,MAA9B,EAAsCwD,UAAtC,EAAkD;AAChD,MAAI,CAACA,UAAL,EAAiB;AACf;AACD;;AACD,MAAIC,OAAO,GAAGzD,MAAM,CAACyD,OAArB;;AACA,MAAI,CAACA,OAAL,EAAc;AACZzD,IAAAA,MAAM,CAACyD,OAAP,GAAiBD,UAAjB;AACA;AACD;;AACD,MAAIC,OAAO,CAACG,OAAZ,EAAqB;AACnB5D,IAAAA,MAAM,CAACyD,OAAP,GAAiBA,OAAO,GAAG1B,MAAM,CAACqC,MAAP,CAAc,EAAd,EAAkBX,OAAlB,EAA2B;AAACG,MAAAA,OAAO,EAAE,KAAV;AAAiBE,MAAAA,WAAW,EAAE;AAA9B,KAA3B,CAA3B;AACD;;AACD,SAAOL,OAAP;AACD;;AAED,SAASc,SAAT,CAAmBC,KAAnB,EAA0BC,eAA1B,EAA2C;AACzC,QAAMC,IAAI,GAAGF,KAAK,IAAIA,KAAK,CAACf,OAAf,IAA0B,EAAvC;AACA,QAAMkB,OAAO,GAAGD,IAAI,CAACC,OAArB;AACA,QAAMlI,GAAG,GAAGiI,IAAI,CAACjI,GAAL,KAAaf,SAAb,GAAyB+I,eAAzB,GAA2C,CAAvD;AACA,QAAM9F,GAAG,GAAG+F,IAAI,CAAC/F,GAAL,KAAajD,SAAb,GAAyB+I,eAAzB,GAA2C,CAAvD;AACA,SAAO;AACL/H,IAAAA,KAAK,EAAEiI,OAAO,GAAGhG,GAAH,GAASlC,GADlB;AAELmI,IAAAA,GAAG,EAAED,OAAO,GAAGlI,GAAH,GAASkC;AAFhB,GAAP;AAID;;AACD,SAASkG,WAAT,CAAqBC,MAArB,EAA6BC,MAA7B,EAAqCN,eAArC,EAAsD;AACpD,MAAIA,eAAe,KAAK,KAAxB,EAA+B;AAC7B,WAAO,KAAP;AACD;;AACD,QAAMpS,CAAC,GAAGkS,SAAS,CAACO,MAAD,EAASL,eAAT,CAAnB;AACA,QAAMlS,CAAC,GAAGgS,SAAS,CAACQ,MAAD,EAASN,eAAT,CAAnB;AACA,SAAO;AACLO,IAAAA,GAAG,EAAEzS,CAAC,CAACqS,GADF;AAELK,IAAAA,KAAK,EAAE5S,CAAC,CAACuS,GAFJ;AAGLM,IAAAA,MAAM,EAAE3S,CAAC,CAACmK,KAHL;AAILyI,IAAAA,IAAI,EAAE9S,CAAC,CAACqK;AAJH,GAAP;AAMD;;AACD,SAAS0I,MAAT,CAAgBlB,KAAhB,EAAuB;AACrB,MAAInT,CAAJ,EAAOhC,CAAP,EAAUY,CAAV,EAAaM,CAAb;;AACA,MAAIP,QAAQ,CAACwU,KAAD,CAAZ,EAAqB;AACnBnT,IAAAA,CAAC,GAAGmT,KAAK,CAACc,GAAV;AACAjW,IAAAA,CAAC,GAAGmV,KAAK,CAACe,KAAV;AACAtV,IAAAA,CAAC,GAAGuU,KAAK,CAACgB,MAAV;AACAjV,IAAAA,CAAC,GAAGiU,KAAK,CAACiB,IAAV;AACD,GALD,MAKO;AACLpU,IAAAA,CAAC,GAAGhC,CAAC,GAAGY,CAAC,GAAGM,CAAC,GAAGiU,KAAhB;AACD;;AACD,SAAO;AACLc,IAAAA,GAAG,EAAEjU,CADA;AAELkU,IAAAA,KAAK,EAAElW,CAFF;AAGLmW,IAAAA,MAAM,EAAEvV,CAHH;AAILwV,IAAAA,IAAI,EAAElV,CAJD;AAKLoV,IAAAA,QAAQ,EAAEnB,KAAK,KAAK;AALf,GAAP;AAOD;;AACD,SAASoB,uBAAT,CAAiC1J,KAAjC,EAAwC2J,aAAxC,EAAuD;AACrD,QAAMvD,IAAI,GAAG,EAAb;;AACA,QAAMwD,QAAQ,GAAG5J,KAAK,CAAC6J,sBAAN,CAA6BF,aAA7B,CAAjB;;AACA,MAAI9V,CAAJ,EAAOiW,IAAP;;AACA,OAAKjW,CAAC,GAAG,CAAJ,EAAOiW,IAAI,GAAGF,QAAQ,CAACnI,MAA5B,EAAoC5N,CAAC,GAAGiW,IAAxC,EAA8C,EAAEjW,CAAhD,EAAmD;AACjDuS,IAAAA,IAAI,CAAC3D,IAAL,CAAUmH,QAAQ,CAAC/V,CAAD,CAAR,CAAYkW,KAAtB;AACD;;AACD,SAAO3D,IAAP;AACD;;AACD,SAAS4D,UAAT,CAAoBC,KAApB,EAA2B3B,KAA3B,EAAkC4B,OAAlC,EAA2CrC,OAA3C,EAAoD;AAClD,QAAMzB,IAAI,GAAG6D,KAAK,CAAC7D,IAAnB;AACA,QAAM+D,UAAU,GAAGtC,OAAO,CAACuC,IAAR,KAAiB,QAApC;AACA,MAAIvW,CAAJ,EAAOiW,IAAP,EAAaO,YAAb,EAA2BC,UAA3B;;AACA,MAAIhC,KAAK,KAAK,IAAd,EAAoB;AAClB;AACD;;AACD,OAAKzU,CAAC,GAAG,CAAJ,EAAOiW,IAAI,GAAG1D,IAAI,CAAC3E,MAAxB,EAAgC5N,CAAC,GAAGiW,IAApC,EAA0C,EAAEjW,CAA5C,EAA+C;AAC7CwW,IAAAA,YAAY,GAAG,CAACjE,IAAI,CAACvS,CAAD,CAApB;;AACA,QAAIwW,YAAY,KAAKH,OAArB,EAA8B;AAC5B,UAAIrC,OAAO,CAACa,GAAZ,EAAiB;AACf;AACD;;AACD;AACD;;AACD4B,IAAAA,UAAU,GAAGL,KAAK,CAACtC,MAAN,CAAa0C,YAAb,CAAb;;AACA,QAAI3V,cAAc,CAAC4V,UAAD,CAAd,KAA+BH,UAAU,IAAK7B,KAAK,KAAK,CAAV,IAAexT,IAAI,CAACwT,KAAD,CAAJ,KAAgBxT,IAAI,CAACwV,UAAD,CAAjF,CAAJ,EAAqG;AACnGhC,MAAAA,KAAK,IAAIgC,UAAT;AACD;AACF;;AACD,SAAOhC,KAAP;AACD;;AACD,SAASiC,wBAAT,CAAkCC,IAAlC,EAAwC;AACtC,QAAMpE,IAAI,GAAGD,MAAM,CAACC,IAAP,CAAYoE,IAAZ,CAAb;AACA,QAAMC,KAAK,GAAG,IAAIC,KAAJ,CAAUtE,IAAI,CAAC3E,MAAf,CAAd;AACA,MAAI5N,CAAJ,EAAOiW,IAAP,EAAatC,GAAb;;AACA,OAAK3T,CAAC,GAAG,CAAJ,EAAOiW,IAAI,GAAG1D,IAAI,CAAC3E,MAAxB,EAAgC5N,CAAC,GAAGiW,IAApC,EAA0C,EAAEjW,CAA5C,EAA+C;AAC7C2T,IAAAA,GAAG,GAAGpB,IAAI,CAACvS,CAAD,CAAV;AACA4W,IAAAA,KAAK,CAAC5W,CAAD,CAAL,GAAW;AACT4C,MAAAA,CAAC,EAAE+Q,GADM;AAET7Q,MAAAA,CAAC,EAAE6T,IAAI,CAAChD,GAAD;AAFE,KAAX;AAID;;AACD,SAAOiD,KAAP;AACD;;AACD,SAASE,SAAT,CAAmB/B,KAAnB,EAA0BgC,IAA1B,EAAgC;AAC9B,QAAMC,OAAO,GAAGjC,KAAK,IAAIA,KAAK,CAACf,OAAN,CAAcgD,OAAvC;AACA,SAAOA,OAAO,IAAKA,OAAO,KAAK/K,SAAZ,IAAyB8K,IAAI,CAACX,KAAL,KAAenK,SAA3D;AACD;;AACD,SAASgL,WAAT,CAAqBC,UAArB,EAAiCC,UAAjC,EAA6CJ,IAA7C,EAAmD;AACjD,SAAQ,GAAEG,UAAU,CAACE,EAAG,IAAGD,UAAU,CAACC,EAAG,IAAGL,IAAI,CAACX,KAAL,IAAcW,IAAI,CAACzK,IAAK,EAApE;AACD;;AACD,SAAS+K,aAAT,CAAuBtC,KAAvB,EAA8B;AAC5B,QAAM;AAAC/H,IAAAA,GAAD;AAAMkC,IAAAA,GAAN;AAAWoI,IAAAA,UAAX;AAAuBC,IAAAA;AAAvB,MAAqCxC,KAAK,CAACsC,aAAN,EAA3C;AACA,SAAO;AACLrK,IAAAA,GAAG,EAAEsK,UAAU,GAAGtK,GAAH,GAASwK,MAAM,CAACC,iBAD1B;AAELvI,IAAAA,GAAG,EAAEqI,UAAU,GAAGrI,GAAH,GAASsI,MAAM,CAACE;AAF1B,GAAP;AAID;;AACD,SAASC,gBAAT,CAA0BC,MAA1B,EAAkCC,QAAlC,EAA4CC,UAA5C,EAAwD;AACtD,QAAMC,QAAQ,GAAGH,MAAM,CAACC,QAAD,CAAN,KAAqBD,MAAM,CAACC,QAAD,CAAN,GAAmB,EAAxC,CAAjB;AACA,SAAOE,QAAQ,CAACD,UAAD,CAAR,KAAyBC,QAAQ,CAACD,UAAD,CAAR,GAAuB,EAAhD,CAAP;AACD;;AACD,SAASE,mBAAT,CAA6B5B,KAA7B,EAAoC6B,MAApC,EAA4CC,QAA5C,EAAsD;AACpD,OAAK,MAAMnB,IAAX,IAAmBkB,MAAM,CAACE,uBAAP,CAA+B,KAA/B,EAAsCjD,OAAtC,EAAnB,EAAoE;AAClE,UAAMT,KAAK,GAAG2B,KAAK,CAACW,IAAI,CAACb,KAAN,CAAnB;;AACA,QAAKgC,QAAQ,IAAIzD,KAAK,GAAG,CAArB,IAA4B,CAACyD,QAAD,IAAazD,KAAK,GAAG,CAArD,EAAyD;AACvD,aAAOsC,IAAI,CAACb,KAAZ;AACD;AACF;;AACD,SAAO,IAAP;AACD;;AACD,SAASkC,YAAT,CAAsBC,UAAtB,EAAkCC,MAAlC,EAA0C;AACxC,QAAM;AAACnM,IAAAA,KAAD;AAAQoM,IAAAA,WAAW,EAAExB;AAArB,MAA6BsB,UAAnC;AACA,QAAMT,MAAM,GAAGzL,KAAK,CAACqM,OAAN,KAAkBrM,KAAK,CAACqM,OAAN,GAAgB,EAAlC,CAAf;AACA,QAAM;AAACC,IAAAA,MAAD;AAASR,IAAAA,MAAT;AAAiB/B,IAAAA,KAAK,EAAEM;AAAxB,MAAwCO,IAA9C;AACA,QAAM2B,KAAK,GAAGD,MAAM,CAACE,IAArB;AACA,QAAMC,KAAK,GAAGX,MAAM,CAACU,IAArB;AACA,QAAMhF,GAAG,GAAGsD,WAAW,CAACwB,MAAD,EAASR,MAAT,EAAiBlB,IAAjB,CAAvB;AACA,QAAMd,IAAI,GAAGqC,MAAM,CAAC1K,MAApB;AACA,MAAIwI,KAAJ;;AACA,OAAK,IAAIpW,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGiW,IAApB,EAA0B,EAAEjW,CAA5B,EAA+B;AAC7B,UAAM8N,IAAI,GAAGwK,MAAM,CAACtY,CAAD,CAAnB;AACA,UAAM;AAAC,OAAC0Y,KAAD,GAASxC,KAAV;AAAiB,OAAC0C,KAAD,GAASnE;AAA1B,QAAmC3G,IAAzC;AACA,UAAM+K,UAAU,GAAG/K,IAAI,CAAC0K,OAAL,KAAiB1K,IAAI,CAAC0K,OAAL,GAAe,EAAhC,CAAnB;AACApC,IAAAA,KAAK,GAAGyC,UAAU,CAACD,KAAD,CAAV,GAAoBjB,gBAAgB,CAACC,MAAD,EAASjE,GAAT,EAAcuC,KAAd,CAA5C;AACAE,IAAAA,KAAK,CAACI,YAAD,CAAL,GAAsB/B,KAAtB;AACA2B,IAAAA,KAAK,CAAC0C,IAAN,GAAad,mBAAmB,CAAC5B,KAAD,EAAQ6B,MAAR,EAAgB,IAAhB,CAAhC;AACA7B,IAAAA,KAAK,CAAC2C,OAAN,GAAgBf,mBAAmB,CAAC5B,KAAD,EAAQ6B,MAAR,EAAgB,KAAhB,CAAnC;AACD;AACF;;AACD,SAASe,eAAT,CAAyB7M,KAAzB,EAAgCwM,IAAhC,EAAsC;AACpC,QAAMM,MAAM,GAAG9M,KAAK,CAAC8M,MAArB;AACA,SAAO3G,MAAM,CAACC,IAAP,CAAY0G,MAAZ,EAAoBC,MAApB,CAA2BvF,GAAG,IAAIsF,MAAM,CAACtF,GAAD,CAAN,CAAYgF,IAAZ,KAAqBA,IAAvD,EAA6DQ,KAA7D,EAAP;AACD;;AACD,SAASC,oBAAT,CAA8BC,MAA9B,EAAsCnD,KAAtC,EAA6C;AAC3C,SAAO5D,MAAM,CAACqC,MAAP,CAAcrC,MAAM,CAACgH,MAAP,CAAcD,MAAd,CAAd,EACL;AACE7H,IAAAA,MAAM,EAAE,KADV;AAEE+H,IAAAA,OAAO,EAAEtN,SAFX;AAGEuK,IAAAA,YAAY,EAAEN,KAHhB;AAIEA,IAAAA,KAJF;AAKEK,IAAAA,IAAI,EAAE,SALR;AAMEjK,IAAAA,IAAI,EAAE;AANR,GADK,CAAP;AAUD;;AACD,SAASkN,iBAAT,CAA2BH,MAA3B,EAAmCnD,KAAnC,EAA0CuD,OAA1C,EAAmD;AACjD,SAAOnH,MAAM,CAACqC,MAAP,CAAcrC,MAAM,CAACgH,MAAP,CAAcD,MAAd,CAAd,EAAqC;AAC1C7H,IAAAA,MAAM,EAAE,KADkC;AAE1CkI,IAAAA,SAAS,EAAExD,KAF+B;AAG1CoC,IAAAA,MAAM,EAAErM,SAHkC;AAI1C0N,IAAAA,GAAG,EAAE1N,SAJqC;AAK1CwN,IAAAA,OAL0C;AAM1CvD,IAAAA,KAN0C;AAO1CK,IAAAA,IAAI,EAAE,SAPoC;AAQ1CjK,IAAAA,IAAI,EAAE;AARoC,GAArC,CAAP;AAUD;;AACD,SAASsN,WAAT,CAAqB7C,IAArB,EAA2BpJ,KAA3B,EAAkC;AAChC,QAAM6I,YAAY,GAAGO,IAAI,CAACsB,UAAL,CAAgBnC,KAArC;AACA,QAAMyC,IAAI,GAAG5B,IAAI,CAACkB,MAAL,IAAelB,IAAI,CAACkB,MAAL,CAAYU,IAAxC;;AACA,MAAI,CAACA,IAAL,EAAW;AACT;AACD;;AACDhL,EAAAA,KAAK,GAAGA,KAAK,IAAIoJ,IAAI,CAAC8C,OAAtB;;AACA,OAAK,MAAMvB,MAAX,IAAqB3K,KAArB,EAA4B;AAC1B,UAAMiK,MAAM,GAAGU,MAAM,CAACE,OAAtB;;AACA,QAAI,CAACZ,MAAD,IAAWA,MAAM,CAACe,IAAD,CAAN,KAAiB1M,SAA5B,IAAyC2L,MAAM,CAACe,IAAD,CAAN,CAAanC,YAAb,MAA+BvK,SAA5E,EAAuF;AACrF;AACD;;AACD,WAAO2L,MAAM,CAACe,IAAD,CAAN,CAAanC,YAAb,CAAP;AACD;AACF;;AACD,MAAMsD,kBAAkB,GAAIvD,IAAD,IAAUA,IAAI,KAAK,OAAT,IAAoBA,IAAI,KAAK,MAAlE;;AACA,MAAMwD,gBAAgB,GAAG,CAACC,MAAD,EAASC,MAAT,KAAoBA,MAAM,GAAGD,MAAH,GAAY1H,MAAM,CAACqC,MAAP,CAAc,EAAd,EAAkBqF,MAAlB,CAA/D;;AACA,MAAME,iBAAN,CAAwB;AACtBvO,EAAAA,WAAW,CAACQ,KAAD,EAAQqK,YAAR,EAAsB;AAC/B,SAAKrK,KAAL,GAAaA,KAAb;AACA,SAAKgO,IAAL,GAAYhO,KAAK,CAACiO,GAAlB;AACA,SAAKlE,KAAL,GAAaM,YAAb;AACA,SAAK6D,eAAL,GAAuB,EAAvB;AACA,SAAK9B,WAAL,GAAmB,KAAK+B,OAAL,EAAnB;AACA,SAAKC,KAAL,GAAa,KAAKhC,WAAL,CAAiBjM,IAA9B;AACA,SAAK0H,OAAL,GAAe/H,SAAf;AACA,SAAKuO,QAAL,GAAgB,KAAhB;AACA,SAAKC,KAAL,GAAaxO,SAAb;AACA,SAAKyO,WAAL,GAAmBzO,SAAnB;AACA,SAAK0O,cAAL,GAAsB1O,SAAtB;AACA,SAAK2O,UAAL,GAAkB3O,SAAlB;AACA,SAAK4O,UAAL,GAAkB5O,SAAlB;AACA,SAAK6O,mBAAL,GAA2B,KAA3B;AACA,SAAKC,QAAL,GAAgB9O,SAAhB;AACA,SAAK+O,SAAL,GAAiB,EAAjB;AACA,SAAKC,UAAL;AACD;;AACDA,EAAAA,UAAU,GAAG;AACX,UAAM9N,EAAE,GAAG,IAAX;AACA,UAAM4J,IAAI,GAAG5J,EAAE,CAACoL,WAAhB;AACApL,IAAAA,EAAE,CAACqG,SAAH;AACArG,IAAAA,EAAE,CAAC+N,UAAH;AACAnE,IAAAA,IAAI,CAACoE,QAAL,GAAgBrE,SAAS,CAACC,IAAI,CAACkB,MAAN,EAAclB,IAAd,CAAzB;AACA5J,IAAAA,EAAE,CAACiO,WAAH;AACD;;AACDC,EAAAA,WAAW,CAAC7E,YAAD,EAAe;AACxB,QAAI,KAAKN,KAAL,KAAeM,YAAnB,EAAiC;AAC/BoD,MAAAA,WAAW,CAAC,KAAKrB,WAAN,CAAX;AACD;;AACD,SAAKrC,KAAL,GAAaM,YAAb;AACD;;AACD0E,EAAAA,UAAU,GAAG;AACX,UAAM/N,EAAE,GAAG,IAAX;AACA,UAAMhB,KAAK,GAAGgB,EAAE,CAAChB,KAAjB;AACA,UAAM4K,IAAI,GAAG5J,EAAE,CAACoL,WAAhB;AACA,UAAMgB,OAAO,GAAGpM,EAAE,CAACmO,UAAH,EAAhB;;AACA,UAAMC,QAAQ,GAAG,CAAC5C,IAAD,EAAO/V,CAAP,EAAUE,CAAV,EAAaxD,CAAb,KAAmBqZ,IAAI,KAAK,GAAT,GAAe/V,CAAf,GAAmB+V,IAAI,KAAK,GAAT,GAAerZ,CAAf,GAAmBwD,CAA1E;;AACA,UAAM0Y,GAAG,GAAGzE,IAAI,CAAC0E,OAAL,GAAepb,cAAc,CAACkZ,OAAO,CAACkC,OAAT,EAAkBzC,eAAe,CAAC7M,KAAD,EAAQ,GAAR,CAAjC,CAAzC;AACA,UAAMuP,GAAG,GAAG3E,IAAI,CAAC4E,OAAL,GAAetb,cAAc,CAACkZ,OAAO,CAACoC,OAAT,EAAkB3C,eAAe,CAAC7M,KAAD,EAAQ,GAAR,CAAjC,CAAzC;AACA,UAAMyP,GAAG,GAAG7E,IAAI,CAAC8E,OAAL,GAAexb,cAAc,CAACkZ,OAAO,CAACsC,OAAT,EAAkB7C,eAAe,CAAC7M,KAAD,EAAQ,GAAR,CAAjC,CAAzC;AACA,UAAM2P,SAAS,GAAG/E,IAAI,CAAC+E,SAAvB;AACA,UAAMC,GAAG,GAAGhF,IAAI,CAACiF,OAAL,GAAeT,QAAQ,CAACO,SAAD,EAAYN,GAAZ,EAAiBE,GAAjB,EAAsBE,GAAtB,CAAnC;AACA,UAAMK,GAAG,GAAGlF,IAAI,CAACmF,OAAL,GAAeX,QAAQ,CAACO,SAAD,EAAYJ,GAAZ,EAAiBF,GAAjB,EAAsBI,GAAtB,CAAnC;AACA7E,IAAAA,IAAI,CAAC1B,MAAL,GAAclI,EAAE,CAACgP,aAAH,CAAiBX,GAAjB,CAAd;AACAzE,IAAAA,IAAI,CAACzB,MAAL,GAAcnI,EAAE,CAACgP,aAAH,CAAiBT,GAAjB,CAAd;AACA3E,IAAAA,IAAI,CAACqF,MAAL,GAAcjP,EAAE,CAACgP,aAAH,CAAiBP,GAAjB,CAAd;AACA7E,IAAAA,IAAI,CAAC0B,MAAL,GAActL,EAAE,CAACgP,aAAH,CAAiBJ,GAAjB,CAAd;AACAhF,IAAAA,IAAI,CAACkB,MAAL,GAAc9K,EAAE,CAACgP,aAAH,CAAiBF,GAAjB,CAAd;AACD;;AACDX,EAAAA,UAAU,GAAG;AACX,WAAO,KAAKnP,KAAL,CAAWwK,IAAX,CAAgB0F,QAAhB,CAAyB,KAAKnG,KAA9B,CAAP;AACD;;AACDoE,EAAAA,OAAO,GAAG;AACR,WAAO,KAAKnO,KAAL,CAAWmQ,cAAX,CAA0B,KAAKpG,KAA/B,CAAP;AACD;;AACDiG,EAAAA,aAAa,CAACI,OAAD,EAAU;AACrB,WAAO,KAAKpQ,KAAL,CAAW8M,MAAX,CAAkBsD,OAAlB,CAAP;AACD;;AACDC,EAAAA,cAAc,CAACzH,KAAD,EAAQ;AACpB,UAAMgC,IAAI,GAAG,KAAKwB,WAAlB;AACA,WAAOxD,KAAK,KAAKgC,IAAI,CAAC0B,MAAf,GACH1B,IAAI,CAACkB,MADF,GAEHlB,IAAI,CAAC0B,MAFT;AAGD;;AACDgE,EAAAA,KAAK,GAAG;AACN,SAAKnP,OAAL,CAAa,OAAb;AACD;;AACDoP,EAAAA,QAAQ,GAAG;AACT,UAAM3F,IAAI,GAAG,KAAKwB,WAAlB;;AACA,QAAI,KAAKkC,KAAT,EAAgB;AACdla,MAAAA,mBAAmB,CAAC,KAAKka,KAAN,EAAa,IAAb,CAAnB;AACD;;AACD,QAAI1D,IAAI,CAACoE,QAAT,EAAmB;AACjBvB,MAAAA,WAAW,CAAC7C,IAAD,CAAX;AACD;AACF;;AACD4F,EAAAA,UAAU,GAAG;AACX,UAAMxP,EAAE,GAAG,IAAX;AACA,UAAMoM,OAAO,GAAGpM,EAAE,CAACmO,UAAH,EAAhB;AACA,UAAM3E,IAAI,GAAG4C,OAAO,CAAC5C,IAAR,KAAiB4C,OAAO,CAAC5C,IAAR,GAAe,EAAhC,CAAb;AACA,UAAM8D,KAAK,GAAGtN,EAAE,CAACsN,KAAjB;;AACA,QAAIxa,QAAQ,CAAC0W,IAAD,CAAZ,EAAoB;AAClBxJ,MAAAA,EAAE,CAACsN,KAAH,GAAW/D,wBAAwB,CAACC,IAAD,CAAnC;AACD,KAFD,MAEO,IAAI8D,KAAK,KAAK9D,IAAd,EAAoB;AACzB,UAAI8D,KAAJ,EAAW;AACTla,QAAAA,mBAAmB,CAACka,KAAD,EAAQtN,EAAR,CAAnB;AACA,cAAM4J,IAAI,GAAG5J,EAAE,CAACoL,WAAhB;AACAqB,QAAAA,WAAW,CAAC7C,IAAD,CAAX;AACAA,QAAAA,IAAI,CAAC8C,OAAL,GAAe,EAAf;AACD;;AACD,UAAIlD,IAAI,IAAIrE,MAAM,CAACsK,YAAP,CAAoBjG,IAApB,CAAZ,EAAuC;AACrClW,QAAAA,iBAAiB,CAACkW,IAAD,EAAOxJ,EAAP,CAAjB;AACD;;AACDA,MAAAA,EAAE,CAAC6N,SAAH,GAAe,EAAf;AACA7N,MAAAA,EAAE,CAACsN,KAAH,GAAW9D,IAAX;AACD;AACF;;AACDyE,EAAAA,WAAW,GAAG;AACZ,UAAMjO,EAAE,GAAG,IAAX;AACA,UAAM4J,IAAI,GAAG5J,EAAE,CAACoL,WAAhB;;AACApL,IAAAA,EAAE,CAACwP,UAAH;;AACA,QAAIxP,EAAE,CAAC0P,kBAAP,EAA2B;AACzB9F,MAAAA,IAAI,CAACwC,OAAL,GAAe,IAAIpM,EAAE,CAAC0P,kBAAP,EAAf;AACD;AACF;;AACDC,EAAAA,qBAAqB,CAACC,gBAAD,EAAmB;AACtC,UAAM5P,EAAE,GAAG,IAAX;AACA,UAAM4J,IAAI,GAAG5J,EAAE,CAACoL,WAAhB;AACA,UAAMgB,OAAO,GAAGpM,EAAE,CAACmO,UAAH,EAAhB;AACA,QAAI0B,YAAY,GAAG,KAAnB;;AACA7P,IAAAA,EAAE,CAACwP,UAAH;;AACA,UAAMM,UAAU,GAAGlG,IAAI,CAACoE,QAAxB;AACApE,IAAAA,IAAI,CAACoE,QAAL,GAAgBrE,SAAS,CAACC,IAAI,CAACkB,MAAN,EAAclB,IAAd,CAAzB;;AACA,QAAIA,IAAI,CAACX,KAAL,KAAemD,OAAO,CAACnD,KAA3B,EAAkC;AAChC4G,MAAAA,YAAY,GAAG,IAAf;AACApD,MAAAA,WAAW,CAAC7C,IAAD,CAAX;AACAA,MAAAA,IAAI,CAACX,KAAL,GAAamD,OAAO,CAACnD,KAArB;AACD;;AACDjJ,IAAAA,EAAE,CAAC+P,eAAH,CAAmBH,gBAAnB;;AACA,QAAIC,YAAY,IAAIC,UAAU,KAAKlG,IAAI,CAACoE,QAAxC,EAAkD;AAChD/C,MAAAA,YAAY,CAACjL,EAAD,EAAK4J,IAAI,CAAC8C,OAAV,CAAZ;AACD;AACF;;AACDrG,EAAAA,SAAS,GAAG;AACV,UAAMrG,EAAE,GAAG,IAAX;AACA,UAAMkG,MAAM,GAAGlG,EAAE,CAAChB,KAAH,CAASkH,MAAxB;AACA,UAAM8J,SAAS,GAAG9J,MAAM,CAAC+J,gBAAP,CAAwBjQ,EAAE,CAACoN,KAA3B,CAAlB;AACA,UAAM8C,MAAM,GAAGhK,MAAM,CAACiK,eAAP,CAAuBnQ,EAAE,CAACmO,UAAH,EAAvB,EAAwC6B,SAAxC,EAAmD,IAAnD,CAAf;AACAhQ,IAAAA,EAAE,CAAC6G,OAAH,GAAaX,MAAM,CAACkK,cAAP,CAAsBF,MAAtB,EAA8BlQ,EAAE,CAACqQ,UAAH,EAA9B,CAAb;AACArQ,IAAAA,EAAE,CAACqN,QAAH,GAAcrN,EAAE,CAAC6G,OAAH,CAAWyJ,OAAzB;AACD;;AACDC,EAAAA,KAAK,CAACzQ,KAAD,EAAQ0Q,KAAR,EAAe;AAClB,UAAMxQ,EAAE,GAAG,IAAX;AACA,UAAM;AAACoL,MAAAA,WAAW,EAAExB,IAAd;AAAoB0D,MAAAA,KAAK,EAAE9D;AAA3B,QAAmCxJ,EAAzC;AACA,UAAM;AAACsL,MAAAA,MAAD;AAAS0C,MAAAA;AAAT,QAAqBpE,IAA3B;AACA,UAAM2B,KAAK,GAAGD,MAAM,CAACE,IAArB;AACA,QAAIiF,MAAM,GAAG3Q,KAAK,KAAK,CAAV,IAAe0Q,KAAK,KAAKhH,IAAI,CAAC/I,MAA9B,GAAuC,IAAvC,GAA8CmJ,IAAI,CAAC8G,OAAhE;AACA,QAAIC,IAAI,GAAG7Q,KAAK,GAAG,CAAR,IAAa8J,IAAI,CAAC8C,OAAL,CAAa5M,KAAK,GAAG,CAArB,CAAxB;AACA,QAAIjN,CAAJ,EAAOiP,GAAP,EAAYqJ,MAAZ;;AACA,QAAInL,EAAE,CAACqN,QAAH,KAAgB,KAApB,EAA2B;AACzBzD,MAAAA,IAAI,CAAC8C,OAAL,GAAelD,IAAf;AACAI,MAAAA,IAAI,CAAC8G,OAAL,GAAe,IAAf;AACAvF,MAAAA,MAAM,GAAG3B,IAAT;AACD,KAJD,MAIO;AACL,UAAIxW,OAAO,CAACwW,IAAI,CAAC1J,KAAD,CAAL,CAAX,EAA0B;AACxBqL,QAAAA,MAAM,GAAGnL,EAAE,CAAC4Q,cAAH,CAAkBhH,IAAlB,EAAwBJ,IAAxB,EAA8B1J,KAA9B,EAAqC0Q,KAArC,CAAT;AACD,OAFD,MAEO,IAAI1d,QAAQ,CAAC0W,IAAI,CAAC1J,KAAD,CAAL,CAAZ,EAA2B;AAChCqL,QAAAA,MAAM,GAAGnL,EAAE,CAAC6Q,eAAH,CAAmBjH,IAAnB,EAAyBJ,IAAzB,EAA+B1J,KAA/B,EAAsC0Q,KAAtC,CAAT;AACD,OAFM,MAEA;AACLrF,QAAAA,MAAM,GAAGnL,EAAE,CAAC8Q,kBAAH,CAAsBlH,IAAtB,EAA4BJ,IAA5B,EAAkC1J,KAAlC,EAAyC0Q,KAAzC,CAAT;AACD;;AACD,YAAMO,0BAA0B,GAAG,MAAMjP,GAAG,CAACyJ,KAAD,CAAH,KAAe,IAAf,IAAwBoF,IAAI,IAAI7O,GAAG,CAACyJ,KAAD,CAAH,GAAaoF,IAAI,CAACpF,KAAD,CAA1F;;AACA,WAAK1Y,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAG2d,KAAhB,EAAuB,EAAE3d,CAAzB,EAA4B;AAC1B+W,QAAAA,IAAI,CAAC8C,OAAL,CAAa7Z,CAAC,GAAGiN,KAAjB,IAA0BgC,GAAG,GAAGqJ,MAAM,CAACtY,CAAD,CAAtC;;AACA,YAAI4d,MAAJ,EAAY;AACV,cAAIM,0BAA0B,EAA9B,EAAkC;AAChCN,YAAAA,MAAM,GAAG,KAAT;AACD;;AACDE,UAAAA,IAAI,GAAG7O,GAAP;AACD;AACF;;AACD8H,MAAAA,IAAI,CAAC8G,OAAL,GAAeD,MAAf;AACD;;AACD,QAAIzC,QAAJ,EAAc;AACZ/C,MAAAA,YAAY,CAACjL,EAAD,EAAKmL,MAAL,CAAZ;AACD;AACF;;AACD2F,EAAAA,kBAAkB,CAAClH,IAAD,EAAOJ,IAAP,EAAa1J,KAAb,EAAoB0Q,KAApB,EAA2B;AAC3C,UAAM;AAAClF,MAAAA,MAAD;AAASR,MAAAA;AAAT,QAAmBlB,IAAzB;AACA,UAAM2B,KAAK,GAAGD,MAAM,CAACE,IAArB;AACA,UAAMC,KAAK,GAAGX,MAAM,CAACU,IAArB;AACA,UAAMwF,MAAM,GAAG1F,MAAM,CAAC2F,SAAP,EAAf;AACA,UAAMC,WAAW,GAAG5F,MAAM,KAAKR,MAA/B;AACA,UAAMK,MAAM,GAAG,IAAIzB,KAAJ,CAAU8G,KAAV,CAAf;AACA,QAAI3d,CAAJ,EAAOiW,IAAP,EAAaC,KAAb;;AACA,SAAKlW,CAAC,GAAG,CAAJ,EAAOiW,IAAI,GAAG0H,KAAnB,EAA0B3d,CAAC,GAAGiW,IAA9B,EAAoC,EAAEjW,CAAtC,EAAyC;AACvCkW,MAAAA,KAAK,GAAGlW,CAAC,GAAGiN,KAAZ;AACAqL,MAAAA,MAAM,CAACtY,CAAD,CAAN,GAAY;AACV,SAAC0Y,KAAD,GAAS2F,WAAW,IAAI5F,MAAM,CAACiF,KAAP,CAAaS,MAAM,CAACjI,KAAD,CAAnB,EAA4BA,KAA5B,CADd;AAEV,SAAC0C,KAAD,GAASX,MAAM,CAACyF,KAAP,CAAa/G,IAAI,CAACT,KAAD,CAAjB,EAA0BA,KAA1B;AAFC,OAAZ;AAID;;AACD,WAAOoC,MAAP;AACD;;AACDyF,EAAAA,cAAc,CAAChH,IAAD,EAAOJ,IAAP,EAAa1J,KAAb,EAAoB0Q,KAApB,EAA2B;AACvC,UAAM;AAACtI,MAAAA,MAAD;AAASC,MAAAA;AAAT,QAAmByB,IAAzB;AACA,UAAMuB,MAAM,GAAG,IAAIzB,KAAJ,CAAU8G,KAAV,CAAf;AACA,QAAI3d,CAAJ,EAAOiW,IAAP,EAAaC,KAAb,EAAoBpI,IAApB;;AACA,SAAK9N,CAAC,GAAG,CAAJ,EAAOiW,IAAI,GAAG0H,KAAnB,EAA0B3d,CAAC,GAAGiW,IAA9B,EAAoC,EAAEjW,CAAtC,EAAyC;AACvCkW,MAAAA,KAAK,GAAGlW,CAAC,GAAGiN,KAAZ;AACAa,MAAAA,IAAI,GAAG6I,IAAI,CAACT,KAAD,CAAX;AACAoC,MAAAA,MAAM,CAACtY,CAAD,CAAN,GAAY;AACV4C,QAAAA,CAAC,EAAEyS,MAAM,CAACqI,KAAP,CAAa5P,IAAI,CAAC,CAAD,CAAjB,EAAsBoI,KAAtB,CADO;AAEVpT,QAAAA,CAAC,EAAEwS,MAAM,CAACoI,KAAP,CAAa5P,IAAI,CAAC,CAAD,CAAjB,EAAsBoI,KAAtB;AAFO,OAAZ;AAID;;AACD,WAAOoC,MAAP;AACD;;AACD0F,EAAAA,eAAe,CAACjH,IAAD,EAAOJ,IAAP,EAAa1J,KAAb,EAAoB0Q,KAApB,EAA2B;AACxC,UAAM;AAACtI,MAAAA,MAAD;AAASC,MAAAA;AAAT,QAAmByB,IAAzB;AACA,UAAM;AAACuH,MAAAA,QAAQ,GAAG,GAAZ;AAAiBC,MAAAA,QAAQ,GAAG;AAA5B,QAAmC,KAAK/D,QAA9C;AACA,UAAMlC,MAAM,GAAG,IAAIzB,KAAJ,CAAU8G,KAAV,CAAf;AACA,QAAI3d,CAAJ,EAAOiW,IAAP,EAAaC,KAAb,EAAoBpI,IAApB;;AACA,SAAK9N,CAAC,GAAG,CAAJ,EAAOiW,IAAI,GAAG0H,KAAnB,EAA0B3d,CAAC,GAAGiW,IAA9B,EAAoC,EAAEjW,CAAtC,EAAyC;AACvCkW,MAAAA,KAAK,GAAGlW,CAAC,GAAGiN,KAAZ;AACAa,MAAAA,IAAI,GAAG6I,IAAI,CAACT,KAAD,CAAX;AACAoC,MAAAA,MAAM,CAACtY,CAAD,CAAN,GAAY;AACV4C,QAAAA,CAAC,EAAEyS,MAAM,CAACqI,KAAP,CAAa/c,gBAAgB,CAACmN,IAAD,EAAOwQ,QAAP,CAA7B,EAA+CpI,KAA/C,CADO;AAEVpT,QAAAA,CAAC,EAAEwS,MAAM,CAACoI,KAAP,CAAa/c,gBAAgB,CAACmN,IAAD,EAAOyQ,QAAP,CAA7B,EAA+CrI,KAA/C;AAFO,OAAZ;AAID;;AACD,WAAOoC,MAAP;AACD;;AACDkG,EAAAA,SAAS,CAACtI,KAAD,EAAQ;AACf,WAAO,KAAKqC,WAAL,CAAiBsB,OAAjB,CAAyB3D,KAAzB,CAAP;AACD;;AACDuI,EAAAA,cAAc,CAACvI,KAAD,EAAQ;AACpB,WAAO,KAAKqC,WAAL,CAAiB5B,IAAjB,CAAsBT,KAAtB,CAAP;AACD;;AACDC,EAAAA,UAAU,CAACpB,KAAD,EAAQuD,MAAR,EAAgB/B,IAAhB,EAAsB;AAC9B,UAAMpK,KAAK,GAAG,KAAKA,KAAnB;AACA,UAAM4K,IAAI,GAAG,KAAKwB,WAAlB;AACA,UAAM9D,KAAK,GAAG6D,MAAM,CAACvD,KAAK,CAAC4D,IAAP,CAApB;AACA,UAAMvC,KAAK,GAAG;AACZ7D,MAAAA,IAAI,EAAEsD,uBAAuB,CAAC1J,KAAD,EAAQ,IAAR,CADjB;AAEZ2H,MAAAA,MAAM,EAAEwE,MAAM,CAACE,OAAP,CAAezD,KAAK,CAAC4D,IAArB;AAFI,KAAd;AAIA,WAAOxC,UAAU,CAACC,KAAD,EAAQ3B,KAAR,EAAesC,IAAI,CAACb,KAApB,EAA2B;AAACK,MAAAA;AAAD,KAA3B,CAAjB;AACD;;AACDmI,EAAAA,qBAAqB,CAACC,KAAD,EAAQ5J,KAAR,EAAeuD,MAAf,EAAuBlC,KAAvB,EAA8B;AACjD,UAAMwI,WAAW,GAAGtG,MAAM,CAACvD,KAAK,CAAC4D,IAAP,CAA1B;AACA,QAAIlE,KAAK,GAAGmK,WAAW,KAAK,IAAhB,GAAuBC,GAAvB,GAA6BD,WAAzC;AACA,UAAM9K,MAAM,GAAGsC,KAAK,IAAIkC,MAAM,CAACE,OAAP,CAAezD,KAAK,CAAC4D,IAArB,CAAxB;;AACA,QAAIvC,KAAK,IAAItC,MAAb,EAAqB;AACnBsC,MAAAA,KAAK,CAACtC,MAAN,GAAeA,MAAf;AACA6K,MAAAA,KAAK,CAAC3R,GAAN,GAAYD,IAAI,CAACC,GAAL,CAAS2R,KAAK,CAAC3R,GAAf,EAAoByH,KAApB,CAAZ;AACAkK,MAAAA,KAAK,CAACzP,GAAN,GAAYnC,IAAI,CAACmC,GAAL,CAASyP,KAAK,CAACzP,GAAf,EAAoBuF,KAApB,CAAZ;AACAA,MAAAA,KAAK,GAAG0B,UAAU,CAACC,KAAD,EAAQwI,WAAR,EAAqB,KAAKrG,WAAL,CAAiBrC,KAAtC,EAA6C;AAACrB,QAAAA,GAAG,EAAE;AAAN,OAA7C,CAAlB;AACD;;AACD8J,IAAAA,KAAK,CAAC3R,GAAN,GAAYD,IAAI,CAACC,GAAL,CAAS2R,KAAK,CAAC3R,GAAf,EAAoByH,KAApB,CAAZ;AACAkK,IAAAA,KAAK,CAACzP,GAAN,GAAYnC,IAAI,CAACmC,GAAL,CAASyP,KAAK,CAACzP,GAAf,EAAoBuF,KAApB,CAAZ;AACD;;AACDqK,EAAAA,SAAS,CAAC/J,KAAD,EAAQgK,QAAR,EAAkB;AACzB,UAAM5R,EAAE,GAAG,IAAX;AACA,UAAM4J,IAAI,GAAG5J,EAAE,CAACoL,WAAhB;AACA,UAAMsB,OAAO,GAAG9C,IAAI,CAAC8C,OAArB;AACA,UAAM+D,MAAM,GAAG7G,IAAI,CAAC8G,OAAL,IAAgB9I,KAAK,KAAKgC,IAAI,CAAC0B,MAA9C;AACA,UAAMxC,IAAI,GAAG4D,OAAO,CAACjM,MAArB;;AACA,UAAMoR,UAAU,GAAG7R,EAAE,CAACqP,cAAH,CAAkBzH,KAAlB,CAAnB;;AACA,UAAMqB,KAAK,GAAG2I,QAAQ,IAAIhI,IAAI,CAACoE,QAAjB,IAA6B;AAAC5I,MAAAA,IAAI,EAAEsD,uBAAuB,CAAC1I,EAAE,CAAChB,KAAJ,EAAW,IAAX,CAA9B;AAAgD2H,MAAAA,MAAM,EAAE;AAAxD,KAA3C;AACA,UAAM6K,KAAK,GAAG;AAAC3R,MAAAA,GAAG,EAAEwK,MAAM,CAACE,iBAAb;AAAgCxI,MAAAA,GAAG,EAAEsI,MAAM,CAACC;AAA5C,KAAd;AACA,UAAM;AAACzK,MAAAA,GAAG,EAAEiS,QAAN;AAAgB/P,MAAAA,GAAG,EAAEgQ;AAArB,QAAiC7H,aAAa,CAAC2H,UAAD,CAApD;AACA,QAAIhf,CAAJ,EAAOyU,KAAP,EAAc6D,MAAd,EAAsB7B,UAAtB;;AACA,aAAS0I,KAAT,GAAiB;AACf7G,MAAAA,MAAM,GAAGuB,OAAO,CAAC7Z,CAAD,CAAhB;AACAyU,MAAAA,KAAK,GAAG6D,MAAM,CAACvD,KAAK,CAAC4D,IAAP,CAAd;AACAlC,MAAAA,UAAU,GAAG6B,MAAM,CAAC0G,UAAU,CAACrG,IAAZ,CAAnB;AACA,aAAO,CAAC9X,cAAc,CAAC4T,KAAD,CAAf,IAA0BwK,QAAQ,GAAGxI,UAArC,IAAmDyI,QAAQ,GAAGzI,UAArE;AACD;;AACD,SAAKzW,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGiW,IAAhB,EAAsB,EAAEjW,CAAxB,EAA2B;AACzB,UAAImf,KAAK,EAAT,EAAa;AACX;AACD;;AACDhS,MAAAA,EAAE,CAACuR,qBAAH,CAAyBC,KAAzB,EAAgC5J,KAAhC,EAAuCuD,MAAvC,EAA+ClC,KAA/C;;AACA,UAAIwH,MAAJ,EAAY;AACV;AACD;AACF;;AACD,QAAIA,MAAJ,EAAY;AACV,WAAK5d,CAAC,GAAGiW,IAAI,GAAG,CAAhB,EAAmBjW,CAAC,IAAI,CAAxB,EAA2B,EAAEA,CAA7B,EAAgC;AAC9B,YAAImf,KAAK,EAAT,EAAa;AACX;AACD;;AACDhS,QAAAA,EAAE,CAACuR,qBAAH,CAAyBC,KAAzB,EAAgC5J,KAAhC,EAAuCuD,MAAvC,EAA+ClC,KAA/C;AACA;AACD;AACF;;AACD,WAAOuI,KAAP;AACD;;AACDS,EAAAA,kBAAkB,CAACrK,KAAD,EAAQ;AACxB,UAAMuD,MAAM,GAAG,KAAKC,WAAL,CAAiBsB,OAAhC;AACA,UAAM/F,MAAM,GAAG,EAAf;AACA,QAAI9T,CAAJ,EAAOiW,IAAP,EAAaxB,KAAb;;AACA,SAAKzU,CAAC,GAAG,CAAJ,EAAOiW,IAAI,GAAGqC,MAAM,CAAC1K,MAA1B,EAAkC5N,CAAC,GAAGiW,IAAtC,EAA4C,EAAEjW,CAA9C,EAAiD;AAC/CyU,MAAAA,KAAK,GAAG6D,MAAM,CAACtY,CAAD,CAAN,CAAU+U,KAAK,CAAC4D,IAAhB,CAAR;;AACA,UAAI9X,cAAc,CAAC4T,KAAD,CAAlB,EAA2B;AACzBX,QAAAA,MAAM,CAAClF,IAAP,CAAY6F,KAAZ;AACD;AACF;;AACD,WAAOX,MAAP;AACD;;AACDuL,EAAAA,cAAc,GAAG;AACf,WAAO,KAAP;AACD;;AACDC,EAAAA,gBAAgB,CAACpJ,KAAD,EAAQ;AACtB,UAAM/I,EAAE,GAAG,IAAX;AACA,UAAM4J,IAAI,GAAG5J,EAAE,CAACoL,WAAhB;AACA,UAAME,MAAM,GAAG1B,IAAI,CAAC0B,MAApB;AACA,UAAMR,MAAM,GAAGlB,IAAI,CAACkB,MAApB;AACA,UAAMK,MAAM,GAAGnL,EAAE,CAACqR,SAAH,CAAatI,KAAb,CAAf;AACA,WAAO;AACLqJ,MAAAA,KAAK,EAAE9G,MAAM,GAAG,KAAKA,MAAM,CAAC+G,gBAAP,CAAwBlH,MAAM,CAACG,MAAM,CAACE,IAAR,CAA9B,CAAR,GAAuD,EAD/D;AAELlE,MAAAA,KAAK,EAAEwD,MAAM,GAAG,KAAKA,MAAM,CAACuH,gBAAP,CAAwBlH,MAAM,CAACL,MAAM,CAACU,IAAR,CAA9B,CAAR,GAAuD;AAF/D,KAAP;AAID;;AACDrL,EAAAA,OAAO,CAACiJ,IAAD,EAAO;AACZ,UAAMpJ,EAAE,GAAG,IAAX;AACA,UAAM4J,IAAI,GAAG5J,EAAE,CAACoL,WAAhB;AACApL,IAAAA,EAAE,CAACqG,SAAH;AACArG,IAAAA,EAAE,CAACkN,eAAH,GAAqB,EAArB;AACAlN,IAAAA,EAAE,CAACsE,MAAH,CAAU8E,IAAI,IAAI,SAAlB;AACAQ,IAAAA,IAAI,CAAC0I,KAAL,GAAa9J,MAAM,CAACtV,cAAc,CAAC8M,EAAE,CAAC6G,OAAH,CAAW0L,IAAZ,EAAkBtK,WAAW,CAAC2B,IAAI,CAAC1B,MAAN,EAAc0B,IAAI,CAACzB,MAAnB,EAA2BnI,EAAE,CAACkS,cAAH,EAA3B,CAA7B,CAAf,CAAnB;AACD;;AACD5N,EAAAA,MAAM,CAAC8E,IAAD,EAAO,CAAE;;AACf1I,EAAAA,IAAI,GAAG;AACL,UAAMV,EAAE,GAAG,IAAX;AACA,UAAMiN,GAAG,GAAGjN,EAAE,CAACgN,IAAf;AACA,UAAMhO,KAAK,GAAGgB,EAAE,CAAChB,KAAjB;AACA,UAAM4K,IAAI,GAAG5J,EAAE,CAACoL,WAAhB;AACA,UAAMoH,QAAQ,GAAG5I,IAAI,CAACJ,IAAL,IAAa,EAA9B;AACA,UAAMiJ,IAAI,GAAGzT,KAAK,CAAC0T,SAAnB;AACA,UAAMrO,MAAM,GAAG,EAAf;AACA,UAAMvE,KAAK,GAAGE,EAAE,CAACyN,UAAH,IAAiB,CAA/B;AACA,UAAM+C,KAAK,GAAGxQ,EAAE,CAAC0N,UAAH,IAAkB8E,QAAQ,CAAC/R,MAAT,GAAkBX,KAAlD;AACA,QAAIjN,CAAJ;;AACA,QAAI+W,IAAI,CAACwC,OAAT,EAAkB;AAChBxC,MAAAA,IAAI,CAACwC,OAAL,CAAa1L,IAAb,CAAkBuM,GAAlB,EAAuBwF,IAAvB,EAA6B3S,KAA7B,EAAoC0Q,KAApC;AACD;;AACD,SAAK3d,CAAC,GAAGiN,KAAT,EAAgBjN,CAAC,GAAGiN,KAAK,GAAG0Q,KAA5B,EAAmC,EAAE3d,CAArC,EAAwC;AACtC,YAAMyZ,OAAO,GAAGkG,QAAQ,CAAC3f,CAAD,CAAxB;;AACA,UAAIyZ,OAAO,CAACqG,MAAZ,EAAoB;AAClB;AACD;;AACD,UAAIrG,OAAO,CAACjI,MAAZ,EAAoB;AAClBA,QAAAA,MAAM,CAAC5C,IAAP,CAAY6K,OAAZ;AACD,OAFD,MAEO;AACLA,QAAAA,OAAO,CAAC5L,IAAR,CAAauM,GAAb,EAAkBwF,IAAlB;AACD;AACF;;AACD,SAAK5f,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGwR,MAAM,CAAC5D,MAAvB,EAA+B,EAAE5N,CAAjC,EAAoC;AAClCwR,MAAAA,MAAM,CAACxR,CAAD,CAAN,CAAU6N,IAAV,CAAeuM,GAAf,EAAoBwF,IAApB;AACD;AACF;;AACDG,EAAAA,QAAQ,CAAC7J,KAAD,EAAQ1E,MAAR,EAAgB;AACtB,UAAM+E,IAAI,GAAG/E,MAAM,GAAG,QAAH,GAAc,SAAjC;AACA,WAAO0E,KAAK,KAAKjK,SAAV,IAAuB,KAAKsM,WAAL,CAAiBgB,OAAxC,GACH,KAAKyG,4BAAL,CAAkCzJ,IAAlC,CADG,GAEH,KAAK0J,yBAAL,CAA+B/J,KAAK,IAAI,CAAxC,EAA2CK,IAA3C,CAFJ;AAGD;;AACDiH,EAAAA,UAAU,CAACtH,KAAD,EAAQ1E,MAAR,EAAgB+E,IAAhB,EAAsB;AAC9B,UAAMpJ,EAAE,GAAG,IAAX;AACA,UAAMoM,OAAO,GAAGpM,EAAE,CAACmO,UAAH,EAAhB;AACA,QAAI4E,OAAJ;;AACA,QAAIhK,KAAK,IAAI,CAAT,IAAcA,KAAK,GAAG/I,EAAE,CAACoL,WAAH,CAAe5B,IAAf,CAAoB/I,MAA9C,EAAsD;AACpD,YAAM6L,OAAO,GAAGtM,EAAE,CAACoL,WAAH,CAAe5B,IAAf,CAAoBT,KAApB,CAAhB;AACAgK,MAAAA,OAAO,GAAGzG,OAAO,CAACsB,QAAR,KACPtB,OAAO,CAACsB,QAAR,GAAmBvB,iBAAiB,CAACrM,EAAE,CAACqQ,UAAH,EAAD,EAAkBtH,KAAlB,EAAyBuD,OAAzB,CAD7B,CAAV;AAEAyG,MAAAA,OAAO,CAAC5H,MAAR,GAAiBnL,EAAE,CAACqR,SAAH,CAAatI,KAAb,CAAjB;AACAgK,MAAAA,OAAO,CAACvG,GAAR,GAAcJ,OAAO,CAAC5C,IAAR,CAAaT,KAAb,CAAd;AACAgK,MAAAA,OAAO,CAAChK,KAAR,GAAgBgK,OAAO,CAACxG,SAAR,GAAoBxD,KAApC;AACD,KAPD,MAOO;AACLgK,MAAAA,OAAO,GAAG/S,EAAE,CAAC4N,QAAH,KACP5N,EAAE,CAAC4N,QAAH,GAAc3B,oBAAoB,CAACjM,EAAE,CAAChB,KAAH,CAASqR,UAAT,EAAD,EAAwBrQ,EAAE,CAAC+I,KAA3B,CAD3B,CAAV;AAEAgK,MAAAA,OAAO,CAAC3G,OAAR,GAAkBA,OAAlB;AACA2G,MAAAA,OAAO,CAAChK,KAAR,GAAgBgK,OAAO,CAAC1J,YAAR,GAAuBrJ,EAAE,CAAC+I,KAA1C;AACD;;AACDgK,IAAAA,OAAO,CAAC1O,MAAR,GAAiB,CAAC,CAACA,MAAnB;AACA0O,IAAAA,OAAO,CAAC3J,IAAR,GAAeA,IAAf;AACA,WAAO2J,OAAP;AACD;;AACDF,EAAAA,4BAA4B,CAACzJ,IAAD,EAAO;AACjC,WAAO,KAAK4J,sBAAL,CAA4B,KAAKtD,kBAAL,CAAwBzF,EAApD,EAAwDb,IAAxD,CAAP;AACD;;AACD0J,EAAAA,yBAAyB,CAAC/J,KAAD,EAAQK,IAAR,EAAc;AACrC,WAAO,KAAK4J,sBAAL,CAA4B,KAAKC,eAAL,CAAqBhJ,EAAjD,EAAqDb,IAArD,EAA2DL,KAA3D,CAAP;AACD;;AACDiK,EAAAA,sBAAsB,CAACE,WAAD,EAAc9J,IAAI,GAAG,SAArB,EAAgCL,KAAhC,EAAuC;AAC3D,UAAM/I,EAAE,GAAG,IAAX;AACA,UAAMqE,MAAM,GAAG+E,IAAI,KAAK,QAAxB;AACA,UAAM+J,KAAK,GAAGnT,EAAE,CAACkN,eAAjB;AACA,UAAMkG,QAAQ,GAAGF,WAAW,GAAG,GAAd,GAAoB9J,IAArC;AACA,UAAMyD,MAAM,GAAGsG,KAAK,CAACC,QAAD,CAApB;AACA,UAAMC,OAAO,GAAGrT,EAAE,CAAC2N,mBAAH,IAA0B/Z,OAAO,CAACmV,KAAD,CAAjD;;AACA,QAAI8D,MAAJ,EAAY;AACV,aAAOD,gBAAgB,CAACC,MAAD,EAASwG,OAAT,CAAvB;AACD;;AACD,UAAMnN,MAAM,GAAGlG,EAAE,CAAChB,KAAH,CAASkH,MAAxB;AACA,UAAM8J,SAAS,GAAG9J,MAAM,CAACoN,uBAAP,CAA+BtT,EAAE,CAACoN,KAAlC,EAAyC8F,WAAzC,CAAlB;AACA,UAAMK,QAAQ,GAAGlP,MAAM,GAAG,CAAE,GAAE6O,WAAY,OAAhB,EAAwB,OAAxB,EAAiCA,WAAjC,EAA8C,EAA9C,CAAH,GAAuD,CAACA,WAAD,EAAc,EAAd,CAA9E;AACA,UAAMhD,MAAM,GAAGhK,MAAM,CAACiK,eAAP,CAAuBnQ,EAAE,CAACmO,UAAH,EAAvB,EAAwC6B,SAAxC,CAAf;AACA,UAAMwD,KAAK,GAAGrO,MAAM,CAACC,IAAP,CAAYxS,QAAQ,CAAC4f,QAAT,CAAkBU,WAAlB,CAAZ,CAAd;;AACA,UAAMH,OAAO,GAAG,MAAM/S,EAAE,CAACqQ,UAAH,CAActH,KAAd,EAAqB1E,MAArB,CAAtB;;AACA,UAAMsC,MAAM,GAAGT,MAAM,CAACuN,mBAAP,CAA2BvD,MAA3B,EAAmCsD,KAAnC,EAA0CT,OAA1C,EAAmDQ,QAAnD,CAAf;;AACA,QAAI5M,MAAM,CAACK,OAAX,EAAoB;AAClBL,MAAAA,MAAM,CAACK,OAAP,GAAiBqM,OAAjB;AACAF,MAAAA,KAAK,CAACC,QAAD,CAAL,GAAkBjO,MAAM,CAACuO,MAAP,CAAc9G,gBAAgB,CAACjG,MAAD,EAAS0M,OAAT,CAA9B,CAAlB;AACD;;AACD,WAAO1M,MAAP;AACD;;AACDgN,EAAAA,kBAAkB,CAAC5K,KAAD,EAAQ6K,UAAR,EAAoBvP,MAApB,EAA4B;AAC5C,UAAMrE,EAAE,GAAG,IAAX;AACA,UAAMhB,KAAK,GAAGgB,EAAE,CAAChB,KAAjB;AACA,UAAMmU,KAAK,GAAGnT,EAAE,CAACkN,eAAjB;AACA,UAAMkG,QAAQ,GAAI,aAAYQ,UAAW,EAAzC;AACA,UAAM/G,MAAM,GAAGsG,KAAK,CAACC,QAAD,CAApB;;AACA,QAAIvG,MAAJ,EAAY;AACV,aAAOA,MAAP;AACD;;AACD,QAAIhG,OAAJ;;AACA,QAAI7H,KAAK,CAAC6H,OAAN,CAAcxB,SAAd,KAA4B,KAAhC,EAAuC;AACrC,YAAMa,MAAM,GAAGlG,EAAE,CAAChB,KAAH,CAASkH,MAAxB;AACA,YAAM8J,SAAS,GAAG9J,MAAM,CAAC2N,yBAAP,CAAiC7T,EAAE,CAACoN,KAApC,EAA2CwG,UAA3C,CAAlB;AACA,YAAM1D,MAAM,GAAGhK,MAAM,CAACiK,eAAP,CAAuBnQ,EAAE,CAACmO,UAAH,EAAvB,EAAwC6B,SAAxC,CAAf;AACAnJ,MAAAA,OAAO,GAAGX,MAAM,CAACkK,cAAP,CAAsBF,MAAtB,EAA8BlQ,EAAE,CAACqQ,UAAH,CAActH,KAAd,EAAqB1E,MAArB,EAA6BuP,UAA7B,CAA9B,CAAV;AACD;;AACD,UAAM9N,UAAU,GAAG,IAAIG,UAAJ,CAAejH,KAAf,EAAsB6H,OAAO,IAAIA,OAAO,CAACf,UAAzC,CAAnB;;AACA,QAAIe,OAAO,IAAIA,OAAO,CAACiN,UAAvB,EAAmC;AACjCX,MAAAA,KAAK,CAACC,QAAD,CAAL,GAAkBjO,MAAM,CAACuO,MAAP,CAAc5N,UAAd,CAAlB;AACD;;AACD,WAAOA,UAAP;AACD;;AACDiO,EAAAA,gBAAgB,CAAClN,OAAD,EAAU;AACxB,QAAI,CAACA,OAAO,CAACG,OAAb,EAAsB;AACpB;AACD;;AACD,WAAO,KAAKwG,cAAL,KAAwB,KAAKA,cAAL,GAAsBrI,MAAM,CAACqC,MAAP,CAAc,EAAd,EAAkBX,OAAlB,CAA9C,CAAP;AACD;;AACDmN,EAAAA,cAAc,CAAC5K,IAAD,EAAO6K,aAAP,EAAsB;AAClC,WAAO,CAACA,aAAD,IAAkBtH,kBAAkB,CAACvD,IAAD,CAApC,IAA8C,KAAKpK,KAAL,CAAWkV,mBAAhE;AACD;;AACDC,EAAAA,aAAa,CAAC7H,OAAD,EAAUvD,KAAV,EAAiBpD,UAAjB,EAA6ByD,IAA7B,EAAmC;AAC9C,QAAIuD,kBAAkB,CAACvD,IAAD,CAAtB,EAA8B;AAC5BjE,MAAAA,MAAM,CAACqC,MAAP,CAAc8E,OAAd,EAAuB3G,UAAvB;AACD,KAFD,MAEO;AACL,WAAKgO,kBAAL,CAAwB5K,KAAxB,EAA+BK,IAA/B,EAAqC9E,MAArC,CAA4CgI,OAA5C,EAAqD3G,UAArD;AACD;AACF;;AACDyO,EAAAA,mBAAmB,CAACH,aAAD,EAAgB7K,IAAhB,EAAsBxC,UAAtB,EAAkC;AACnD,QAAIqN,aAAa,IAAI,CAACtH,kBAAkB,CAACvD,IAAD,CAAxC,EAAgD;AAC9C,WAAKuK,kBAAL,CAAwB7U,SAAxB,EAAmCsK,IAAnC,EAAyC9E,MAAzC,CAAgD2P,aAAhD,EAA+DrN,UAA/D;AACD;AACF;;AACDyN,EAAAA,SAAS,CAAC/H,OAAD,EAAUvD,KAAV,EAAiBK,IAAjB,EAAuB/E,MAAvB,EAA+B;AACtCiI,IAAAA,OAAO,CAACjI,MAAR,GAAiBA,MAAjB;AACA,UAAMwC,OAAO,GAAG,KAAK+L,QAAL,CAAc7J,KAAd,EAAqB1E,MAArB,CAAhB;;AACA,SAAKsP,kBAAL,CAAwB5K,KAAxB,EAA+BK,IAA/B,EAAqC/E,MAArC,EAA6CC,MAA7C,CAAoDgI,OAApD,EAA6D;AAC3DzF,MAAAA,OAAO,EAAG,CAACxC,MAAD,IAAW,KAAK0P,gBAAL,CAAsBlN,OAAtB,CAAZ,IAA+CA;AADG,KAA7D;AAGD;;AACDyN,EAAAA,gBAAgB,CAAChI,OAAD,EAAUjD,YAAV,EAAwBN,KAAxB,EAA+B;AAC7C,SAAKsL,SAAL,CAAe/H,OAAf,EAAwBvD,KAAxB,EAA+B,QAA/B,EAAyC,KAAzC;AACD;;AACDwL,EAAAA,aAAa,CAACjI,OAAD,EAAUjD,YAAV,EAAwBN,KAAxB,EAA+B;AAC1C,SAAKsL,SAAL,CAAe/H,OAAf,EAAwBvD,KAAxB,EAA+B,QAA/B,EAAyC,IAAzC;AACD;;AACDyL,EAAAA,wBAAwB,GAAG;AACzB,UAAMlI,OAAO,GAAG,KAAKlB,WAAL,CAAiBgB,OAAjC;;AACA,QAAIE,OAAJ,EAAa;AACX,WAAK+H,SAAL,CAAe/H,OAAf,EAAwBxN,SAAxB,EAAmC,QAAnC,EAA6C,KAA7C;AACD;AACF;;AACD2V,EAAAA,qBAAqB,GAAG;AACtB,UAAMnI,OAAO,GAAG,KAAKlB,WAAL,CAAiBgB,OAAjC;;AACA,QAAIE,OAAJ,EAAa;AACX,WAAK+H,SAAL,CAAe/H,OAAf,EAAwBxN,SAAxB,EAAmC,QAAnC,EAA6C,IAA7C;AACD;AACF;;AACDiR,EAAAA,eAAe,CAACH,gBAAD,EAAmB;AAChC,UAAM5P,EAAE,GAAG,IAAX;AACA,UAAMwJ,IAAI,GAAGxJ,EAAE,CAACsN,KAAhB;AACA,UAAMkF,QAAQ,GAAGxS,EAAE,CAACoL,WAAH,CAAe5B,IAAhC;;AACA,SAAK,MAAM,CAACzE,MAAD,EAAS2P,IAAT,EAAeC,IAAf,CAAX,IAAmC3U,EAAE,CAAC6N,SAAtC,EAAiD;AAC/C7N,MAAAA,EAAE,CAAC+E,MAAD,CAAF,CAAW2P,IAAX,EAAiBC,IAAjB;AACD;;AACD3U,IAAAA,EAAE,CAAC6N,SAAH,GAAe,EAAf;AACA,UAAM+G,OAAO,GAAGpC,QAAQ,CAAC/R,MAAzB;AACA,UAAMoU,OAAO,GAAGrL,IAAI,CAAC/I,MAArB;AACA,UAAM+P,KAAK,GAAG5Q,IAAI,CAACC,GAAL,CAASgV,OAAT,EAAkBD,OAAlB,CAAd;;AACA,QAAIpE,KAAJ,EAAW;AACTxQ,MAAAA,EAAE,CAACuQ,KAAH,CAAS,CAAT,EAAYC,KAAZ;AACD;;AACD,QAAIqE,OAAO,GAAGD,OAAd,EAAuB;AACrB5U,MAAAA,EAAE,CAAC8U,eAAH,CAAmBF,OAAnB,EAA4BC,OAAO,GAAGD,OAAtC,EAA+ChF,gBAA/C;AACD,KAFD,MAEO,IAAIiF,OAAO,GAAGD,OAAd,EAAuB;AAC5B5U,MAAAA,EAAE,CAAC+U,eAAH,CAAmBF,OAAnB,EAA4BD,OAAO,GAAGC,OAAtC;AACD;AACF;;AACDC,EAAAA,eAAe,CAAChV,KAAD,EAAQ0Q,KAAR,EAAeZ,gBAAgB,GAAG,IAAlC,EAAwC;AACrD,UAAM5P,EAAE,GAAG,IAAX;AACA,UAAM4J,IAAI,GAAG5J,EAAE,CAACoL,WAAhB;AACA,UAAM5B,IAAI,GAAGI,IAAI,CAACJ,IAAlB;AACA,UAAMxB,GAAG,GAAGlI,KAAK,GAAG0Q,KAApB;AACA,QAAI3d,CAAJ;;AACA,UAAMmiB,IAAI,GAAIC,GAAD,IAAS;AACpBA,MAAAA,GAAG,CAACxU,MAAJ,IAAc+P,KAAd;;AACA,WAAK3d,CAAC,GAAGoiB,GAAG,CAACxU,MAAJ,GAAa,CAAtB,EAAyB5N,CAAC,IAAImV,GAA9B,EAAmCnV,CAAC,EAApC,EAAwC;AACtCoiB,QAAAA,GAAG,CAACpiB,CAAD,CAAH,GAASoiB,GAAG,CAACpiB,CAAC,GAAG2d,KAAL,CAAZ;AACD;AACF,KALD;;AAMAwE,IAAAA,IAAI,CAACxL,IAAD,CAAJ;;AACA,SAAK3W,CAAC,GAAGiN,KAAT,EAAgBjN,CAAC,GAAGmV,GAApB,EAAyB,EAAEnV,CAA3B,EAA8B;AAC5B2W,MAAAA,IAAI,CAAC3W,CAAD,CAAJ,GAAU,IAAImN,EAAE,CAACiT,eAAP,EAAV;AACD;;AACD,QAAIjT,EAAE,CAACqN,QAAP,EAAiB;AACf2H,MAAAA,IAAI,CAACpL,IAAI,CAAC8C,OAAN,CAAJ;AACD;;AACD1M,IAAAA,EAAE,CAACuQ,KAAH,CAASzQ,KAAT,EAAgB0Q,KAAhB;;AACA,QAAIZ,gBAAJ,EAAsB;AACpB5P,MAAAA,EAAE,CAACkV,cAAH,CAAkB1L,IAAlB,EAAwB1J,KAAxB,EAA+B0Q,KAA/B,EAAsC,OAAtC;AACD;AACF;;AACD0E,EAAAA,cAAc,CAAC5I,OAAD,EAAUxM,KAAV,EAAiB0Q,KAAjB,EAAwBpH,IAAxB,EAA8B,CAAE;;AAC9C2L,EAAAA,eAAe,CAACjV,KAAD,EAAQ0Q,KAAR,EAAe;AAC5B,UAAMxQ,EAAE,GAAG,IAAX;AACA,UAAM4J,IAAI,GAAG5J,EAAE,CAACoL,WAAhB;;AACA,QAAIpL,EAAE,CAACqN,QAAP,EAAiB;AACf,YAAM8H,OAAO,GAAGvL,IAAI,CAAC8C,OAAL,CAAa0I,MAAb,CAAoBtV,KAApB,EAA2B0Q,KAA3B,CAAhB;;AACA,UAAI5G,IAAI,CAACoE,QAAT,EAAmB;AACjBvB,QAAAA,WAAW,CAAC7C,IAAD,EAAOuL,OAAP,CAAX;AACD;AACF;;AACDvL,IAAAA,IAAI,CAACJ,IAAL,CAAU4L,MAAV,CAAiBtV,KAAjB,EAAwB0Q,KAAxB;AACD;;AACD6E,EAAAA,WAAW,GAAG;AACZ,UAAM7E,KAAK,GAAG8E,SAAS,CAAC7U,MAAxB;;AACA,SAAKoN,SAAL,CAAepM,IAAf,CAAoB,CAAC,iBAAD,EAAoB,KAAK0M,UAAL,GAAkB3E,IAAlB,CAAuB/I,MAAvB,GAAgC+P,KAApD,EAA2DA,KAA3D,CAApB;AACD;;AACD+E,EAAAA,UAAU,GAAG;AACX,SAAK1H,SAAL,CAAepM,IAAf,CAAoB,CAAC,iBAAD,EAAoB,KAAK2J,WAAL,CAAiB5B,IAAjB,CAAsB/I,MAAtB,GAA+B,CAAnD,EAAsD,CAAtD,CAApB;AACD;;AACD+U,EAAAA,YAAY,GAAG;AACb,SAAK3H,SAAL,CAAepM,IAAf,CAAoB,CAAC,iBAAD,EAAoB,CAApB,EAAuB,CAAvB,CAApB;AACD;;AACDgU,EAAAA,aAAa,CAAC3V,KAAD,EAAQ0Q,KAAR,EAAe;AAC1B,SAAK3C,SAAL,CAAepM,IAAf,CAAoB,CAAC,iBAAD,EAAoB3B,KAApB,EAA2B0Q,KAA3B,CAApB;;AACA,SAAK3C,SAAL,CAAepM,IAAf,CAAoB,CAAC,iBAAD,EAAoB3B,KAApB,EAA2BwV,SAAS,CAAC7U,MAAV,GAAmB,CAA9C,CAApB;AACD;;AACDiV,EAAAA,cAAc,GAAG;AACf,SAAK7H,SAAL,CAAepM,IAAf,CAAoB,CAAC,iBAAD,EAAoB,CAApB,EAAuB6T,SAAS,CAAC7U,MAAjC,CAApB;AACD;;AA9hBqB;;AAgiBxBsM,iBAAiB,CAACna,QAAlB,GAA6B,EAA7B;AACAma,iBAAiB,CAAC4I,SAAlB,CAA4BjG,kBAA5B,GAAiD,IAAjD;AACA3C,iBAAiB,CAAC4I,SAAlB,CAA4B1C,eAA5B,GAA8C,IAA9C;;AAEA,SAAS2C,iBAAT,CAA2BhO,KAA3B,EAAkC;AAChC,MAAI,CAACA,KAAK,CAACiO,MAAN,CAAaC,IAAlB,EAAwB;AACtB,UAAMC,KAAK,GAAGnO,KAAK,CAACoD,uBAAN,CAA8B,KAA9B,CAAd;AACA,QAAIrE,MAAM,GAAG,EAAb;;AACA,SAAK,IAAI9T,CAAC,GAAG,CAAR,EAAWiW,IAAI,GAAGiN,KAAK,CAACtV,MAA7B,EAAqC5N,CAAC,GAAGiW,IAAzC,EAA+CjW,CAAC,EAAhD,EAAoD;AAClD8T,MAAAA,MAAM,GAAGA,MAAM,CAACqP,MAAP,CAAcD,KAAK,CAACljB,CAAD,CAAL,CAASqY,UAAT,CAAoB+G,kBAApB,CAAuCrK,KAAvC,CAAd,CAAT;AACD;;AACDA,IAAAA,KAAK,CAACiO,MAAN,CAAaC,IAAb,GAAoB5hB,YAAY,CAACyS,MAAM,CAACsP,IAAP,CAAY,CAAC5jB,CAAD,EAAIU,CAAJ,KAAUV,CAAC,GAAGU,CAA1B,CAAD,CAAhC;AACD;;AACD,SAAO6U,KAAK,CAACiO,MAAN,CAAaC,IAApB;AACD;;AACD,SAASI,oBAAT,CAA8BtO,KAA9B,EAAqC;AACnC,QAAMjB,MAAM,GAAGiP,iBAAiB,CAAChO,KAAD,CAAhC;AACA,MAAI/H,GAAG,GAAG+H,KAAK,CAACuO,OAAhB;AACA,MAAItjB,CAAJ,EAAOiW,IAAP,EAAasN,IAAb,EAAmBzF,IAAnB;;AACA,QAAM0F,gBAAgB,GAAG,MAAM;AAC7B,QAAID,IAAI,KAAK,KAAT,IAAkBA,IAAI,KAAK,CAAC,KAAhC,EAAuC;AACrC;AACD;;AACD,QAAIxiB,OAAO,CAAC+c,IAAD,CAAX,EAAmB;AACjB9Q,MAAAA,GAAG,GAAGD,IAAI,CAACC,GAAL,CAASA,GAAT,EAAcD,IAAI,CAAC0W,GAAL,CAASF,IAAI,GAAGzF,IAAhB,KAAyB9Q,GAAvC,CAAN;AACD;;AACD8Q,IAAAA,IAAI,GAAGyF,IAAP;AACD,GARD;;AASA,OAAKvjB,CAAC,GAAG,CAAJ,EAAOiW,IAAI,GAAGnC,MAAM,CAAClG,MAA1B,EAAkC5N,CAAC,GAAGiW,IAAtC,EAA4C,EAAEjW,CAA9C,EAAiD;AAC/CujB,IAAAA,IAAI,GAAGxO,KAAK,CAAC2O,gBAAN,CAAuB5P,MAAM,CAAC9T,CAAD,CAA7B,CAAP;AACAwjB,IAAAA,gBAAgB;AACjB;;AACD1F,EAAAA,IAAI,GAAG7R,SAAP;;AACA,OAAKjM,CAAC,GAAG,CAAJ,EAAOiW,IAAI,GAAGlB,KAAK,CAAC4O,KAAN,CAAY/V,MAA/B,EAAuC5N,CAAC,GAAGiW,IAA3C,EAAiD,EAAEjW,CAAnD,EAAsD;AACpDujB,IAAAA,IAAI,GAAGxO,KAAK,CAAC6O,eAAN,CAAsB5jB,CAAtB,CAAP;AACAwjB,IAAAA,gBAAgB;AACjB;;AACD,SAAOxW,GAAP;AACD;;AACD,SAAS6W,wBAAT,CAAkC3N,KAAlC,EAAyC4N,KAAzC,EAAgD9P,OAAhD,EAAyD+P,UAAzD,EAAqE;AACnE,QAAMC,SAAS,GAAGhQ,OAAO,CAACiQ,YAA1B;AACA,MAAIvP,IAAJ,EAAUwP,KAAV;;AACA,MAAI/iB,aAAa,CAAC6iB,SAAD,CAAjB,EAA8B;AAC5BtP,IAAAA,IAAI,GAAGoP,KAAK,CAAC9W,GAAN,GAAYgH,OAAO,CAACmQ,kBAA3B;AACAD,IAAAA,KAAK,GAAGlQ,OAAO,CAACoQ,aAAhB;AACD,GAHD,MAGO;AACL1P,IAAAA,IAAI,GAAGsP,SAAS,GAAGD,UAAnB;AACAG,IAAAA,KAAK,GAAG,CAAR;AACD;;AACD,SAAO;AACLG,IAAAA,KAAK,EAAE3P,IAAI,GAAGqP,UADT;AAELG,IAAAA,KAFK;AAGLjX,IAAAA,KAAK,EAAE6W,KAAK,CAACQ,MAAN,CAAapO,KAAb,IAAuBxB,IAAI,GAAG;AAHhC,GAAP;AAKD;;AACD,SAAS6P,yBAAT,CAAmCrO,KAAnC,EAA0C4N,KAA1C,EAAiD9P,OAAjD,EAA0D+P,UAA1D,EAAsE;AACpE,QAAMO,MAAM,GAAGR,KAAK,CAACQ,MAArB;AACA,QAAMf,IAAI,GAAGe,MAAM,CAACpO,KAAD,CAAnB;AACA,MAAI4H,IAAI,GAAG5H,KAAK,GAAG,CAAR,GAAYoO,MAAM,CAACpO,KAAK,GAAG,CAAT,CAAlB,GAAgC,IAA3C;AACA,MAAIsO,IAAI,GAAGtO,KAAK,GAAGoO,MAAM,CAAC1W,MAAP,GAAgB,CAAxB,GAA4B0W,MAAM,CAACpO,KAAK,GAAG,CAAT,CAAlC,GAAgD,IAA3D;AACA,QAAMuO,OAAO,GAAGzQ,OAAO,CAACmQ,kBAAxB;;AACA,MAAIrG,IAAI,KAAK,IAAb,EAAmB;AACjBA,IAAAA,IAAI,GAAGyF,IAAI,IAAIiB,IAAI,KAAK,IAAT,GAAgBV,KAAK,CAAC3O,GAAN,GAAY2O,KAAK,CAAC7W,KAAlC,GAA0CuX,IAAI,GAAGjB,IAArD,CAAX;AACD;;AACD,MAAIiB,IAAI,KAAK,IAAb,EAAmB;AACjBA,IAAAA,IAAI,GAAGjB,IAAI,GAAGA,IAAP,GAAczF,IAArB;AACD;;AACD,QAAM7Q,KAAK,GAAGsW,IAAI,GAAG,CAACA,IAAI,GAAGxW,IAAI,CAACC,GAAL,CAAS8Q,IAAT,EAAe0G,IAAf,CAAR,IAAgC,CAAhC,GAAoCC,OAAzD;AACA,QAAM/P,IAAI,GAAG3H,IAAI,CAAC0W,GAAL,CAASe,IAAI,GAAG1G,IAAhB,IAAwB,CAAxB,GAA4B2G,OAAzC;AACA,SAAO;AACLJ,IAAAA,KAAK,EAAE3P,IAAI,GAAGqP,UADT;AAELG,IAAAA,KAAK,EAAElQ,OAAO,CAACoQ,aAFV;AAGLnX,IAAAA;AAHK,GAAP;AAKD;;AACD,SAASyX,aAAT,CAAuBC,KAAvB,EAA8B7W,IAA9B,EAAoCmK,MAApC,EAA4CjY,CAA5C,EAA+C;AAC7C,QAAM4kB,UAAU,GAAG3M,MAAM,CAACyF,KAAP,CAAaiH,KAAK,CAAC,CAAD,CAAlB,EAAuB3kB,CAAvB,CAAnB;AACA,QAAM6kB,QAAQ,GAAG5M,MAAM,CAACyF,KAAP,CAAaiH,KAAK,CAAC,CAAD,CAAlB,EAAuB3kB,CAAvB,CAAjB;AACA,QAAMgN,GAAG,GAAGD,IAAI,CAACC,GAAL,CAAS4X,UAAT,EAAqBC,QAArB,CAAZ;AACA,QAAM3V,GAAG,GAAGnC,IAAI,CAACmC,GAAL,CAAS0V,UAAT,EAAqBC,QAArB,CAAZ;AACA,MAAIC,QAAQ,GAAG9X,GAAf;AACA,MAAI+X,MAAM,GAAG7V,GAAb;;AACA,MAAInC,IAAI,CAAC0W,GAAL,CAASzW,GAAT,IAAgBD,IAAI,CAAC0W,GAAL,CAASvU,GAAT,CAApB,EAAmC;AACjC4V,IAAAA,QAAQ,GAAG5V,GAAX;AACA6V,IAAAA,MAAM,GAAG/X,GAAT;AACD;;AACDc,EAAAA,IAAI,CAACmK,MAAM,CAACU,IAAR,CAAJ,GAAoBoM,MAApB;AACAjX,EAAAA,IAAI,CAACkX,OAAL,GAAe;AACbF,IAAAA,QADa;AAEbC,IAAAA,MAFa;AAGb9X,IAAAA,KAAK,EAAE2X,UAHM;AAIbzP,IAAAA,GAAG,EAAE0P,QAJQ;AAKb7X,IAAAA,GALa;AAMbkC,IAAAA;AANa,GAAf;AAQD;;AACD,SAAS+V,UAAT,CAAoBN,KAApB,EAA2B7W,IAA3B,EAAiCmK,MAAjC,EAAyCjY,CAAzC,EAA4C;AAC1C,MAAIG,OAAO,CAACwkB,KAAD,CAAX,EAAoB;AAClBD,IAAAA,aAAa,CAACC,KAAD,EAAQ7W,IAAR,EAAcmK,MAAd,EAAsBjY,CAAtB,CAAb;AACD,GAFD,MAEO;AACL8N,IAAAA,IAAI,CAACmK,MAAM,CAACU,IAAR,CAAJ,GAAoBV,MAAM,CAACyF,KAAP,CAAaiH,KAAb,EAAoB3kB,CAApB,CAApB;AACD;;AACD,SAAO8N,IAAP;AACD;;AACD,SAASoX,qBAAT,CAA+BnO,IAA/B,EAAqCJ,IAArC,EAA2C1J,KAA3C,EAAkD0Q,KAAlD,EAAyD;AACvD,QAAMlF,MAAM,GAAG1B,IAAI,CAAC0B,MAApB;AACA,QAAMR,MAAM,GAAGlB,IAAI,CAACkB,MAApB;AACA,QAAMkG,MAAM,GAAG1F,MAAM,CAAC2F,SAAP,EAAf;AACA,QAAMC,WAAW,GAAG5F,MAAM,KAAKR,MAA/B;AACA,QAAMK,MAAM,GAAG,EAAf;AACA,MAAItY,CAAJ,EAAOiW,IAAP,EAAanI,IAAb,EAAmB6W,KAAnB;;AACA,OAAK3kB,CAAC,GAAGiN,KAAJ,EAAWgJ,IAAI,GAAGhJ,KAAK,GAAG0Q,KAA/B,EAAsC3d,CAAC,GAAGiW,IAA1C,EAAgD,EAAEjW,CAAlD,EAAqD;AACnD2kB,IAAAA,KAAK,GAAGhO,IAAI,CAAC3W,CAAD,CAAZ;AACA8N,IAAAA,IAAI,GAAG,EAAP;AACAA,IAAAA,IAAI,CAAC2K,MAAM,CAACE,IAAR,CAAJ,GAAoB0F,WAAW,IAAI5F,MAAM,CAACiF,KAAP,CAAaS,MAAM,CAACne,CAAD,CAAnB,EAAwBA,CAAxB,CAAnC;AACAsY,IAAAA,MAAM,CAAC1J,IAAP,CAAYqW,UAAU,CAACN,KAAD,EAAQ7W,IAAR,EAAcmK,MAAd,EAAsBjY,CAAtB,CAAtB;AACD;;AACD,SAAOsY,MAAP;AACD;;AACD,SAAS6M,UAAT,CAAoBC,MAApB,EAA4B;AAC1B,SAAOA,MAAM,IAAIA,MAAM,CAACN,QAAP,KAAoB7Y,SAA9B,IAA2CmZ,MAAM,CAACL,MAAP,KAAkB9Y,SAApE;AACD;;AACD,SAASoZ,OAAT,CAAiB3Q,IAAjB,EAAuBuD,MAAvB,EAA+BqN,UAA/B,EAA2C;AACzC,MAAI5Q,IAAI,KAAK,CAAb,EAAgB;AACd,WAAOzT,IAAI,CAACyT,IAAD,CAAX;AACD;;AACD,SAAO,CAACuD,MAAM,CAACsN,YAAP,KAAwB,CAAxB,GAA4B,CAAC,CAA9B,KAAoCtN,MAAM,CAACjL,GAAP,IAAcsY,UAAd,GAA2B,CAA3B,GAA+B,CAAC,CAApE,CAAP;AACD;;AACD,SAASE,WAAT,CAAqB1S,UAArB,EAAiC;AAC/B,MAAIoC,OAAJ,EAAajI,KAAb,EAAoBkI,GAApB,EAAyBI,GAAzB,EAA8BE,MAA9B;;AACA,MAAI3C,UAAU,CAAC2S,UAAf,EAA2B;AACzBvQ,IAAAA,OAAO,GAAGpC,UAAU,CAAC4S,IAAX,GAAkB5S,UAAU,CAAClQ,CAAvC;AACAqK,IAAAA,KAAK,GAAG,MAAR;AACAkI,IAAAA,GAAG,GAAG,OAAN;AACD,GAJD,MAIO;AACLD,IAAAA,OAAO,GAAGpC,UAAU,CAAC4S,IAAX,GAAkB5S,UAAU,CAAChQ,CAAvC;AACAmK,IAAAA,KAAK,GAAG,QAAR;AACAkI,IAAAA,GAAG,GAAG,KAAN;AACD;;AACD,MAAID,OAAJ,EAAa;AACXK,IAAAA,GAAG,GAAG,KAAN;AACAE,IAAAA,MAAM,GAAG,OAAT;AACD,GAHD,MAGO;AACLF,IAAAA,GAAG,GAAG,OAAN;AACAE,IAAAA,MAAM,GAAG,KAAT;AACD;;AACD,SAAO;AAACxI,IAAAA,KAAD;AAAQkI,IAAAA,GAAR;AAAaD,IAAAA,OAAb;AAAsBK,IAAAA,GAAtB;AAA2BE,IAAAA;AAA3B,GAAP;AACD;;AACD,SAASkQ,gBAAT,CAA0B7S,UAA1B,EAAsCkB,OAAtC,EAA+CoC,KAA/C,EAAsDF,KAAtD,EAA6D;AAC3D,MAAI0P,IAAI,GAAG5R,OAAO,CAAC6R,aAAnB;AACA,QAAM9T,GAAG,GAAG,EAAZ;;AACA,MAAI,CAAC6T,IAAL,EAAW;AACT9S,IAAAA,UAAU,CAAC+S,aAAX,GAA2B9T,GAA3B;AACA;AACD;;AACD,QAAM;AAAC9E,IAAAA,KAAD;AAAQkI,IAAAA,GAAR;AAAaD,IAAAA,OAAb;AAAsBK,IAAAA,GAAtB;AAA2BE,IAAAA;AAA3B,MAAqC+P,WAAW,CAAC1S,UAAD,CAAtD;;AACA,MAAI8S,IAAI,KAAK,QAAT,IAAqBxP,KAAzB,EAAgC;AAC9BtD,IAAAA,UAAU,CAACgT,kBAAX,GAAgC,IAAhC;;AACA,QAAI,CAAC1P,KAAK,CAAC0C,IAAN,IAAc,CAAf,MAAsB5C,KAA1B,EAAiC;AAC/B0P,MAAAA,IAAI,GAAGrQ,GAAP;AACD,KAFD,MAEO,IAAI,CAACa,KAAK,CAAC2C,OAAN,IAAiB,CAAlB,MAAyB7C,KAA7B,EAAoC;AACzC0P,MAAAA,IAAI,GAAGnQ,MAAP;AACD,KAFM,MAEA;AACL1D,MAAAA,GAAG,CAACgU,SAAS,CAACtQ,MAAD,EAASxI,KAAT,EAAgBkI,GAAhB,EAAqBD,OAArB,CAAV,CAAH,GAA8C,IAA9C;AACA0Q,MAAAA,IAAI,GAAGrQ,GAAP;AACD;AACF;;AACDxD,EAAAA,GAAG,CAACgU,SAAS,CAACH,IAAD,EAAO3Y,KAAP,EAAckI,GAAd,EAAmBD,OAAnB,CAAV,CAAH,GAA4C,IAA5C;AACApC,EAAAA,UAAU,CAAC+S,aAAX,GAA2B9T,GAA3B;AACD;;AACD,SAASgU,SAAT,CAAmBH,IAAnB,EAAyBpmB,CAAzB,EAA4BU,CAA5B,EAA+BgV,OAA/B,EAAwC;AACtC,MAAIA,OAAJ,EAAa;AACX0Q,IAAAA,IAAI,GAAGI,IAAI,CAACJ,IAAD,EAAOpmB,CAAP,EAAUU,CAAV,CAAX;AACA0lB,IAAAA,IAAI,GAAGK,QAAQ,CAACL,IAAD,EAAO1lB,CAAP,EAAUV,CAAV,CAAf;AACD,GAHD,MAGO;AACLomB,IAAAA,IAAI,GAAGK,QAAQ,CAACL,IAAD,EAAOpmB,CAAP,EAAUU,CAAV,CAAf;AACD;;AACD,SAAO0lB,IAAP;AACD;;AACD,SAASI,IAAT,CAAcE,IAAd,EAAoBC,EAApB,EAAwBC,EAAxB,EAA4B;AAC1B,SAAOF,IAAI,KAAKC,EAAT,GAAcC,EAAd,GAAmBF,IAAI,KAAKE,EAAT,GAAcD,EAAd,GAAmBD,IAA7C;AACD;;AACD,SAASD,QAAT,CAAkB7lB,CAAlB,EAAqB6M,KAArB,EAA4BkI,GAA5B,EAAiC;AAC/B,SAAO/U,CAAC,KAAK,OAAN,GAAgB6M,KAAhB,GAAwB7M,CAAC,KAAK,KAAN,GAAc+U,GAAd,GAAoB/U,CAAnD;AACD;;AACD,MAAMimB,aAAN,SAA4BnM,iBAA5B,CAA8C;AAC5C+D,EAAAA,kBAAkB,CAAClH,IAAD,EAAOJ,IAAP,EAAa1J,KAAb,EAAoB0Q,KAApB,EAA2B;AAC3C,WAAOuH,qBAAqB,CAACnO,IAAD,EAAOJ,IAAP,EAAa1J,KAAb,EAAoB0Q,KAApB,CAA5B;AACD;;AACDI,EAAAA,cAAc,CAAChH,IAAD,EAAOJ,IAAP,EAAa1J,KAAb,EAAoB0Q,KAApB,EAA2B;AACvC,WAAOuH,qBAAqB,CAACnO,IAAD,EAAOJ,IAAP,EAAa1J,KAAb,EAAoB0Q,KAApB,CAA5B;AACD;;AACDK,EAAAA,eAAe,CAACjH,IAAD,EAAOJ,IAAP,EAAa1J,KAAb,EAAoB0Q,KAApB,EAA2B;AACxC,UAAM;AAAClF,MAAAA,MAAD;AAASR,MAAAA;AAAT,QAAmBlB,IAAzB;AACA,UAAM;AAACuH,MAAAA,QAAQ,GAAG,GAAZ;AAAiBC,MAAAA,QAAQ,GAAG;AAA5B,QAAmC,KAAK/D,QAA9C;AACA,UAAM8L,QAAQ,GAAG7N,MAAM,CAACE,IAAP,KAAgB,GAAhB,GAAsB2F,QAAtB,GAAiCC,QAAlD;AACA,UAAMgI,QAAQ,GAAGtO,MAAM,CAACU,IAAP,KAAgB,GAAhB,GAAsB2F,QAAtB,GAAiCC,QAAlD;AACA,UAAMjG,MAAM,GAAG,EAAf;AACA,QAAItY,CAAJ,EAAOiW,IAAP,EAAanI,IAAb,EAAmB0Y,GAAnB;;AACA,SAAKxmB,CAAC,GAAGiN,KAAJ,EAAWgJ,IAAI,GAAGhJ,KAAK,GAAG0Q,KAA/B,EAAsC3d,CAAC,GAAGiW,IAA1C,EAAgD,EAAEjW,CAAlD,EAAqD;AACnDwmB,MAAAA,GAAG,GAAG7P,IAAI,CAAC3W,CAAD,CAAV;AACA8N,MAAAA,IAAI,GAAG,EAAP;AACAA,MAAAA,IAAI,CAAC2K,MAAM,CAACE,IAAR,CAAJ,GAAoBF,MAAM,CAACiF,KAAP,CAAa/c,gBAAgB,CAAC6lB,GAAD,EAAMF,QAAN,CAA7B,EAA8CtmB,CAA9C,CAApB;AACAsY,MAAAA,MAAM,CAAC1J,IAAP,CAAYqW,UAAU,CAACtkB,gBAAgB,CAAC6lB,GAAD,EAAMD,QAAN,CAAjB,EAAkCzY,IAAlC,EAAwCmK,MAAxC,EAAgDjY,CAAhD,CAAtB;AACD;;AACD,WAAOsY,MAAP;AACD;;AACDoG,EAAAA,qBAAqB,CAACC,KAAD,EAAQ5J,KAAR,EAAeuD,MAAf,EAAuBlC,KAAvB,EAA8B;AACjD,UAAMsI,qBAAN,CAA4BC,KAA5B,EAAmC5J,KAAnC,EAA0CuD,MAA1C,EAAkDlC,KAAlD;AACA,UAAMgP,MAAM,GAAG9M,MAAM,CAAC0M,OAAtB;;AACA,QAAII,MAAM,IAAIrQ,KAAK,KAAK,KAAKwD,WAAL,CAAiBN,MAAzC,EAAiD;AAC/C0G,MAAAA,KAAK,CAAC3R,GAAN,GAAYD,IAAI,CAACC,GAAL,CAAS2R,KAAK,CAAC3R,GAAf,EAAoBoY,MAAM,CAACpY,GAA3B,CAAZ;AACA2R,MAAAA,KAAK,CAACzP,GAAN,GAAYnC,IAAI,CAACmC,GAAL,CAASyP,KAAK,CAACzP,GAAf,EAAoBkW,MAAM,CAAClW,GAA3B,CAAZ;AACD;AACF;;AACDmQ,EAAAA,cAAc,GAAG;AACf,WAAO,CAAP;AACD;;AACDC,EAAAA,gBAAgB,CAACpJ,KAAD,EAAQ;AACtB,UAAM/I,EAAE,GAAG,IAAX;AACA,UAAM4J,IAAI,GAAG5J,EAAE,CAACoL,WAAhB;AACA,UAAM;AAACE,MAAAA,MAAD;AAASR,MAAAA;AAAT,QAAmBlB,IAAzB;AACA,UAAMuB,MAAM,GAAGnL,EAAE,CAACqR,SAAH,CAAatI,KAAb,CAAf;AACA,UAAMkP,MAAM,GAAG9M,MAAM,CAAC0M,OAAtB;AACA,UAAMvQ,KAAK,GAAG0Q,UAAU,CAACC,MAAD,CAAV,GACV,MAAMA,MAAM,CAACnY,KAAb,GAAqB,IAArB,GAA4BmY,MAAM,CAACjQ,GAAnC,GAAyC,GAD/B,GAEV,KAAK8C,MAAM,CAACuH,gBAAP,CAAwBlH,MAAM,CAACL,MAAM,CAACU,IAAR,CAA9B,CAFT;AAGA,WAAO;AACL4G,MAAAA,KAAK,EAAE,KAAK9G,MAAM,CAAC+G,gBAAP,CAAwBlH,MAAM,CAACG,MAAM,CAACE,IAAR,CAA9B,CADP;AAELlE,MAAAA;AAFK,KAAP;AAID;;AACDwG,EAAAA,UAAU,GAAG;AACX,UAAM9N,EAAE,GAAG,IAAX;AACAA,IAAAA,EAAE,CAAC2N,mBAAH,GAAyB,IAAzB;AACA,UAAMG,UAAN;AACA,UAAMlE,IAAI,GAAG5J,EAAE,CAACoL,WAAhB;AACAxB,IAAAA,IAAI,CAACX,KAAL,GAAajJ,EAAE,CAACmO,UAAH,GAAgBlF,KAA7B;AACD;;AACD3E,EAAAA,MAAM,CAAC8E,IAAD,EAAO;AACX,UAAMpJ,EAAE,GAAG,IAAX;AACA,UAAM4J,IAAI,GAAG5J,EAAE,CAACoL,WAAhB;AACApL,IAAAA,EAAE,CAACkV,cAAH,CAAkBtL,IAAI,CAACJ,IAAvB,EAA6B,CAA7B,EAAgCI,IAAI,CAACJ,IAAL,CAAU/I,MAA1C,EAAkD2I,IAAlD;AACD;;AACD8L,EAAAA,cAAc,CAACoE,IAAD,EAAOxZ,KAAP,EAAc0Q,KAAd,EAAqBpH,IAArB,EAA2B;AACvC,UAAMpJ,EAAE,GAAG,IAAX;AACA,UAAMsP,KAAK,GAAGlG,IAAI,KAAK,OAAvB;AACA,UAAM;AAACL,MAAAA,KAAD;AAAQqC,MAAAA,WAAW,EAAE;AAACN,QAAAA;AAAD;AAArB,QAAiC9K,EAAvC;AACA,UAAMuY,IAAI,GAAGzN,MAAM,CAACyO,YAAP,EAAb;AACA,UAAMjB,UAAU,GAAGxN,MAAM,CAACsN,YAAP,EAAnB;;AACA,UAAMzB,KAAK,GAAG3W,EAAE,CAACwZ,SAAH,EAAd;;AACA,UAAMC,SAAS,GAAGzZ,EAAE,CAAC8S,yBAAH,CAA6BhT,KAA7B,EAAoCsJ,IAApC,CAAlB;AACA,UAAM6K,aAAa,GAAGjU,EAAE,CAAC+T,gBAAH,CAAoB0F,SAApB,CAAtB;AACA,UAAMzF,cAAc,GAAGhU,EAAE,CAACgU,cAAH,CAAkB5K,IAAlB,EAAwB6K,aAAxB,CAAvB;AACAjU,IAAAA,EAAE,CAACoU,mBAAH,CAAuBH,aAAvB,EAAsC7K,IAAtC,EAA4CqQ,SAA5C;;AACA,SAAK,IAAI5mB,CAAC,GAAGiN,KAAb,EAAoBjN,CAAC,GAAGiN,KAAK,GAAG0Q,KAAhC,EAAuC3d,CAAC,EAAxC,EAA4C;AAC1C,YAAMsY,MAAM,GAAGnL,EAAE,CAACqR,SAAH,CAAaxe,CAAb,CAAf;AACA,YAAM6mB,OAAO,GAAGpK,KAAK,IAAItb,aAAa,CAACmX,MAAM,CAACL,MAAM,CAACU,IAAR,CAAP,CAAtB,GAA8C;AAAC+M,QAAAA,IAAD;AAAOoB,QAAAA,IAAI,EAAEpB;AAAb,OAA9C,GAAmEvY,EAAE,CAAC4Z,wBAAH,CAA4B/mB,CAA5B,CAAnF;;AACA,YAAMgnB,OAAO,GAAG7Z,EAAE,CAAC8Z,wBAAH,CAA4BjnB,CAA5B,EAA+B8jB,KAA/B,CAAhB;;AACA,YAAM1N,KAAK,GAAG,CAACkC,MAAM,CAACE,OAAP,IAAkB,EAAnB,EAAuBP,MAAM,CAACU,IAA9B,CAAd;AACA,YAAM7F,UAAU,GAAG;AACjB2S,QAAAA,UADiB;AAEjBC,QAAAA,IAAI,EAAEmB,OAAO,CAACnB,IAFG;AAGjBI,QAAAA,kBAAkB,EAAE,CAAC1P,KAAD,IAAU+O,UAAU,CAAC7M,MAAM,CAAC0M,OAAR,CAApB,IAAyC9O,KAAK,KAAKE,KAAK,CAAC0C,IAAhB,IAAwB5C,KAAK,KAAKE,KAAK,CAAC2C,OAHpF;AAIjBnW,QAAAA,CAAC,EAAE6iB,UAAU,GAAGoB,OAAO,CAACC,IAAX,GAAkBE,OAAO,CAACE,MAJtB;AAKjBpkB,QAAAA,CAAC,EAAE2iB,UAAU,GAAGuB,OAAO,CAACE,MAAX,GAAoBL,OAAO,CAACC,IALxB;AAMjBK,QAAAA,MAAM,EAAE1B,UAAU,GAAGuB,OAAO,CAACtS,IAAX,GAAkB3H,IAAI,CAAC0W,GAAL,CAASoD,OAAO,CAACnS,IAAjB,CANnB;AAOjB0S,QAAAA,KAAK,EAAE3B,UAAU,GAAG1Y,IAAI,CAAC0W,GAAL,CAASoD,OAAO,CAACnS,IAAjB,CAAH,GAA4BsS,OAAO,CAACtS;AAPpC,OAAnB;;AASA,UAAIyM,cAAJ,EAAoB;AAClBrO,QAAAA,UAAU,CAACkB,OAAX,GAAqBoN,aAAa,IAAIjU,EAAE,CAAC8S,yBAAH,CAA6BjgB,CAA7B,EAAgCymB,IAAI,CAACzmB,CAAD,CAAJ,CAAQwR,MAAR,GAAiB,QAAjB,GAA4B+E,IAA5D,CAAtC;AACD;;AACDoP,MAAAA,gBAAgB,CAAC7S,UAAD,EAAaA,UAAU,CAACkB,OAAX,IAAsByS,IAAI,CAACzmB,CAAD,CAAJ,CAAQgU,OAA3C,EAAoDoC,KAApD,EAA2DF,KAA3D,CAAhB;AACA/I,MAAAA,EAAE,CAACmU,aAAH,CAAiBmF,IAAI,CAACzmB,CAAD,CAArB,EAA0BA,CAA1B,EAA6B8S,UAA7B,EAAyCyD,IAAzC;AACD;AACF;;AACD8Q,EAAAA,UAAU,CAACC,IAAD,EAAO5N,SAAP,EAAkB;AAC1B,UAAMvM,EAAE,GAAG,IAAX;AACA,UAAM4J,IAAI,GAAG5J,EAAE,CAACoL,WAAhB;AACA,UAAME,MAAM,GAAG1B,IAAI,CAAC0B,MAApB;AACA,UAAM1C,QAAQ,GAAG0C,MAAM,CAACN,uBAAP,CAA+BhL,EAAE,CAACoN,KAAlC,CAAjB;AACA,UAAMvD,OAAO,GAAGyB,MAAM,CAACzE,OAAP,CAAegD,OAA/B;AACA,UAAMf,IAAI,GAAGF,QAAQ,CAACnI,MAAtB;AACA,UAAMgK,MAAM,GAAG,EAAf;AACA,QAAI5X,CAAJ,EAAO8N,IAAP;;AACA,SAAK9N,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGiW,IAAhB,EAAsB,EAAEjW,CAAxB,EAA2B;AACzB8N,MAAAA,IAAI,GAAGiI,QAAQ,CAAC/V,CAAD,CAAf;;AACA,UAAI,CAAC8N,IAAI,CAACuK,UAAL,CAAgBrE,OAAhB,CAAwBuT,OAA7B,EAAsC;AACpC;AACD;;AACD,UAAI,OAAO7N,SAAP,KAAqB,WAAzB,EAAsC;AACpC,cAAM8N,GAAG,GAAG1Z,IAAI,CAACuK,UAAL,CAAgBmG,SAAhB,CAA0B9E,SAA1B,EACV5L,IAAI,CAACuK,UAAL,CAAgBE,WAAhB,CAA4BN,MAA5B,CAAmCU,IADzB,CAAZ;;AAGA,YAAIxX,aAAa,CAACqmB,GAAD,CAAb,IAAsBC,KAAK,CAACD,GAAD,CAA/B,EAAsC;AACpC;AACD;AACF;;AACD,UAAIxQ,OAAO,KAAK,KAAZ,IAAqBY,MAAM,CAAC8P,OAAP,CAAe5Z,IAAI,CAACsI,KAApB,MAA+B,CAAC,CAArD,IACLY,OAAO,KAAK/K,SAAZ,IAAyB6B,IAAI,CAACsI,KAAL,KAAenK,SADvC,EACmD;AACjD2L,QAAAA,MAAM,CAAChJ,IAAP,CAAYd,IAAI,CAACsI,KAAjB;AACD;;AACD,UAAItI,IAAI,CAACoI,KAAL,KAAeoR,IAAnB,EAAyB;AACvB;AACD;AACF;;AACD,QAAI,CAAC1P,MAAM,CAAChK,MAAZ,EAAoB;AAClBgK,MAAAA,MAAM,CAAChJ,IAAP,CAAY3C,SAAZ;AACD;;AACD,WAAO2L,MAAP;AACD;;AACD+P,EAAAA,cAAc,CAACzR,KAAD,EAAQ;AACpB,WAAO,KAAKmR,UAAL,CAAgBpb,SAAhB,EAA2BiK,KAA3B,EAAkCtI,MAAzC;AACD;;AACDga,EAAAA,cAAc,CAACpR,YAAD,EAAe3D,IAAf,EAAqB6G,SAArB,EAAgC;AAC5C,UAAM9B,MAAM,GAAG,KAAKyP,UAAL,CAAgB7Q,YAAhB,EAA8BkD,SAA9B,CAAf;;AACA,UAAMxD,KAAK,GAAIrD,IAAI,KAAK5G,SAAV,GACV2L,MAAM,CAAC8P,OAAP,CAAe7U,IAAf,CADU,GAEV,CAAC,CAFL;AAGA,WAAQqD,KAAK,KAAK,CAAC,CAAZ,GACH0B,MAAM,CAAChK,MAAP,GAAgB,CADb,GAEHsI,KAFJ;AAGD;;AACDyQ,EAAAA,SAAS,GAAG;AACV,UAAMxZ,EAAE,GAAG,IAAX;AACA,UAAM8H,IAAI,GAAG9H,EAAE,CAAC6G,OAAhB;AACA,UAAM+C,IAAI,GAAG5J,EAAE,CAACoL,WAAhB;AACA,UAAME,MAAM,GAAG1B,IAAI,CAAC0B,MAApB;AACA,UAAM6L,MAAM,GAAG,EAAf;AACA,QAAItkB,CAAJ,EAAOiW,IAAP;;AACA,SAAKjW,CAAC,GAAG,CAAJ,EAAOiW,IAAI,GAAGc,IAAI,CAACJ,IAAL,CAAU/I,MAA7B,EAAqC5N,CAAC,GAAGiW,IAAzC,EAA+C,EAAEjW,CAAjD,EAAoD;AAClDskB,MAAAA,MAAM,CAAC1V,IAAP,CAAY6J,MAAM,CAACiL,gBAAP,CAAwBvW,EAAE,CAACqR,SAAH,CAAaxe,CAAb,EAAgByY,MAAM,CAACE,IAAvB,CAAxB,EAAsD3Y,CAAtD,CAAZ;AACD;;AACD,UAAMikB,YAAY,GAAGhP,IAAI,CAACgP,YAA1B;AACA,UAAMjX,GAAG,GAAGiX,YAAY,IAAIZ,oBAAoB,CAAC5K,MAAD,CAAhD;AACA,WAAO;AACLzL,MAAAA,GADK;AAELsX,MAAAA,MAFK;AAGLrX,MAAAA,KAAK,EAAEwL,MAAM,CAACoP,WAHT;AAIL1S,MAAAA,GAAG,EAAEsD,MAAM,CAACqP,SAJP;AAKL/D,MAAAA,UAAU,EAAE5W,EAAE,CAACwa,cAAH,EALP;AAML5S,MAAAA,KAAK,EAAE0D,MANF;AAOL8O,MAAAA,OAAO,EAAEtS,IAAI,CAACsS,OAPT;AAQLrD,MAAAA,KAAK,EAAED,YAAY,GAAG,CAAH,GAAOhP,IAAI,CAACkP,kBAAL,GAA0BlP,IAAI,CAACmP;AARpD,KAAP;AAUD;;AACD2C,EAAAA,wBAAwB,CAAC7Q,KAAD,EAAQ;AAC9B,UAAM/I,EAAE,GAAG,IAAX;AACA,UAAM;AAACoL,MAAAA,WAAW,EAAE;AAACN,QAAAA,MAAD;AAASkD,QAAAA;AAAT,OAAd;AAAkCnH,MAAAA,OAAO,EAAE;AAAC0R,QAAAA,IAAI,EAAEqC,SAAP;AAAkBC,QAAAA;AAAlB;AAA3C,QAA8E7a,EAApF;AACA,UAAMmY,UAAU,GAAGyC,SAAS,IAAI,CAAhC;AACA,UAAMzP,MAAM,GAAGnL,EAAE,CAACqR,SAAH,CAAatI,KAAb,CAAf;AACA,UAAMkP,MAAM,GAAG9M,MAAM,CAAC0M,OAAtB;AACA,UAAMiD,QAAQ,GAAG9C,UAAU,CAACC,MAAD,CAA3B;AACA,QAAI3Q,KAAK,GAAG6D,MAAM,CAACL,MAAM,CAACU,IAAR,CAAlB;AACA,QAAI1L,KAAK,GAAG,CAAZ;AACA,QAAIW,MAAM,GAAGuN,QAAQ,GAAGhO,EAAE,CAACgJ,UAAH,CAAc8B,MAAd,EAAsBK,MAAtB,EAA8B6C,QAA9B,CAAH,GAA6C1G,KAAlE;AACA,QAAIqS,IAAJ,EAAUpS,IAAV;;AACA,QAAI9G,MAAM,KAAK6G,KAAf,EAAsB;AACpBxH,MAAAA,KAAK,GAAGW,MAAM,GAAG6G,KAAjB;AACA7G,MAAAA,MAAM,GAAG6G,KAAT;AACD;;AACD,QAAIwT,QAAJ,EAAc;AACZxT,MAAAA,KAAK,GAAG2Q,MAAM,CAACN,QAAf;AACAlX,MAAAA,MAAM,GAAGwX,MAAM,CAACL,MAAP,GAAgBK,MAAM,CAACN,QAAhC;;AACA,UAAIrQ,KAAK,KAAK,CAAV,IAAexT,IAAI,CAACwT,KAAD,CAAJ,KAAgBxT,IAAI,CAACmkB,MAAM,CAACL,MAAR,CAAvC,EAAwD;AACtD9X,QAAAA,KAAK,GAAG,CAAR;AACD;;AACDA,MAAAA,KAAK,IAAIwH,KAAT;AACD;;AACD,UAAMmQ,UAAU,GAAG,CAACzjB,aAAa,CAAC4mB,SAAD,CAAd,IAA6B,CAACE,QAA9B,GAAyCF,SAAzC,GAAqD9a,KAAxE;AACA,QAAIyY,IAAI,GAAGzN,MAAM,CAACyL,gBAAP,CAAwBkB,UAAxB,CAAX;;AACA,QAAIzX,EAAE,CAAChB,KAAH,CAAS+b,iBAAT,CAA2BhS,KAA3B,CAAJ,EAAuC;AACrC4Q,MAAAA,IAAI,GAAG7O,MAAM,CAACyL,gBAAP,CAAwBzW,KAAK,GAAGW,MAAhC,CAAP;AACD,KAFD,MAEO;AACLkZ,MAAAA,IAAI,GAAGpB,IAAP;AACD;;AACDhR,IAAAA,IAAI,GAAGoS,IAAI,GAAGpB,IAAd;;AACA,QAAI3Y,IAAI,CAAC0W,GAAL,CAAS/O,IAAT,IAAiBsT,YAArB,EAAmC;AACjCtT,MAAAA,IAAI,GAAG2Q,OAAO,CAAC3Q,IAAD,EAAOuD,MAAP,EAAeqN,UAAf,CAAP,GAAoC0C,YAA3C;;AACA,UAAIvT,KAAK,KAAK6Q,UAAd,EAA0B;AACxBI,QAAAA,IAAI,IAAIhR,IAAI,GAAG,CAAf;AACD;;AACDoS,MAAAA,IAAI,GAAGpB,IAAI,GAAGhR,IAAd;AACD;;AACD,QAAIgR,IAAI,KAAKzN,MAAM,CAACyL,gBAAP,CAAwB4B,UAAxB,CAAb,EAAkD;AAChD,YAAM6C,QAAQ,GAAGlnB,IAAI,CAACyT,IAAD,CAAJ,GAAauD,MAAM,CAACmQ,oBAAP,CAA4B9C,UAA5B,CAAb,GAAuD,CAAxE;AACAI,MAAAA,IAAI,IAAIyC,QAAR;AACAzT,MAAAA,IAAI,IAAIyT,QAAR;AACD;;AACD,WAAO;AACLzT,MAAAA,IADK;AAELgR,MAAAA,IAFK;AAGLoB,MAAAA,IAHK;AAILI,MAAAA,MAAM,EAAEJ,IAAI,GAAGpS,IAAI,GAAG;AAJjB,KAAP;AAMD;;AACDuS,EAAAA,wBAAwB,CAAC/Q,KAAD,EAAQ4N,KAAR,EAAe;AACrC,UAAM3W,EAAE,GAAG,IAAX;AACA,UAAM4H,KAAK,GAAG+O,KAAK,CAAC/O,KAApB;AACA,UAAMf,OAAO,GAAG7G,EAAE,CAAC6G,OAAnB;AACA,UAAMqU,QAAQ,GAAGrU,OAAO,CAACqU,QAAzB;AACA,UAAMC,eAAe,GAAGjoB,cAAc,CAAC2T,OAAO,CAACsU,eAAT,EAA0BC,QAA1B,CAAtC;AACA,QAAIrB,MAAJ,EAAYxS,IAAZ;;AACA,QAAIoP,KAAK,CAACyD,OAAV,EAAmB;AACjB,YAAMxD,UAAU,GAAGsE,QAAQ,GAAGlb,EAAE,CAACwa,cAAH,CAAkBzR,KAAlB,CAAH,GAA8B4N,KAAK,CAACC,UAA/D;AACA,YAAMpF,KAAK,GAAG3K,OAAO,CAACiQ,YAAR,KAAyB,MAAzB,GACVM,yBAAyB,CAACrO,KAAD,EAAQ4N,KAAR,EAAe9P,OAAf,EAAwB+P,UAAxB,CADf,GAEVF,wBAAwB,CAAC3N,KAAD,EAAQ4N,KAAR,EAAe9P,OAAf,EAAwB+P,UAAxB,CAF5B;;AAGA,YAAMyE,UAAU,GAAGrb,EAAE,CAACya,cAAH,CAAkBza,EAAE,CAAC+I,KAArB,EAA4B/I,EAAE,CAACoL,WAAH,CAAenC,KAA3C,EAAkDiS,QAAQ,GAAGnS,KAAH,GAAWjK,SAArE,CAAnB;;AACAib,MAAAA,MAAM,GAAGvI,KAAK,CAAC1R,KAAN,GAAe0R,KAAK,CAAC0F,KAAN,GAAcmE,UAA7B,GAA4C7J,KAAK,CAAC0F,KAAN,GAAc,CAAnE;AACA3P,MAAAA,IAAI,GAAG3H,IAAI,CAACC,GAAL,CAASsb,eAAT,EAA0B3J,KAAK,CAAC0F,KAAN,GAAc1F,KAAK,CAACuF,KAA9C,CAAP;AACD,KARD,MAQO;AACLgD,MAAAA,MAAM,GAAGnS,KAAK,CAAC2O,gBAAN,CAAuBvW,EAAE,CAACqR,SAAH,CAAatI,KAAb,EAAoBnB,KAAK,CAAC4D,IAA1B,CAAvB,EAAwDzC,KAAxD,CAAT;AACAxB,MAAAA,IAAI,GAAG3H,IAAI,CAACC,GAAL,CAASsb,eAAT,EAA0BxE,KAAK,CAAC9W,GAAN,GAAY8W,KAAK,CAACI,KAA5C,CAAP;AACD;;AACD,WAAO;AACLwB,MAAAA,IAAI,EAAEwB,MAAM,GAAGxS,IAAI,GAAG,CADjB;AAELoS,MAAAA,IAAI,EAAEI,MAAM,GAAGxS,IAAI,GAAG,CAFjB;AAGLwS,MAAAA,MAHK;AAILxS,MAAAA;AAJK,KAAP;AAMD;;AACD7G,EAAAA,IAAI,GAAG;AACL,UAAMV,EAAE,GAAG,IAAX;AACA,UAAM4J,IAAI,GAAG5J,EAAE,CAACoL,WAAhB;AACA,UAAMN,MAAM,GAAGlB,IAAI,CAACkB,MAApB;AACA,UAAMwQ,KAAK,GAAG1R,IAAI,CAACJ,IAAnB;AACA,UAAMV,IAAI,GAAGwS,KAAK,CAAC7a,MAAnB;AACA,QAAI5N,CAAC,GAAG,CAAR;;AACA,WAAOA,CAAC,GAAGiW,IAAX,EAAiB,EAAEjW,CAAnB,EAAsB;AACpB,UAAImN,EAAE,CAACqR,SAAH,CAAaxe,CAAb,EAAgBiY,MAAM,CAACU,IAAvB,MAAiC,IAArC,EAA2C;AACzC8P,QAAAA,KAAK,CAACzoB,CAAD,CAAL,CAAS6N,IAAT,CAAcV,EAAE,CAACgN,IAAjB;AACD;AACF;AACF;;AAzP2C;;AA2P9CkM,aAAa,CAACjP,EAAd,GAAmB,KAAnB;AACAiP,aAAa,CAACtmB,QAAd,GAAyB;AACvB8c,EAAAA,kBAAkB,EAAE,KADG;AAEvBuD,EAAAA,eAAe,EAAE,KAFM;AAGvB+D,EAAAA,kBAAkB,EAAE,GAHG;AAIvBC,EAAAA,aAAa,EAAE,GAJQ;AAKvBmD,EAAAA,OAAO,EAAE,IALc;AAMvBtU,EAAAA,UAAU,EAAE;AACVd,IAAAA,OAAO,EAAE;AACP7F,MAAAA,IAAI,EAAE,QADC;AAEPwG,MAAAA,UAAU,EAAE,CAAC,GAAD,EAAM,GAAN,EAAW,MAAX,EAAmB,OAAnB,EAA4B,QAA5B;AAFL;AADC;AANW,CAAzB;AAaAuT,aAAa,CAACpgB,SAAd,GAA0B;AACxByiB,EAAAA,WAAW,EAAE;AACXnS,IAAAA,IAAI,EAAE;AADK,GADW;AAIxB0C,EAAAA,MAAM,EAAE;AACN0P,IAAAA,OAAO,EAAE;AACPrc,MAAAA,IAAI,EAAE,UADC;AAEPsc,MAAAA,MAAM,EAAE,IAFD;AAGPC,MAAAA,IAAI,EAAE;AACJD,QAAAA,MAAM,EAAE;AADJ;AAHC,KADH;AAQNE,IAAAA,OAAO,EAAE;AACPxc,MAAAA,IAAI,EAAE,QADC;AAEPyc,MAAAA,WAAW,EAAE;AAFN;AARH;AAJgB,CAA1B;;AAmBA,MAAMC,gBAAN,SAA+B9O,iBAA/B,CAAiD;AAC/Ce,EAAAA,UAAU,GAAG;AACX,SAAKH,mBAAL,GAA2B,IAA3B;AACA,UAAMG,UAAN;AACD;;AACD+C,EAAAA,eAAe,CAACjH,IAAD,EAAOJ,IAAP,EAAa1J,KAAb,EAAoB0Q,KAApB,EAA2B;AACxC,UAAM;AAACtI,MAAAA,MAAD;AAASC,MAAAA;AAAT,QAAmByB,IAAzB;AACA,UAAM;AAACuH,MAAAA,QAAQ,GAAG,GAAZ;AAAiBC,MAAAA,QAAQ,GAAG;AAA5B,QAAmC,KAAK/D,QAA9C;AACA,UAAMlC,MAAM,GAAG,EAAf;AACA,QAAItY,CAAJ,EAAOiW,IAAP,EAAanI,IAAb;;AACA,SAAK9N,CAAC,GAAGiN,KAAJ,EAAWgJ,IAAI,GAAGhJ,KAAK,GAAG0Q,KAA/B,EAAsC3d,CAAC,GAAGiW,IAA1C,EAAgD,EAAEjW,CAAlD,EAAqD;AACnD8N,MAAAA,IAAI,GAAG6I,IAAI,CAAC3W,CAAD,CAAX;AACAsY,MAAAA,MAAM,CAAC1J,IAAP,CAAY;AACVhM,QAAAA,CAAC,EAAEyS,MAAM,CAACqI,KAAP,CAAa/c,gBAAgB,CAACmN,IAAD,EAAOwQ,QAAP,CAA7B,EAA+Cte,CAA/C,CADO;AAEV8C,QAAAA,CAAC,EAAEwS,MAAM,CAACoI,KAAP,CAAa/c,gBAAgB,CAACmN,IAAD,EAAOyQ,QAAP,CAA7B,EAA+Cve,CAA/C,CAFO;AAGVglB,QAAAA,OAAO,EAAElX,IAAI,IAAIA,IAAI,CAACxO,CAAb,IAAkB,CAACwO,IAAI,CAACxO;AAHvB,OAAZ;AAKD;;AACD,WAAOgZ,MAAP;AACD;;AACD+G,EAAAA,cAAc,GAAG;AACf,UAAM;AAAC1I,MAAAA,IAAD;AAAOkD,MAAAA;AAAP,QAAkB,KAAKtB,WAA7B;AACA,QAAIrJ,GAAG,GAAG,CAAV;;AACA,SAAK,IAAIlP,CAAC,GAAG2W,IAAI,CAAC/I,MAAL,GAAc,CAA3B,EAA8B5N,CAAC,IAAI,CAAnC,EAAsC,EAAEA,CAAxC,EAA2C;AACzCkP,MAAAA,GAAG,GAAGnC,IAAI,CAACmC,GAAL,CAASA,GAAT,EAAcyH,IAAI,CAAC3W,CAAD,CAAJ,CAAQ0U,IAAR,KAAiB,CAA/B,EAAkCmF,OAAO,CAAC7Z,CAAD,CAAP,CAAWglB,OAA7C,CAAN;AACD;;AACD,WAAO9V,GAAG,GAAG,CAAN,IAAWA,GAAlB;AACD;;AACDoQ,EAAAA,gBAAgB,CAACpJ,KAAD,EAAQ;AACtB,UAAM/I,EAAE,GAAG,IAAX;AACA,UAAM4J,IAAI,GAAG5J,EAAE,CAACoL,WAAhB;AACA,UAAM;AAAClD,MAAAA,MAAD;AAASC,MAAAA;AAAT,QAAmByB,IAAzB;AACA,UAAMuB,MAAM,GAAGnL,EAAE,CAACqR,SAAH,CAAatI,KAAb,CAAf;AACA,UAAMtT,CAAC,GAAGyS,MAAM,CAACmK,gBAAP,CAAwBlH,MAAM,CAAC1V,CAA/B,CAAV;AACA,UAAME,CAAC,GAAGwS,MAAM,CAACkK,gBAAP,CAAwBlH,MAAM,CAACxV,CAA/B,CAAV;AACA,UAAMxD,CAAC,GAAGgZ,MAAM,CAAC0M,OAAjB;AACA,WAAO;AACLzF,MAAAA,KAAK,EAAExI,IAAI,CAACwI,KADP;AAEL9K,MAAAA,KAAK,EAAE,MAAM7R,CAAN,GAAU,IAAV,GAAiBE,CAAjB,IAAsBxD,CAAC,GAAG,OAAOA,CAAV,GAAc,EAArC,IAA2C;AAF7C,KAAP;AAID;;AACDmS,EAAAA,MAAM,CAAC8E,IAAD,EAAO;AACX,UAAMpJ,EAAE,GAAG,IAAX;AACA,UAAM8b,MAAM,GAAG9b,EAAE,CAACoL,WAAH,CAAe5B,IAA9B;AACAxJ,IAAAA,EAAE,CAACkV,cAAH,CAAkB4G,MAAlB,EAA0B,CAA1B,EAA6BA,MAAM,CAACrb,MAApC,EAA4C2I,IAA5C;AACD;;AACD8L,EAAAA,cAAc,CAAC4G,MAAD,EAAShc,KAAT,EAAgB0Q,KAAhB,EAAuBpH,IAAvB,EAA6B;AACzC,UAAMpJ,EAAE,GAAG,IAAX;AACA,UAAMsP,KAAK,GAAGlG,IAAI,KAAK,OAAvB;AACA,UAAM;AAACkC,MAAAA,MAAD;AAASR,MAAAA;AAAT,QAAmB9K,EAAE,CAACoL,WAA5B;AACA,UAAMqO,SAAS,GAAGzZ,EAAE,CAAC8S,yBAAH,CAA6BhT,KAA7B,EAAoCsJ,IAApC,CAAlB;AACA,UAAM6K,aAAa,GAAGjU,EAAE,CAAC+T,gBAAH,CAAoB0F,SAApB,CAAtB;AACA,UAAMzF,cAAc,GAAGhU,EAAE,CAACgU,cAAH,CAAkB5K,IAAlB,EAAwB6K,aAAxB,CAAvB;AACA,UAAM1I,KAAK,GAAGD,MAAM,CAACE,IAArB;AACA,UAAMC,KAAK,GAAGX,MAAM,CAACU,IAArB;;AACA,SAAK,IAAI3Y,CAAC,GAAGiN,KAAb,EAAoBjN,CAAC,GAAGiN,KAAK,GAAG0Q,KAAhC,EAAuC3d,CAAC,EAAxC,EAA4C;AAC1C,YAAMkpB,KAAK,GAAGD,MAAM,CAACjpB,CAAD,CAApB;AACA,YAAMsY,MAAM,GAAG,CAACmE,KAAD,IAAUtP,EAAE,CAACqR,SAAH,CAAaxe,CAAb,CAAzB;AACA,YAAM8S,UAAU,GAAG,EAAnB;AACA,YAAMqW,MAAM,GAAGrW,UAAU,CAAC4F,KAAD,CAAV,GAAoB+D,KAAK,GAAGhE,MAAM,CAAC2Q,kBAAP,CAA0B,GAA1B,CAAH,GAAoC3Q,MAAM,CAACiL,gBAAP,CAAwBpL,MAAM,CAACI,KAAD,CAA9B,CAA5E;AACA,YAAM2Q,MAAM,GAAGvW,UAAU,CAAC8F,KAAD,CAAV,GAAoB6D,KAAK,GAAGxE,MAAM,CAACyO,YAAP,EAAH,GAA2BzO,MAAM,CAACyL,gBAAP,CAAwBpL,MAAM,CAACM,KAAD,CAA9B,CAAnE;AACA9F,MAAAA,UAAU,CAACwW,IAAX,GAAkB7B,KAAK,CAAC0B,MAAD,CAAL,IAAiB1B,KAAK,CAAC4B,MAAD,CAAxC;;AACA,UAAIlI,cAAJ,EAAoB;AAClBrO,QAAAA,UAAU,CAACkB,OAAX,GAAqB7G,EAAE,CAAC8S,yBAAH,CAA6BjgB,CAA7B,EAAgCkpB,KAAK,CAAC1X,MAAN,GAAe,QAAf,GAA0B+E,IAA1D,CAArB;;AACA,YAAIkG,KAAJ,EAAW;AACT3J,UAAAA,UAAU,CAACkB,OAAX,CAAmBuV,MAAnB,GAA4B,CAA5B;AACD;AACF;;AACDpc,MAAAA,EAAE,CAACmU,aAAH,CAAiB4H,KAAjB,EAAwBlpB,CAAxB,EAA2B8S,UAA3B,EAAuCyD,IAAvC;AACD;;AACDpJ,IAAAA,EAAE,CAACoU,mBAAH,CAAuBH,aAAvB,EAAsC7K,IAAtC,EAA4CqQ,SAA5C;AACD;;AACD3G,EAAAA,yBAAyB,CAAC/J,KAAD,EAAQK,IAAR,EAAc;AACrC,UAAM+B,MAAM,GAAG,KAAKkG,SAAL,CAAetI,KAAf,CAAf;AACA,QAAIpC,MAAM,GAAG,MAAMmM,yBAAN,CAAgC/J,KAAhC,EAAuCK,IAAvC,CAAb;;AACA,QAAIzC,MAAM,CAACK,OAAX,EAAoB;AAClBL,MAAAA,MAAM,GAAGxB,MAAM,CAACqC,MAAP,CAAc,EAAd,EAAkBb,MAAlB,EAA0B;AAACK,QAAAA,OAAO,EAAE;AAAV,OAA1B,CAAT;AACD;;AACD,UAAMoV,MAAM,GAAGzV,MAAM,CAACyV,MAAtB;;AACA,QAAIhT,IAAI,KAAK,QAAb,EAAuB;AACrBzC,MAAAA,MAAM,CAACyV,MAAP,GAAgB,CAAhB;AACD;;AACDzV,IAAAA,MAAM,CAACyV,MAAP,IAAiBlpB,cAAc,CAACiY,MAAM,IAAIA,MAAM,CAAC0M,OAAlB,EAA2BuE,MAA3B,CAA/B;AACA,WAAOzV,MAAP;AACD;;AApF8C;;AAsFjDkV,gBAAgB,CAAC5R,EAAjB,GAAsB,QAAtB;AACA4R,gBAAgB,CAACjpB,QAAjB,GAA4B;AAC1B8c,EAAAA,kBAAkB,EAAE,KADM;AAE1BuD,EAAAA,eAAe,EAAE,OAFS;AAG1BnN,EAAAA,UAAU,EAAE;AACVd,IAAAA,OAAO,EAAE;AACP7F,MAAAA,IAAI,EAAE,QADC;AAEPwG,MAAAA,UAAU,EAAE,CAAC,GAAD,EAAM,GAAN,EAAW,aAAX,EAA0B,QAA1B;AAFL;AADC;AAHc,CAA5B;AAUAkW,gBAAgB,CAAC/iB,SAAjB,GAA6B;AAC3BgT,EAAAA,MAAM,EAAE;AACNrW,IAAAA,CAAC,EAAE;AACD0J,MAAAA,IAAI,EAAE;AADL,KADG;AAINxJ,IAAAA,CAAC,EAAE;AACDwJ,MAAAA,IAAI,EAAE;AADL;AAJG,GADmB;AAS3Bkd,EAAAA,OAAO,EAAE;AACPC,IAAAA,OAAO,EAAE;AACPld,MAAAA,SAAS,EAAE;AACTmd,QAAAA,KAAK,GAAG;AACN,iBAAO,EAAP;AACD;;AAHQ;AADJ;AADF;AATkB,CAA7B;;AAoBA,SAASC,iBAAT,CAA2BC,QAA3B,EAAqCC,aAArC,EAAoDC,MAApD,EAA4D;AAC1D,MAAIC,MAAM,GAAG,CAAb;AACA,MAAIC,MAAM,GAAG,CAAb;AACA,MAAIC,OAAO,GAAG,CAAd;AACA,MAAIC,OAAO,GAAG,CAAd;;AACA,MAAIL,aAAa,GAAGhoB,GAApB,EAAyB;AACvB,UAAMsoB,UAAU,GAAGP,QAAnB;AACA,UAAMQ,QAAQ,GAAGD,UAAU,GAAGN,aAA9B;AACA,UAAMQ,MAAM,GAAGtd,IAAI,CAACud,GAAL,CAASH,UAAT,CAAf;AACA,UAAMI,MAAM,GAAGxd,IAAI,CAACyd,GAAL,CAASL,UAAT,CAAf;AACA,UAAMM,IAAI,GAAG1d,IAAI,CAACud,GAAL,CAASF,QAAT,CAAb;AACA,UAAMM,IAAI,GAAG3d,IAAI,CAACyd,GAAL,CAASJ,QAAT,CAAb;;AACA,UAAMO,OAAO,GAAG,CAACC,KAAD,EAAQprB,CAAR,EAAWU,CAAX,KAAiB+B,aAAa,CAAC2oB,KAAD,EAAQT,UAAR,EAAoBC,QAApB,EAA8B,IAA9B,CAAb,GAAmD,CAAnD,GAAuDrd,IAAI,CAACmC,GAAL,CAAS1P,CAAT,EAAYA,CAAC,GAAGsqB,MAAhB,EAAwB5pB,CAAxB,EAA2BA,CAAC,GAAG4pB,MAA/B,CAAxF;;AACA,UAAMe,OAAO,GAAG,CAACD,KAAD,EAAQprB,CAAR,EAAWU,CAAX,KAAiB+B,aAAa,CAAC2oB,KAAD,EAAQT,UAAR,EAAoBC,QAApB,EAA8B,IAA9B,CAAb,GAAmD,CAAC,CAApD,GAAwDrd,IAAI,CAACC,GAAL,CAASxN,CAAT,EAAYA,CAAC,GAAGsqB,MAAhB,EAAwB5pB,CAAxB,EAA2BA,CAAC,GAAG4pB,MAA/B,CAAzF;;AACA,UAAMgB,IAAI,GAAGH,OAAO,CAAC,CAAD,EAAIN,MAAJ,EAAYI,IAAZ,CAApB;AACA,UAAMM,IAAI,GAAGJ,OAAO,CAACxoB,OAAD,EAAUooB,MAAV,EAAkBG,IAAlB,CAApB;AACA,UAAMM,IAAI,GAAGH,OAAO,CAACxoB,EAAD,EAAKgoB,MAAL,EAAaI,IAAb,CAApB;AACA,UAAMQ,IAAI,GAAGJ,OAAO,CAACxoB,EAAE,GAAGF,OAAN,EAAeooB,MAAf,EAAuBG,IAAvB,CAApB;AACAX,IAAAA,MAAM,GAAG,CAACe,IAAI,GAAGE,IAAR,IAAgB,CAAzB;AACAhB,IAAAA,MAAM,GAAG,CAACe,IAAI,GAAGE,IAAR,IAAgB,CAAzB;AACAhB,IAAAA,OAAO,GAAG,EAAEa,IAAI,GAAGE,IAAT,IAAiB,CAA3B;AACAd,IAAAA,OAAO,GAAG,EAAEa,IAAI,GAAGE,IAAT,IAAiB,CAA3B;AACD;;AACD,SAAO;AAAClB,IAAAA,MAAD;AAASC,IAAAA,MAAT;AAAiBC,IAAAA,OAAjB;AAA0BC,IAAAA;AAA1B,GAAP;AACD;;AACD,MAAMgB,kBAAN,SAAiChR,iBAAjC,CAAmD;AACjDvO,EAAAA,WAAW,CAACQ,KAAD,EAAQqK,YAAR,EAAsB;AAC/B,UAAMrK,KAAN,EAAaqK,YAAb;AACA,SAAKsE,mBAAL,GAA2B,IAA3B;AACA,SAAKqQ,WAAL,GAAmBlf,SAAnB;AACA,SAAKmf,WAAL,GAAmBnf,SAAnB;AACA,SAAKge,OAAL,GAAehe,SAAf;AACA,SAAKie,OAAL,GAAeje,SAAf;AACD;;AACDiP,EAAAA,UAAU,GAAG,CAAE;;AACfwC,EAAAA,KAAK,CAACzQ,KAAD,EAAQ0Q,KAAR,EAAe;AAClB,UAAMhH,IAAI,GAAG,KAAK2E,UAAL,GAAkB3E,IAA/B;AACA,UAAMI,IAAI,GAAG,KAAKwB,WAAlB;AACA,QAAIvY,CAAJ,EAAOiW,IAAP;;AACA,SAAKjW,CAAC,GAAGiN,KAAJ,EAAWgJ,IAAI,GAAGhJ,KAAK,GAAG0Q,KAA/B,EAAsC3d,CAAC,GAAGiW,IAA1C,EAAgD,EAAEjW,CAAlD,EAAqD;AACnD+W,MAAAA,IAAI,CAAC8C,OAAL,CAAa7Z,CAAb,IAAkB,CAAC2W,IAAI,CAAC3W,CAAD,CAAvB;AACD;AACF;;AACDqrB,EAAAA,YAAY,GAAG;AACb,WAAO9pB,SAAS,CAAC,KAAKyS,OAAL,CAAa4V,QAAb,GAAwB,EAAzB,CAAhB;AACD;;AACD0B,EAAAA,iBAAiB,GAAG;AAClB,WAAO/pB,SAAS,CAAC,KAAKyS,OAAL,CAAa6V,aAAd,CAAhB;AACD;;AACD0B,EAAAA,mBAAmB,GAAG;AACpB,QAAIve,GAAG,GAAGnL,GAAV;AACA,QAAIqN,GAAG,GAAG,CAACrN,GAAX;AACA,UAAMsL,EAAE,GAAG,IAAX;;AACA,SAAK,IAAInN,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGmN,EAAE,CAAChB,KAAH,CAASwK,IAAT,CAAc0F,QAAd,CAAuBzO,MAA3C,EAAmD,EAAE5N,CAArD,EAAwD;AACtD,UAAImN,EAAE,CAAChB,KAAH,CAASqf,gBAAT,CAA0BxrB,CAA1B,CAAJ,EAAkC;AAChC,cAAMqY,UAAU,GAAGlL,EAAE,CAAChB,KAAH,CAASmQ,cAAT,CAAwBtc,CAAxB,EAA2BqY,UAA9C;;AACA,cAAMuR,QAAQ,GAAGvR,UAAU,CAACgT,YAAX,EAAjB;;AACA,cAAMxB,aAAa,GAAGxR,UAAU,CAACiT,iBAAX,EAAtB;;AACAte,QAAAA,GAAG,GAAGD,IAAI,CAACC,GAAL,CAASA,GAAT,EAAc4c,QAAd,CAAN;AACA1a,QAAAA,GAAG,GAAGnC,IAAI,CAACmC,GAAL,CAASA,GAAT,EAAc0a,QAAQ,GAAGC,aAAzB,CAAN;AACD;AACF;;AACD,WAAO;AACLD,MAAAA,QAAQ,EAAE5c,GADL;AAEL6c,MAAAA,aAAa,EAAE3a,GAAG,GAAGlC;AAFhB,KAAP;AAID;;AACDyE,EAAAA,MAAM,CAAC8E,IAAD,EAAO;AACX,UAAMpJ,EAAE,GAAG,IAAX;AACA,UAAMhB,KAAK,GAAGgB,EAAE,CAAChB,KAAjB;AACA,UAAM;AAAC0T,MAAAA;AAAD,QAAc1T,KAApB;AACA,UAAM4K,IAAI,GAAG5J,EAAE,CAACoL,WAAhB;AACA,UAAMkT,IAAI,GAAG1U,IAAI,CAACJ,IAAlB;AACA,UAAM+U,OAAO,GAAGve,EAAE,CAACwe,iBAAH,KAAyBxe,EAAE,CAACye,YAAH,CAAgBH,IAAhB,CAAzB,GAAiDte,EAAE,CAAC6G,OAAH,CAAW0X,OAA5E;AACA,UAAMG,OAAO,GAAG9e,IAAI,CAACmC,GAAL,CAAS,CAACnC,IAAI,CAACC,GAAL,CAAS6S,SAAS,CAACuH,KAAnB,EAA0BvH,SAAS,CAACsH,MAApC,IAA8CuE,OAA/C,IAA0D,CAAnE,EAAsE,CAAtE,CAAhB;AACA,UAAM5B,MAAM,GAAG/c,IAAI,CAACC,GAAL,CAASvL,YAAY,CAAC0L,EAAE,CAAC6G,OAAH,CAAW8V,MAAZ,EAAoB+B,OAApB,CAArB,EAAmD,CAAnD,CAAf;;AACA,UAAMC,WAAW,GAAG3e,EAAE,CAAC4e,cAAH,CAAkB5e,EAAE,CAAC+I,KAArB,CAApB;;AACA,UAAM;AAAC2T,MAAAA,aAAD;AAAgBD,MAAAA;AAAhB,QAA4Bzc,EAAE,CAACoe,mBAAH,EAAlC;;AACA,UAAM;AAACxB,MAAAA,MAAD;AAASC,MAAAA,MAAT;AAAiBC,MAAAA,OAAjB;AAA0BC,MAAAA;AAA1B,QAAqCP,iBAAiB,CAACC,QAAD,EAAWC,aAAX,EAA0BC,MAA1B,CAA5D;AACA,UAAMkC,QAAQ,GAAG,CAACnM,SAAS,CAACuH,KAAV,GAAkBsE,OAAnB,IAA8B3B,MAA/C;AACA,UAAMkC,SAAS,GAAG,CAACpM,SAAS,CAACsH,MAAV,GAAmBuE,OAApB,IAA+B1B,MAAjD;AACA,UAAMkC,SAAS,GAAGnf,IAAI,CAACmC,GAAL,CAASnC,IAAI,CAACC,GAAL,CAASgf,QAAT,EAAmBC,SAAnB,IAAgC,CAAzC,EAA4C,CAA5C,CAAlB;AACA,UAAMb,WAAW,GAAGzpB,WAAW,CAACwL,EAAE,CAAC6G,OAAH,CAAWuV,MAAZ,EAAoB2C,SAApB,CAA/B;AACA,UAAMf,WAAW,GAAGpe,IAAI,CAACmC,GAAL,CAASkc,WAAW,GAAGtB,MAAvB,EAA+B,CAA/B,CAApB;;AACA,UAAMqC,YAAY,GAAG,CAACf,WAAW,GAAGD,WAAf,IAA8Bhe,EAAE,CAACif,6BAAH,EAAnD;;AACAjf,IAAAA,EAAE,CAAC8c,OAAH,GAAaA,OAAO,GAAGmB,WAAvB;AACAje,IAAAA,EAAE,CAAC+c,OAAH,GAAaA,OAAO,GAAGkB,WAAvB;AACArU,IAAAA,IAAI,CAACsV,KAAL,GAAalf,EAAE,CAACmf,cAAH,EAAb;AACAnf,IAAAA,EAAE,CAACie,WAAH,GAAiBA,WAAW,GAAGe,YAAY,GAAGhf,EAAE,CAACof,oBAAH,CAAwBpf,EAAE,CAAC+I,KAA3B,CAA9C;AACA/I,IAAAA,EAAE,CAACge,WAAH,GAAiBpe,IAAI,CAACmC,GAAL,CAAS/B,EAAE,CAACie,WAAH,GAAiBe,YAAY,GAAGL,WAAzC,EAAsD,CAAtD,CAAjB;AACA3e,IAAAA,EAAE,CAACkV,cAAH,CAAkBoJ,IAAlB,EAAwB,CAAxB,EAA2BA,IAAI,CAAC7d,MAAhC,EAAwC2I,IAAxC;AACD;;AACDiW,EAAAA,cAAc,CAACxsB,CAAD,EAAIyc,KAAJ,EAAW;AACvB,UAAMtP,EAAE,GAAG,IAAX;AACA,UAAM8H,IAAI,GAAG9H,EAAE,CAAC6G,OAAhB;AACA,UAAM+C,IAAI,GAAG5J,EAAE,CAACoL,WAAhB;;AACA,UAAMsR,aAAa,GAAG1c,EAAE,CAACme,iBAAH,EAAtB;;AACA,QAAK7O,KAAK,IAAIxH,IAAI,CAACzC,SAAL,CAAeia,aAAzB,IAA2C,CAAC,KAAKtgB,KAAL,CAAW+b,iBAAX,CAA6BloB,CAA7B,CAA5C,IAA+E+W,IAAI,CAAC8C,OAAL,CAAa7Z,CAAb,MAAoB,IAAnG,IAA2G+W,IAAI,CAACJ,IAAL,CAAU3W,CAAV,EAAa8f,MAA5H,EAAoI;AAClI,aAAO,CAAP;AACD;;AACD,WAAO3S,EAAE,CAACuf,sBAAH,CAA0B3V,IAAI,CAAC8C,OAAL,CAAa7Z,CAAb,IAAkB6pB,aAAlB,GAAkChoB,GAA5D,CAAP;AACD;;AACDwgB,EAAAA,cAAc,CAACoJ,IAAD,EAAOxe,KAAP,EAAc0Q,KAAd,EAAqBpH,IAArB,EAA2B;AACvC,UAAMpJ,EAAE,GAAG,IAAX;AACA,UAAMsP,KAAK,GAAGlG,IAAI,KAAK,OAAvB;AACA,UAAMpK,KAAK,GAAGgB,EAAE,CAAChB,KAAjB;AACA,UAAM0T,SAAS,GAAG1T,KAAK,CAAC0T,SAAxB;AACA,UAAM5K,IAAI,GAAG9I,KAAK,CAAC6H,OAAnB;AACA,UAAM2Y,aAAa,GAAG1X,IAAI,CAACzC,SAA3B;AACA,UAAMoa,OAAO,GAAG,CAAC/M,SAAS,CAACnK,IAAV,GAAiBmK,SAAS,CAACrK,KAA5B,IAAqC,CAArD;AACA,UAAMqX,OAAO,GAAG,CAAChN,SAAS,CAACtK,GAAV,GAAgBsK,SAAS,CAACpK,MAA3B,IAAqC,CAArD;AACA,UAAMqX,YAAY,GAAGrQ,KAAK,IAAIkQ,aAAa,CAACG,YAA5C;AACA,UAAM3B,WAAW,GAAG2B,YAAY,GAAG,CAAH,GAAO3f,EAAE,CAACge,WAA1C;AACA,UAAMC,WAAW,GAAG0B,YAAY,GAAG,CAAH,GAAO3f,EAAE,CAACie,WAA1C;AACA,UAAMxE,SAAS,GAAGzZ,EAAE,CAAC8S,yBAAH,CAA6BhT,KAA7B,EAAoCsJ,IAApC,CAAlB;AACA,UAAM6K,aAAa,GAAGjU,EAAE,CAAC+T,gBAAH,CAAoB0F,SAApB,CAAtB;AACA,UAAMzF,cAAc,GAAGhU,EAAE,CAACgU,cAAH,CAAkB5K,IAAlB,EAAwB6K,aAAxB,CAAvB;;AACA,QAAI+I,UAAU,GAAGhd,EAAE,CAACke,YAAH,EAAjB;;AACA,QAAIrrB,CAAJ;;AACA,SAAKA,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGiN,KAAhB,EAAuB,EAAEjN,CAAzB,EAA4B;AAC1BmqB,MAAAA,UAAU,IAAIhd,EAAE,CAACqf,cAAH,CAAkBxsB,CAAlB,EAAqByc,KAArB,CAAd;AACD;;AACD,SAAKzc,CAAC,GAAGiN,KAAT,EAAgBjN,CAAC,GAAGiN,KAAK,GAAG0Q,KAA5B,EAAmC,EAAE3d,CAArC,EAAwC;AACtC,YAAM6pB,aAAa,GAAG1c,EAAE,CAACqf,cAAH,CAAkBxsB,CAAlB,EAAqByc,KAArB,CAAtB;;AACA,YAAMsQ,GAAG,GAAGtB,IAAI,CAACzrB,CAAD,CAAhB;AACA,YAAM8S,UAAU,GAAG;AACjBlQ,QAAAA,CAAC,EAAEgqB,OAAO,GAAGzf,EAAE,CAAC8c,OADC;AAEjBnnB,QAAAA,CAAC,EAAE+pB,OAAO,GAAG1f,EAAE,CAAC+c,OAFC;AAGjBC,QAAAA,UAHiB;AAIjBC,QAAAA,QAAQ,EAAED,UAAU,GAAGN,aAJN;AAKjBA,QAAAA,aALiB;AAMjBuB,QAAAA,WANiB;AAOjBD,QAAAA;AAPiB,OAAnB;;AASA,UAAIhK,cAAJ,EAAoB;AAClBrO,QAAAA,UAAU,CAACkB,OAAX,GAAqBoN,aAAa,IAAIjU,EAAE,CAAC8S,yBAAH,CAA6BjgB,CAA7B,EAAgC+sB,GAAG,CAACvb,MAAJ,GAAa,QAAb,GAAwB+E,IAAxD,CAAtC;AACD;;AACD4T,MAAAA,UAAU,IAAIN,aAAd;AACA1c,MAAAA,EAAE,CAACmU,aAAH,CAAiByL,GAAjB,EAAsB/sB,CAAtB,EAAyB8S,UAAzB,EAAqCyD,IAArC;AACD;;AACDpJ,IAAAA,EAAE,CAACoU,mBAAH,CAAuBH,aAAvB,EAAsC7K,IAAtC,EAA4CqQ,SAA5C;AACD;;AACD0F,EAAAA,cAAc,GAAG;AACf,UAAMvV,IAAI,GAAG,KAAKwB,WAAlB;AACA,UAAMyU,QAAQ,GAAGjW,IAAI,CAACJ,IAAtB;AACA,QAAI0V,KAAK,GAAG,CAAZ;AACA,QAAIrsB,CAAJ;;AACA,SAAKA,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGgtB,QAAQ,CAACpf,MAAzB,EAAiC5N,CAAC,EAAlC,EAAsC;AACpC,YAAMyU,KAAK,GAAGsC,IAAI,CAAC8C,OAAL,CAAa7Z,CAAb,CAAd;;AACA,UAAIyU,KAAK,KAAK,IAAV,IAAkB,CAACgT,KAAK,CAAChT,KAAD,CAAxB,IAAmC,KAAKtI,KAAL,CAAW+b,iBAAX,CAA6BloB,CAA7B,CAAnC,IAAsE,CAACgtB,QAAQ,CAAChtB,CAAD,CAAR,CAAY8f,MAAvF,EAA+F;AAC7FuM,QAAAA,KAAK,IAAItf,IAAI,CAAC0W,GAAL,CAAShP,KAAT,CAAT;AACD;AACF;;AACD,WAAO4X,KAAP;AACD;;AACDK,EAAAA,sBAAsB,CAACjY,KAAD,EAAQ;AAC5B,UAAM4X,KAAK,GAAG,KAAK9T,WAAL,CAAiB8T,KAA/B;;AACA,QAAIA,KAAK,GAAG,CAAR,IAAa,CAAC5E,KAAK,CAAChT,KAAD,CAAvB,EAAgC;AAC9B,aAAO5S,GAAG,IAAIkL,IAAI,CAAC0W,GAAL,CAAShP,KAAT,IAAkB4X,KAAtB,CAAV;AACD;;AACD,WAAO,CAAP;AACD;;AACD/M,EAAAA,gBAAgB,CAACpJ,KAAD,EAAQ;AACtB,UAAM/I,EAAE,GAAG,IAAX;AACA,UAAM4J,IAAI,GAAG5J,EAAE,CAACoL,WAAhB;AACA,UAAMpM,KAAK,GAAGgB,EAAE,CAAChB,KAAjB;AACA,UAAMgS,MAAM,GAAGhS,KAAK,CAACwK,IAAN,CAAWwH,MAAX,IAAqB,EAApC;AACA,UAAM1J,KAAK,GAAG1S,YAAY,CAACgV,IAAI,CAAC8C,OAAL,CAAa3D,KAAb,CAAD,EAAsB/J,KAAK,CAAC6H,OAAN,CAAciZ,MAApC,CAA1B;AACA,WAAO;AACL1N,MAAAA,KAAK,EAAEpB,MAAM,CAACjI,KAAD,CAAN,IAAiB,EADnB;AAELzB,MAAAA;AAFK,KAAP;AAID;;AACDkX,EAAAA,iBAAiB,CAACF,IAAD,EAAO;AACtB,UAAMte,EAAE,GAAG,IAAX;AACA,QAAI+B,GAAG,GAAG,CAAV;AACA,UAAM/C,KAAK,GAAGgB,EAAE,CAAChB,KAAjB;AACA,QAAInM,CAAJ,EAAOiW,IAAP,EAAac,IAAb,EAAmBsB,UAAnB,EAA+BrE,OAA/B;;AACA,QAAI,CAACyX,IAAL,EAAW;AACT,WAAKzrB,CAAC,GAAG,CAAJ,EAAOiW,IAAI,GAAG9J,KAAK,CAACwK,IAAN,CAAW0F,QAAX,CAAoBzO,MAAvC,EAA+C5N,CAAC,GAAGiW,IAAnD,EAAyD,EAAEjW,CAA3D,EAA8D;AAC5D,YAAImM,KAAK,CAACqf,gBAAN,CAAuBxrB,CAAvB,CAAJ,EAA+B;AAC7B+W,UAAAA,IAAI,GAAG5K,KAAK,CAACmQ,cAAN,CAAqBtc,CAArB,CAAP;AACAyrB,UAAAA,IAAI,GAAG1U,IAAI,CAACJ,IAAZ;AACA0B,UAAAA,UAAU,GAAGtB,IAAI,CAACsB,UAAlB;;AACA,cAAIA,UAAU,KAAKlL,EAAnB,EAAuB;AACrBkL,YAAAA,UAAU,CAAC7E,SAAX;AACD;;AACD;AACD;AACF;AACF;;AACD,QAAI,CAACiY,IAAL,EAAW;AACT,aAAO,CAAP;AACD;;AACD,SAAKzrB,CAAC,GAAG,CAAJ,EAAOiW,IAAI,GAAGwV,IAAI,CAAC7d,MAAxB,EAAgC5N,CAAC,GAAGiW,IAApC,EAA0C,EAAEjW,CAA5C,EAA+C;AAC7CgU,MAAAA,OAAO,GAAGqE,UAAU,CAAC4H,yBAAX,CAAqCjgB,CAArC,CAAV;;AACA,UAAIgU,OAAO,CAACkZ,WAAR,KAAwB,OAA5B,EAAqC;AACnChe,QAAAA,GAAG,GAAGnC,IAAI,CAACmC,GAAL,CAASA,GAAT,EAAc8E,OAAO,CAACmZ,WAAR,IAAuB,CAArC,EAAwCnZ,OAAO,CAACoZ,gBAAR,IAA4B,CAApE,CAAN;AACD;AACF;;AACD,WAAOle,GAAP;AACD;;AACD0c,EAAAA,YAAY,CAACH,IAAD,EAAO;AACjB,QAAIvc,GAAG,GAAG,CAAV;;AACA,SAAK,IAAIlP,CAAC,GAAG,CAAR,EAAWiW,IAAI,GAAGwV,IAAI,CAAC7d,MAA5B,EAAoC5N,CAAC,GAAGiW,IAAxC,EAA8C,EAAEjW,CAAhD,EAAmD;AACjD,YAAMgU,OAAO,GAAG,KAAKiM,yBAAL,CAA+BjgB,CAA/B,CAAhB;AACAkP,MAAAA,GAAG,GAAGnC,IAAI,CAACmC,GAAL,CAASA,GAAT,EAAc8E,OAAO,CAAC4U,MAAR,IAAkB,CAAhC,EAAmC5U,OAAO,CAACqZ,WAAR,IAAuB,CAA1D,CAAN;AACD;;AACD,WAAOne,GAAP;AACD;;AACDqd,EAAAA,oBAAoB,CAAC/V,YAAD,EAAe;AACjC,QAAI8W,gBAAgB,GAAG,CAAvB;;AACA,SAAK,IAAIttB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGwW,YAApB,EAAkC,EAAExW,CAApC,EAAuC;AACrC,UAAI,KAAKmM,KAAL,CAAWqf,gBAAX,CAA4BxrB,CAA5B,CAAJ,EAAoC;AAClCstB,QAAAA,gBAAgB,IAAI,KAAKvB,cAAL,CAAoB/rB,CAApB,CAApB;AACD;AACF;;AACD,WAAOstB,gBAAP;AACD;;AACDvB,EAAAA,cAAc,CAACvV,YAAD,EAAe;AAC3B,WAAOzJ,IAAI,CAACmC,GAAL,CAAS7O,cAAc,CAAC,KAAK8L,KAAL,CAAWwK,IAAX,CAAgB0F,QAAhB,CAAyB7F,YAAzB,EAAuC+W,MAAxC,EAAgD,CAAhD,CAAvB,EAA2E,CAA3E,CAAP;AACD;;AACDnB,EAAAA,6BAA6B,GAAG;AAC9B,WAAO,KAAKG,oBAAL,CAA0B,KAAKpgB,KAAL,CAAWwK,IAAX,CAAgB0F,QAAhB,CAAyBzO,MAAnD,KAA8D,CAArE;AACD;;AAvMgD;;AAyMnDsd,kBAAkB,CAAC9T,EAAnB,GAAwB,UAAxB;AACA8T,kBAAkB,CAACnrB,QAAnB,GAA8B;AAC5B8c,EAAAA,kBAAkB,EAAE,KADQ;AAE5BuD,EAAAA,eAAe,EAAE,KAFW;AAG5B5N,EAAAA,SAAS,EAAE;AACTia,IAAAA,aAAa,EAAE,IADN;AAETK,IAAAA,YAAY,EAAE;AAFL,GAHiB;AAO5B7Z,EAAAA,UAAU,EAAE;AACVd,IAAAA,OAAO,EAAE;AACP7F,MAAAA,IAAI,EAAE,QADC;AAEPwG,MAAAA,UAAU,EAAE,CAAC,eAAD,EAAkB,UAAlB,EAA8B,aAA9B,EAA6C,aAA7C,EAA4D,YAA5D,EAA0E,GAA1E,EAA+E,GAA/E,EAAoF,QAApF,EAA8F,aAA9F,EAA6G,SAA7G;AAFL;AADC,GAPgB;AAa5BgX,EAAAA,MAAM,EAAE,KAboB;AAc5BF,EAAAA,QAAQ,EAAE,CAdkB;AAe5BC,EAAAA,aAAa,EAAE,GAfa;AAgB5BN,EAAAA,MAAM,EAAE,MAhBoB;AAiB5BmC,EAAAA,OAAO,EAAE,CAjBmB;AAkB5B5P,EAAAA,SAAS,EAAE;AAlBiB,CAA9B;AAoBAoP,kBAAkB,CAAC3kB,WAAnB,GAAiC;AAC/BqM,EAAAA,WAAW,EAAGC,IAAD,IAAUA,IAAI,KAAK,SADD;AAE/BF,EAAAA,UAAU,EAAGE,IAAD,IAAUA,IAAI,KAAK;AAFA,CAAjC;AAIAqY,kBAAkB,CAACjlB,SAAnB,GAA+B;AAC7BunB,EAAAA,WAAW,EAAE,CADgB;AAE7BhE,EAAAA,OAAO,EAAE;AACPiE,IAAAA,MAAM,EAAE;AACNtP,MAAAA,MAAM,EAAE;AACNuP,QAAAA,cAAc,CAACvhB,KAAD,EAAQ;AACpB,gBAAMwK,IAAI,GAAGxK,KAAK,CAACwK,IAAnB;;AACA,cAAIA,IAAI,CAACwH,MAAL,CAAYvQ,MAAZ,IAAsB+I,IAAI,CAAC0F,QAAL,CAAczO,MAAxC,EAAgD;AAC9C,kBAAM;AAACuQ,cAAAA,MAAM,EAAE;AAACwP,gBAAAA;AAAD;AAAT,gBAAyBxhB,KAAK,CAACshB,MAAN,CAAazZ,OAA5C;AACA,mBAAO2C,IAAI,CAACwH,MAAL,CAAYyP,GAAZ,CAAgB,CAACrO,KAAD,EAAQvf,CAAR,KAAc;AACnC,oBAAM+W,IAAI,GAAG5K,KAAK,CAACmQ,cAAN,CAAqB,CAArB,CAAb;AACA,oBAAMuR,KAAK,GAAG9W,IAAI,CAACsB,UAAL,CAAgB0H,QAAhB,CAAyB/f,CAAzB,CAAd;AACA,qBAAO;AACL8tB,gBAAAA,IAAI,EAAEvO,KADD;AAELwO,gBAAAA,SAAS,EAAEF,KAAK,CAACG,eAFZ;AAGLC,gBAAAA,WAAW,EAAEJ,KAAK,CAACK,WAHd;AAILC,gBAAAA,SAAS,EAAEN,KAAK,CAACV,WAJZ;AAKLQ,gBAAAA,UAAU,EAAEA,UALP;AAML7N,gBAAAA,MAAM,EAAE,CAAC3T,KAAK,CAAC+b,iBAAN,CAAwBloB,CAAxB,CANJ;AAOLkW,gBAAAA,KAAK,EAAElW;AAPF,eAAP;AASD,aAZM,CAAP;AAaD;;AACD,iBAAO,EAAP;AACD;;AApBK,OADF;;AAuBNouB,MAAAA,OAAO,CAAC1uB,CAAD,EAAI2uB,UAAJ,EAAgBZ,MAAhB,EAAwB;AAC7BA,QAAAA,MAAM,CAACthB,KAAP,CAAamiB,oBAAb,CAAkCD,UAAU,CAACnY,KAA7C;AACAuX,QAAAA,MAAM,CAACthB,KAAP,CAAasF,MAAb;AACD;;AA1BK,KADD;AA6BPgY,IAAAA,OAAO,EAAE;AACPld,MAAAA,SAAS,EAAE;AACTmd,QAAAA,KAAK,GAAG;AACN,iBAAO,EAAP;AACD,SAHQ;;AAITnK,QAAAA,KAAK,CAACgP,WAAD,EAAc;AACjB,cAAIC,SAAS,GAAGD,WAAW,CAAChP,KAA5B;AACA,gBAAM9K,KAAK,GAAG,OAAO8Z,WAAW,CAACE,cAAjC;;AACA,cAAItuB,OAAO,CAACquB,SAAD,CAAX,EAAwB;AACtBA,YAAAA,SAAS,GAAGA,SAAS,CAACE,KAAV,EAAZ;AACAF,YAAAA,SAAS,CAAC,CAAD,CAAT,IAAgB/Z,KAAhB;AACD,WAHD,MAGO;AACL+Z,YAAAA,SAAS,IAAI/Z,KAAb;AACD;;AACD,iBAAO+Z,SAAP;AACD;;AAdQ;AADJ;AA7BF;AAFoB,CAA/B;;AAoDA,MAAMG,cAAN,SAA6BzU,iBAA7B,CAA+C;AAC7Ce,EAAAA,UAAU,GAAG;AACX,SAAKH,mBAAL,GAA2B,IAA3B;AACA,UAAMG,UAAN;AACD;;AACDxJ,EAAAA,MAAM,CAAC8E,IAAD,EAAO;AACX,UAAMpJ,EAAE,GAAG,IAAX;AACA,UAAM4J,IAAI,GAAG5J,EAAE,CAACoL,WAAhB;AACA,UAAM;AAACgB,MAAAA,OAAO,EAAEqV,IAAV;AAAgBjY,MAAAA,IAAI,EAAEsS,MAAM,GAAG,EAA/B;AAAmC4F,MAAAA;AAAnC,QAA+C9X,IAArD;AACA,UAAM+X,kBAAkB,GAAG3hB,EAAE,CAAChB,KAAH,CAASkV,mBAApC;AACA,QAAI;AAACpU,MAAAA,KAAD;AAAQ0Q,MAAAA;AAAR,QAAiBoR,+BAA+B,CAAChY,IAAD,EAAOkS,MAAP,EAAe6F,kBAAf,CAApD;AACA3hB,IAAAA,EAAE,CAACyN,UAAH,GAAgB3N,KAAhB;AACAE,IAAAA,EAAE,CAAC0N,UAAH,GAAgB8C,KAAhB;;AACA,QAAIqR,kBAAkB,CAACjY,IAAD,CAAtB,EAA8B;AAC5B9J,MAAAA,KAAK,GAAG,CAAR;AACA0Q,MAAAA,KAAK,GAAGsL,MAAM,CAACrb,MAAf;AACD;;AACDghB,IAAAA,IAAI,CAACK,aAAL,GAAqB9hB,EAAE,CAAC+I,KAAxB;AACA0Y,IAAAA,IAAI,CAACM,UAAL,GAAkB,CAAC,CAACL,QAAQ,CAACK,UAA7B;AACAN,IAAAA,IAAI,CAAC3F,MAAL,GAAcA,MAAd;AACA,UAAMjV,OAAO,GAAG7G,EAAE,CAAC6S,4BAAH,CAAgCzJ,IAAhC,CAAhB;;AACA,QAAI,CAACpJ,EAAE,CAAC6G,OAAH,CAAWmb,QAAhB,EAA0B;AACxBnb,MAAAA,OAAO,CAACmZ,WAAR,GAAsB,CAAtB;AACD;;AACDnZ,IAAAA,OAAO,CAACob,OAAR,GAAkBjiB,EAAE,CAAC6G,OAAH,CAAWob,OAA7B;AACAjiB,IAAAA,EAAE,CAACmU,aAAH,CAAiBsN,IAAjB,EAAuB3iB,SAAvB,EAAkC;AAChCojB,MAAAA,QAAQ,EAAE,CAACP,kBADqB;AAEhC9a,MAAAA;AAFgC,KAAlC,EAGGuC,IAHH;AAIApJ,IAAAA,EAAE,CAACkV,cAAH,CAAkB4G,MAAlB,EAA0Bhc,KAA1B,EAAiC0Q,KAAjC,EAAwCpH,IAAxC;AACD;;AACD8L,EAAAA,cAAc,CAAC4G,MAAD,EAAShc,KAAT,EAAgB0Q,KAAhB,EAAuBpH,IAAvB,EAA6B;AACzC,UAAMpJ,EAAE,GAAG,IAAX;AACA,UAAMsP,KAAK,GAAGlG,IAAI,KAAK,OAAvB;AACA,UAAM;AAACkC,MAAAA,MAAD;AAASR,MAAAA,MAAT;AAAiBkD,MAAAA;AAAjB,QAA6BhO,EAAE,CAACoL,WAAtC;AACA,UAAMqO,SAAS,GAAGzZ,EAAE,CAAC8S,yBAAH,CAA6BhT,KAA7B,EAAoCsJ,IAApC,CAAlB;AACA,UAAM6K,aAAa,GAAGjU,EAAE,CAAC+T,gBAAH,CAAoB0F,SAApB,CAAtB;AACA,UAAMzF,cAAc,GAAGhU,EAAE,CAACgU,cAAH,CAAkB5K,IAAlB,EAAwB6K,aAAxB,CAAvB;AACA,UAAM1I,KAAK,GAAGD,MAAM,CAACE,IAArB;AACA,UAAMC,KAAK,GAAGX,MAAM,CAACU,IAArB;AACA,UAAM2W,QAAQ,GAAGniB,EAAE,CAAC6G,OAAH,CAAWsb,QAA5B;AACA,UAAMC,YAAY,GAAGhtB,QAAQ,CAAC+sB,QAAD,CAAR,GAAqBA,QAArB,GAAgC9X,MAAM,CAACE,iBAA5D;AACA,UAAM8X,YAAY,GAAGriB,EAAE,CAAChB,KAAH,CAASkV,mBAAT,IAAgC5E,KAAhC,IAAyClG,IAAI,KAAK,MAAvE;AACA,QAAIkZ,UAAU,GAAGxiB,KAAK,GAAG,CAAR,IAAaE,EAAE,CAACqR,SAAH,CAAavR,KAAK,GAAG,CAArB,CAA9B;;AACA,SAAK,IAAIjN,CAAC,GAAGiN,KAAb,EAAoBjN,CAAC,GAAGiN,KAAK,GAAG0Q,KAAhC,EAAuC,EAAE3d,CAAzC,EAA4C;AAC1C,YAAMkpB,KAAK,GAAGD,MAAM,CAACjpB,CAAD,CAApB;AACA,YAAMsY,MAAM,GAAGnL,EAAE,CAACqR,SAAH,CAAaxe,CAAb,CAAf;AACA,YAAM8S,UAAU,GAAG0c,YAAY,GAAGtG,KAAH,GAAW,EAA1C;AACA,YAAMwG,QAAQ,GAAGvuB,aAAa,CAACmX,MAAM,CAACM,KAAD,CAAP,CAA9B;AACA,YAAMuQ,MAAM,GAAGrW,UAAU,CAAC4F,KAAD,CAAV,GAAoBD,MAAM,CAACiL,gBAAP,CAAwBpL,MAAM,CAACI,KAAD,CAA9B,EAAuC1Y,CAAvC,CAAnC;AACA,YAAMqpB,MAAM,GAAGvW,UAAU,CAAC8F,KAAD,CAAV,GAAoB6D,KAAK,IAAIiT,QAAT,GAAoBzX,MAAM,CAACyO,YAAP,EAApB,GAA4CzO,MAAM,CAACyL,gBAAP,CAAwBvI,QAAQ,GAAGhO,EAAE,CAACgJ,UAAH,CAAc8B,MAAd,EAAsBK,MAAtB,EAA8B6C,QAA9B,CAAH,GAA6C7C,MAAM,CAACM,KAAD,CAAnF,EAA4F5Y,CAA5F,CAA/E;AACA8S,MAAAA,UAAU,CAACwW,IAAX,GAAkB7B,KAAK,CAAC0B,MAAD,CAAL,IAAiB1B,KAAK,CAAC4B,MAAD,CAAtB,IAAkCqG,QAApD;AACA5c,MAAAA,UAAU,CAAC1D,IAAX,GAAkBpP,CAAC,GAAG,CAAJ,IAAUsY,MAAM,CAACI,KAAD,CAAN,GAAgB+W,UAAU,CAAC/W,KAAD,CAA3B,GAAsC6W,YAAjE;AACAzc,MAAAA,UAAU,CAACwF,MAAX,GAAoBA,MAApB;;AACA,UAAI6I,cAAJ,EAAoB;AAClBrO,QAAAA,UAAU,CAACkB,OAAX,GAAqBoN,aAAa,IAAIjU,EAAE,CAAC8S,yBAAH,CAA6BjgB,CAA7B,EAAgCkpB,KAAK,CAAC1X,MAAN,GAAe,QAAf,GAA0B+E,IAA1D,CAAtC;AACD;;AACD,UAAI,CAACiZ,YAAL,EAAmB;AACjBriB,QAAAA,EAAE,CAACmU,aAAH,CAAiB4H,KAAjB,EAAwBlpB,CAAxB,EAA2B8S,UAA3B,EAAuCyD,IAAvC;AACD;;AACDkZ,MAAAA,UAAU,GAAGnX,MAAb;AACD;;AACDnL,IAAAA,EAAE,CAACoU,mBAAH,CAAuBH,aAAvB,EAAsC7K,IAAtC,EAA4CqQ,SAA5C;AACD;;AACDvH,EAAAA,cAAc,GAAG;AACf,UAAMlS,EAAE,GAAG,IAAX;AACA,UAAM4J,IAAI,GAAG5J,EAAE,CAACoL,WAAhB;AACA,UAAMgB,OAAO,GAAGxC,IAAI,CAACwC,OAArB;AACA,UAAMoW,MAAM,GAAGpW,OAAO,CAACvF,OAAR,IAAmBuF,OAAO,CAACvF,OAAR,CAAgBmZ,WAAnC,IAAkD,CAAjE;AACA,UAAMxW,IAAI,GAAGI,IAAI,CAACJ,IAAL,IAAa,EAA1B;;AACA,QAAI,CAACA,IAAI,CAAC/I,MAAV,EAAkB;AAChB,aAAO+hB,MAAP;AACD;;AACD,UAAMC,UAAU,GAAGjZ,IAAI,CAAC,CAAD,CAAJ,CAAQjC,IAAR,CAAavH,EAAE,CAAC8S,yBAAH,CAA6B,CAA7B,CAAb,CAAnB;AACA,UAAM4P,SAAS,GAAGlZ,IAAI,CAACA,IAAI,CAAC/I,MAAL,GAAc,CAAf,CAAJ,CAAsB8G,IAAtB,CAA2BvH,EAAE,CAAC8S,yBAAH,CAA6BtJ,IAAI,CAAC/I,MAAL,GAAc,CAA3C,CAA3B,CAAlB;AACA,WAAOb,IAAI,CAACmC,GAAL,CAASygB,MAAT,EAAiBC,UAAjB,EAA6BC,SAA7B,IAA0C,CAAjD;AACD;;AACDhiB,EAAAA,IAAI,GAAG;AACL,UAAMkJ,IAAI,GAAG,KAAKwB,WAAlB;AACAxB,IAAAA,IAAI,CAACwC,OAAL,CAAauW,mBAAb,CAAiC,KAAK3jB,KAAL,CAAW0T,SAA5C,EAAuD9I,IAAI,CAAC0B,MAAL,CAAYE,IAAnE;AACA,UAAM9K,IAAN;AACD;;AAjF4C;;AAmF/C8gB,cAAc,CAACvX,EAAf,GAAoB,MAApB;AACAuX,cAAc,CAAC5uB,QAAf,GAA0B;AACxB8c,EAAAA,kBAAkB,EAAE,MADI;AAExBuD,EAAAA,eAAe,EAAE,OAFO;AAGxB+O,EAAAA,QAAQ,EAAE,IAHc;AAIxBG,EAAAA,QAAQ,EAAE;AAJc,CAA1B;AAMAX,cAAc,CAAC1oB,SAAf,GAA2B;AACzBgT,EAAAA,MAAM,EAAE;AACN0P,IAAAA,OAAO,EAAE;AACPrc,MAAAA,IAAI,EAAE;AADC,KADH;AAINwc,IAAAA,OAAO,EAAE;AACPxc,MAAAA,IAAI,EAAE;AADC;AAJH;AADiB,CAA3B;;AAUA,SAASyiB,+BAAT,CAAyChY,IAAzC,EAA+CkS,MAA/C,EAAuD6F,kBAAvD,EAA2E;AACzE,QAAMiB,UAAU,GAAG9G,MAAM,CAACrb,MAA1B;AACA,MAAIX,KAAK,GAAG,CAAZ;AACA,MAAI0Q,KAAK,GAAGoS,UAAZ;;AACA,MAAIhZ,IAAI,CAAC8G,OAAT,EAAkB;AAChB,UAAM;AAACpF,MAAAA,MAAD;AAASoB,MAAAA;AAAT,QAAoB9C,IAA1B;AACA,UAAM4B,IAAI,GAAGF,MAAM,CAACE,IAApB;AACA,UAAM;AAAC3L,MAAAA,GAAD;AAAMkC,MAAAA,GAAN;AAAWoI,MAAAA,UAAX;AAAuBC,MAAAA;AAAvB,QAAqCkB,MAAM,CAACpB,aAAP,EAA3C;;AACA,QAAIC,UAAJ,EAAgB;AACdrK,MAAAA,KAAK,GAAGxK,WAAW,CAACsK,IAAI,CAACC,GAAL,CAClBrK,YAAY,CAACkX,OAAD,EAAUpB,MAAM,CAACE,IAAjB,EAAuB3L,GAAvB,CAAZ,CAAwCgjB,EADtB,EAElBlB,kBAAkB,GAAGiB,UAAH,GAAgBptB,YAAY,CAACsmB,MAAD,EAAStQ,IAAT,EAAeF,MAAM,CAACiL,gBAAP,CAAwB1W,GAAxB,CAAf,CAAZ,CAAyDgjB,EAFzE,CAAD,EAGnB,CAHmB,EAGhBD,UAAU,GAAG,CAHG,CAAnB;AAID;;AACD,QAAIxY,UAAJ,EAAgB;AACdoG,MAAAA,KAAK,GAAGlb,WAAW,CAACsK,IAAI,CAACmC,GAAL,CAClBvM,YAAY,CAACkX,OAAD,EAAUpB,MAAM,CAACE,IAAjB,EAAuBzJ,GAAvB,CAAZ,CAAwC+gB,EAAxC,GAA6C,CAD3B,EAElBnB,kBAAkB,GAAG,CAAH,GAAOnsB,YAAY,CAACsmB,MAAD,EAAStQ,IAAT,EAAeF,MAAM,CAACiL,gBAAP,CAAwBxU,GAAxB,CAAf,CAAZ,CAAyD+gB,EAAzD,GAA8D,CAFrE,CAAD,EAGnBhjB,KAHmB,EAGZ8iB,UAHY,CAAX,GAGa9iB,KAHrB;AAID,KALD,MAKO;AACL0Q,MAAAA,KAAK,GAAGoS,UAAU,GAAG9iB,KAArB;AACD;AACF;;AACD,SAAO;AAACA,IAAAA,KAAD;AAAQ0Q,IAAAA;AAAR,GAAP;AACD;;AACD,SAASqR,kBAAT,CAA4BjY,IAA5B,EAAkC;AAChC,QAAM;AAAC1B,IAAAA,MAAD;AAASC,IAAAA,MAAT;AAAiB4a,IAAAA;AAAjB,MAAiCnZ,IAAvC;AACA,QAAMoZ,SAAS,GAAG;AAChBC,IAAAA,IAAI,EAAE/a,MAAM,CAACrI,GADG;AAEhBqjB,IAAAA,IAAI,EAAEhb,MAAM,CAACnG,GAFG;AAGhBohB,IAAAA,IAAI,EAAEhb,MAAM,CAACtI,GAHG;AAIhBujB,IAAAA,IAAI,EAAEjb,MAAM,CAACpG;AAJG,GAAlB;;AAMA,MAAI,CAACghB,YAAL,EAAmB;AACjBnZ,IAAAA,IAAI,CAACmZ,YAAL,GAAoBC,SAApB;AACA,WAAO,IAAP;AACD;;AACD,QAAMK,OAAO,GAAGN,YAAY,CAACE,IAAb,KAAsB/a,MAAM,CAACrI,GAA7B,IACbkjB,YAAY,CAACG,IAAb,KAAsBhb,MAAM,CAACnG,GADhB,IAEbghB,YAAY,CAACI,IAAb,KAAsBhb,MAAM,CAACtI,GAFhB,IAGbkjB,YAAY,CAACK,IAAb,KAAsBjb,MAAM,CAACpG,GAHhC;AAIAoD,EAAAA,MAAM,CAACqC,MAAP,CAAcub,YAAd,EAA4BC,SAA5B;AACA,SAAOK,OAAP;AACD;;AAED,MAAMC,mBAAN,SAAkCvW,iBAAlC,CAAoD;AAClDvO,EAAAA,WAAW,CAACQ,KAAD,EAAQqK,YAAR,EAAsB;AAC/B,UAAMrK,KAAN,EAAaqK,YAAb;AACA,SAAK2U,WAAL,GAAmBlf,SAAnB;AACA,SAAKmf,WAAL,GAAmBnf,SAAnB;AACD;;AACDqT,EAAAA,gBAAgB,CAACpJ,KAAD,EAAQ;AACtB,UAAM/I,EAAE,GAAG,IAAX;AACA,UAAM4J,IAAI,GAAG5J,EAAE,CAACoL,WAAhB;AACA,UAAMpM,KAAK,GAAGgB,EAAE,CAAChB,KAAjB;AACA,UAAMgS,MAAM,GAAGhS,KAAK,CAACwK,IAAN,CAAWwH,MAAX,IAAqB,EAApC;AACA,UAAM1J,KAAK,GAAG1S,YAAY,CAACgV,IAAI,CAAC8C,OAAL,CAAa3D,KAAb,EAAoB5W,CAArB,EAAwB6M,KAAK,CAAC6H,OAAN,CAAciZ,MAAtC,CAA1B;AACA,WAAO;AACL1N,MAAAA,KAAK,EAAEpB,MAAM,CAACjI,KAAD,CAAN,IAAiB,EADnB;AAELzB,MAAAA;AAFK,KAAP;AAID;;AACDhD,EAAAA,MAAM,CAAC8E,IAAD,EAAO;AACX,UAAMkV,IAAI,GAAG,KAAKlT,WAAL,CAAiB5B,IAA9B;;AACA,SAAK+Z,aAAL;;AACA,SAAKrO,cAAL,CAAoBoJ,IAApB,EAA0B,CAA1B,EAA6BA,IAAI,CAAC7d,MAAlC,EAA0C2I,IAA1C;AACD;;AACDma,EAAAA,aAAa,GAAG;AACd,UAAMvjB,EAAE,GAAG,IAAX;AACA,UAAMhB,KAAK,GAAGgB,EAAE,CAAChB,KAAjB;AACA,UAAM0T,SAAS,GAAG1T,KAAK,CAAC0T,SAAxB;AACA,UAAM5K,IAAI,GAAG9I,KAAK,CAAC6H,OAAnB;AACA,UAAM2c,OAAO,GAAG5jB,IAAI,CAACC,GAAL,CAAS6S,SAAS,CAACrK,KAAV,GAAkBqK,SAAS,CAACnK,IAArC,EAA2CmK,SAAS,CAACpK,MAAV,GAAmBoK,SAAS,CAACtK,GAAxE,CAAhB;AACA,UAAM6V,WAAW,GAAGre,IAAI,CAACmC,GAAL,CAASyhB,OAAO,GAAG,CAAnB,EAAsB,CAAtB,CAApB;AACA,UAAMxF,WAAW,GAAGpe,IAAI,CAACmC,GAAL,CAAS+F,IAAI,CAAC2b,gBAAL,GAAyBxF,WAAW,GAAG,GAAf,GAAuBnW,IAAI,CAAC2b,gBAApD,GAAwE,CAAjF,EAAoF,CAApF,CAApB;AACA,UAAMzE,YAAY,GAAG,CAACf,WAAW,GAAGD,WAAf,IAA8Bhf,KAAK,CAAC0kB,sBAAN,EAAnD;AACA1jB,IAAAA,EAAE,CAACie,WAAH,GAAiBA,WAAW,GAAIe,YAAY,GAAGhf,EAAE,CAAC+I,KAAlD;AACA/I,IAAAA,EAAE,CAACge,WAAH,GAAiBhe,EAAE,CAACie,WAAH,GAAiBe,YAAlC;AACD;;AACD9J,EAAAA,cAAc,CAACoJ,IAAD,EAAOxe,KAAP,EAAc0Q,KAAd,EAAqBpH,IAArB,EAA2B;AACvC,UAAMpJ,EAAE,GAAG,IAAX;AACA,UAAMsP,KAAK,GAAGlG,IAAI,KAAK,OAAvB;AACA,UAAMpK,KAAK,GAAGgB,EAAE,CAAChB,KAAjB;AACA,UAAMoN,OAAO,GAAGpM,EAAE,CAACmO,UAAH,EAAhB;AACA,UAAMrG,IAAI,GAAG9I,KAAK,CAAC6H,OAAnB;AACA,UAAM2Y,aAAa,GAAG1X,IAAI,CAACzC,SAA3B;AACA,UAAMuC,KAAK,GAAG5H,EAAE,CAACoL,WAAH,CAAe6D,MAA7B;AACA,UAAMwQ,OAAO,GAAG7X,KAAK,CAAC+b,OAAtB;AACA,UAAMjE,OAAO,GAAG9X,KAAK,CAACgc,OAAtB;AACA,UAAMC,iBAAiB,GAAGjc,KAAK,CAACkc,aAAN,CAAoB,CAApB,IAAyB,MAAM5uB,EAAzD;AACA,QAAIuoB,KAAK,GAAGoG,iBAAZ;AACA,QAAIhxB,CAAJ;AACA,UAAMkxB,YAAY,GAAG,MAAM/jB,EAAE,CAACgkB,oBAAH,EAA3B;;AACA,SAAKnxB,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGiN,KAAhB,EAAuB,EAAEjN,CAAzB,EAA4B;AAC1B4qB,MAAAA,KAAK,IAAIzd,EAAE,CAACikB,aAAH,CAAiBpxB,CAAjB,EAAoBuW,IAApB,EAA0B2a,YAA1B,CAAT;AACD;;AACD,SAAKlxB,CAAC,GAAGiN,KAAT,EAAgBjN,CAAC,GAAGiN,KAAK,GAAG0Q,KAA5B,EAAmC3d,CAAC,EAApC,EAAwC;AACtC,YAAM+sB,GAAG,GAAGtB,IAAI,CAACzrB,CAAD,CAAhB;AACA,UAAImqB,UAAU,GAAGS,KAAjB;;AACA,UAAIR,QAAQ,GAAGQ,KAAK,GAAGzd,EAAE,CAACikB,aAAH,CAAiBpxB,CAAjB,EAAoBuW,IAApB,EAA0B2a,YAA1B,CAAvB;;AACA,UAAI9F,WAAW,GAAGjf,KAAK,CAAC+b,iBAAN,CAAwBloB,CAAxB,IAA6B+U,KAAK,CAACsc,6BAAN,CAAoC9X,OAAO,CAAC5C,IAAR,CAAa3W,CAAb,CAApC,CAA7B,GAAoF,CAAtG;AACA4qB,MAAAA,KAAK,GAAGR,QAAR;;AACA,UAAI3N,KAAJ,EAAW;AACT,YAAIkQ,aAAa,CAACG,YAAlB,EAAgC;AAC9B1B,UAAAA,WAAW,GAAG,CAAd;AACD;;AACD,YAAIuB,aAAa,CAACF,aAAlB,EAAiC;AAC/BtC,UAAAA,UAAU,GAAGC,QAAQ,GAAG4G,iBAAxB;AACD;AACF;;AACD,YAAMle,UAAU,GAAG;AACjBlQ,QAAAA,CAAC,EAAEgqB,OADc;AAEjB9pB,QAAAA,CAAC,EAAE+pB,OAFc;AAGjB1B,QAAAA,WAAW,EAAE,CAHI;AAIjBC,QAAAA,WAJiB;AAKjBjB,QAAAA,UALiB;AAMjBC,QAAAA,QANiB;AAOjBpW,QAAAA,OAAO,EAAE7G,EAAE,CAAC8S,yBAAH,CAA6BjgB,CAA7B,EAAgC+sB,GAAG,CAACvb,MAAJ,GAAa,QAAb,GAAwB+E,IAAxD;AAPQ,OAAnB;AASApJ,MAAAA,EAAE,CAACmU,aAAH,CAAiByL,GAAjB,EAAsB/sB,CAAtB,EAAyB8S,UAAzB,EAAqCyD,IAArC;AACD;AACF;;AACD4a,EAAAA,oBAAoB,GAAG;AACrB,UAAM5X,OAAO,GAAG,KAAK+B,UAAL,EAAhB;AACA,UAAMvE,IAAI,GAAG,KAAKwB,WAAlB;AACA,QAAIoF,KAAK,GAAG,CAAZ;AACA5G,IAAAA,IAAI,CAACJ,IAAL,CAAUhK,OAAV,CAAkB,CAAC8M,OAAD,EAAUvD,KAAV,KAAoB;AACpC,UAAI,CAACuR,KAAK,CAAClO,OAAO,CAAC5C,IAAR,CAAaT,KAAb,CAAD,CAAN,IAA+B,KAAK/J,KAAL,CAAW+b,iBAAX,CAA6BhS,KAA7B,CAAnC,EAAwE;AACtEyH,QAAAA,KAAK;AACN;AACF,KAJD;AAKA,WAAOA,KAAP;AACD;;AACDyT,EAAAA,aAAa,CAAClb,KAAD,EAAQK,IAAR,EAAc2a,YAAd,EAA4B;AACvC,WAAO,KAAK/kB,KAAL,CAAW+b,iBAAX,CAA6BhS,KAA7B,IACH3U,SAAS,CAAC,KAAK0e,yBAAL,CAA+B/J,KAA/B,EAAsCK,IAAtC,EAA4CqU,KAA5C,IAAqDsG,YAAtD,CADN,GAEH,CAFJ;AAGD;;AA5FiD;;AA8FpDT,mBAAmB,CAACrZ,EAApB,GAAyB,WAAzB;AACAqZ,mBAAmB,CAAC1wB,QAApB,GAA+B;AAC7BqgB,EAAAA,eAAe,EAAE,KADY;AAE7B5N,EAAAA,SAAS,EAAE;AACTia,IAAAA,aAAa,EAAE,IADN;AAETK,IAAAA,YAAY,EAAE;AAFL,GAFkB;AAM7B7Z,EAAAA,UAAU,EAAE;AACVd,IAAAA,OAAO,EAAE;AACP7F,MAAAA,IAAI,EAAE,QADC;AAEPwG,MAAAA,UAAU,EAAE,CAAC,GAAD,EAAM,GAAN,EAAW,YAAX,EAAyB,UAAzB,EAAqC,aAArC,EAAoD,aAApD;AAFL;AADC,GANiB;AAY7BgJ,EAAAA,SAAS,EAAE,GAZkB;AAa7BqO,EAAAA,UAAU,EAAE;AAbiB,CAA/B;AAeAsG,mBAAmB,CAACxqB,SAApB,GAAgC;AAC9BunB,EAAAA,WAAW,EAAE,CADiB;AAE9BhE,EAAAA,OAAO,EAAE;AACPiE,IAAAA,MAAM,EAAE;AACNtP,MAAAA,MAAM,EAAE;AACNuP,QAAAA,cAAc,CAACvhB,KAAD,EAAQ;AACpB,gBAAMwK,IAAI,GAAGxK,KAAK,CAACwK,IAAnB;;AACA,cAAIA,IAAI,CAACwH,MAAL,CAAYvQ,MAAZ,IAAsB+I,IAAI,CAAC0F,QAAL,CAAczO,MAAxC,EAAgD;AAC9C,kBAAM;AAACuQ,cAAAA,MAAM,EAAE;AAACwP,gBAAAA;AAAD;AAAT,gBAAyBxhB,KAAK,CAACshB,MAAN,CAAazZ,OAA5C;AACA,mBAAO2C,IAAI,CAACwH,MAAL,CAAYyP,GAAZ,CAAgB,CAACrO,KAAD,EAAQvf,CAAR,KAAc;AACnC,oBAAM+W,IAAI,GAAG5K,KAAK,CAACmQ,cAAN,CAAqB,CAArB,CAAb;AACA,oBAAMuR,KAAK,GAAG9W,IAAI,CAACsB,UAAL,CAAgB0H,QAAhB,CAAyB/f,CAAzB,CAAd;AACA,qBAAO;AACL8tB,gBAAAA,IAAI,EAAEvO,KADD;AAELwO,gBAAAA,SAAS,EAAEF,KAAK,CAACG,eAFZ;AAGLC,gBAAAA,WAAW,EAAEJ,KAAK,CAACK,WAHd;AAILC,gBAAAA,SAAS,EAAEN,KAAK,CAACV,WAJZ;AAKLQ,gBAAAA,UAAU,EAAEA,UALP;AAML7N,gBAAAA,MAAM,EAAE,CAAC3T,KAAK,CAAC+b,iBAAN,CAAwBloB,CAAxB,CANJ;AAOLkW,gBAAAA,KAAK,EAAElW;AAPF,eAAP;AASD,aAZM,CAAP;AAaD;;AACD,iBAAO,EAAP;AACD;;AApBK,OADF;;AAuBNouB,MAAAA,OAAO,CAAC1uB,CAAD,EAAI2uB,UAAJ,EAAgBZ,MAAhB,EAAwB;AAC7BA,QAAAA,MAAM,CAACthB,KAAP,CAAamiB,oBAAb,CAAkCD,UAAU,CAACnY,KAA7C;AACAuX,QAAAA,MAAM,CAACthB,KAAP,CAAasF,MAAb;AACD;;AA1BK,KADD;AA6BPgY,IAAAA,OAAO,EAAE;AACPld,MAAAA,SAAS,EAAE;AACTmd,QAAAA,KAAK,GAAG;AACN,iBAAO,EAAP;AACD,SAHQ;;AAITnK,QAAAA,KAAK,CAACW,OAAD,EAAU;AACb,iBAAOA,OAAO,CAAC/T,KAAR,CAAcwK,IAAd,CAAmBwH,MAAnB,CAA0B+B,OAAO,CAACxG,SAAlC,IAA+C,IAA/C,GAAsDwG,OAAO,CAACuO,cAArE;AACD;;AANQ;AADJ;AA7BF,GAFqB;AA0C9BxV,EAAAA,MAAM,EAAE;AACN3Z,IAAAA,CAAC,EAAE;AACDgN,MAAAA,IAAI,EAAE,cADL;AAEDglB,MAAAA,UAAU,EAAE;AACVC,QAAAA,OAAO,EAAE;AADC,OAFX;AAKDxI,MAAAA,WAAW,EAAE,IALZ;AAMDF,MAAAA,IAAI,EAAE;AACJ2I,QAAAA,QAAQ,EAAE;AADN,OANL;AASDC,MAAAA,WAAW,EAAE;AACXF,QAAAA,OAAO,EAAE;AADE,OATZ;AAYDpH,MAAAA,UAAU,EAAE;AAZX;AADG;AA1CsB,CAAhC;;AA4DA,MAAMuH,aAAN,SAA4BxG,kBAA5B,CAA+C;;AAE/CwG,aAAa,CAACta,EAAd,GAAmB,KAAnB;AACAsa,aAAa,CAAC3xB,QAAd,GAAyB;AACvB+pB,EAAAA,MAAM,EAAE,CADe;AAEvBF,EAAAA,QAAQ,EAAE,CAFa;AAGvBC,EAAAA,aAAa,EAAE,GAHQ;AAIvBN,EAAAA,MAAM,EAAE;AAJe,CAAzB;;AAOA,MAAMoI,eAAN,SAA8BzX,iBAA9B,CAAgD;AAC9CoF,EAAAA,gBAAgB,CAACpJ,KAAD,EAAQ;AACtB,UAAM/I,EAAE,GAAG,IAAX;AACA,UAAM8K,MAAM,GAAG9K,EAAE,CAACoL,WAAH,CAAeN,MAA9B;AACA,UAAMK,MAAM,GAAGnL,EAAE,CAACqR,SAAH,CAAatI,KAAb,CAAf;AACA,WAAO;AACLqJ,MAAAA,KAAK,EAAEtH,MAAM,CAACmG,SAAP,GAAmBlI,KAAnB,CADF;AAELzB,MAAAA,KAAK,EAAE,KAAKwD,MAAM,CAACuH,gBAAP,CAAwBlH,MAAM,CAACL,MAAM,CAACU,IAAR,CAA9B;AAFP,KAAP;AAID;;AACDlH,EAAAA,MAAM,CAAC8E,IAAD,EAAO;AACX,UAAMpJ,EAAE,GAAG,IAAX;AACA,UAAM4J,IAAI,GAAG5J,EAAE,CAACoL,WAAhB;AACA,UAAMqW,IAAI,GAAG7X,IAAI,CAACwC,OAAlB;AACA,UAAM0P,MAAM,GAAGlS,IAAI,CAACJ,IAAL,IAAa,EAA5B;AACA,UAAMwH,MAAM,GAAGpH,IAAI,CAAC0B,MAAL,CAAY2F,SAAZ,EAAf;AACAwQ,IAAAA,IAAI,CAAC3F,MAAL,GAAcA,MAAd;;AACA,QAAI1S,IAAI,KAAK,QAAb,EAAuB;AACrB,YAAMvC,OAAO,GAAG7G,EAAE,CAAC6S,4BAAH,CAAgCzJ,IAAhC,CAAhB;;AACA,UAAI,CAACpJ,EAAE,CAAC6G,OAAH,CAAWmb,QAAhB,EAA0B;AACxBnb,QAAAA,OAAO,CAACmZ,WAAR,GAAsB,CAAtB;AACD;;AACD,YAAMra,UAAU,GAAG;AACjB7B,QAAAA,KAAK,EAAE,IADU;AAEjB2gB,QAAAA,SAAS,EAAEzT,MAAM,CAACvQ,MAAP,KAAkBqb,MAAM,CAACrb,MAFnB;AAGjBoG,QAAAA;AAHiB,OAAnB;AAKA7G,MAAAA,EAAE,CAACmU,aAAH,CAAiBsN,IAAjB,EAAuB3iB,SAAvB,EAAkC6G,UAAlC,EAA8CyD,IAA9C;AACD;;AACDpJ,IAAAA,EAAE,CAACkV,cAAH,CAAkB4G,MAAlB,EAA0B,CAA1B,EAA6BA,MAAM,CAACrb,MAApC,EAA4C2I,IAA5C;AACD;;AACD8L,EAAAA,cAAc,CAAC4G,MAAD,EAAShc,KAAT,EAAgB0Q,KAAhB,EAAuBpH,IAAvB,EAA6B;AACzC,UAAMpJ,EAAE,GAAG,IAAX;AACA,UAAMoM,OAAO,GAAGpM,EAAE,CAACmO,UAAH,EAAhB;AACA,UAAMvG,KAAK,GAAG5H,EAAE,CAACoL,WAAH,CAAe6D,MAA7B;AACA,UAAMK,KAAK,GAAGlG,IAAI,KAAK,OAAvB;;AACA,SAAK,IAAIvW,CAAC,GAAGiN,KAAb,EAAoBjN,CAAC,GAAGiN,KAAK,GAAG0Q,KAAhC,EAAuC3d,CAAC,EAAxC,EAA4C;AAC1C,YAAMkpB,KAAK,GAAGD,MAAM,CAACjpB,CAAD,CAApB;AACA,YAAMgU,OAAO,GAAG7G,EAAE,CAAC8S,yBAAH,CAA6BjgB,CAA7B,EAAgCkpB,KAAK,CAAC1X,MAAN,GAAe,QAAf,GAA0B+E,IAA1D,CAAhB;AACA,YAAMsb,aAAa,GAAG9c,KAAK,CAAC+c,wBAAN,CAA+B9xB,CAA/B,EAAkCuZ,OAAO,CAAC5C,IAAR,CAAa3W,CAAb,CAAlC,CAAtB;AACA,YAAM4C,CAAC,GAAG6Z,KAAK,GAAG1H,KAAK,CAAC+b,OAAT,GAAmBe,aAAa,CAACjvB,CAAhD;AACA,YAAME,CAAC,GAAG2Z,KAAK,GAAG1H,KAAK,CAACgc,OAAT,GAAmBc,aAAa,CAAC/uB,CAAhD;AACA,YAAMgQ,UAAU,GAAG;AACjBlQ,QAAAA,CADiB;AAEjBE,QAAAA,CAFiB;AAGjB8nB,QAAAA,KAAK,EAAEiH,aAAa,CAACjH,KAHJ;AAIjBtB,QAAAA,IAAI,EAAE7B,KAAK,CAAC7kB,CAAD,CAAL,IAAY6kB,KAAK,CAAC3kB,CAAD,CAJN;AAKjBkR,QAAAA;AALiB,OAAnB;AAOA7G,MAAAA,EAAE,CAACmU,aAAH,CAAiB4H,KAAjB,EAAwBlpB,CAAxB,EAA2B8S,UAA3B,EAAuCyD,IAAvC;AACD;AACF;;AAnD6C;;AAqDhDob,eAAe,CAACva,EAAhB,GAAqB,OAArB;AACAua,eAAe,CAAC5xB,QAAhB,GAA2B;AACzB8c,EAAAA,kBAAkB,EAAE,MADK;AAEzBuD,EAAAA,eAAe,EAAE,OAFQ;AAGzBtE,EAAAA,SAAS,EAAE,GAHc;AAIzBqT,EAAAA,QAAQ,EAAE,IAJe;AAKzBxP,EAAAA,QAAQ,EAAE;AACRiP,IAAAA,IAAI,EAAE;AACJmD,MAAAA,IAAI,EAAE;AADF;AADE;AALe,CAA3B;AAWAJ,eAAe,CAAC1rB,SAAhB,GAA4B;AAC1BunB,EAAAA,WAAW,EAAE,CADa;AAE1BvU,EAAAA,MAAM,EAAE;AACN3Z,IAAAA,CAAC,EAAE;AACDgN,MAAAA,IAAI,EAAE;AADL;AADG;AAFkB,CAA5B;;AASA,MAAM0lB,iBAAN,SAAgCrD,cAAhC,CAA+C;;AAE/CqD,iBAAiB,CAAC5a,EAAlB,GAAuB,SAAvB;AACA4a,iBAAiB,CAACjyB,QAAlB,GAA6B;AAC3BovB,EAAAA,QAAQ,EAAE,KADiB;AAE3B4C,EAAAA,IAAI,EAAE;AAFqB,CAA7B;AAIAC,iBAAiB,CAAC/rB,SAAlB,GAA8B;AAC5ByiB,EAAAA,WAAW,EAAE;AACXnS,IAAAA,IAAI,EAAE;AADK,GADe;AAI5BiT,EAAAA,OAAO,EAAE;AACPC,IAAAA,OAAO,EAAE;AACPld,MAAAA,SAAS,EAAE;AACTmd,QAAAA,KAAK,GAAG;AACN,iBAAO,EAAP;AACD,SAHQ;;AAITnK,QAAAA,KAAK,CAACzR,IAAD,EAAO;AACV,iBAAO,MAAMA,IAAI,CAACyR,KAAX,GAAmB,IAAnB,GAA0BzR,IAAI,CAAC2gB,cAA/B,GAAgD,GAAvD;AACD;;AANQ;AADJ;AADF,GAJmB;AAgB5BxV,EAAAA,MAAM,EAAE;AACNrW,IAAAA,CAAC,EAAE;AACD0J,MAAAA,IAAI,EAAE;AADL,KADG;AAINxJ,IAAAA,CAAC,EAAE;AACDwJ,MAAAA,IAAI,EAAE;AADL;AAJG;AAhBoB,CAA9B;AA0BA,IAAI2lB,WAAW,GAAG,aAAa3f,MAAM,CAACuO,MAAP,CAAc;AAC7CqR,EAAAA,SAAS,EAAE,IADkC;AAE7C7L,EAAAA,aAAa,EAAEA,aAF8B;AAG7C2C,EAAAA,gBAAgB,EAAEA,gBAH2B;AAI7CkC,EAAAA,kBAAkB,EAAEA,kBAJyB;AAK7CyD,EAAAA,cAAc,EAAEA,cAL6B;AAM7C8B,EAAAA,mBAAmB,EAAEA,mBANwB;AAO7CiB,EAAAA,aAAa,EAAEA,aAP8B;AAQ7CC,EAAAA,eAAe,EAAEA,eAR4B;AAS7CK,EAAAA,iBAAiB,EAAEA;AAT0B,CAAd,CAA/B;;AAYA,SAASG,QAAT,GAAoB;AAClB,QAAM,IAAIC,KAAJ,CAAU,iFAAV,CAAN;AACD;;AACD,MAAMC,WAAN,CAAkB;AAChB1mB,EAAAA,WAAW,CAACqI,OAAD,EAAU;AACnB,SAAKA,OAAL,GAAeA,OAAO,IAAI,EAA1B;AACD;;AACDse,EAAAA,OAAO,GAAG;AACR,WAAOH,QAAQ,EAAf;AACD;;AACDzU,EAAAA,KAAK,CAACjJ,KAAD,EAAQ8d,MAAR,EAAgB;AACnB,WAAOJ,QAAQ,EAAf;AACD;;AACDI,EAAAA,MAAM,CAACC,SAAD,EAAYD,MAAZ,EAAoB;AACxB,WAAOJ,QAAQ,EAAf;AACD;;AACDtjB,EAAAA,GAAG,CAAC2jB,SAAD,EAAYC,MAAZ,EAAoBC,IAApB,EAA0B;AAC3B,WAAOP,QAAQ,EAAf;AACD;;AACDQ,EAAAA,IAAI,CAACnzB,CAAD,EAAIU,CAAJ,EAAOwyB,IAAP,EAAa;AACf,WAAOP,QAAQ,EAAf;AACD;;AACDS,EAAAA,OAAO,CAACJ,SAAD,EAAYE,IAAZ,EAAkBG,OAAlB,EAA2B;AAChC,WAAOV,QAAQ,EAAf;AACD;;AACDW,EAAAA,KAAK,CAACN,SAAD,EAAYE,IAAZ,EAAkB;AACrB,WAAOP,QAAQ,EAAf;AACD;;AAxBe;;AA0BlBE,WAAW,CAACU,QAAZ,GAAuB,UAASC,OAAT,EAAkB;AACvC1gB,EAAAA,MAAM,CAACqC,MAAP,CAAc0d,WAAW,CAACvP,SAA1B,EAAqCkQ,OAArC;AACD,CAFD;;AAGA,IAAIC,QAAQ,GAAG;AACbC,EAAAA,KAAK,EAAEb;AADM,CAAf;;AAIA,SAASc,mBAAT,CAA6BzzB,CAA7B,EAAgCyM,KAAhC,EAAuC;AACrC,MAAI,YAAYzM,CAAhB,EAAmB;AACjB,WAAO;AACLkD,MAAAA,CAAC,EAAElD,CAAC,CAACkD,CADA;AAELE,MAAAA,CAAC,EAAEpD,CAAC,CAACoD;AAFA,KAAP;AAID;;AACD,SAAOD,qBAAqB,CAACnD,CAAD,EAAIyM,KAAJ,CAA5B;AACD;;AACD,SAASinB,uBAAT,CAAiCjnB,KAAjC,EAAwCknB,OAAxC,EAAiD;AAC/C,QAAMtd,QAAQ,GAAG5J,KAAK,CAACmnB,4BAAN,EAAjB;AACA,MAAIpd,KAAJ,EAAWS,IAAX,EAAiB8C,OAAjB;;AACA,OAAK,IAAIzZ,CAAC,GAAG,CAAR,EAAWiW,IAAI,GAAGF,QAAQ,CAACnI,MAAhC,EAAwC5N,CAAC,GAAGiW,IAA5C,EAAkD,EAAEjW,CAApD,EAAuD;AACrD,KAAC;AAACkW,MAAAA,KAAD;AAAQS,MAAAA;AAAR,QAAgBZ,QAAQ,CAAC/V,CAAD,CAAzB;;AACA,SAAK,IAAIkB,CAAC,GAAG,CAAR,EAAWqyB,IAAI,GAAG5c,IAAI,CAAC/I,MAA5B,EAAoC1M,CAAC,GAAGqyB,IAAxC,EAA8C,EAAEryB,CAAhD,EAAmD;AACjDuY,MAAAA,OAAO,GAAG9C,IAAI,CAACzV,CAAD,CAAd;;AACA,UAAI,CAACuY,OAAO,CAAC6P,IAAb,EAAmB;AACjB+J,QAAAA,OAAO,CAAC5Z,OAAD,EAAUvD,KAAV,EAAiBhV,CAAjB,CAAP;AACD;AACF;AACF;AACF;;AACD,SAASsyB,YAAT,CAAsBC,OAAtB,EAA+B9a,IAA/B,EAAqClE,KAArC,EAA4Cif,SAA5C,EAAuD;AACrD,QAAM;AAACrb,IAAAA,UAAD;AAAa1B,IAAAA,IAAb;AAAmBkH,IAAAA;AAAnB,MAA8B4V,OAApC;AACA,QAAMhb,MAAM,GAAGJ,UAAU,CAACE,WAAX,CAAuBE,MAAtC;;AACA,MAAIA,MAAM,IAAIE,IAAI,KAAKF,MAAM,CAACE,IAA1B,IAAkCkF,OAAlC,IAA6ClH,IAAI,CAAC/I,MAAtD,EAA8D;AAC5D,UAAM+lB,YAAY,GAAGlb,MAAM,CAACmb,cAAP,GAAwB3wB,aAAxB,GAAwCN,YAA7D;;AACA,QAAI,CAAC+wB,SAAL,EAAgB;AACd,aAAOC,YAAY,CAAChd,IAAD,EAAOgC,IAAP,EAAalE,KAAb,CAAnB;AACD,KAFD,MAEO,IAAI4D,UAAU,CAACsC,cAAf,EAA+B;AACpC,YAAMkZ,EAAE,GAAGld,IAAI,CAAC,CAAD,CAAf;AACA,YAAMgI,KAAK,GAAG,OAAOkV,EAAE,CAACC,QAAV,KAAuB,UAAvB,IAAqCD,EAAE,CAACC,QAAH,CAAYnb,IAAZ,CAAnD;;AACA,UAAIgG,KAAJ,EAAW;AACT,cAAM1R,KAAK,GAAG0mB,YAAY,CAAChd,IAAD,EAAOgC,IAAP,EAAalE,KAAK,GAAGkK,KAArB,CAA1B;AACA,cAAMxJ,GAAG,GAAGwe,YAAY,CAAChd,IAAD,EAAOgC,IAAP,EAAalE,KAAK,GAAGkK,KAArB,CAAxB;AACA,eAAO;AAACqR,UAAAA,EAAE,EAAE/iB,KAAK,CAAC+iB,EAAX;AAAeC,UAAAA,EAAE,EAAE9a,GAAG,CAAC8a;AAAvB,SAAP;AACD;AACF;AACF;;AACD,SAAO;AAACD,IAAAA,EAAE,EAAE,CAAL;AAAQC,IAAAA,EAAE,EAAEtZ,IAAI,CAAC/I,MAAL,GAAc;AAA1B,GAAP;AACD;;AACD,SAASmmB,sBAAT,CAAgC5nB,KAAhC,EAAuCwM,IAAvC,EAA6Cqb,QAA7C,EAAuDX,OAAvD,EAAgEK,SAAhE,EAA2E;AACzE,QAAM3d,QAAQ,GAAG5J,KAAK,CAACmnB,4BAAN,EAAjB;AACA,QAAM7e,KAAK,GAAGuf,QAAQ,CAACrb,IAAD,CAAtB;;AACA,OAAK,IAAI3Y,CAAC,GAAG,CAAR,EAAWiW,IAAI,GAAGF,QAAQ,CAACnI,MAAhC,EAAwC5N,CAAC,GAAGiW,IAA5C,EAAkD,EAAEjW,CAApD,EAAuD;AACrD,UAAM;AAACkW,MAAAA,KAAD;AAAQS,MAAAA;AAAR,QAAgBZ,QAAQ,CAAC/V,CAAD,CAA9B;AACA,UAAM;AAACgwB,MAAAA,EAAD;AAAKC,MAAAA;AAAL,QAAWuD,YAAY,CAACzd,QAAQ,CAAC/V,CAAD,CAAT,EAAc2Y,IAAd,EAAoBlE,KAApB,EAA2Bif,SAA3B,CAA7B;;AACA,SAAK,IAAIxyB,CAAC,GAAG8uB,EAAb,EAAiB9uB,CAAC,IAAI+uB,EAAtB,EAA0B,EAAE/uB,CAA5B,EAA+B;AAC7B,YAAMuY,OAAO,GAAG9C,IAAI,CAACzV,CAAD,CAApB;;AACA,UAAI,CAACuY,OAAO,CAAC6P,IAAb,EAAmB;AACjB+J,QAAAA,OAAO,CAAC5Z,OAAD,EAAUvD,KAAV,EAAiBhV,CAAjB,CAAP;AACD;AACF;AACF;AACF;;AACD,SAAS+yB,wBAAT,CAAkCtb,IAAlC,EAAwC;AACtC,QAAMub,IAAI,GAAGvb,IAAI,CAAC+O,OAAL,CAAa,GAAb,MAAsB,CAAC,CAApC;AACA,QAAMyM,IAAI,GAAGxb,IAAI,CAAC+O,OAAL,CAAa,GAAb,MAAsB,CAAC,CAApC;AACA,SAAO,UAAS0M,GAAT,EAAcC,GAAd,EAAmB;AACxB,UAAMC,MAAM,GAAGJ,IAAI,GAAGnnB,IAAI,CAAC0W,GAAL,CAAS2Q,GAAG,CAACxxB,CAAJ,GAAQyxB,GAAG,CAACzxB,CAArB,CAAH,GAA6B,CAAhD;AACA,UAAM2xB,MAAM,GAAGJ,IAAI,GAAGpnB,IAAI,CAAC0W,GAAL,CAAS2Q,GAAG,CAACtxB,CAAJ,GAAQuxB,GAAG,CAACvxB,CAArB,CAAH,GAA6B,CAAhD;AACA,WAAOiK,IAAI,CAACynB,IAAL,CAAUznB,IAAI,CAAC0nB,GAAL,CAASH,MAAT,EAAiB,CAAjB,IAAsBvnB,IAAI,CAAC0nB,GAAL,CAASF,MAAT,EAAiB,CAAjB,CAAhC,CAAP;AACD,GAJD;AAKD;;AACD,SAASG,iBAAT,CAA2BvoB,KAA3B,EAAkC6nB,QAAlC,EAA4Crb,IAA5C,EAAkDgc,gBAAlD,EAAoE;AAClE,QAAMhnB,KAAK,GAAG,EAAd;;AACA,MAAI,CAAC5K,cAAc,CAACixB,QAAD,EAAW7nB,KAAK,CAAC0T,SAAjB,EAA4B1T,KAAK,CAACyoB,WAAlC,CAAnB,EAAmE;AACjE,WAAOjnB,KAAP;AACD;;AACD,QAAMknB,cAAc,GAAG,UAASpb,OAAT,EAAkBjD,YAAlB,EAAgCN,KAAhC,EAAuC;AAC5D,QAAIuD,OAAO,CAACqb,OAAR,CAAgBd,QAAQ,CAACpxB,CAAzB,EAA4BoxB,QAAQ,CAAClxB,CAArC,EAAwC6xB,gBAAxC,CAAJ,EAA+D;AAC7DhnB,MAAAA,KAAK,CAACiB,IAAN,CAAW;AAAC6K,QAAAA,OAAD;AAAUjD,QAAAA,YAAV;AAAwBN,QAAAA;AAAxB,OAAX;AACD;AACF,GAJD;;AAKA6d,EAAAA,sBAAsB,CAAC5nB,KAAD,EAAQwM,IAAR,EAAcqb,QAAd,EAAwBa,cAAxB,EAAwC,IAAxC,CAAtB;AACA,SAAOlnB,KAAP;AACD;;AACD,SAASonB,eAAT,CAAyB5oB,KAAzB,EAAgC6nB,QAAhC,EAA0Crb,IAA1C,EAAgD+a,SAAhD,EAA2DiB,gBAA3D,EAA6E;AAC3E,QAAMK,cAAc,GAAGf,wBAAwB,CAACtb,IAAD,CAA/C;AACA,MAAIsc,WAAW,GAAGzd,MAAM,CAACE,iBAAzB;AACA,MAAI/J,KAAK,GAAG,EAAZ;;AACA,MAAI,CAAC5K,cAAc,CAACixB,QAAD,EAAW7nB,KAAK,CAAC0T,SAAjB,EAA4B1T,KAAK,CAACyoB,WAAlC,CAAnB,EAAmE;AACjE,WAAOjnB,KAAP;AACD;;AACD,QAAMknB,cAAc,GAAG,UAASpb,OAAT,EAAkBjD,YAAlB,EAAgCN,KAAhC,EAAuC;AAC5D,QAAIwd,SAAS,IAAI,CAACja,OAAO,CAACqb,OAAR,CAAgBd,QAAQ,CAACpxB,CAAzB,EAA4BoxB,QAAQ,CAAClxB,CAArC,EAAwC6xB,gBAAxC,CAAlB,EAA6E;AAC3E;AACD;;AACD,UAAMzN,MAAM,GAAGzN,OAAO,CAACyb,cAAR,CAAuBP,gBAAvB,CAAf;;AACA,QAAI,CAAC5xB,cAAc,CAACmkB,MAAD,EAAS/a,KAAK,CAAC0T,SAAf,EAA0B1T,KAAK,CAACyoB,WAAhC,CAAf,IAA+D,CAACnb,OAAO,CAACqb,OAAR,CAAgBd,QAAQ,CAACpxB,CAAzB,EAA4BoxB,QAAQ,CAAClxB,CAArC,EAAwC6xB,gBAAxC,CAApE,EAA+H;AAC7H;AACD;;AACD,UAAMQ,QAAQ,GAAGH,cAAc,CAAChB,QAAD,EAAW9M,MAAX,CAA/B;;AACA,QAAIiO,QAAQ,GAAGF,WAAf,EAA4B;AAC1BtnB,MAAAA,KAAK,GAAG,CAAC;AAAC8L,QAAAA,OAAD;AAAUjD,QAAAA,YAAV;AAAwBN,QAAAA;AAAxB,OAAD,CAAR;AACA+e,MAAAA,WAAW,GAAGE,QAAd;AACD,KAHD,MAGO,IAAIA,QAAQ,KAAKF,WAAjB,EAA8B;AACnCtnB,MAAAA,KAAK,CAACiB,IAAN,CAAW;AAAC6K,QAAAA,OAAD;AAAUjD,QAAAA,YAAV;AAAwBN,QAAAA;AAAxB,OAAX;AACD;AACF,GAfD;;AAgBA6d,EAAAA,sBAAsB,CAAC5nB,KAAD,EAAQwM,IAAR,EAAcqb,QAAd,EAAwBa,cAAxB,CAAtB;AACA,SAAOlnB,KAAP;AACD;;AACD,SAASynB,YAAT,CAAsBjpB,KAAtB,EAA6BzM,CAA7B,EAAgCsU,OAAhC,EAAyC2gB,gBAAzC,EAA2D;AACzD,QAAMX,QAAQ,GAAGb,mBAAmB,CAACzzB,CAAD,EAAIyM,KAAJ,CAApC;AACA,QAAMwB,KAAK,GAAG,EAAd;AACA,QAAMgL,IAAI,GAAG3E,OAAO,CAAC2E,IAArB;AACA,QAAM0c,WAAW,GAAG1c,IAAI,KAAK,GAAT,GAAe,UAAf,GAA4B,UAAhD;AACA,MAAI2c,cAAc,GAAG,KAArB;AACAlC,EAAAA,uBAAuB,CAACjnB,KAAD,EAAQ,CAACsN,OAAD,EAAUjD,YAAV,EAAwBN,KAAxB,KAAkC;AAC/D,QAAIuD,OAAO,CAAC4b,WAAD,CAAP,CAAqBrB,QAAQ,CAACrb,IAAD,CAA7B,EAAqCgc,gBAArC,CAAJ,EAA4D;AAC1DhnB,MAAAA,KAAK,CAACiB,IAAN,CAAW;AAAC6K,QAAAA,OAAD;AAAUjD,QAAAA,YAAV;AAAwBN,QAAAA;AAAxB,OAAX;AACD;;AACD,QAAIuD,OAAO,CAACqb,OAAR,CAAgBd,QAAQ,CAACpxB,CAAzB,EAA4BoxB,QAAQ,CAAClxB,CAArC,EAAwC6xB,gBAAxC,CAAJ,EAA+D;AAC7DW,MAAAA,cAAc,GAAG,IAAjB;AACD;AACF,GAPsB,CAAvB;;AAQA,MAAIthB,OAAO,CAAC0f,SAAR,IAAqB,CAAC4B,cAA1B,EAA0C;AACxC,WAAO,EAAP;AACD;;AACD,SAAO3nB,KAAP;AACD;;AACD,IAAI4nB,WAAW,GAAG;AAChBC,EAAAA,KAAK,EAAE;AACLtf,IAAAA,KAAK,CAAC/J,KAAD,EAAQzM,CAAR,EAAWsU,OAAX,EAAoB2gB,gBAApB,EAAsC;AACzC,YAAMX,QAAQ,GAAGb,mBAAmB,CAACzzB,CAAD,EAAIyM,KAAJ,CAApC;AACA,YAAMwM,IAAI,GAAG3E,OAAO,CAAC2E,IAAR,IAAgB,GAA7B;AACA,YAAMhL,KAAK,GAAGqG,OAAO,CAAC0f,SAAR,GACVgB,iBAAiB,CAACvoB,KAAD,EAAQ6nB,QAAR,EAAkBrb,IAAlB,EAAwBgc,gBAAxB,CADP,GAEVI,eAAe,CAAC5oB,KAAD,EAAQ6nB,QAAR,EAAkBrb,IAAlB,EAAwB,KAAxB,EAA+Bgc,gBAA/B,CAFnB;AAGA,YAAMhV,QAAQ,GAAG,EAAjB;;AACA,UAAI,CAAChS,KAAK,CAACC,MAAX,EAAmB;AACjB,eAAO,EAAP;AACD;;AACDzB,MAAAA,KAAK,CAACmnB,4BAAN,GAAqC3mB,OAArC,CAA8CoK,IAAD,IAAU;AACrD,cAAMb,KAAK,GAAGvI,KAAK,CAAC,CAAD,CAAL,CAASuI,KAAvB;AACA,cAAMuD,OAAO,GAAG1C,IAAI,CAACJ,IAAL,CAAUT,KAAV,CAAhB;;AACA,YAAIuD,OAAO,IAAI,CAACA,OAAO,CAAC6P,IAAxB,EAA8B;AAC5B3J,UAAAA,QAAQ,CAAC/Q,IAAT,CAAc;AAAC6K,YAAAA,OAAD;AAAUjD,YAAAA,YAAY,EAAEO,IAAI,CAACb,KAA7B;AAAoCA,YAAAA;AAApC,WAAd;AACD;AACF,OAND;AAOA,aAAOyJ,QAAP;AACD,KAnBI;;AAoBLpG,IAAAA,OAAO,CAACpN,KAAD,EAAQzM,CAAR,EAAWsU,OAAX,EAAoB2gB,gBAApB,EAAsC;AAC3C,YAAMX,QAAQ,GAAGb,mBAAmB,CAACzzB,CAAD,EAAIyM,KAAJ,CAApC;AACA,YAAMwM,IAAI,GAAG3E,OAAO,CAAC2E,IAAR,IAAgB,IAA7B;AACA,UAAIhL,KAAK,GAAGqG,OAAO,CAAC0f,SAAR,GACRgB,iBAAiB,CAACvoB,KAAD,EAAQ6nB,QAAR,EAAkBrb,IAAlB,EAAwBgc,gBAAxB,CADT,GAEVI,eAAe,CAAC5oB,KAAD,EAAQ6nB,QAAR,EAAkBrb,IAAlB,EAAwB,KAAxB,EAA+Bgc,gBAA/B,CAFjB;;AAGA,UAAIhnB,KAAK,CAACC,MAAN,GAAe,CAAnB,EAAsB;AACpB,cAAM4I,YAAY,GAAG7I,KAAK,CAAC,CAAD,CAAL,CAAS6I,YAA9B;AACA,cAAMG,IAAI,GAAGxK,KAAK,CAACmQ,cAAN,CAAqB9F,YAArB,EAAmCG,IAAhD;AACAhJ,QAAAA,KAAK,GAAG,EAAR;;AACA,aAAK,IAAI3N,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG2W,IAAI,CAAC/I,MAAzB,EAAiC,EAAE5N,CAAnC,EAAsC;AACpC2N,UAAAA,KAAK,CAACiB,IAAN,CAAW;AAAC6K,YAAAA,OAAO,EAAE9C,IAAI,CAAC3W,CAAD,CAAd;AAAmBwW,YAAAA,YAAnB;AAAiCN,YAAAA,KAAK,EAAElW;AAAxC,WAAX;AACD;AACF;;AACD,aAAO2N,KAAP;AACD,KAnCI;;AAoCLub,IAAAA,KAAK,CAAC/c,KAAD,EAAQzM,CAAR,EAAWsU,OAAX,EAAoB2gB,gBAApB,EAAsC;AACzC,YAAMX,QAAQ,GAAGb,mBAAmB,CAACzzB,CAAD,EAAIyM,KAAJ,CAApC;AACA,YAAMwM,IAAI,GAAG3E,OAAO,CAAC2E,IAAR,IAAgB,IAA7B;AACA,aAAO+b,iBAAiB,CAACvoB,KAAD,EAAQ6nB,QAAR,EAAkBrb,IAAlB,EAAwBgc,gBAAxB,CAAxB;AACD,KAxCI;;AAyCLc,IAAAA,OAAO,CAACtpB,KAAD,EAAQzM,CAAR,EAAWsU,OAAX,EAAoB2gB,gBAApB,EAAsC;AAC3C,YAAMX,QAAQ,GAAGb,mBAAmB,CAACzzB,CAAD,EAAIyM,KAAJ,CAApC;AACA,YAAMwM,IAAI,GAAG3E,OAAO,CAAC2E,IAAR,IAAgB,IAA7B;AACA,aAAOoc,eAAe,CAAC5oB,KAAD,EAAQ6nB,QAAR,EAAkBrb,IAAlB,EAAwB3E,OAAO,CAAC0f,SAAhC,EAA2CiB,gBAA3C,CAAtB;AACD,KA7CI;;AA8CL/xB,IAAAA,CAAC,CAACuJ,KAAD,EAAQzM,CAAR,EAAWsU,OAAX,EAAoB2gB,gBAApB,EAAsC;AACrC3gB,MAAAA,OAAO,CAAC2E,IAAR,GAAe,GAAf;AACA,aAAOyc,YAAY,CAACjpB,KAAD,EAAQzM,CAAR,EAAWsU,OAAX,EAAoB2gB,gBAApB,CAAnB;AACD,KAjDI;;AAkDL7xB,IAAAA,CAAC,CAACqJ,KAAD,EAAQzM,CAAR,EAAWsU,OAAX,EAAoB2gB,gBAApB,EAAsC;AACrC3gB,MAAAA,OAAO,CAAC2E,IAAR,GAAe,GAAf;AACA,aAAOyc,YAAY,CAACjpB,KAAD,EAAQzM,CAAR,EAAWsU,OAAX,EAAoB2gB,gBAApB,CAAnB;AACD;;AArDI;AADS,CAAlB;AA0DA,MAAMe,gBAAgB,GAAG,CAAC,MAAD,EAAS,KAAT,EAAgB,OAAhB,EAAyB,QAAzB,CAAzB;;AACA,SAASC,gBAAT,CAA0BC,KAA1B,EAAiC5B,QAAjC,EAA2C;AACzC,SAAO4B,KAAK,CAAC1c,MAAN,CAAa9Y,CAAC,IAAIA,CAAC,CAACy1B,GAAF,KAAU7B,QAA5B,CAAP;AACD;;AACD,SAAS8B,2BAAT,CAAqCF,KAArC,EAA4Cjd,IAA5C,EAAkD;AAChD,SAAOid,KAAK,CAAC1c,MAAN,CAAa9Y,CAAC,IAAIs1B,gBAAgB,CAAChO,OAAjB,CAAyBtnB,CAAC,CAACy1B,GAA3B,MAAoC,CAAC,CAArC,IAA0Cz1B,CAAC,CAAC21B,GAAF,CAAMpd,IAAN,KAAeA,IAA3E,CAAP;AACD;;AACD,SAASqd,YAAT,CAAsBJ,KAAtB,EAA6B1gB,OAA7B,EAAsC;AACpC,SAAO0gB,KAAK,CAACxS,IAAN,CAAW,CAAC5jB,CAAD,EAAIU,CAAJ,KAAU;AAC1B,UAAM+1B,EAAE,GAAG/gB,OAAO,GAAGhV,CAAH,GAAOV,CAAzB;AACA,UAAM2mB,EAAE,GAAGjR,OAAO,GAAG1V,CAAH,GAAOU,CAAzB;AACA,WAAO+1B,EAAE,CAAC1I,MAAH,KAAcpH,EAAE,CAACoH,MAAjB,GACL0I,EAAE,CAAC/f,KAAH,GAAWiQ,EAAE,CAACjQ,KADT,GAEL+f,EAAE,CAAC1I,MAAH,GAAYpH,EAAE,CAACoH,MAFjB;AAGD,GANM,CAAP;AAOD;;AACD,SAAS2I,SAAT,CAAmBC,KAAnB,EAA0B;AACxB,QAAMC,WAAW,GAAG,EAApB;AACA,MAAIp2B,CAAJ,EAAOiW,IAAP,EAAa8f,GAAb,EAAkBF,GAAlB,EAAuBzf,KAAvB,EAA8BigB,WAA9B;;AACA,OAAKr2B,CAAC,GAAG,CAAJ,EAAOiW,IAAI,GAAG,CAACkgB,KAAK,IAAI,EAAV,EAAcvoB,MAAjC,EAAyC5N,CAAC,GAAGiW,IAA7C,EAAmD,EAAEjW,CAArD,EAAwD;AACtD+1B,IAAAA,GAAG,GAAGI,KAAK,CAACn2B,CAAD,CAAX;AACA,KAAC;AAACg0B,MAAAA,QAAQ,EAAE6B,GAAX;AAAgB7hB,MAAAA,OAAO,EAAE;AAACoC,QAAAA,KAAD;AAAQigB,QAAAA,WAAW,GAAG;AAAtB;AAAzB,QAAqDN,GAAtD;AACAK,IAAAA,WAAW,CAACxnB,IAAZ,CAAiB;AACfsH,MAAAA,KAAK,EAAElW,CADQ;AAEf+1B,MAAAA,GAFe;AAGfF,MAAAA,GAHe;AAIfpQ,MAAAA,UAAU,EAAEsQ,GAAG,CAACxQ,YAAJ,EAJG;AAKfgI,MAAAA,MAAM,EAAEwI,GAAG,CAACxI,MALG;AAMfnX,MAAAA,KAAK,EAAEA,KAAK,IAAKyf,GAAG,GAAGzf,KANR;AAOfigB,MAAAA;AAPe,KAAjB;AASD;;AACD,SAAOD,WAAP;AACD;;AACD,SAASE,WAAT,CAAqBC,OAArB,EAA8B;AAC5B,QAAM3e,MAAM,GAAG,EAAf;;AACA,OAAK,MAAM4e,IAAX,IAAmBD,OAAnB,EAA4B;AAC1B,UAAM;AAACngB,MAAAA,KAAD;AAAQyf,MAAAA,GAAR;AAAaQ,MAAAA;AAAb,QAA4BG,IAAlC;;AACA,QAAI,CAACpgB,KAAD,IAAU,CAACsf,gBAAgB,CAACe,QAAjB,CAA0BZ,GAA1B,CAAf,EAA+C;AAC7C;AACD;;AACD,UAAMa,MAAM,GAAG9e,MAAM,CAACxB,KAAD,CAAN,KAAkBwB,MAAM,CAACxB,KAAD,CAAN,GAAgB;AAACuH,MAAAA,KAAK,EAAE,CAAR;AAAWgZ,MAAAA,MAAM,EAAE,CAAnB;AAAsBpJ,MAAAA,MAAM,EAAE,CAA9B;AAAiC7Y,MAAAA,IAAI,EAAE;AAAvC,KAAlC,CAAf;;AACAgiB,IAAAA,MAAM,CAAC/Y,KAAP;AACA+Y,IAAAA,MAAM,CAACnJ,MAAP,IAAiB8I,WAAjB;AACD;;AACD,SAAOze,MAAP;AACD;;AACD,SAASgf,aAAT,CAAuBL,OAAvB,EAAgCM,MAAhC,EAAwC;AACtC,QAAMjf,MAAM,GAAG0e,WAAW,CAACC,OAAD,CAA1B;AACA,QAAM;AAACO,IAAAA,YAAD;AAAeC,IAAAA;AAAf,MAAgCF,MAAtC;AACA,MAAI72B,CAAJ,EAAOiW,IAAP,EAAa+gB,MAAb;;AACA,OAAKh3B,CAAC,GAAG,CAAJ,EAAOiW,IAAI,GAAGsgB,OAAO,CAAC3oB,MAA3B,EAAmC5N,CAAC,GAAGiW,IAAvC,EAA6C,EAAEjW,CAA/C,EAAkD;AAChDg3B,IAAAA,MAAM,GAAGT,OAAO,CAACv2B,CAAD,CAAhB;AACA,UAAM;AAACi3B,MAAAA;AAAD,QAAaD,MAAM,CAACjB,GAA1B;AACA,UAAM3f,KAAK,GAAGwB,MAAM,CAACof,MAAM,CAAC5gB,KAAR,CAApB;AACA,UAAMtG,MAAM,GAAGsG,KAAK,IAAI4gB,MAAM,CAACX,WAAP,GAAqBjgB,KAAK,CAACmX,MAAnD;;AACA,QAAIyJ,MAAM,CAACvR,UAAX,EAAuB;AACrBuR,MAAAA,MAAM,CAAC5P,KAAP,GAAetX,MAAM,GAAGA,MAAM,GAAGgnB,YAAZ,GAA2BG,QAAQ,IAAIJ,MAAM,CAACK,cAAnE;AACAF,MAAAA,MAAM,CAAC7P,MAAP,GAAgB4P,aAAhB;AACD,KAHD,MAGO;AACLC,MAAAA,MAAM,CAAC5P,KAAP,GAAe0P,YAAf;AACAE,MAAAA,MAAM,CAAC7P,MAAP,GAAgBrX,MAAM,GAAGA,MAAM,GAAGinB,aAAZ,GAA4BE,QAAQ,IAAIJ,MAAM,CAACM,eAArE;AACD;AACF;;AACD,SAAOvf,MAAP;AACD;;AACD,SAASwf,gBAAT,CAA0BjB,KAA1B,EAAiC;AAC/B,QAAMC,WAAW,GAAGF,SAAS,CAACC,KAAD,CAA7B;AACA,QAAMc,QAAQ,GAAGjB,YAAY,CAACI,WAAW,CAACld,MAAZ,CAAmBsd,IAAI,IAAIA,IAAI,CAACT,GAAL,CAASkB,QAApC,CAAD,EAAgD,IAAhD,CAA7B;AACA,QAAMvhB,IAAI,GAAGsgB,YAAY,CAACL,gBAAgB,CAACS,WAAD,EAAc,MAAd,CAAjB,EAAwC,IAAxC,CAAzB;AACA,QAAM5gB,KAAK,GAAGwgB,YAAY,CAACL,gBAAgB,CAACS,WAAD,EAAc,OAAd,CAAjB,CAA1B;AACA,QAAM7gB,GAAG,GAAGygB,YAAY,CAACL,gBAAgB,CAACS,WAAD,EAAc,KAAd,CAAjB,EAAuC,IAAvC,CAAxB;AACA,QAAM3gB,MAAM,GAAGugB,YAAY,CAACL,gBAAgB,CAACS,WAAD,EAAc,QAAd,CAAjB,CAA3B;AACA,QAAMiB,gBAAgB,GAAGvB,2BAA2B,CAACM,WAAD,EAAc,GAAd,CAApD;AACA,QAAMkB,cAAc,GAAGxB,2BAA2B,CAACM,WAAD,EAAc,GAAd,CAAlD;AACA,SAAO;AACLa,IAAAA,QADK;AAELM,IAAAA,UAAU,EAAE7hB,IAAI,CAACyN,MAAL,CAAY5N,GAAZ,CAFP;AAGLiiB,IAAAA,cAAc,EAAEhiB,KAAK,CAAC2N,MAAN,CAAamU,cAAb,EAA6BnU,MAA7B,CAAoC1N,MAApC,EAA4C0N,MAA5C,CAAmDkU,gBAAnD,CAHX;AAILxX,IAAAA,SAAS,EAAE8V,gBAAgB,CAACS,WAAD,EAAc,WAAd,CAJtB;AAKLqB,IAAAA,QAAQ,EAAE/hB,IAAI,CAACyN,MAAL,CAAY3N,KAAZ,EAAmB2N,MAAnB,CAA0BmU,cAA1B,CALL;AAML7R,IAAAA,UAAU,EAAElQ,GAAG,CAAC4N,MAAJ,CAAW1N,MAAX,EAAmB0N,MAAnB,CAA0BkU,gBAA1B;AANP,GAAP;AAQD;;AACD,SAASK,cAAT,CAAwBC,UAAxB,EAAoC9X,SAApC,EAA+CrgB,CAA/C,EAAkDU,CAAlD,EAAqD;AACnD,SAAO6M,IAAI,CAACmC,GAAL,CAASyoB,UAAU,CAACn4B,CAAD,CAAnB,EAAwBqgB,SAAS,CAACrgB,CAAD,CAAjC,IAAwCuN,IAAI,CAACmC,GAAL,CAASyoB,UAAU,CAACz3B,CAAD,CAAnB,EAAwB2f,SAAS,CAAC3f,CAAD,CAAjC,CAA/C;AACD;;AACD,SAAS03B,gBAAT,CAA0BD,UAA1B,EAAsCE,UAAtC,EAAkD;AAChDF,EAAAA,UAAU,CAACpiB,GAAX,GAAiBxI,IAAI,CAACmC,GAAL,CAASyoB,UAAU,CAACpiB,GAApB,EAAyBsiB,UAAU,CAACtiB,GAApC,CAAjB;AACAoiB,EAAAA,UAAU,CAACjiB,IAAX,GAAkB3I,IAAI,CAACmC,GAAL,CAASyoB,UAAU,CAACjiB,IAApB,EAA0BmiB,UAAU,CAACniB,IAArC,CAAlB;AACAiiB,EAAAA,UAAU,CAACliB,MAAX,GAAoB1I,IAAI,CAACmC,GAAL,CAASyoB,UAAU,CAACliB,MAApB,EAA4BoiB,UAAU,CAACpiB,MAAvC,CAApB;AACAkiB,EAAAA,UAAU,CAACniB,KAAX,GAAmBzI,IAAI,CAACmC,GAAL,CAASyoB,UAAU,CAACniB,KAApB,EAA2BqiB,UAAU,CAACriB,KAAtC,CAAnB;AACD;;AACD,SAASsiB,UAAT,CAAoBjY,SAApB,EAA+BgX,MAA/B,EAAuCG,MAAvC,EAA+Cpf,MAA/C,EAAuD;AACrD,QAAM;AAACie,IAAAA,GAAD;AAAME,IAAAA;AAAN,MAAaiB,MAAnB;AACA,QAAMW,UAAU,GAAG9X,SAAS,CAAC8X,UAA7B;;AACA,MAAI,CAAC13B,QAAQ,CAAC41B,GAAD,CAAb,EAAoB;AAClB,QAAImB,MAAM,CAACtiB,IAAX,EAAiB;AACfmL,MAAAA,SAAS,CAACgW,GAAD,CAAT,IAAkBmB,MAAM,CAACtiB,IAAzB;AACD;;AACD,UAAM0B,KAAK,GAAGwB,MAAM,CAACof,MAAM,CAAC5gB,KAAR,CAAN,IAAwB;AAAC1B,MAAAA,IAAI,EAAE,CAAP;AAAUiJ,MAAAA,KAAK,EAAE;AAAjB,KAAtC;AACAvH,IAAAA,KAAK,CAAC1B,IAAN,GAAa3H,IAAI,CAACmC,GAAL,CAASkH,KAAK,CAAC1B,IAAf,EAAqBsiB,MAAM,CAACvR,UAAP,GAAoBsQ,GAAG,CAAC5O,MAAxB,GAAiC4O,GAAG,CAAC3O,KAA1D,CAAb;AACA4P,IAAAA,MAAM,CAACtiB,IAAP,GAAc0B,KAAK,CAAC1B,IAAN,GAAa0B,KAAK,CAACuH,KAAjC;AACAkC,IAAAA,SAAS,CAACgW,GAAD,CAAT,IAAkBmB,MAAM,CAACtiB,IAAzB;AACD;;AACD,MAAIqhB,GAAG,CAACgC,UAAR,EAAoB;AAClBH,IAAAA,gBAAgB,CAACD,UAAD,EAAa5B,GAAG,CAACgC,UAAJ,EAAb,CAAhB;AACD;;AACD,QAAMC,QAAQ,GAAGjrB,IAAI,CAACmC,GAAL,CAAS,CAAT,EAAY2nB,MAAM,CAACoB,UAAP,GAAoBP,cAAc,CAACC,UAAD,EAAa9X,SAAb,EAAwB,MAAxB,EAAgC,OAAhC,CAA9C,CAAjB;AACA,QAAMqY,SAAS,GAAGnrB,IAAI,CAACmC,GAAL,CAAS,CAAT,EAAY2nB,MAAM,CAACsB,WAAP,GAAqBT,cAAc,CAACC,UAAD,EAAa9X,SAAb,EAAwB,KAAxB,EAA+B,QAA/B,CAA/C,CAAlB;AACA,QAAMuY,YAAY,GAAGJ,QAAQ,KAAKnY,SAAS,CAACnd,CAA5C;AACA,QAAM21B,aAAa,GAAGH,SAAS,KAAKrY,SAAS,CAAC/e,CAA9C;AACA+e,EAAAA,SAAS,CAACnd,CAAV,GAAcs1B,QAAd;AACAnY,EAAAA,SAAS,CAAC/e,CAAV,GAAco3B,SAAd;AACA,SAAOlB,MAAM,CAACvR,UAAP,GACH;AAAC6S,IAAAA,IAAI,EAAEF,YAAP;AAAqBG,IAAAA,KAAK,EAAEF;AAA5B,GADG,GAEH;AAACC,IAAAA,IAAI,EAAED,aAAP;AAAsBE,IAAAA,KAAK,EAAEH;AAA7B,GAFJ;AAGD;;AACD,SAASI,gBAAT,CAA0B3Y,SAA1B,EAAqC;AACnC,QAAM8X,UAAU,GAAG9X,SAAS,CAAC8X,UAA7B;;AACA,WAASc,SAAT,CAAmB5C,GAAnB,EAAwB;AACtB,UAAM6C,MAAM,GAAG3rB,IAAI,CAACmC,GAAL,CAASyoB,UAAU,CAAC9B,GAAD,CAAV,GAAkBhW,SAAS,CAACgW,GAAD,CAApC,EAA2C,CAA3C,CAAf;AACAhW,IAAAA,SAAS,CAACgW,GAAD,CAAT,IAAkB6C,MAAlB;AACA,WAAOA,MAAP;AACD;;AACD7Y,EAAAA,SAAS,CAAC/c,CAAV,IAAe21B,SAAS,CAAC,KAAD,CAAxB;AACA5Y,EAAAA,SAAS,CAACjd,CAAV,IAAe61B,SAAS,CAAC,MAAD,CAAxB;AACAA,EAAAA,SAAS,CAAC,OAAD,CAAT;AACAA,EAAAA,SAAS,CAAC,QAAD,CAAT;AACD;;AACD,SAASE,UAAT,CAAoBlT,UAApB,EAAgC5F,SAAhC,EAA2C;AACzC,QAAM8X,UAAU,GAAG9X,SAAS,CAAC8X,UAA7B;;AACA,WAASiB,kBAAT,CAA4BC,SAA5B,EAAuC;AACrC,UAAMC,MAAM,GAAG;AAACpjB,MAAAA,IAAI,EAAE,CAAP;AAAUH,MAAAA,GAAG,EAAE,CAAf;AAAkBC,MAAAA,KAAK,EAAE,CAAzB;AAA4BC,MAAAA,MAAM,EAAE;AAApC,KAAf;AACAojB,IAAAA,SAAS,CAAClsB,OAAV,CAAmBkpB,GAAD,IAAS;AACzBiD,MAAAA,MAAM,CAACjD,GAAD,CAAN,GAAc9oB,IAAI,CAACmC,GAAL,CAAS2Q,SAAS,CAACgW,GAAD,CAAlB,EAAyB8B,UAAU,CAAC9B,GAAD,CAAnC,CAAd;AACD,KAFD;AAGA,WAAOiD,MAAP;AACD;;AACD,SAAOrT,UAAU,GACbmT,kBAAkB,CAAC,CAAC,MAAD,EAAS,OAAT,CAAD,CADL,GAEbA,kBAAkB,CAAC,CAAC,KAAD,EAAQ,QAAR,CAAD,CAFtB;AAGD;;AACD,SAASG,QAAT,CAAkB5C,KAAlB,EAAyBtW,SAAzB,EAAoCgX,MAApC,EAA4Cjf,MAA5C,EAAoD;AAClD,QAAMohB,UAAU,GAAG,EAAnB;AACA,MAAIh5B,CAAJ,EAAOiW,IAAP,EAAa+gB,MAAb,EAAqBjB,GAArB,EAA0BkD,KAA1B,EAAiCzI,OAAjC;;AACA,OAAKxwB,CAAC,GAAG,CAAJ,EAAOiW,IAAI,GAAGkgB,KAAK,CAACvoB,MAApB,EAA4BqrB,KAAK,GAAG,CAAzC,EAA4Cj5B,CAAC,GAAGiW,IAAhD,EAAsD,EAAEjW,CAAxD,EAA2D;AACzDg3B,IAAAA,MAAM,GAAGb,KAAK,CAACn2B,CAAD,CAAd;AACA+1B,IAAAA,GAAG,GAAGiB,MAAM,CAACjB,GAAb;AACAA,IAAAA,GAAG,CAACtkB,MAAJ,CACEulB,MAAM,CAAC5P,KAAP,IAAgBvH,SAAS,CAACnd,CAD5B,EAEEs0B,MAAM,CAAC7P,MAAP,IAAiBtH,SAAS,CAAC/e,CAF7B,EAGE63B,UAAU,CAAC3B,MAAM,CAACvR,UAAR,EAAoB5F,SAApB,CAHZ;AAKA,UAAM;AAACyY,MAAAA,IAAD;AAAOC,MAAAA;AAAP,QAAgBT,UAAU,CAACjY,SAAD,EAAYgX,MAAZ,EAAoBG,MAApB,EAA4Bpf,MAA5B,CAAhC;AACAqhB,IAAAA,KAAK,IAAIX,IAAI,IAAIU,UAAU,CAACprB,MAA5B;AACA4iB,IAAAA,OAAO,GAAGA,OAAO,IAAI+H,KAArB;;AACA,QAAI,CAACxC,GAAG,CAACkB,QAAT,EAAmB;AACjB+B,MAAAA,UAAU,CAACpqB,IAAX,CAAgBooB,MAAhB;AACD;AACF;;AACD,SAAOiC,KAAK,IAAIF,QAAQ,CAACC,UAAD,EAAanZ,SAAb,EAAwBgX,MAAxB,EAAgCjf,MAAhC,CAAjB,IAA4D4Y,OAAnE;AACD;;AACD,SAAS0I,UAAT,CAAoBnD,GAApB,EAAyBrgB,IAAzB,EAA+BH,GAA/B,EAAoC6R,KAApC,EAA2CD,MAA3C,EAAmD;AACjD4O,EAAAA,GAAG,CAACxgB,GAAJ,GAAUA,GAAV;AACAwgB,EAAAA,GAAG,CAACrgB,IAAJ,GAAWA,IAAX;AACAqgB,EAAAA,GAAG,CAACvgB,KAAJ,GAAYE,IAAI,GAAG0R,KAAnB;AACA2O,EAAAA,GAAG,CAACtgB,MAAJ,GAAaF,GAAG,GAAG4R,MAAnB;AACA4O,EAAAA,GAAG,CAAC3O,KAAJ,GAAYA,KAAZ;AACA2O,EAAAA,GAAG,CAAC5O,MAAJ,GAAaA,MAAb;AACD;;AACD,SAASgS,UAAT,CAAoBhD,KAApB,EAA2BtW,SAA3B,EAAsCgX,MAAtC,EAA8Cjf,MAA9C,EAAsD;AACpD,QAAMwhB,WAAW,GAAGvC,MAAM,CAACwC,OAA3B;AACA,MAAI;AAACz2B,IAAAA,CAAD;AAAIE,IAAAA;AAAJ,MAAS+c,SAAb;;AACA,OAAK,MAAMmX,MAAX,IAAqBb,KAArB,EAA4B;AAC1B,UAAMJ,GAAG,GAAGiB,MAAM,CAACjB,GAAnB;AACA,UAAM3f,KAAK,GAAGwB,MAAM,CAACof,MAAM,CAAC5gB,KAAR,CAAN,IAAwB;AAACuH,MAAAA,KAAK,EAAE,CAAR;AAAWgZ,MAAAA,MAAM,EAAE,CAAnB;AAAsBpJ,MAAAA,MAAM,EAAE;AAA9B,KAAtC;AACA,UAAMA,MAAM,GAAIyJ,MAAM,CAACX,WAAP,GAAqBjgB,KAAK,CAACmX,MAA5B,IAAuC,CAAtD;;AACA,QAAIyJ,MAAM,CAACvR,UAAX,EAAuB;AACrB,YAAM2B,KAAK,GAAGvH,SAAS,CAACnd,CAAV,GAAc6qB,MAA5B;AACA,YAAMpG,MAAM,GAAG/Q,KAAK,CAAC1B,IAAN,IAAcqhB,GAAG,CAAC5O,MAAjC;;AACA,UAAIpmB,OAAO,CAACqV,KAAK,CAACnJ,KAAP,CAAX,EAA0B;AACxBnK,QAAAA,CAAC,GAAGsT,KAAK,CAACnJ,KAAV;AACD;;AACD,UAAI8oB,GAAG,CAACkB,QAAR,EAAkB;AAChBiC,QAAAA,UAAU,CAACnD,GAAD,EAAMqD,WAAW,CAAC1jB,IAAlB,EAAwB5S,CAAxB,EAA2B+zB,MAAM,CAACoB,UAAP,GAAoBmB,WAAW,CAAC5jB,KAAhC,GAAwC4jB,WAAW,CAAC1jB,IAA/E,EAAqFyR,MAArF,CAAV;AACD,OAFD,MAEO;AACL+R,QAAAA,UAAU,CAACnD,GAAD,EAAMlW,SAAS,CAACnK,IAAV,GAAiBU,KAAK,CAACugB,MAA7B,EAAqC7zB,CAArC,EAAwCskB,KAAxC,EAA+CD,MAA/C,CAAV;AACD;;AACD/Q,MAAAA,KAAK,CAACnJ,KAAN,GAAcnK,CAAd;AACAsT,MAAAA,KAAK,CAACugB,MAAN,IAAgBvP,KAAhB;AACAtkB,MAAAA,CAAC,GAAGizB,GAAG,CAACtgB,MAAR;AACD,KAdD,MAcO;AACL,YAAM0R,MAAM,GAAGtH,SAAS,CAAC/e,CAAV,GAAcysB,MAA7B;AACA,YAAMnG,KAAK,GAAGhR,KAAK,CAAC1B,IAAN,IAAcqhB,GAAG,CAAC3O,KAAhC;;AACA,UAAIrmB,OAAO,CAACqV,KAAK,CAACnJ,KAAP,CAAX,EAA0B;AACxBrK,QAAAA,CAAC,GAAGwT,KAAK,CAACnJ,KAAV;AACD;;AACD,UAAI8oB,GAAG,CAACkB,QAAR,EAAkB;AAChBiC,QAAAA,UAAU,CAACnD,GAAD,EAAMnzB,CAAN,EAASw2B,WAAW,CAAC7jB,GAArB,EAA0B6R,KAA1B,EAAiCyP,MAAM,CAACsB,WAAP,GAAqBiB,WAAW,CAAC3jB,MAAjC,GAA0C2jB,WAAW,CAAC7jB,GAAvF,CAAV;AACD,OAFD,MAEO;AACL2jB,QAAAA,UAAU,CAACnD,GAAD,EAAMnzB,CAAN,EAASid,SAAS,CAACtK,GAAV,GAAgBa,KAAK,CAACugB,MAA/B,EAAuCvP,KAAvC,EAA8CD,MAA9C,CAAV;AACD;;AACD/Q,MAAAA,KAAK,CAACnJ,KAAN,GAAcrK,CAAd;AACAwT,MAAAA,KAAK,CAACugB,MAAN,IAAgBxP,MAAhB;AACAvkB,MAAAA,CAAC,GAAGmzB,GAAG,CAACvgB,KAAR;AACD;AACF;;AACDqK,EAAAA,SAAS,CAACjd,CAAV,GAAcA,CAAd;AACAid,EAAAA,SAAS,CAAC/c,CAAV,GAAcA,CAAd;AACD;;AACD/C,QAAQ,CAACyO,GAAT,CAAa,QAAb,EAAuB;AACrB6qB,EAAAA,OAAO,EAAE;AACP9jB,IAAAA,GAAG,EAAE,CADE;AAEPC,IAAAA,KAAK,EAAE,CAFA;AAGPC,IAAAA,MAAM,EAAE,CAHD;AAIPC,IAAAA,IAAI,EAAE;AAJC;AADY,CAAvB;AAQA,IAAI6gB,OAAO,GAAG;AACZ+C,EAAAA,MAAM,CAACntB,KAAD,EAAQ2B,IAAR,EAAc;AAClB,QAAI,CAAC3B,KAAK,CAACgqB,KAAX,EAAkB;AAChBhqB,MAAAA,KAAK,CAACgqB,KAAN,GAAc,EAAd;AACD;;AACDroB,IAAAA,IAAI,CAACmpB,QAAL,GAAgBnpB,IAAI,CAACmpB,QAAL,IAAiB,KAAjC;AACAnpB,IAAAA,IAAI,CAACkmB,QAAL,GAAgBlmB,IAAI,CAACkmB,QAAL,IAAiB,KAAjC;AACAlmB,IAAAA,IAAI,CAACyf,MAAL,GAAczf,IAAI,CAACyf,MAAL,IAAe,CAA7B;;AACAzf,IAAAA,IAAI,CAACyrB,OAAL,GAAezrB,IAAI,CAACyrB,OAAL,IAAgB,YAAW;AACxC,aAAO,CAAC;AACNv2B,QAAAA,CAAC,EAAE,CADG;;AAEN6K,QAAAA,IAAI,CAACgS,SAAD,EAAY;AACd/R,UAAAA,IAAI,CAACD,IAAL,CAAUgS,SAAV;AACD;;AAJK,OAAD,CAAP;AAMD,KAPD;;AAQA1T,IAAAA,KAAK,CAACgqB,KAAN,CAAYvnB,IAAZ,CAAiBd,IAAjB;AACD,GAjBW;;AAkBZ0rB,EAAAA,SAAS,CAACrtB,KAAD,EAAQstB,UAAR,EAAoB;AAC3B,UAAMvjB,KAAK,GAAG/J,KAAK,CAACgqB,KAAN,GAAchqB,KAAK,CAACgqB,KAAN,CAAYzO,OAAZ,CAAoB+R,UAApB,CAAd,GAAgD,CAAC,CAA/D;;AACA,QAAIvjB,KAAK,KAAK,CAAC,CAAf,EAAkB;AAChB/J,MAAAA,KAAK,CAACgqB,KAAN,CAAY5T,MAAZ,CAAmBrM,KAAnB,EAA0B,CAA1B;AACD;AACF,GAvBW;;AAwBZ1C,EAAAA,SAAS,CAACrH,KAAD,EAAQ2B,IAAR,EAAckG,OAAd,EAAuB;AAC9BlG,IAAAA,IAAI,CAACmpB,QAAL,GAAgBjjB,OAAO,CAACijB,QAAxB;AACAnpB,IAAAA,IAAI,CAACkmB,QAAL,GAAgBhgB,OAAO,CAACggB,QAAxB;AACAlmB,IAAAA,IAAI,CAACyf,MAAL,GAAcvZ,OAAO,CAACuZ,MAAtB;AACD,GA5BW;;AA6BZ9b,EAAAA,MAAM,CAACtF,KAAD,EAAQib,KAAR,EAAeD,MAAf,EAAuBuS,UAAvB,EAAmC;AACvC,QAAI,CAACvtB,KAAL,EAAY;AACV;AACD;;AACD,UAAMktB,OAAO,GAAGl2B,SAAS,CAACgJ,KAAK,CAAC6H,OAAN,CAAcgjB,MAAd,CAAqBqC,OAAtB,CAAzB;AACA,UAAMnC,cAAc,GAAGnqB,IAAI,CAACmC,GAAL,CAASkY,KAAK,GAAGiS,OAAO,CAACjS,KAAzB,EAAgC,CAAhC,CAAvB;AACA,UAAM+P,eAAe,GAAGpqB,IAAI,CAACmC,GAAL,CAASiY,MAAM,GAAGkS,OAAO,CAAClS,MAA1B,EAAkC,CAAlC,CAAxB;AACA,UAAMgP,KAAK,GAAGiB,gBAAgB,CAACjrB,KAAK,CAACgqB,KAAP,CAA9B;AACA,UAAMwD,aAAa,GAAGxD,KAAK,CAACsB,QAA5B;AACA,UAAMmC,eAAe,GAAGzD,KAAK,CAAC1Q,UAA9B;AACApiB,IAAAA,IAAI,CAAC8I,KAAK,CAACgqB,KAAP,EAAcJ,GAAG,IAAI;AACvB,UAAI,OAAOA,GAAG,CAAC8D,YAAX,KAA4B,UAAhC,EAA4C;AAC1C9D,QAAAA,GAAG,CAAC8D,YAAJ;AACD;AACF,KAJG,CAAJ;AAKA,UAAMC,uBAAuB,GAAGH,aAAa,CAAC5qB,MAAd,CAAqB,CAACsd,KAAD,EAAQmK,IAAR,KACnDA,IAAI,CAACT,GAAL,CAAS/hB,OAAT,IAAoBwiB,IAAI,CAACT,GAAL,CAAS/hB,OAAT,CAAiBud,OAAjB,KAA6B,KAAjD,GAAyDlF,KAAzD,GAAiEA,KAAK,GAAG,CAD3C,EAC8C,CAD9C,KACoD,CADpF;AAEA,UAAMwK,MAAM,GAAGvkB,MAAM,CAACuO,MAAP,CAAc;AAC3BoX,MAAAA,UAAU,EAAE7Q,KADe;AAE3B+Q,MAAAA,WAAW,EAAEhR,MAFc;AAG3BkS,MAAAA,OAH2B;AAI3BnC,MAAAA,cAJ2B;AAK3BC,MAAAA,eAL2B;AAM3BL,MAAAA,YAAY,EAAEI,cAAc,GAAG,CAAjB,GAAqB4C,uBANR;AAO3B/C,MAAAA,aAAa,EAAEI,eAAe,GAAG;AAPN,KAAd,CAAf;AASA,UAAMQ,UAAU,GAAGrlB,MAAM,CAACqC,MAAP,CAAc,EAAd,EAAkB0kB,OAAlB,CAAnB;AACAzB,IAAAA,gBAAgB,CAACD,UAAD,EAAax0B,SAAS,CAACu2B,UAAD,CAAtB,CAAhB;AACA,UAAM7Z,SAAS,GAAGvN,MAAM,CAACqC,MAAP,CAAc;AAC9BgjB,MAAAA,UAD8B;AAE9Bj1B,MAAAA,CAAC,EAAEw0B,cAF2B;AAG9Bp2B,MAAAA,CAAC,EAAEq2B,eAH2B;AAI9Bv0B,MAAAA,CAAC,EAAEy2B,OAAO,CAAC3jB,IAJmB;AAK9B5S,MAAAA,CAAC,EAAEu2B,OAAO,CAAC9jB;AALmB,KAAd,EAMf8jB,OANe,CAAlB;AAOA,UAAMzhB,MAAM,GAAGgf,aAAa,CAAC+C,aAAa,CAACxW,MAAd,CAAqByW,eAArB,CAAD,EAAwC/C,MAAxC,CAA5B;AACAkC,IAAAA,QAAQ,CAAC5C,KAAK,CAACc,QAAP,EAAiBpX,SAAjB,EAA4BgX,MAA5B,EAAoCjf,MAApC,CAAR;AACAmhB,IAAAA,QAAQ,CAACY,aAAD,EAAgB9Z,SAAhB,EAA2BgX,MAA3B,EAAmCjf,MAAnC,CAAR;;AACA,QAAImhB,QAAQ,CAACa,eAAD,EAAkB/Z,SAAlB,EAA6BgX,MAA7B,EAAqCjf,MAArC,CAAZ,EAA0D;AACxDmhB,MAAAA,QAAQ,CAACY,aAAD,EAAgB9Z,SAAhB,EAA2BgX,MAA3B,EAAmCjf,MAAnC,CAAR;AACD;;AACD4gB,IAAAA,gBAAgB,CAAC3Y,SAAD,CAAhB;AACAsZ,IAAAA,UAAU,CAAChD,KAAK,CAACoB,UAAP,EAAmB1X,SAAnB,EAA8BgX,MAA9B,EAAsCjf,MAAtC,CAAV;AACAiI,IAAAA,SAAS,CAACjd,CAAV,IAAeid,SAAS,CAACnd,CAAzB;AACAmd,IAAAA,SAAS,CAAC/c,CAAV,IAAe+c,SAAS,CAAC/e,CAAzB;AACAq4B,IAAAA,UAAU,CAAChD,KAAK,CAACqB,cAAP,EAAuB3X,SAAvB,EAAkCgX,MAAlC,EAA0Cjf,MAA1C,CAAV;AACAzL,IAAAA,KAAK,CAAC0T,SAAN,GAAkB;AAChBnK,MAAAA,IAAI,EAAEmK,SAAS,CAACnK,IADA;AAEhBH,MAAAA,GAAG,EAAEsK,SAAS,CAACtK,GAFC;AAGhBC,MAAAA,KAAK,EAAEqK,SAAS,CAACnK,IAAV,GAAiBmK,SAAS,CAACnd,CAHlB;AAIhB+S,MAAAA,MAAM,EAAEoK,SAAS,CAACtK,GAAV,GAAgBsK,SAAS,CAAC/e,CAJlB;AAKhBqmB,MAAAA,MAAM,EAAEtH,SAAS,CAAC/e,CALF;AAMhBsmB,MAAAA,KAAK,EAAEvH,SAAS,CAACnd;AAND,KAAlB;AAQAW,IAAAA,IAAI,CAAC8yB,KAAK,CAACtW,SAAP,EAAmBmX,MAAD,IAAY;AAChC,YAAMjB,GAAG,GAAGiB,MAAM,CAACjB,GAAnB;AACAzjB,MAAAA,MAAM,CAACqC,MAAP,CAAcohB,GAAd,EAAmB5pB,KAAK,CAAC0T,SAAzB;AACAkW,MAAAA,GAAG,CAACtkB,MAAJ,CAAWoO,SAAS,CAACnd,CAArB,EAAwBmd,SAAS,CAAC/e,CAAlC;AACD,KAJG,CAAJ;AAKD;;AAxFW,CAAd;;AA2FA,MAAMi5B,YAAN,CAAmB;AACjBC,EAAAA,cAAc,CAACC,MAAD,EAASzM,WAAT,EAAsB,CAAE;;AACtC0M,EAAAA,cAAc,CAACha,OAAD,EAAU;AACtB,WAAO,KAAP;AACD;;AACDia,EAAAA,gBAAgB,CAAChuB,KAAD,EAAQG,IAAR,EAAc8tB,QAAd,EAAwB,CAAE;;AAC1CC,EAAAA,mBAAmB,CAACluB,KAAD,EAAQG,IAAR,EAAc8tB,QAAd,EAAwB,CAAE;;AAC7CE,EAAAA,mBAAmB,GAAG;AACpB,WAAO,CAAP;AACD;;AACD/2B,EAAAA,cAAc,CAACkW,OAAD,EAAU2N,KAAV,EAAiBD,MAAjB,EAAyBqG,WAAzB,EAAsC;AAClDpG,IAAAA,KAAK,GAAGra,IAAI,CAACmC,GAAL,CAAS,CAAT,EAAYkY,KAAK,IAAI3N,OAAO,CAAC2N,KAA7B,CAAR;AACAD,IAAAA,MAAM,GAAGA,MAAM,IAAI1N,OAAO,CAAC0N,MAA3B;AACA,WAAO;AACLC,MAAAA,KADK;AAELD,MAAAA,MAAM,EAAEpa,IAAI,CAACmC,GAAL,CAAS,CAAT,EAAYse,WAAW,GAAGzgB,IAAI,CAACgE,KAAL,CAAWqW,KAAK,GAAGoG,WAAnB,CAAH,GAAqCrG,MAA5D;AAFH,KAAP;AAID;;AACDoT,EAAAA,UAAU,CAACN,MAAD,EAAS;AACjB,WAAO,IAAP;AACD;;AApBgB;;AAuBnB,MAAMO,aAAN,SAA4BT,YAA5B,CAAyC;AACvCC,EAAAA,cAAc,CAAClsB,IAAD,EAAO;AACnB,WAAOA,IAAI,IAAIA,IAAI,CAAC0P,UAAb,IAA2B1P,IAAI,CAAC0P,UAAL,CAAgB,IAAhB,CAA3B,IAAoD,IAA3D;AACD;;AAHsC;;AAMzC,MAAMid,WAAW,GAAG,UAApB;AACA,MAAMC,WAAW,GAAG;AAClBC,EAAAA,UAAU,EAAE,WADM;AAElBC,EAAAA,SAAS,EAAE,WAFO;AAGlBC,EAAAA,QAAQ,EAAE,SAHQ;AAIlBC,EAAAA,YAAY,EAAE,YAJI;AAKlBC,EAAAA,WAAW,EAAE,WALK;AAMlBC,EAAAA,WAAW,EAAE,WANK;AAOlBC,EAAAA,SAAS,EAAE,SAPO;AAQlBC,EAAAA,YAAY,EAAE,UARI;AASlBC,EAAAA,UAAU,EAAE;AATM,CAApB;;AAWA,MAAMC,aAAa,GAAG3mB,KAAK,IAAIA,KAAK,KAAK,IAAV,IAAkBA,KAAK,KAAK,EAA3D;;AACA,SAAS4mB,UAAT,CAAoBpB,MAApB,EAA4BzM,WAA5B,EAAyC;AACvC,QAAMK,KAAK,GAAGoM,MAAM,CAACpM,KAArB;AACA,QAAMyN,YAAY,GAAGrB,MAAM,CAACsB,YAAP,CAAoB,QAApB,CAArB;AACA,QAAMC,WAAW,GAAGvB,MAAM,CAACsB,YAAP,CAAoB,OAApB,CAApB;AACAtB,EAAAA,MAAM,CAACQ,WAAD,CAAN,GAAsB;AACpB5tB,IAAAA,OAAO,EAAE;AACPsa,MAAAA,MAAM,EAAEmU,YADD;AAEPlU,MAAAA,KAAK,EAAEoU,WAFA;AAGP3N,MAAAA,KAAK,EAAE;AACL0D,QAAAA,OAAO,EAAE1D,KAAK,CAAC0D,OADV;AAELpK,QAAAA,MAAM,EAAE0G,KAAK,CAAC1G,MAFT;AAGLC,QAAAA,KAAK,EAAEyG,KAAK,CAACzG;AAHR;AAHA;AADW,GAAtB;AAWAyG,EAAAA,KAAK,CAAC0D,OAAN,GAAgB1D,KAAK,CAAC0D,OAAN,IAAiB,OAAjC;AACA1D,EAAAA,KAAK,CAAC4N,SAAN,GAAkB5N,KAAK,CAAC4N,SAAN,IAAmB,YAArC;;AACA,MAAIL,aAAa,CAACI,WAAD,CAAjB,EAAgC;AAC9B,UAAME,YAAY,GAAG/3B,YAAY,CAACs2B,MAAD,EAAS,OAAT,CAAjC;;AACA,QAAIyB,YAAY,KAAKzvB,SAArB,EAAgC;AAC9BguB,MAAAA,MAAM,CAAC7S,KAAP,GAAesU,YAAf;AACD;AACF;;AACD,MAAIN,aAAa,CAACE,YAAD,CAAjB,EAAiC;AAC/B,QAAIrB,MAAM,CAACpM,KAAP,CAAa1G,MAAb,KAAwB,EAA5B,EAAgC;AAC9B8S,MAAAA,MAAM,CAAC9S,MAAP,GAAgB8S,MAAM,CAAC7S,KAAP,IAAgBoG,WAAW,IAAI,CAA/B,CAAhB;AACD,KAFD,MAEO;AACL,YAAMmO,aAAa,GAAGh4B,YAAY,CAACs2B,MAAD,EAAS,QAAT,CAAlC;;AACA,UAAI0B,aAAa,KAAK1vB,SAAtB,EAAiC;AAC/BguB,QAAAA,MAAM,CAAC9S,MAAP,GAAgBwU,aAAhB;AACD;AACF;AACF;;AACD,SAAO1B,MAAP;AACD;;AACD,MAAM2B,oBAAoB,GAAG73B,4BAA4B,GAAG;AAAC83B,EAAAA,OAAO,EAAE;AAAV,CAAH,GAAqB,KAA9E;;AACA,SAASC,WAAT,CAAqBC,IAArB,EAA2BzvB,IAA3B,EAAiC8tB,QAAjC,EAA2C;AACzC2B,EAAAA,IAAI,CAAC5B,gBAAL,CAAsB7tB,IAAtB,EAA4B8tB,QAA5B,EAAsCwB,oBAAtC;AACD;;AACD,SAASI,cAAT,CAAwB7vB,KAAxB,EAA+BG,IAA/B,EAAqC8tB,QAArC,EAA+C;AAC7CjuB,EAAAA,KAAK,CAAC8tB,MAAN,CAAaI,mBAAb,CAAiC/tB,IAAjC,EAAuC8tB,QAAvC,EAAiDwB,oBAAjD;AACD;;AACD,SAASK,eAAT,CAAyBvtB,KAAzB,EAAgCvC,KAAhC,EAAuC;AACrC,QAAMG,IAAI,GAAGouB,WAAW,CAAChsB,KAAK,CAACpC,IAAP,CAAX,IAA2BoC,KAAK,CAACpC,IAA9C;AACA,QAAM;AAAC1J,IAAAA,CAAD;AAAIE,IAAAA;AAAJ,MAASD,qBAAqB,CAAC6L,KAAD,EAAQvC,KAAR,CAApC;AACA,SAAO;AACLG,IAAAA,IADK;AAELH,IAAAA,KAFK;AAGL+vB,IAAAA,MAAM,EAAExtB,KAHH;AAIL9L,IAAAA,CAAC,EAAEA,CAAC,KAAKqJ,SAAN,GAAkBrJ,CAAlB,GAAsB,IAJpB;AAKLE,IAAAA,CAAC,EAAEA,CAAC,KAAKmJ,SAAN,GAAkBnJ,CAAlB,GAAsB;AALpB,GAAP;AAOD;;AACD,SAASq5B,oBAAT,CAA8BhwB,KAA9B,EAAqCG,IAArC,EAA2C8tB,QAA3C,EAAqD;AACnD,QAAMH,MAAM,GAAG9tB,KAAK,CAAC8tB,MAArB;;AACA,QAAMmC,SAAS,GAAGnC,MAAM,IAAIx2B,cAAc,CAACw2B,MAAD,CAA1C;;AACA,QAAMxgB,OAAO,GAAG2iB,SAAS,IAAInC,MAA7B;AACA,QAAMoC,QAAQ,GAAG,IAAIC,gBAAJ,CAAqBC,OAAO,IAAI;AAC/C,UAAMljB,MAAM,GAAG5V,cAAc,CAACgW,OAAD,CAA7B;;AACA8iB,IAAAA,OAAO,CAAC5vB,OAAR,CAAgBgY,KAAK,IAAI;AACvB,WAAK,IAAI3kB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG2kB,KAAK,CAAC6X,UAAN,CAAiB5uB,MAArC,EAA6C5N,CAAC,EAA9C,EAAkD;AAChD,cAAMy8B,KAAK,GAAG9X,KAAK,CAAC6X,UAAN,CAAiBx8B,CAAjB,CAAd;;AACA,YAAIy8B,KAAK,KAAKhjB,OAAV,IAAqBgjB,KAAK,KAAKpjB,MAAnC,EAA2C;AACzC+gB,UAAAA,QAAQ,CAACzV,KAAK,CAACpU,MAAP,CAAR;AACD;AACF;AACF,KAPD;AAQD,GAVgB,CAAjB;AAWA8rB,EAAAA,QAAQ,CAACK,OAAT,CAAiBC,QAAjB,EAA2B;AAACC,IAAAA,SAAS,EAAE,IAAZ;AAAkBC,IAAAA,OAAO,EAAE;AAA3B,GAA3B;AACA,SAAOR,QAAP;AACD;;AACD,SAASS,oBAAT,CAA8B3wB,KAA9B,EAAqCG,IAArC,EAA2C8tB,QAA3C,EAAqD;AACnD,QAAMH,MAAM,GAAG9tB,KAAK,CAAC8tB,MAArB;;AACA,QAAMmC,SAAS,GAAGnC,MAAM,IAAIx2B,cAAc,CAACw2B,MAAD,CAA1C;;AACA,MAAI,CAACmC,SAAL,EAAgB;AACd;AACD;;AACD,QAAMC,QAAQ,GAAG,IAAIC,gBAAJ,CAAqBC,OAAO,IAAI;AAC/CA,IAAAA,OAAO,CAAC5vB,OAAR,CAAgBgY,KAAK,IAAI;AACvB,WAAK,IAAI3kB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG2kB,KAAK,CAACoY,YAAN,CAAmBnvB,MAAvC,EAA+C5N,CAAC,EAAhD,EAAoD;AAClD,YAAI2kB,KAAK,CAACoY,YAAN,CAAmB/8B,CAAnB,MAA0Bi6B,MAA9B,EAAsC;AACpCG,UAAAA,QAAQ;AACR;AACD;AACF;AACF,KAPD;AAQD,GATgB,CAAjB;AAUAiC,EAAAA,QAAQ,CAACK,OAAT,CAAiBN,SAAjB,EAA4B;AAACQ,IAAAA,SAAS,EAAE;AAAZ,GAA5B;AACA,SAAOP,QAAP;AACD;;AACD,MAAMW,kBAAkB,GAAG,IAAIlxB,GAAJ,EAA3B;AACA,IAAImxB,mBAAmB,GAAG,CAA1B;;AACA,SAASC,cAAT,GAA0B;AACxB,QAAMC,GAAG,GAAG9vB,MAAM,CAAC+vB,gBAAnB;;AACA,MAAID,GAAG,KAAKF,mBAAZ,EAAiC;AAC/B;AACD;;AACDA,EAAAA,mBAAmB,GAAGE,GAAtB;AACAH,EAAAA,kBAAkB,CAACrwB,OAAnB,CAA2B,CAACoG,MAAD,EAAS5G,KAAT,KAAmB;AAC5C,QAAIA,KAAK,CAACkxB,uBAAN,KAAkCF,GAAtC,EAA2C;AACzCpqB,MAAAA,MAAM;AACP;AACF,GAJD;AAKD;;AACD,SAASuqB,6BAAT,CAAuCnxB,KAAvC,EAA8C4G,MAA9C,EAAsD;AACpD,MAAI,CAACiqB,kBAAkB,CAACtoB,IAAxB,EAA8B;AAC5BrH,IAAAA,MAAM,CAAC8sB,gBAAP,CAAwB,QAAxB,EAAkC+C,cAAlC;AACD;;AACDF,EAAAA,kBAAkB,CAACxuB,GAAnB,CAAuBrC,KAAvB,EAA8B4G,MAA9B;AACD;;AACD,SAASwqB,+BAAT,CAAyCpxB,KAAzC,EAAgD;AAC9C6wB,EAAAA,kBAAkB,CAACztB,MAAnB,CAA0BpD,KAA1B;;AACA,MAAI,CAAC6wB,kBAAkB,CAACtoB,IAAxB,EAA8B;AAC5BrH,IAAAA,MAAM,CAACgtB,mBAAP,CAA2B,QAA3B,EAAqC6C,cAArC;AACD;AACF;;AACD,SAASM,oBAAT,CAA8BrxB,KAA9B,EAAqCG,IAArC,EAA2C8tB,QAA3C,EAAqD;AACnD,QAAMH,MAAM,GAAG9tB,KAAK,CAAC8tB,MAArB;;AACA,QAAMmC,SAAS,GAAGnC,MAAM,IAAIx2B,cAAc,CAACw2B,MAAD,CAA1C;;AACA,MAAI,CAACmC,SAAL,EAAgB;AACd;AACD;;AACD,QAAMrpB,MAAM,GAAGlP,SAAS,CAAC,CAACujB,KAAD,EAAQD,MAAR,KAAmB;AAC1C,UAAMzkB,CAAC,GAAG05B,SAAS,CAACqB,WAApB;AACArD,IAAAA,QAAQ,CAAChT,KAAD,EAAQD,MAAR,CAAR;;AACA,QAAIzkB,CAAC,GAAG05B,SAAS,CAACqB,WAAlB,EAA+B;AAC7BrD,MAAAA,QAAQ;AACT;AACF,GANuB,EAMrB/sB,MANqB,CAAxB;AAOA,QAAMgvB,QAAQ,GAAG,IAAIqB,cAAJ,CAAmBnB,OAAO,IAAI;AAC7C,UAAM5X,KAAK,GAAG4X,OAAO,CAAC,CAAD,CAArB;AACA,UAAMnV,KAAK,GAAGzC,KAAK,CAACgZ,WAAN,CAAkBvW,KAAhC;AACA,UAAMD,MAAM,GAAGxC,KAAK,CAACgZ,WAAN,CAAkBxW,MAAjC;;AACA,QAAIC,KAAK,KAAK,CAAV,IAAeD,MAAM,KAAK,CAA9B,EAAiC;AAC/B;AACD;;AACDpU,IAAAA,MAAM,CAACqU,KAAD,EAAQD,MAAR,CAAN;AACD,GARgB,CAAjB;AASAkV,EAAAA,QAAQ,CAACK,OAAT,CAAiBN,SAAjB;AACAkB,EAAAA,6BAA6B,CAACnxB,KAAD,EAAQ4G,MAAR,CAA7B;AACA,SAAOspB,QAAP;AACD;;AACD,SAASuB,eAAT,CAAyBzxB,KAAzB,EAAgCG,IAAhC,EAAsC+vB,QAAtC,EAAgD;AAC9C,MAAIA,QAAJ,EAAc;AACZA,IAAAA,QAAQ,CAACwB,UAAT;AACD;;AACD,MAAIvxB,IAAI,KAAK,QAAb,EAAuB;AACrBixB,IAAAA,+BAA+B,CAACpxB,KAAD,CAA/B;AACD;AACF;;AACD,SAAS2xB,oBAAT,CAA8B3xB,KAA9B,EAAqCG,IAArC,EAA2C8tB,QAA3C,EAAqD;AACnD,QAAMH,MAAM,GAAG9tB,KAAK,CAAC8tB,MAArB;AACA,QAAM8D,KAAK,GAAGl6B,SAAS,CAAE6K,KAAD,IAAW;AACjC,QAAIvC,KAAK,CAACiO,GAAN,KAAc,IAAlB,EAAwB;AACtBggB,MAAAA,QAAQ,CAAC6B,eAAe,CAACvtB,KAAD,EAAQvC,KAAR,CAAhB,CAAR;AACD;AACF,GAJsB,EAIpBA,KAJoB,EAIZ6xB,IAAD,IAAU;AAClB,UAAMtvB,KAAK,GAAGsvB,IAAI,CAAC,CAAD,CAAlB;AACA,WAAO,CAACtvB,KAAD,EAAQA,KAAK,CAACub,OAAd,EAAuBvb,KAAK,CAACwb,OAA7B,CAAP;AACD,GAPsB,CAAvB;AAQA4R,EAAAA,WAAW,CAAC7B,MAAD,EAAS3tB,IAAT,EAAeyxB,KAAf,CAAX;AACA,SAAOA,KAAP;AACD;;AACD,MAAME,WAAN,SAA0BlE,YAA1B,CAAuC;AACrCC,EAAAA,cAAc,CAACC,MAAD,EAASzM,WAAT,EAAsB;AAClC,UAAMtN,OAAO,GAAG+Z,MAAM,IAAIA,MAAM,CAACzc,UAAjB,IAA+Byc,MAAM,CAACzc,UAAP,CAAkB,IAAlB,CAA/C;;AACA,QAAI0C,OAAO,IAAIA,OAAO,CAAC+Z,MAAR,KAAmBA,MAAlC,EAA0C;AACxCoB,MAAAA,UAAU,CAACpB,MAAD,EAASzM,WAAT,CAAV;AACA,aAAOtN,OAAP;AACD;;AACD,WAAO,IAAP;AACD;;AACDga,EAAAA,cAAc,CAACha,OAAD,EAAU;AACtB,UAAM+Z,MAAM,GAAG/Z,OAAO,CAAC+Z,MAAvB;;AACA,QAAI,CAACA,MAAM,CAACQ,WAAD,CAAX,EAA0B;AACxB,aAAO,KAAP;AACD;;AACD,UAAM5tB,OAAO,GAAGotB,MAAM,CAACQ,WAAD,CAAN,CAAoB5tB,OAApC;AACA,KAAC,QAAD,EAAW,OAAX,EAAoBF,OAApB,CAA6B6D,IAAD,IAAU;AACpC,YAAMiE,KAAK,GAAG5H,OAAO,CAAC2D,IAAD,CAArB;;AACA,UAAIrP,aAAa,CAACsT,KAAD,CAAjB,EAA0B;AACxBwlB,QAAAA,MAAM,CAACiE,eAAP,CAAuB1tB,IAAvB;AACD,OAFD,MAEO;AACLypB,QAAAA,MAAM,CAACkE,YAAP,CAAoB3tB,IAApB,EAA0BiE,KAA1B;AACD;AACF,KAPD;AAQA,UAAMoZ,KAAK,GAAGhhB,OAAO,CAACghB,KAAR,IAAiB,EAA/B;AACAvb,IAAAA,MAAM,CAACC,IAAP,CAAYsb,KAAZ,EAAmBlhB,OAAnB,CAA4BgH,GAAD,IAAS;AAClCsmB,MAAAA,MAAM,CAACpM,KAAP,CAAala,GAAb,IAAoBka,KAAK,CAACla,GAAD,CAAzB;AACD,KAFD;AAGAsmB,IAAAA,MAAM,CAAC7S,KAAP,GAAe6S,MAAM,CAAC7S,KAAtB;AACA,WAAO6S,MAAM,CAACQ,WAAD,CAAb;AACA,WAAO,IAAP;AACD;;AACDN,EAAAA,gBAAgB,CAAChuB,KAAD,EAAQG,IAAR,EAAc8tB,QAAd,EAAwB;AACtC,SAAKC,mBAAL,CAAyBluB,KAAzB,EAAgCG,IAAhC;AACA,UAAM8xB,OAAO,GAAGjyB,KAAK,CAACkyB,QAAN,KAAmBlyB,KAAK,CAACkyB,QAAN,GAAiB,EAApC,CAAhB;AACA,UAAMC,QAAQ,GAAG;AACfC,MAAAA,MAAM,EAAEpC,oBADO;AAEfqC,MAAAA,MAAM,EAAE1B,oBAFO;AAGf/pB,MAAAA,MAAM,EAAEyqB;AAHO,KAAjB;AAKA,UAAMnK,OAAO,GAAGiL,QAAQ,CAAChyB,IAAD,CAAR,IAAkBwxB,oBAAlC;AACAM,IAAAA,OAAO,CAAC9xB,IAAD,CAAP,GAAgB+mB,OAAO,CAAClnB,KAAD,EAAQG,IAAR,EAAc8tB,QAAd,CAAvB;AACD;;AACDC,EAAAA,mBAAmB,CAACluB,KAAD,EAAQG,IAAR,EAAc;AAC/B,UAAM8xB,OAAO,GAAGjyB,KAAK,CAACkyB,QAAN,KAAmBlyB,KAAK,CAACkyB,QAAN,GAAiB,EAApC,CAAhB;AACA,UAAMN,KAAK,GAAGK,OAAO,CAAC9xB,IAAD,CAArB;;AACA,QAAI,CAACyxB,KAAL,EAAY;AACV;AACD;;AACD,UAAMO,QAAQ,GAAG;AACfC,MAAAA,MAAM,EAAEX,eADO;AAEfY,MAAAA,MAAM,EAAEZ,eAFO;AAGf7qB,MAAAA,MAAM,EAAE6qB;AAHO,KAAjB;AAKA,UAAMvK,OAAO,GAAGiL,QAAQ,CAAChyB,IAAD,CAAR,IAAkB0vB,cAAlC;AACA3I,IAAAA,OAAO,CAAClnB,KAAD,EAAQG,IAAR,EAAcyxB,KAAd,CAAP;AACAK,IAAAA,OAAO,CAAC9xB,IAAD,CAAP,GAAgBL,SAAhB;AACD;;AACDquB,EAAAA,mBAAmB,GAAG;AACpB,WAAOjtB,MAAM,CAAC+vB,gBAAd;AACD;;AACD75B,EAAAA,cAAc,CAAC02B,MAAD,EAAS7S,KAAT,EAAgBD,MAAhB,EAAwBqG,WAAxB,EAAqC;AACjD,WAAOjqB,cAAc,CAAC02B,MAAD,EAAS7S,KAAT,EAAgBD,MAAhB,EAAwBqG,WAAxB,CAArB;AACD;;AACD+M,EAAAA,UAAU,CAACN,MAAD,EAAS;AACjB,UAAMmC,SAAS,GAAG34B,cAAc,CAACw2B,MAAD,CAAhC;;AACA,WAAO,CAAC,EAAEmC,SAAS,IAAIA,SAAS,CAACqC,WAAzB,CAAR;AACD;;AAlEoC;;AAqEvC,SAASC,eAAT,CAAyBzE,MAAzB,EAAiC;AAC/B,MAAI,CAACh2B,eAAe,EAAhB,IAAuB,OAAO06B,eAAP,KAA2B,WAA3B,IAA0C1E,MAAM,YAAY0E,eAAvF,EAAyG;AACvG,WAAOnE,aAAP;AACD;;AACD,SAAOyD,WAAP;AACD;;AAED,MAAMW,OAAN,CAAc;AACZjzB,EAAAA,WAAW,GAAG;AACZ,SAAK/I,CAAL,GAASqJ,SAAT;AACA,SAAKnJ,CAAL,GAASmJ,SAAT;AACA,SAAKuF,MAAL,GAAc,KAAd;AACA,SAAKwC,OAAL,GAAe/H,SAAf;AACA,SAAKoI,WAAL,GAAmBpI,SAAnB;AACD;;AACD4yB,EAAAA,eAAe,CAAClK,gBAAD,EAAmB;AAChC,UAAM;AAAC/xB,MAAAA,CAAD;AAAIE,MAAAA;AAAJ,QAAS,KAAKg8B,QAAL,CAAc,CAAC,GAAD,EAAM,GAAN,CAAd,EAA0BnK,gBAA1B,CAAf;AACA,WAAO;AAAC/xB,MAAAA,CAAD;AAAIE,MAAAA;AAAJ,KAAP;AACD;;AACDi8B,EAAAA,QAAQ,GAAG;AACT,WAAOx8B,QAAQ,CAAC,KAAKK,CAAN,CAAR,IAAoBL,QAAQ,CAAC,KAAKO,CAAN,CAAnC;AACD;;AACDg8B,EAAAA,QAAQ,CAACvqB,KAAD,EAAQyqB,KAAR,EAAe;AACrB,UAAM7xB,EAAE,GAAG,IAAX;AACA,UAAMf,KAAK,GAAG,KAAKiI,WAAnB;;AACA,QAAI,CAAC2qB,KAAD,IAAU,CAAC5yB,KAAf,EAAsB;AACpB,aAAOe,EAAP;AACD;;AACD,UAAM8xB,GAAG,GAAG,EAAZ;AACA1qB,IAAAA,KAAK,CAAC5H,OAAN,CAAc6D,IAAI,IAAI;AACpByuB,MAAAA,GAAG,CAACzuB,IAAD,CAAH,GAAYpE,KAAK,CAACoE,IAAD,CAAL,IAAepE,KAAK,CAACoE,IAAD,CAAL,CAAYgB,MAAZ,EAAf,GAAsCpF,KAAK,CAACoE,IAAD,CAAL,CAAYc,GAAlD,GAAwDnE,EAAE,CAACqD,IAAD,CAAtE;AACD,KAFD;AAGA,WAAOyuB,GAAP;AACD;;AA1BW;;AA4BdL,OAAO,CAAC7+B,QAAR,GAAmB,EAAnB;AACA6+B,OAAO,CAACM,aAAR,GAAwBjzB,SAAxB;AAEA,MAAMkzB,UAAU,GAAG;AACjBrrB,EAAAA,MAAM,CAACW,KAAD,EAAQ;AACZ,WAAOtU,OAAO,CAACsU,KAAD,CAAP,GAAiBA,KAAjB,GAAyB,KAAKA,KAArC;AACD,GAHgB;;AAIjB2qB,EAAAA,OAAO,CAACC,SAAD,EAAYnpB,KAAZ,EAAmByN,KAAnB,EAA0B;AAC/B,QAAI0b,SAAS,KAAK,CAAlB,EAAqB;AACnB,aAAO,GAAP;AACD;;AACD,UAAMpS,MAAM,GAAG,KAAK9gB,KAAL,CAAW6H,OAAX,CAAmBiZ,MAAlC;AACA,QAAIqS,QAAJ;AACA,QAAIC,KAAK,GAAGF,SAAZ;;AACA,QAAI1b,KAAK,CAAC/V,MAAN,GAAe,CAAnB,EAAsB;AACpB,YAAM4xB,OAAO,GAAGzyB,IAAI,CAACmC,GAAL,CAASnC,IAAI,CAAC0W,GAAL,CAASE,KAAK,CAAC,CAAD,CAAL,CAASlP,KAAlB,CAAT,EAAmC1H,IAAI,CAAC0W,GAAL,CAASE,KAAK,CAACA,KAAK,CAAC/V,MAAN,GAAe,CAAhB,CAAL,CAAwB6G,KAAjC,CAAnC,CAAhB;;AACA,UAAI+qB,OAAO,GAAG,IAAV,IAAkBA,OAAO,GAAG,KAAhC,EAAuC;AACrCF,QAAAA,QAAQ,GAAG,YAAX;AACD;;AACDC,MAAAA,KAAK,GAAGE,cAAc,CAACJ,SAAD,EAAY1b,KAAZ,CAAtB;AACD;;AACD,UAAM+b,QAAQ,GAAGv7B,KAAK,CAAC4I,IAAI,CAAC0W,GAAL,CAAS8b,KAAT,CAAD,CAAtB;AACA,UAAMI,UAAU,GAAG5yB,IAAI,CAACmC,GAAL,CAASnC,IAAI,CAACC,GAAL,CAAS,CAAC,CAAD,GAAKD,IAAI,CAACgE,KAAL,CAAW2uB,QAAX,CAAd,EAAoC,EAApC,CAAT,EAAkD,CAAlD,CAAnB;AACA,UAAM1rB,OAAO,GAAG;AAACsrB,MAAAA,QAAD;AAAWM,MAAAA,qBAAqB,EAAED,UAAlC;AAA8CE,MAAAA,qBAAqB,EAAEF;AAArE,KAAhB;AACArtB,IAAAA,MAAM,CAACqC,MAAP,CAAcX,OAAd,EAAuB,KAAKA,OAAL,CAAa2P,KAAb,CAAmB4O,MAA1C;AACA,WAAOxwB,YAAY,CAACs9B,SAAD,EAAYpS,MAAZ,EAAoBjZ,OAApB,CAAnB;AACD,GAvBgB;;AAwBjB8rB,EAAAA,WAAW,CAACT,SAAD,EAAYnpB,KAAZ,EAAmByN,KAAnB,EAA0B;AACnC,QAAI0b,SAAS,KAAK,CAAlB,EAAqB;AACnB,aAAO,GAAP;AACD;;AACD,UAAM1tB,MAAM,GAAG0tB,SAAS,GAAItyB,IAAI,CAAC0nB,GAAL,CAAS,EAAT,EAAa1nB,IAAI,CAACgE,KAAL,CAAW5M,KAAK,CAACk7B,SAAD,CAAhB,CAAb,CAA5B;;AACA,QAAI1tB,MAAM,KAAK,CAAX,IAAgBA,MAAM,KAAK,CAA3B,IAAgCA,MAAM,KAAK,CAA/C,EAAkD;AAChD,aAAOwtB,UAAU,CAACC,OAAX,CAAmBhyB,IAAnB,CAAwB,IAAxB,EAA8BiyB,SAA9B,EAAyCnpB,KAAzC,EAAgDyN,KAAhD,CAAP;AACD;;AACD,WAAO,EAAP;AACD;;AAjCgB,CAAnB;;AAmCA,SAAS8b,cAAT,CAAwBJ,SAAxB,EAAmC1b,KAAnC,EAA0C;AACxC,MAAI4b,KAAK,GAAG5b,KAAK,CAAC/V,MAAN,GAAe,CAAf,GAAmB+V,KAAK,CAAC,CAAD,CAAL,CAASlP,KAAT,GAAiBkP,KAAK,CAAC,CAAD,CAAL,CAASlP,KAA7C,GAAqDkP,KAAK,CAAC,CAAD,CAAL,CAASlP,KAAT,GAAiBkP,KAAK,CAAC,CAAD,CAAL,CAASlP,KAA3F;;AACA,MAAI1H,IAAI,CAAC0W,GAAL,CAAS8b,KAAT,KAAmB,CAAnB,IAAwBF,SAAS,KAAKtyB,IAAI,CAACgE,KAAL,CAAWsuB,SAAX,CAA1C,EAAiE;AAC/DE,IAAAA,KAAK,GAAGF,SAAS,GAAGtyB,IAAI,CAACgE,KAAL,CAAWsuB,SAAX,CAApB;AACD;;AACD,SAAOE,KAAP;AACD;;AACD,IAAIQ,KAAK,GAAG;AAACZ,EAAAA;AAAD,CAAZ;AAEAp/B,QAAQ,CAACyO,GAAT,CAAa,OAAb,EAAsB;AACpB+iB,EAAAA,OAAO,EAAE,IADW;AAEpB3I,EAAAA,MAAM,EAAE,KAFY;AAGpB1T,EAAAA,OAAO,EAAE,KAHW;AAIpB6T,EAAAA,WAAW,EAAE,KAJO;AAKpBiX,EAAAA,MAAM,EAAE,OALY;AAMpBC,EAAAA,KAAK,EAAE,CANa;AAOpBpX,EAAAA,IAAI,EAAE;AACJ0I,IAAAA,OAAO,EAAE,IADL;AAEJpD,IAAAA,SAAS,EAAE,CAFP;AAGJ+R,IAAAA,UAAU,EAAE,IAHR;AAIJC,IAAAA,eAAe,EAAE,IAJb;AAKJC,IAAAA,SAAS,EAAE,IALP;AAMJC,IAAAA,UAAU,EAAE,CANR;AAOJC,IAAAA,SAAS,EAAE,CAACnmB,IAAD,EAAOnG,OAAP,KAAmBA,OAAO,CAACma,SAPlC;AAQJoS,IAAAA,SAAS,EAAE,CAACpmB,IAAD,EAAOnG,OAAP,KAAmBA,OAAO,CAACnU,KARlC;AASJ+oB,IAAAA,MAAM,EAAE,KATJ;AAUJ4X,IAAAA,UAAU,EAAE,EAVR;AAWJC,IAAAA,gBAAgB,EAAE,GAXd;AAYJtT,IAAAA,WAAW,EAAE;AAZT,GAPc;AAqBpBzD,EAAAA,KAAK,EAAE;AACL6H,IAAAA,OAAO,EAAE,KADJ;AAELzD,IAAAA,IAAI,EAAE,EAFD;AAGLuL,IAAAA,OAAO,EAAE;AACP9jB,MAAAA,GAAG,EAAE,CADE;AAEPE,MAAAA,MAAM,EAAE;AAFD;AAHJ,GArBa;AA6BpBkO,EAAAA,KAAK,EAAE;AACL+c,IAAAA,WAAW,EAAE,CADR;AAELC,IAAAA,WAAW,EAAE,EAFR;AAGLC,IAAAA,MAAM,EAAE,KAHH;AAILC,IAAAA,eAAe,EAAE,CAJZ;AAKLC,IAAAA,eAAe,EAAE,EALZ;AAMLzH,IAAAA,OAAO,EAAE,CANJ;AAOL9H,IAAAA,OAAO,EAAE,IAPJ;AAQLwP,IAAAA,QAAQ,EAAE,IARL;AASLC,IAAAA,eAAe,EAAE,CATZ;AAULC,IAAAA,WAAW,EAAE,CAVR;AAWLx8B,IAAAA,QAAQ,EAAEs7B,KAAK,CAACZ,UAAN,CAAiBrrB,MAXtB;AAYLotB,IAAAA,KAAK,EAAE,EAZF;AAaLC,IAAAA,KAAK,EAAE,EAbF;AAcLC,IAAAA,KAAK,EAAE,QAdF;AAeLC,IAAAA,UAAU,EAAE,MAfP;AAgBLC,IAAAA,iBAAiB,EAAE,KAhBd;AAiBLC,IAAAA,aAAa,EAAE,2BAjBV;AAkBLC,IAAAA,eAAe,EAAE;AAlBZ;AA7Ba,CAAtB;AAkDAzhC,QAAQ,CAAC0hC,KAAT,CAAe,aAAf,EAA8B,OAA9B,EAAuC,EAAvC,EAA2C,OAA3C;AACA1hC,QAAQ,CAAC0hC,KAAT,CAAe,YAAf,EAA6B,OAA7B,EAAsC,EAAtC,EAA0C,aAA1C;AACA1hC,QAAQ,CAAC0hC,KAAT,CAAe,YAAf,EAA6B,aAA7B,EAA4C,EAA5C,EAAgD,aAAhD;AACA1hC,QAAQ,CAAC0hC,KAAT,CAAe,aAAf,EAA8B,OAA9B,EAAuC,EAAvC,EAA2C,OAA3C;AACA1hC,QAAQ,CAAC0S,QAAT,CAAkB,OAAlB,EAA2B;AACzBC,EAAAA,SAAS,EAAE,KADc;AAEzBE,EAAAA,WAAW,EAAGC,IAAD,IAAU,CAACA,IAAI,CAAC6uB,UAAL,CAAgB,QAAhB,CAAD,IAA8B,CAAC7uB,IAAI,CAAC6uB,UAAL,CAAgB,OAAhB,CAA/B,IAA2D7uB,IAAI,KAAK,UAApE,IAAkFA,IAAI,KAAK,QAFzF;AAGzBF,EAAAA,UAAU,EAAGE,IAAD,IAAUA,IAAI,KAAK,YAAT,IAAyBA,IAAI,KAAK;AAH/B,CAA3B;AAKA9S,QAAQ,CAAC0S,QAAT,CAAkB,QAAlB,EAA4B;AAC1BC,EAAAA,SAAS,EAAE;AADe,CAA5B;AAGA3S,QAAQ,CAAC0S,QAAT,CAAkB,aAAlB,EAAiC;AAC/BG,EAAAA,WAAW,EAAGC,IAAD,IAAUA,IAAI,KAAK,iBAAT,IAA8BA,IAAI,KAAK,UAD/B;AAE/BF,EAAAA,UAAU,EAAGE,IAAD,IAAUA,IAAI,KAAK;AAFA,CAAjC;;AAKA,SAASkuB,QAAT,CAAkBhsB,KAAlB,EAAyB4O,KAAzB,EAAgC;AAC9B,QAAMge,QAAQ,GAAG5sB,KAAK,CAACf,OAAN,CAAc2P,KAA/B;AACA,QAAMie,UAAU,GAAGD,QAAQ,CAACE,aAAT,IAA0BC,iBAAiB,CAAC/sB,KAAD,CAA9D;AACA,QAAMgtB,YAAY,GAAGJ,QAAQ,CAACR,KAAT,CAAea,OAAf,GAAyBC,eAAe,CAACte,KAAD,CAAxC,GAAkD,EAAvE;AACA,QAAMue,eAAe,GAAGH,YAAY,CAACn0B,MAArC;AACA,QAAMu0B,KAAK,GAAGJ,YAAY,CAAC,CAAD,CAA1B;AACA,QAAMza,IAAI,GAAGya,YAAY,CAACG,eAAe,GAAG,CAAnB,CAAzB;AACA,QAAME,QAAQ,GAAG,EAAjB;;AACA,MAAIF,eAAe,GAAGN,UAAtB,EAAkC;AAChCS,IAAAA,UAAU,CAAC1e,KAAD,EAAQye,QAAR,EAAkBL,YAAlB,EAAgCG,eAAe,GAAGN,UAAlD,CAAV;AACA,WAAOQ,QAAP;AACD;;AACD,QAAM1W,OAAO,GAAG4W,gBAAgB,CAACP,YAAD,EAAepe,KAAf,EAAsBie,UAAtB,CAAhC;;AACA,MAAIM,eAAe,GAAG,CAAtB,EAAyB;AACvB,QAAIliC,CAAJ,EAAOiW,IAAP;AACA,UAAMssB,eAAe,GAAGL,eAAe,GAAG,CAAlB,GAAsBn1B,IAAI,CAACy1B,KAAL,CAAW,CAAClb,IAAI,GAAG6a,KAAR,KAAkBD,eAAe,GAAG,CAApC,CAAX,CAAtB,GAA2E,IAAnG;AACA5Y,IAAAA,IAAI,CAAC3F,KAAD,EAAQye,QAAR,EAAkB1W,OAAlB,EAA2BvqB,aAAa,CAACohC,eAAD,CAAb,GAAiC,CAAjC,GAAqCJ,KAAK,GAAGI,eAAxE,EAAyFJ,KAAzF,CAAJ;;AACA,SAAKniC,CAAC,GAAG,CAAJ,EAAOiW,IAAI,GAAGisB,eAAe,GAAG,CAArC,EAAwCliC,CAAC,GAAGiW,IAA5C,EAAkDjW,CAAC,EAAnD,EAAuD;AACrDspB,MAAAA,IAAI,CAAC3F,KAAD,EAAQye,QAAR,EAAkB1W,OAAlB,EAA2BqW,YAAY,CAAC/hC,CAAD,CAAvC,EAA4C+hC,YAAY,CAAC/hC,CAAC,GAAG,CAAL,CAAxD,CAAJ;AACD;;AACDspB,IAAAA,IAAI,CAAC3F,KAAD,EAAQye,QAAR,EAAkB1W,OAAlB,EAA2BpE,IAA3B,EAAiCnmB,aAAa,CAACohC,eAAD,CAAb,GAAiC5e,KAAK,CAAC/V,MAAvC,GAAgD0Z,IAAI,GAAGib,eAAxF,CAAJ;AACA,WAAOH,QAAP;AACD;;AACD9Y,EAAAA,IAAI,CAAC3F,KAAD,EAAQye,QAAR,EAAkB1W,OAAlB,CAAJ;AACA,SAAO0W,QAAP;AACD;;AACD,SAASN,iBAAT,CAA2B/sB,KAA3B,EAAkC;AAChC,QAAM6T,MAAM,GAAG7T,KAAK,CAACf,OAAN,CAAc4U,MAA7B;;AACA,QAAMyX,UAAU,GAAGtrB,KAAK,CAAC0tB,SAAN,EAAnB;;AACA,QAAMC,QAAQ,GAAG3tB,KAAK,CAACuO,OAAN,GAAgB+c,UAAhB,IAA8BzX,MAAM,GAAG,CAAH,GAAO,CAA3C,CAAjB;AACA,QAAM+Z,QAAQ,GAAG5tB,KAAK,CAAC6tB,UAAN,GAAmBvC,UAApC;AACA,SAAOtzB,IAAI,CAACgE,KAAL,CAAWhE,IAAI,CAACC,GAAL,CAAS01B,QAAT,EAAmBC,QAAnB,CAAX,CAAP;AACD;;AACD,SAASL,gBAAT,CAA0BP,YAA1B,EAAwCpe,KAAxC,EAA+Cie,UAA/C,EAA2D;AACzD,QAAMiB,gBAAgB,GAAGC,cAAc,CAACf,YAAD,CAAvC;AACA,QAAMrW,OAAO,GAAG/H,KAAK,CAAC/V,MAAN,GAAeg0B,UAA/B;;AACA,MAAI,CAACiB,gBAAL,EAAuB;AACrB,WAAO91B,IAAI,CAACmC,GAAL,CAASwc,OAAT,EAAkB,CAAlB,CAAP;AACD;;AACD,QAAMqX,OAAO,GAAG1+B,UAAU,CAACw+B,gBAAD,CAA1B;;AACA,OAAK,IAAI7iC,CAAC,GAAG,CAAR,EAAWiW,IAAI,GAAG8sB,OAAO,CAACn1B,MAAR,GAAiB,CAAxC,EAA2C5N,CAAC,GAAGiW,IAA/C,EAAqDjW,CAAC,EAAtD,EAA0D;AACxD,UAAM8P,MAAM,GAAGizB,OAAO,CAAC/iC,CAAD,CAAtB;;AACA,QAAI8P,MAAM,GAAG4b,OAAb,EAAsB;AACpB,aAAO5b,MAAP;AACD;AACF;;AACD,SAAO/C,IAAI,CAACmC,GAAL,CAASwc,OAAT,EAAkB,CAAlB,CAAP;AACD;;AACD,SAASuW,eAAT,CAAyBte,KAAzB,EAAgC;AAC9B,QAAMqf,MAAM,GAAG,EAAf;AACA,MAAIhjC,CAAJ,EAAOiW,IAAP;;AACA,OAAKjW,CAAC,GAAG,CAAJ,EAAOiW,IAAI,GAAG0N,KAAK,CAAC/V,MAAzB,EAAiC5N,CAAC,GAAGiW,IAArC,EAA2CjW,CAAC,EAA5C,EAAgD;AAC9C,QAAI2jB,KAAK,CAAC3jB,CAAD,CAAL,CAASmhC,KAAb,EAAoB;AAClB6B,MAAAA,MAAM,CAACp0B,IAAP,CAAY5O,CAAZ;AACD;AACF;;AACD,SAAOgjC,MAAP;AACD;;AACD,SAASX,UAAT,CAAoB1e,KAApB,EAA2Bye,QAA3B,EAAqCL,YAArC,EAAmDrW,OAAnD,EAA4D;AAC1D,MAAI/N,KAAK,GAAG,CAAZ;AACA,MAAI6G,IAAI,GAAGud,YAAY,CAAC,CAAD,CAAvB;AACA,MAAI/hC,CAAJ;AACA0rB,EAAAA,OAAO,GAAG3e,IAAI,CAACk2B,IAAL,CAAUvX,OAAV,CAAV;;AACA,OAAK1rB,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAG2jB,KAAK,CAAC/V,MAAtB,EAA8B5N,CAAC,EAA/B,EAAmC;AACjC,QAAIA,CAAC,KAAKwkB,IAAV,EAAgB;AACd4d,MAAAA,QAAQ,CAACxzB,IAAT,CAAc+U,KAAK,CAAC3jB,CAAD,CAAnB;AACA2d,MAAAA,KAAK;AACL6G,MAAAA,IAAI,GAAGud,YAAY,CAACpkB,KAAK,GAAG+N,OAAT,CAAnB;AACD;AACF;AACF;;AACD,SAASpC,IAAT,CAAc3F,KAAd,EAAqBye,QAArB,EAA+B1W,OAA/B,EAAwCwX,UAAxC,EAAoDC,QAApD,EAA8D;AAC5D,QAAMl2B,KAAK,GAAG5M,cAAc,CAAC6iC,UAAD,EAAa,CAAb,CAA5B;AACA,QAAM/tB,GAAG,GAAGpI,IAAI,CAACC,GAAL,CAAS3M,cAAc,CAAC8iC,QAAD,EAAWxf,KAAK,CAAC/V,MAAjB,CAAvB,EAAiD+V,KAAK,CAAC/V,MAAvD,CAAZ;AACA,MAAI+P,KAAK,GAAG,CAAZ;AACA,MAAI/P,MAAJ,EAAY5N,CAAZ,EAAewkB,IAAf;AACAkH,EAAAA,OAAO,GAAG3e,IAAI,CAACk2B,IAAL,CAAUvX,OAAV,CAAV;;AACA,MAAIyX,QAAJ,EAAc;AACZv1B,IAAAA,MAAM,GAAGu1B,QAAQ,GAAGD,UAApB;AACAxX,IAAAA,OAAO,GAAG9d,MAAM,GAAGb,IAAI,CAACgE,KAAL,CAAWnD,MAAM,GAAG8d,OAApB,CAAnB;AACD;;AACDlH,EAAAA,IAAI,GAAGvX,KAAP;;AACA,SAAOuX,IAAI,GAAG,CAAd,EAAiB;AACf7G,IAAAA,KAAK;AACL6G,IAAAA,IAAI,GAAGzX,IAAI,CAACy1B,KAAL,CAAWv1B,KAAK,GAAG0Q,KAAK,GAAG+N,OAA3B,CAAP;AACD;;AACD,OAAK1rB,CAAC,GAAG+M,IAAI,CAACmC,GAAL,CAASjC,KAAT,EAAgB,CAAhB,CAAT,EAA6BjN,CAAC,GAAGmV,GAAjC,EAAsCnV,CAAC,EAAvC,EAA2C;AACzC,QAAIA,CAAC,KAAKwkB,IAAV,EAAgB;AACd4d,MAAAA,QAAQ,CAACxzB,IAAT,CAAc+U,KAAK,CAAC3jB,CAAD,CAAnB;AACA2d,MAAAA,KAAK;AACL6G,MAAAA,IAAI,GAAGzX,IAAI,CAACy1B,KAAL,CAAWv1B,KAAK,GAAG0Q,KAAK,GAAG+N,OAA3B,CAAP;AACD;AACF;AACF;;AACD,SAASoX,cAAT,CAAwB1gB,GAAxB,EAA6B;AAC3B,QAAMghB,GAAG,GAAGhhB,GAAG,CAACxU,MAAhB;AACA,MAAI5N,CAAJ,EAAO2yB,IAAP;;AACA,MAAIyQ,GAAG,GAAG,CAAV,EAAa;AACX,WAAO,KAAP;AACD;;AACD,OAAKzQ,IAAI,GAAGvQ,GAAG,CAAC,CAAD,CAAV,EAAepiB,CAAC,GAAG,CAAxB,EAA2BA,CAAC,GAAGojC,GAA/B,EAAoC,EAAEpjC,CAAtC,EAAyC;AACvC,QAAIoiB,GAAG,CAACpiB,CAAD,CAAH,GAASoiB,GAAG,CAACpiB,CAAC,GAAG,CAAL,CAAZ,KAAwB2yB,IAA5B,EAAkC;AAChC,aAAO,KAAP;AACD;AACF;;AACD,SAAOA,IAAP;AACD;;AAED,MAAM0Q,YAAY,GAAIjC,KAAD,IAAWA,KAAK,KAAK,MAAV,GAAmB,OAAnB,GAA6BA,KAAK,KAAK,OAAV,GAAoB,MAApB,GAA6BA,KAA1F;;AACA,MAAMkC,cAAc,GAAG,CAACvuB,KAAD,EAAQ6Q,IAAR,EAAcgD,MAAd,KAAyBhD,IAAI,KAAK,KAAT,IAAkBA,IAAI,KAAK,MAA3B,GAAoC7Q,KAAK,CAAC6Q,IAAD,CAAL,GAAcgD,MAAlD,GAA2D7T,KAAK,CAAC6Q,IAAD,CAAL,GAAcgD,MAAzH;;AACA,SAAS2a,MAAT,CAAgBnhB,GAAhB,EAAqBohB,QAArB,EAA+B;AAC7B,QAAMR,MAAM,GAAG,EAAf;AACA,QAAMS,SAAS,GAAGrhB,GAAG,CAACxU,MAAJ,GAAa41B,QAA/B;AACA,QAAMJ,GAAG,GAAGhhB,GAAG,CAACxU,MAAhB;AACA,MAAI5N,CAAC,GAAG,CAAR;;AACA,SAAOA,CAAC,GAAGojC,GAAX,EAAgBpjC,CAAC,IAAIyjC,SAArB,EAAgC;AAC9BT,IAAAA,MAAM,CAACp0B,IAAP,CAAYwT,GAAG,CAACrV,IAAI,CAACgE,KAAL,CAAW/Q,CAAX,CAAD,CAAf;AACD;;AACD,SAAOgjC,MAAP;AACD;;AACD,SAASU,mBAAT,CAA6B3uB,KAA7B,EAAoCmB,KAApC,EAA2CytB,eAA3C,EAA4D;AAC1D,QAAM/1B,MAAM,GAAGmH,KAAK,CAAC4O,KAAN,CAAY/V,MAA3B;AACA,QAAMg2B,UAAU,GAAG72B,IAAI,CAACC,GAAL,CAASkJ,KAAT,EAAgBtI,MAAM,GAAG,CAAzB,CAAnB;AACA,QAAMX,KAAK,GAAG8H,KAAK,CAAC8S,WAApB;AACA,QAAM1S,GAAG,GAAGJ,KAAK,CAAC+S,SAAlB;AACA,QAAM+b,OAAO,GAAG,IAAhB;AACA,MAAIC,SAAS,GAAG/uB,KAAK,CAAC6O,eAAN,CAAsBggB,UAAtB,CAAhB;AACA,MAAIhb,MAAJ;;AACA,MAAI+a,eAAJ,EAAqB;AACnB,QAAI/1B,MAAM,KAAK,CAAf,EAAkB;AAChBgb,MAAAA,MAAM,GAAG7b,IAAI,CAACmC,GAAL,CAAS40B,SAAS,GAAG72B,KAArB,EAA4BkI,GAAG,GAAG2uB,SAAlC,CAAT;AACD,KAFD,MAEO,IAAI5tB,KAAK,KAAK,CAAd,EAAiB;AACtB0S,MAAAA,MAAM,GAAG,CAAC7T,KAAK,CAAC6O,eAAN,CAAsB,CAAtB,IAA2BkgB,SAA5B,IAAyC,CAAlD;AACD,KAFM,MAEA;AACLlb,MAAAA,MAAM,GAAG,CAACkb,SAAS,GAAG/uB,KAAK,CAAC6O,eAAN,CAAsBggB,UAAU,GAAG,CAAnC,CAAb,IAAsD,CAA/D;AACD;;AACDE,IAAAA,SAAS,IAAIF,UAAU,GAAG1tB,KAAb,GAAqB0S,MAArB,GAA8B,CAACA,MAA5C;;AACA,QAAIkb,SAAS,GAAG72B,KAAK,GAAG42B,OAApB,IAA+BC,SAAS,GAAG3uB,GAAG,GAAG0uB,OAArD,EAA8D;AAC5D;AACD;AACF;;AACD,SAAOC,SAAP;AACD;;AACD,SAASC,cAAT,CAAwBC,MAAxB,EAAgCp2B,MAAhC,EAAwC;AACtCvK,EAAAA,IAAI,CAAC2gC,MAAD,EAAU1jB,KAAD,IAAW;AACtB,UAAM2jB,EAAE,GAAG3jB,KAAK,CAAC2jB,EAAjB;AACA,UAAMC,KAAK,GAAGD,EAAE,CAACr2B,MAAH,GAAY,CAA1B;AACA,QAAI5N,CAAJ;;AACA,QAAIkkC,KAAK,GAAGt2B,MAAZ,EAAoB;AAClB,WAAK5N,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGkkC,KAAhB,EAAuB,EAAElkC,CAAzB,EAA4B;AAC1B,eAAOsgB,KAAK,CAAC3J,IAAN,CAAWstB,EAAE,CAACjkC,CAAD,CAAb,CAAP;AACD;;AACDikC,MAAAA,EAAE,CAAC1hB,MAAH,CAAU,CAAV,EAAa2hB,KAAb;AACD;AACF,GAVG,CAAJ;AAWD;;AACD,SAASC,iBAAT,CAA2BnwB,OAA3B,EAAoC;AAClC,SAAOA,OAAO,CAACosB,SAAR,GAAoBpsB,OAAO,CAACqsB,UAA5B,GAAyC,CAAhD;AACD;;AACD,SAAS+D,cAAT,CAAwBpwB,OAAxB,EAAiCqwB,QAAjC,EAA2C;AACzC,MAAI,CAACrwB,OAAO,CAACud,OAAb,EAAsB;AACpB,WAAO,CAAP;AACD;;AACD,QAAM+S,IAAI,GAAG3+B,MAAM,CAACqO,OAAO,CAACswB,IAAT,EAAeD,QAAf,CAAnB;AACA,QAAMhL,OAAO,GAAGl2B,SAAS,CAAC6Q,OAAO,CAACqlB,OAAT,CAAzB;AACA,QAAMkL,KAAK,GAAGpkC,OAAO,CAAC6T,OAAO,CAAC8Z,IAAT,CAAP,GAAwB9Z,OAAO,CAAC8Z,IAAR,CAAalgB,MAArC,GAA8C,CAA5D;AACA,SAAQ22B,KAAK,GAAGD,IAAI,CAACE,UAAd,GAA4BnL,OAAO,CAAClS,MAA3C;AACD;;AACD,SAASsd,kBAAT,CAA4BprB,MAA5B,EAAoCtE,KAApC,EAA2C;AACzC,SAAOzC,MAAM,CAACqC,MAAP,CAAcrC,MAAM,CAACgH,MAAP,CAAcD,MAAd,CAAd,EAAqC;AAC1CtE,IAAAA,KAD0C;AAE1CzI,IAAAA,IAAI,EAAE;AAFoC,GAArC,CAAP;AAID;;AACD,SAASo4B,iBAAT,CAA2BrrB,MAA3B,EAAmCnD,KAAnC,EAA0CjI,IAA1C,EAAgD;AAC9C,SAAOqE,MAAM,CAACqC,MAAP,CAAcrC,MAAM,CAACgH,MAAP,CAAcD,MAAd,CAAd,EAAqC;AAC1CpL,IAAAA,IAD0C;AAE1CiI,IAAAA,KAF0C;AAG1C5J,IAAAA,IAAI,EAAE;AAHoC,GAArC,CAAP;AAKD;;AACD,SAASq4B,UAAT,CAAoBvD,KAApB,EAA2BpN,QAA3B,EAAqC9e,OAArC,EAA8C;AAC5C,MAAI+pB,GAAG,GAAGp5B,kBAAkB,CAACu7B,KAAD,CAA5B;;AACA,MAAKlsB,OAAO,IAAI8e,QAAQ,KAAK,OAAzB,IAAsC,CAAC9e,OAAD,IAAY8e,QAAQ,KAAK,OAAnE,EAA6E;AAC3EiL,IAAAA,GAAG,GAAGoE,YAAY,CAACpE,GAAD,CAAlB;AACD;;AACD,SAAOA,GAAP;AACD;;AACD,SAAS2F,SAAT,CAAmB7vB,KAAnB,EAA0B6T,MAA1B,EAAkCoL,QAAlC,EAA4CoN,KAA5C,EAAmD;AACjD,QAAM;AAAC7rB,IAAAA,GAAD;AAAMG,IAAAA,IAAN;AAAYD,IAAAA,MAAZ;AAAoBD,IAAAA,KAApB;AAA2BrJ,IAAAA;AAA3B,MAAoC4I,KAA1C;AACA,QAAM;AAAC8K,IAAAA,SAAD;AAAY5G,IAAAA;AAAZ,MAAsB9M,KAA5B;AACA,MAAIyd,QAAQ,GAAG,CAAf;AACA,MAAIoC,QAAJ,EAAc6Y,MAAd,EAAsBC,MAAtB;AACA,QAAM3d,MAAM,GAAG1R,MAAM,GAAGF,GAAxB;AACA,QAAM6R,KAAK,GAAG5R,KAAK,GAAGE,IAAtB;;AACA,MAAIX,KAAK,CAACwQ,YAAN,EAAJ,EAA0B;AACxBsf,IAAAA,MAAM,GAAG9+B,cAAc,CAACq7B,KAAD,EAAQ1rB,IAAR,EAAcF,KAAd,CAAvB;;AACA,QAAIvV,QAAQ,CAAC+zB,QAAD,CAAZ,EAAwB;AACtB,YAAM+Q,cAAc,GAAGzyB,MAAM,CAACC,IAAP,CAAYyhB,QAAZ,EAAsB,CAAtB,CAAvB;AACA,YAAMvf,KAAK,GAAGuf,QAAQ,CAAC+Q,cAAD,CAAtB;AACAD,MAAAA,MAAM,GAAG7rB,MAAM,CAAC8rB,cAAD,CAAN,CAAuBrhB,gBAAvB,CAAwCjP,KAAxC,IAAiD0S,MAAjD,GAA0DyB,MAAnE;AACD,KAJD,MAIO,IAAIoL,QAAQ,KAAK,QAAjB,EAA2B;AAChC8Q,MAAAA,MAAM,GAAG,CAACjlB,SAAS,CAACpK,MAAV,GAAmBoK,SAAS,CAACtK,GAA9B,IAAqC,CAArC,GAAyC4R,MAAzC,GAAkDyB,MAA3D;AACD,KAFM,MAEA;AACLkc,MAAAA,MAAM,GAAGxB,cAAc,CAACvuB,KAAD,EAAQif,QAAR,EAAkBpL,MAAlB,CAAvB;AACD;;AACDoD,IAAAA,QAAQ,GAAGxW,KAAK,GAAGE,IAAnB;AACD,GAZD,MAYO;AACL,QAAIzV,QAAQ,CAAC+zB,QAAD,CAAZ,EAAwB;AACtB,YAAM+Q,cAAc,GAAGzyB,MAAM,CAACC,IAAP,CAAYyhB,QAAZ,EAAsB,CAAtB,CAAvB;AACA,YAAMvf,KAAK,GAAGuf,QAAQ,CAAC+Q,cAAD,CAAtB;AACAF,MAAAA,MAAM,GAAG5rB,MAAM,CAAC8rB,cAAD,CAAN,CAAuBrhB,gBAAvB,CAAwCjP,KAAxC,IAAiD2S,KAAjD,GAAyDwB,MAAlE;AACD,KAJD,MAIO,IAAIoL,QAAQ,KAAK,QAAjB,EAA2B;AAChC6Q,MAAAA,MAAM,GAAG,CAAChlB,SAAS,CAACnK,IAAV,GAAiBmK,SAAS,CAACrK,KAA5B,IAAqC,CAArC,GAAyC4R,KAAzC,GAAiDwB,MAA1D;AACD,KAFM,MAEA;AACLic,MAAAA,MAAM,GAAGvB,cAAc,CAACvuB,KAAD,EAAQif,QAAR,EAAkBpL,MAAlB,CAAvB;AACD;;AACDkc,IAAAA,MAAM,GAAG/+B,cAAc,CAACq7B,KAAD,EAAQ3rB,MAAR,EAAgBF,GAAhB,CAAvB;AACAqU,IAAAA,QAAQ,GAAGoK,QAAQ,KAAK,MAAb,GAAsB,CAAC7xB,OAAvB,GAAiCA,OAA5C;AACD;;AACD,SAAO;AAAC0iC,IAAAA,MAAD;AAASC,IAAAA,MAAT;AAAiB9Y,IAAAA,QAAjB;AAA2BpC,IAAAA;AAA3B,GAAP;AACD;;AACD,MAAMob,KAAN,SAAoBpG,OAApB,CAA4B;AAC1BjzB,EAAAA,WAAW,CAAC2E,GAAD,EAAM;AACf;AACA,SAAK8G,EAAL,GAAU9G,GAAG,CAAC8G,EAAd;AACA,SAAK9K,IAAL,GAAYgE,GAAG,CAAChE,IAAhB;AACA,SAAK0H,OAAL,GAAe/H,SAAf;AACA,SAAKmO,GAAL,GAAW9J,GAAG,CAAC8J,GAAf;AACA,SAAKjO,KAAL,GAAamE,GAAG,CAACnE,KAAjB;AACA,SAAKoJ,GAAL,GAAWtJ,SAAX;AACA,SAAKwJ,MAAL,GAAcxJ,SAAd;AACA,SAAKyJ,IAAL,GAAYzJ,SAAZ;AACA,SAAKuJ,KAAL,GAAavJ,SAAb;AACA,SAAKmb,KAAL,GAAanb,SAAb;AACA,SAAKkb,MAAL,GAAclb,SAAd;AACA,SAAKg5B,QAAL,GAAgB;AACdvvB,MAAAA,IAAI,EAAE,CADQ;AAEdF,MAAAA,KAAK,EAAE,CAFO;AAGdD,MAAAA,GAAG,EAAE,CAHS;AAIdE,MAAAA,MAAM,EAAE;AAJM,KAAhB;AAMA,SAAKuW,QAAL,GAAgB/f,SAAhB;AACA,SAAKggB,SAAL,GAAiBhgB,SAAjB;AACA,SAAKi5B,UAAL,GAAkBj5B,SAAlB;AACA,SAAKk5B,aAAL,GAAqBl5B,SAArB;AACA,SAAKm5B,WAAL,GAAmBn5B,SAAnB;AACA,SAAKo5B,YAAL,GAAoBp5B,SAApB;AACA,SAAK0M,IAAL,GAAY1M,SAAZ;AACA,SAAKq5B,aAAL,GAAqBr5B,SAArB;AACA,SAAKe,GAAL,GAAWf,SAAX;AACA,SAAKiD,GAAL,GAAWjD,SAAX;AACA,SAAKs5B,MAAL,GAAct5B,SAAd;AACA,SAAK0X,KAAL,GAAa,EAAb;AACA,SAAK6hB,cAAL,GAAsB,IAAtB;AACA,SAAKC,WAAL,GAAmB,IAAnB;AACA,SAAKC,WAAL,GAAmB,IAAnB;AACA,SAAKpiB,OAAL,GAAe,CAAf;AACA,SAAKsf,UAAL,GAAkB,CAAlB;AACA,SAAK+C,iBAAL,GAAyB,EAAzB;AACA,SAAK9d,WAAL,GAAmB5b,SAAnB;AACA,SAAK6b,SAAL,GAAiB7b,SAAjB;AACA,SAAK2nB,cAAL,GAAsB,KAAtB;AACA,SAAKgS,QAAL,GAAgB35B,SAAhB;AACA,SAAK45B,QAAL,GAAgB55B,SAAhB;AACA,SAAK65B,aAAL,GAAqB75B,SAArB;AACA,SAAK85B,aAAL,GAAqB95B,SAArB;AACA,SAAK+5B,YAAL,GAAoB,CAApB;AACA,SAAKC,YAAL,GAAoB,CAApB;AACA,SAAKjjB,MAAL,GAAc,EAAd;AACA,SAAKkjB,iBAAL,GAAyB,KAAzB;AACA,SAAKnrB,QAAL,GAAgB9O,SAAhB;AACD;;AACDk6B,EAAAA,IAAI,CAACnyB,OAAD,EAAU;AACZ,UAAM7G,EAAE,GAAG,IAAX;AACAA,IAAAA,EAAE,CAAC6G,OAAH,GAAaA,OAAO,CAACoyB,UAAR,CAAmBj5B,EAAE,CAACqQ,UAAH,EAAnB,CAAb;AACArQ,IAAAA,EAAE,CAACwL,IAAH,GAAU3E,OAAO,CAAC2E,IAAlB;AACAxL,IAAAA,EAAE,CAAC04B,QAAH,GAAc14B,EAAE,CAACuQ,KAAH,CAAS1J,OAAO,CAAChH,GAAjB,CAAd;AACAG,IAAAA,EAAE,CAACy4B,QAAH,GAAcz4B,EAAE,CAACuQ,KAAH,CAAS1J,OAAO,CAAC9E,GAAjB,CAAd;AACA/B,IAAAA,EAAE,CAAC44B,aAAH,GAAmB54B,EAAE,CAACuQ,KAAH,CAAS1J,OAAO,CAACqyB,YAAjB,CAAnB;AACAl5B,IAAAA,EAAE,CAAC24B,aAAH,GAAmB34B,EAAE,CAACuQ,KAAH,CAAS1J,OAAO,CAACsyB,YAAjB,CAAnB;AACD;;AACD5oB,EAAAA,KAAK,CAAC/D,GAAD,EAAMzD,KAAN,EAAa;AAChB,WAAOyD,GAAP;AACD;;AACDtC,EAAAA,aAAa,GAAG;AACd,QAAI;AAACwuB,MAAAA,QAAD;AAAWD,MAAAA,QAAX;AAAqBG,MAAAA,aAArB;AAAoCD,MAAAA;AAApC,QAAqD,IAAzD;AACAD,IAAAA,QAAQ,GAAGthC,eAAe,CAACshC,QAAD,EAAWruB,MAAM,CAACE,iBAAlB,CAA1B;AACAkuB,IAAAA,QAAQ,GAAGrhC,eAAe,CAACqhC,QAAD,EAAWpuB,MAAM,CAACC,iBAAlB,CAA1B;AACAsuB,IAAAA,aAAa,GAAGxhC,eAAe,CAACwhC,aAAD,EAAgBvuB,MAAM,CAACE,iBAAvB,CAA/B;AACAouB,IAAAA,aAAa,GAAGvhC,eAAe,CAACuhC,aAAD,EAAgBtuB,MAAM,CAACC,iBAAvB,CAA/B;AACA,WAAO;AACLzK,MAAAA,GAAG,EAAEzI,eAAe,CAACshC,QAAD,EAAWE,aAAX,CADf;AAEL72B,MAAAA,GAAG,EAAE3K,eAAe,CAACqhC,QAAD,EAAWE,aAAX,CAFf;AAGLxuB,MAAAA,UAAU,EAAEzW,cAAc,CAACglC,QAAD,CAHrB;AAILtuB,MAAAA,UAAU,EAAE1W,cAAc,CAAC+kC,QAAD;AAJrB,KAAP;AAMD;;AACD9mB,EAAAA,SAAS,CAACC,QAAD,EAAW;AAClB,UAAM5R,EAAE,GAAG,IAAX;AACA,QAAI;AAACH,MAAAA,GAAD;AAAMkC,MAAAA,GAAN;AAAWoI,MAAAA,UAAX;AAAuBC,MAAAA;AAAvB,QAAqCpK,EAAE,CAACkK,aAAH,EAAzC;AACA,QAAIsH,KAAJ;;AACA,QAAIrH,UAAU,IAAIC,UAAlB,EAA8B;AAC5B,aAAO;AAACvK,QAAAA,GAAD;AAAMkC,QAAAA;AAAN,OAAP;AACD;;AACD,UAAMgU,KAAK,GAAG/V,EAAE,CAACgL,uBAAH,EAAd;;AACA,SAAK,IAAInY,CAAC,GAAG,CAAR,EAAWiW,IAAI,GAAGiN,KAAK,CAACtV,MAA7B,EAAqC5N,CAAC,GAAGiW,IAAzC,EAA+C,EAAEjW,CAAjD,EAAoD;AAClD2e,MAAAA,KAAK,GAAGuE,KAAK,CAACljB,CAAD,CAAL,CAASqY,UAAT,CAAoByG,SAApB,CAA8B3R,EAA9B,EAAkC4R,QAAlC,CAAR;;AACA,UAAI,CAACzH,UAAL,EAAiB;AACftK,QAAAA,GAAG,GAAGD,IAAI,CAACC,GAAL,CAASA,GAAT,EAAc2R,KAAK,CAAC3R,GAApB,CAAN;AACD;;AACD,UAAI,CAACuK,UAAL,EAAiB;AACfrI,QAAAA,GAAG,GAAGnC,IAAI,CAACmC,GAAL,CAASA,GAAT,EAAcyP,KAAK,CAACzP,GAApB,CAAN;AACD;AACF;;AACD,WAAO;AACLlC,MAAAA,GAAG,EAAEzI,eAAe,CAACyI,GAAD,EAAMzI,eAAe,CAAC2K,GAAD,EAAMlC,GAAN,CAArB,CADf;AAELkC,MAAAA,GAAG,EAAE3K,eAAe,CAAC2K,GAAD,EAAM3K,eAAe,CAACyI,GAAD,EAAMkC,GAAN,CAArB;AAFf,KAAP;AAID;;AACD6oB,EAAAA,UAAU,GAAG;AACX,UAAM5qB,EAAE,GAAG,IAAX;AACA,WAAO;AACLuI,MAAAA,IAAI,EAAEvI,EAAE,CAACi4B,WAAH,IAAkB,CADnB;AAEL7vB,MAAAA,GAAG,EAAEpI,EAAE,CAAC+3B,UAAH,IAAiB,CAFjB;AAGL1vB,MAAAA,KAAK,EAAErI,EAAE,CAACk4B,YAAH,IAAmB,CAHrB;AAIL5vB,MAAAA,MAAM,EAAEtI,EAAE,CAACg4B,aAAH,IAAoB;AAJvB,KAAP;AAMD;;AACDoB,EAAAA,QAAQ,GAAG;AACT,WAAO,KAAK5iB,KAAZ;AACD;;AACDvF,EAAAA,SAAS,GAAG;AACV,UAAMzH,IAAI,GAAG,KAAKxK,KAAL,CAAWwK,IAAxB;AACA,WAAO,KAAK3C,OAAL,CAAamK,MAAb,KAAwB,KAAKoH,YAAL,KAAsB5O,IAAI,CAAC6vB,OAA3B,GAAqC7vB,IAAI,CAAC8vB,OAAlE,KAA8E9vB,IAAI,CAACwH,MAAnF,IAA6F,EAApG;AACD;;AACD0b,EAAAA,YAAY,GAAG;AACb,SAAK7W,MAAL,GAAc,EAAd;AACA,SAAKkjB,iBAAL,GAAyB,KAAzB;AACD;;AACDQ,EAAAA,YAAY,GAAG;AACbjiC,IAAAA,QAAQ,CAAC,KAAKuP,OAAL,CAAa0yB,YAAd,EAA4B,CAAC,IAAD,CAA5B,CAAR;AACD;;AACDj1B,EAAAA,MAAM,CAACua,QAAD,EAAWC,SAAX,EAAsB0a,OAAtB,EAA+B;AACnC,UAAMx5B,EAAE,GAAG,IAAX;AACA,UAAMw0B,QAAQ,GAAGx0B,EAAE,CAAC6G,OAAH,CAAW2P,KAA5B;AACA,UAAMijB,UAAU,GAAGjF,QAAQ,CAACiF,UAA5B;AACAz5B,IAAAA,EAAE,CAACu5B,YAAH;AACAv5B,IAAAA,EAAE,CAAC6e,QAAH,GAAcA,QAAd;AACA7e,IAAAA,EAAE,CAAC8e,SAAH,GAAeA,SAAf;AACA9e,IAAAA,EAAE,CAAC83B,QAAH,GAAc0B,OAAO,GAAGr0B,MAAM,CAACqC,MAAP,CAAc;AACpCe,MAAAA,IAAI,EAAE,CAD8B;AAEpCF,MAAAA,KAAK,EAAE,CAF6B;AAGpCD,MAAAA,GAAG,EAAE,CAH+B;AAIpCE,MAAAA,MAAM,EAAE;AAJ4B,KAAd,EAKrBkxB,OALqB,CAAxB;AAMAx5B,IAAAA,EAAE,CAACwW,KAAH,GAAW,IAAX;AACAxW,IAAAA,EAAE,CAACu4B,WAAH,GAAiB,IAAjB;AACAv4B,IAAAA,EAAE,CAACq4B,cAAH,GAAoB,IAApB;AACAr4B,IAAAA,EAAE,CAACs4B,WAAH,GAAiB,IAAjB;AACAt4B,IAAAA,EAAE,CAAC05B,mBAAH;AACA15B,IAAAA,EAAE,CAAC25B,aAAH;AACA35B,IAAAA,EAAE,CAAC45B,kBAAH;AACA55B,IAAAA,EAAE,CAACy1B,UAAH,GAAgBz1B,EAAE,CAACoY,YAAH,KACZpY,EAAE,CAACia,KAAH,GAAWuf,OAAO,CAACjxB,IAAnB,GAA0BixB,OAAO,CAACnxB,KADtB,GAEZrI,EAAE,CAACga,MAAH,GAAYwf,OAAO,CAACpxB,GAApB,GAA0BoxB,OAAO,CAAClxB,MAFtC;;AAGA,QAAI,CAACtI,EAAE,CAAC+4B,iBAAR,EAA2B;AACzB/4B,MAAAA,EAAE,CAAC65B,gBAAH;AACA75B,MAAAA,EAAE,CAAC85B,mBAAH;AACA95B,MAAAA,EAAE,CAAC+5B,eAAH;AACA/5B,MAAAA,EAAE,CAACo4B,MAAH,GAAY5gC,SAAS,CAACwI,EAAD,EAAKA,EAAE,CAAC6G,OAAH,CAAWisB,KAAhB,CAArB;AACA9yB,MAAAA,EAAE,CAAC+4B,iBAAH,GAAuB,IAAvB;AACD;;AACD/4B,IAAAA,EAAE,CAACg6B,gBAAH;AACAh6B,IAAAA,EAAE,CAACwW,KAAH,GAAWxW,EAAE,CAACi6B,UAAH,MAAmB,EAA9B;AACAj6B,IAAAA,EAAE,CAACk6B,eAAH;AACA,UAAMC,eAAe,GAAGV,UAAU,GAAGz5B,EAAE,CAACwW,KAAH,CAAS/V,MAA9C;;AACAT,IAAAA,EAAE,CAACo6B,qBAAH,CAAyBD,eAAe,GAAG/D,MAAM,CAACp2B,EAAE,CAACwW,KAAJ,EAAWijB,UAAX,CAAT,GAAkCz5B,EAAE,CAACwW,KAA7E;;AACAxW,IAAAA,EAAE,CAACqG,SAAH;AACArG,IAAAA,EAAE,CAACq6B,4BAAH;AACAr6B,IAAAA,EAAE,CAACs6B,sBAAH;AACAt6B,IAAAA,EAAE,CAACu6B,2BAAH;;AACA,QAAI/F,QAAQ,CAACpQ,OAAT,KAAqBoQ,QAAQ,CAACZ,QAAT,IAAqBY,QAAQ,CAACgG,MAAT,KAAoB,MAA9D,CAAJ,EAA2E;AACzEx6B,MAAAA,EAAE,CAACwW,KAAH,GAAWod,QAAQ,CAAC5zB,EAAD,EAAKA,EAAE,CAACwW,KAAR,CAAnB;AACAxW,MAAAA,EAAE,CAACu4B,WAAH,GAAiB,IAAjB;AACD;;AACD,QAAI4B,eAAJ,EAAqB;AACnBn6B,MAAAA,EAAE,CAACo6B,qBAAH,CAAyBp6B,EAAE,CAACwW,KAA5B;AACD;;AACDxW,IAAAA,EAAE,CAACy6B,SAAH;AACAz6B,IAAAA,EAAE,CAAC06B,GAAH;AACA16B,IAAAA,EAAE,CAAC26B,QAAH;AACA36B,IAAAA,EAAE,CAAC46B,WAAH;AACD;;AACDv0B,EAAAA,SAAS,GAAG;AACV,UAAMrG,EAAE,GAAG,IAAX;AACA,QAAI66B,aAAa,GAAG76B,EAAE,CAAC6G,OAAH,CAAWkB,OAA/B;AACA,QAAI+yB,UAAJ,EAAgBC,QAAhB;;AACA,QAAI/6B,EAAE,CAACoY,YAAH,EAAJ,EAAuB;AACrB0iB,MAAAA,UAAU,GAAG96B,EAAE,CAACuI,IAAhB;AACAwyB,MAAAA,QAAQ,GAAG/6B,EAAE,CAACqI,KAAd;AACD,KAHD,MAGO;AACLyyB,MAAAA,UAAU,GAAG96B,EAAE,CAACoI,GAAhB;AACA2yB,MAAAA,QAAQ,GAAG/6B,EAAE,CAACsI,MAAd;AACAuyB,MAAAA,aAAa,GAAG,CAACA,aAAjB;AACD;;AACD76B,IAAAA,EAAE,CAAC0a,WAAH,GAAiBogB,UAAjB;AACA96B,IAAAA,EAAE,CAAC2a,SAAH,GAAeogB,QAAf;AACA/6B,IAAAA,EAAE,CAACymB,cAAH,GAAoBoU,aAApB;AACA76B,IAAAA,EAAE,CAACmW,OAAH,GAAa4kB,QAAQ,GAAGD,UAAxB;AACA96B,IAAAA,EAAE,CAACg7B,cAAH,GAAoBh7B,EAAE,CAAC6G,OAAH,CAAWo0B,aAA/B;AACD;;AACDL,EAAAA,WAAW,GAAG;AACZtjC,IAAAA,QAAQ,CAAC,KAAKuP,OAAL,CAAa+zB,WAAd,EAA2B,CAAC,IAAD,CAA3B,CAAR;AACD;;AACDlB,EAAAA,mBAAmB,GAAG;AACpBpiC,IAAAA,QAAQ,CAAC,KAAKuP,OAAL,CAAa6yB,mBAAd,EAAmC,CAAC,IAAD,CAAnC,CAAR;AACD;;AACDC,EAAAA,aAAa,GAAG;AACd,UAAM35B,EAAE,GAAG,IAAX;;AACA,QAAIA,EAAE,CAACoY,YAAH,EAAJ,EAAuB;AACrBpY,MAAAA,EAAE,CAACia,KAAH,GAAWja,EAAE,CAAC6e,QAAd;AACA7e,MAAAA,EAAE,CAACuI,IAAH,GAAU,CAAV;AACAvI,MAAAA,EAAE,CAACqI,KAAH,GAAWrI,EAAE,CAACia,KAAd;AACD,KAJD,MAIO;AACLja,MAAAA,EAAE,CAACga,MAAH,GAAYha,EAAE,CAAC8e,SAAf;AACA9e,MAAAA,EAAE,CAACoI,GAAH,GAAS,CAAT;AACApI,MAAAA,EAAE,CAACsI,MAAH,GAAYtI,EAAE,CAACga,MAAf;AACD;;AACDha,IAAAA,EAAE,CAACi4B,WAAH,GAAiB,CAAjB;AACAj4B,IAAAA,EAAE,CAAC+3B,UAAH,GAAgB,CAAhB;AACA/3B,IAAAA,EAAE,CAACk4B,YAAH,GAAkB,CAAlB;AACAl4B,IAAAA,EAAE,CAACg4B,aAAH,GAAmB,CAAnB;AACD;;AACD4B,EAAAA,kBAAkB,GAAG;AACnBtiC,IAAAA,QAAQ,CAAC,KAAKuP,OAAL,CAAa+yB,kBAAd,EAAkC,CAAC,IAAD,CAAlC,CAAR;AACD;;AACDsB,EAAAA,UAAU,CAACx1B,IAAD,EAAO;AACf,UAAM1F,EAAE,GAAG,IAAX;AACAA,IAAAA,EAAE,CAAChB,KAAH,CAASm8B,aAAT,CAAuBz1B,IAAvB,EAA6B1F,EAAE,CAACqQ,UAAH,EAA7B;AACA/Y,IAAAA,QAAQ,CAAC0I,EAAE,CAAC6G,OAAH,CAAWnB,IAAX,CAAD,EAAmB,CAAC1F,EAAD,CAAnB,CAAR;AACD;;AACD65B,EAAAA,gBAAgB,GAAG;AACjB,SAAKqB,UAAL,CAAgB,kBAAhB;AACD;;AACDpB,EAAAA,mBAAmB,GAAG,CAAE;;AACxBC,EAAAA,eAAe,GAAG;AAChB,SAAKmB,UAAL,CAAgB,iBAAhB;AACD;;AACDlB,EAAAA,gBAAgB,GAAG;AACjB,SAAKkB,UAAL,CAAgB,kBAAhB;AACD;;AACDjB,EAAAA,UAAU,GAAG;AACX,WAAO,EAAP;AACD;;AACDC,EAAAA,eAAe,GAAG;AAChB,SAAKgB,UAAL,CAAgB,iBAAhB;AACD;;AACDE,EAAAA,2BAA2B,GAAG;AAC5B9jC,IAAAA,QAAQ,CAAC,KAAKuP,OAAL,CAAau0B,2BAAd,EAA2C,CAAC,IAAD,CAA3C,CAAR;AACD;;AACDC,EAAAA,kBAAkB,CAAC7kB,KAAD,EAAQ;AACxB,UAAMxW,EAAE,GAAG,IAAX;AACA,UAAMw0B,QAAQ,GAAGx0B,EAAE,CAAC6G,OAAH,CAAW2P,KAA5B;AACA,QAAI3jB,CAAJ,EAAOiW,IAAP,EAAahI,IAAb;;AACA,SAAKjO,CAAC,GAAG,CAAJ,EAAOiW,IAAI,GAAG0N,KAAK,CAAC/V,MAAzB,EAAiC5N,CAAC,GAAGiW,IAArC,EAA2CjW,CAAC,EAA5C,EAAgD;AAC9CiO,MAAAA,IAAI,GAAG0V,KAAK,CAAC3jB,CAAD,CAAZ;AACAiO,MAAAA,IAAI,CAACsR,KAAL,GAAa9a,QAAQ,CAACk9B,QAAQ,CAACl9B,QAAV,EAAoB,CAACwJ,IAAI,CAACwG,KAAN,EAAazU,CAAb,EAAgB2jB,KAAhB,CAApB,EAA4CxW,EAA5C,CAArB;AACD;AACF;;AACDs7B,EAAAA,0BAA0B,GAAG;AAC3BhkC,IAAAA,QAAQ,CAAC,KAAKuP,OAAL,CAAay0B,0BAAd,EAA0C,CAAC,IAAD,CAA1C,CAAR;AACD;;AACDjB,EAAAA,4BAA4B,GAAG;AAC7B/iC,IAAAA,QAAQ,CAAC,KAAKuP,OAAL,CAAawzB,4BAAd,EAA4C,CAAC,IAAD,CAA5C,CAAR;AACD;;AACDC,EAAAA,sBAAsB,GAAG;AACvB,UAAMt6B,EAAE,GAAG,IAAX;AACA,UAAM6G,OAAO,GAAG7G,EAAE,CAAC6G,OAAnB;AACA,UAAM2tB,QAAQ,GAAG3tB,OAAO,CAAC2P,KAAzB;AACA,UAAM+kB,QAAQ,GAAGv7B,EAAE,CAACwW,KAAH,CAAS/V,MAA1B;AACA,UAAM8yB,WAAW,GAAGiB,QAAQ,CAACjB,WAAT,IAAwB,CAA5C;AACA,UAAMC,WAAW,GAAGgB,QAAQ,CAAChB,WAA7B;AACA,QAAI2E,aAAa,GAAG5E,WAApB;AACA,QAAIJ,SAAJ,EAAerU,SAAf,EAA0B0c,gBAA1B;;AACA,QAAI,CAACx7B,EAAE,CAACy7B,UAAH,EAAD,IAAoB,CAACjH,QAAQ,CAACpQ,OAA9B,IAAyCmP,WAAW,IAAIC,WAAxD,IAAuE+H,QAAQ,IAAI,CAAnF,IAAwF,CAACv7B,EAAE,CAACoY,YAAH,EAA7F,EAAgH;AAC9GpY,MAAAA,EAAE,CAACm4B,aAAH,GAAmB5E,WAAnB;AACA;AACD;;AACD,UAAMmI,UAAU,GAAG17B,EAAE,CAAC27B,cAAH,EAAnB;;AACA,UAAMC,aAAa,GAAGF,UAAU,CAACG,MAAX,CAAkB5hB,KAAxC;AACA,UAAM6hB,cAAc,GAAGJ,UAAU,CAACK,OAAX,CAAmB/hB,MAA1C;;AACA,UAAM6E,QAAQ,GAAGvpB,WAAW,CAAC0K,EAAE,CAAChB,KAAH,CAASib,KAAT,GAAiB2hB,aAAlB,EAAiC,CAAjC,EAAoC57B,EAAE,CAAC6e,QAAvC,CAA5B;;AACAsU,IAAAA,SAAS,GAAGtsB,OAAO,CAAC4U,MAAR,GAAiBzb,EAAE,CAAC6e,QAAH,GAAc0c,QAA/B,GAA0C1c,QAAQ,IAAI0c,QAAQ,GAAG,CAAf,CAA9D;;AACA,QAAIK,aAAa,GAAG,CAAhB,GAAoBzI,SAAxB,EAAmC;AACjCA,MAAAA,SAAS,GAAGtU,QAAQ,IAAI0c,QAAQ,IAAI10B,OAAO,CAAC4U,MAAR,GAAiB,GAAjB,GAAuB,CAA3B,CAAZ,CAApB;AACAqD,MAAAA,SAAS,GAAG9e,EAAE,CAAC8e,SAAH,GAAekY,iBAAiB,CAACnwB,OAAO,CAAC6U,IAAT,CAAhC,GACZ8Y,QAAQ,CAACtI,OADG,GACO+K,cAAc,CAACpwB,OAAO,CAAC0V,KAAT,EAAgBvc,EAAE,CAAChB,KAAH,CAAS6H,OAAT,CAAiBswB,IAAjC,CADjC;AAEAqE,MAAAA,gBAAgB,GAAG57B,IAAI,CAACynB,IAAL,CAAUuU,aAAa,GAAGA,aAAhB,GAAgCE,cAAc,GAAGA,cAA3D,CAAnB;AACA3D,MAAAA,aAAa,GAAGzgC,SAAS,CAACkI,IAAI,CAACC,GAAL,CACxBD,IAAI,CAACo8B,IAAL,CAAU1mC,WAAW,CAAC,CAAComC,UAAU,CAACK,OAAX,CAAmB/hB,MAAnB,GAA4B,CAA7B,IAAkCmZ,SAAnC,EAA8C,CAAC,CAA/C,EAAkD,CAAlD,CAArB,CADwB,EAExBvzB,IAAI,CAACo8B,IAAL,CAAU1mC,WAAW,CAACwpB,SAAS,GAAG0c,gBAAb,EAA+B,CAAC,CAAhC,EAAmC,CAAnC,CAArB,IAA8D57B,IAAI,CAACo8B,IAAL,CAAU1mC,WAAW,CAACwmC,cAAc,GAAGN,gBAAlB,EAAoC,CAAC,CAArC,EAAwC,CAAxC,CAArB,CAFtC,CAAD,CAAzB;AAIArD,MAAAA,aAAa,GAAGv4B,IAAI,CAACmC,GAAL,CAASwxB,WAAT,EAAsB3zB,IAAI,CAACC,GAAL,CAAS2zB,WAAT,EAAsB2E,aAAtB,CAAtB,CAAhB;AACD;;AACDn4B,IAAAA,EAAE,CAACm4B,aAAH,GAAmBA,aAAnB;AACD;;AACDoC,EAAAA,2BAA2B,GAAG;AAC5BjjC,IAAAA,QAAQ,CAAC,KAAKuP,OAAL,CAAa0zB,2BAAd,EAA2C,CAAC,IAAD,CAA3C,CAAR;AACD;;AACDE,EAAAA,SAAS,GAAG;AACVnjC,IAAAA,QAAQ,CAAC,KAAKuP,OAAL,CAAa4zB,SAAd,EAAyB,CAAC,IAAD,CAAzB,CAAR;AACD;;AACDC,EAAAA,GAAG,GAAG;AACJ,UAAM16B,EAAE,GAAG,IAAX;AACA,UAAMwjB,OAAO,GAAG;AACdvJ,MAAAA,KAAK,EAAE,CADO;AAEdD,MAAAA,MAAM,EAAE;AAFM,KAAhB;AAIA,UAAM;AAAChb,MAAAA,KAAD;AAAQ6H,MAAAA,OAAO,EAAE;AAAC2P,QAAAA,KAAK,EAAEge,QAAR;AAAkBjY,QAAAA,KAAK,EAAE0f,SAAzB;AAAoCvgB,QAAAA,IAAI,EAAEwgB;AAA1C;AAAjB,QAAwEl8B,EAA9E;;AACA,UAAMokB,OAAO,GAAGpkB,EAAE,CAACy7B,UAAH,EAAhB;;AACA,UAAMrjB,YAAY,GAAGpY,EAAE,CAACoY,YAAH,EAArB;;AACA,QAAIgM,OAAJ,EAAa;AACX,YAAM+X,WAAW,GAAGlF,cAAc,CAACgF,SAAD,EAAYj9B,KAAK,CAAC6H,OAAN,CAAcswB,IAA1B,CAAlC;;AACA,UAAI/e,YAAJ,EAAkB;AAChBoL,QAAAA,OAAO,CAACvJ,KAAR,GAAgBja,EAAE,CAAC6e,QAAnB;AACA2E,QAAAA,OAAO,CAACxJ,MAAR,GAAiBgd,iBAAiB,CAACkF,QAAD,CAAjB,GAA8BC,WAA/C;AACD,OAHD,MAGO;AACL3Y,QAAAA,OAAO,CAACxJ,MAAR,GAAiBha,EAAE,CAAC8e,SAApB;AACA0E,QAAAA,OAAO,CAACvJ,KAAR,GAAgB+c,iBAAiB,CAACkF,QAAD,CAAjB,GAA8BC,WAA9C;AACD;;AACD,UAAI3H,QAAQ,CAACpQ,OAAT,IAAoBpkB,EAAE,CAACwW,KAAH,CAAS/V,MAAjC,EAAyC;AACvC,cAAM;AAACu0B,UAAAA,KAAD;AAAQ7a,UAAAA,IAAR;AAAc0hB,UAAAA,MAAd;AAAsBE,UAAAA;AAAtB,YAAiC/7B,EAAE,CAAC27B,cAAH,EAAvC;;AACA,cAAMS,WAAW,GAAG5H,QAAQ,CAACtI,OAAT,GAAmB,CAAvC;AACA,cAAMmQ,YAAY,GAAGjoC,SAAS,CAAC4L,EAAE,CAACm4B,aAAJ,CAA9B;AACA,cAAMhb,GAAG,GAAGvd,IAAI,CAACud,GAAL,CAASkf,YAAT,CAAZ;AACA,cAAMhf,GAAG,GAAGzd,IAAI,CAACyd,GAAL,CAASgf,YAAT,CAAZ;;AACA,YAAIjkB,YAAJ,EAAkB;AAChB,gBAAMkkB,WAAW,GAAG9H,QAAQ,CAACf,MAAT,GAAkB,CAAlB,GAAsBpW,GAAG,GAAGwe,MAAM,CAAC5hB,KAAb,GAAqBkD,GAAG,GAAG4e,OAAO,CAAC/hB,MAA7E;AACAwJ,UAAAA,OAAO,CAACxJ,MAAR,GAAiBpa,IAAI,CAACC,GAAL,CAASG,EAAE,CAAC8e,SAAZ,EAAuB0E,OAAO,CAACxJ,MAAR,GAAiBsiB,WAAjB,GAA+BF,WAAtD,CAAjB;AACD,SAHD,MAGO;AACL,gBAAMG,UAAU,GAAG/H,QAAQ,CAACf,MAAT,GAAkB,CAAlB,GAAsBtW,GAAG,GAAG0e,MAAM,CAAC5hB,KAAb,GAAqBoD,GAAG,GAAG0e,OAAO,CAAC/hB,MAA5E;AACAwJ,UAAAA,OAAO,CAACvJ,KAAR,GAAgBra,IAAI,CAACC,GAAL,CAASG,EAAE,CAAC6e,QAAZ,EAAsB2E,OAAO,CAACvJ,KAAR,GAAgBsiB,UAAhB,GAA6BH,WAAnD,CAAhB;AACD;;AACDp8B,QAAAA,EAAE,CAACw8B,iBAAH,CAAqBxH,KAArB,EAA4B7a,IAA5B,EAAkCkD,GAAlC,EAAuCF,GAAvC;AACD;AACF;;AACDnd,IAAAA,EAAE,CAACy8B,cAAH;;AACA,QAAIrkB,YAAJ,EAAkB;AAChBpY,MAAAA,EAAE,CAACia,KAAH,GAAWja,EAAE,CAACmW,OAAH,GAAanX,KAAK,CAACib,KAAN,GAAcja,EAAE,CAAC83B,QAAH,CAAYvvB,IAA1B,GAAiCvI,EAAE,CAAC83B,QAAH,CAAYzvB,KAArE;AACArI,MAAAA,EAAE,CAACga,MAAH,GAAYwJ,OAAO,CAACxJ,MAApB;AACD,KAHD,MAGO;AACLha,MAAAA,EAAE,CAACia,KAAH,GAAWuJ,OAAO,CAACvJ,KAAnB;AACAja,MAAAA,EAAE,CAACga,MAAH,GAAYha,EAAE,CAACmW,OAAH,GAAanX,KAAK,CAACgb,MAAN,GAAeha,EAAE,CAAC83B,QAAH,CAAY1vB,GAA3B,GAAiCpI,EAAE,CAAC83B,QAAH,CAAYxvB,MAAtE;AACD;AACF;;AACDk0B,EAAAA,iBAAiB,CAACxH,KAAD,EAAQ7a,IAAR,EAAckD,GAAd,EAAmBF,GAAnB,EAAwB;AACvC,UAAMnd,EAAE,GAAG,IAAX;AACA,UAAM;AAACwW,MAAAA,KAAK,EAAE;AAACyd,QAAAA,KAAD;AAAQ/H,QAAAA;AAAR,OAAR;AAA0BrF,MAAAA;AAA1B,QAAsC7mB,EAAE,CAAC6G,OAA/C;AACA,UAAM61B,SAAS,GAAG18B,EAAE,CAACm4B,aAAH,KAAqB,CAAvC;AACA,UAAMwE,gBAAgB,GAAG9V,QAAQ,KAAK,KAAb,IAAsB7mB,EAAE,CAACwL,IAAH,KAAY,GAA3D;;AACA,QAAIxL,EAAE,CAACoY,YAAH,EAAJ,EAAuB;AACrB,YAAMwkB,UAAU,GAAG58B,EAAE,CAACyW,eAAH,CAAmB,CAAnB,IAAwBzW,EAAE,CAACuI,IAA9C;AACA,YAAMs0B,WAAW,GAAG78B,EAAE,CAACqI,KAAH,GAAWrI,EAAE,CAACyW,eAAH,CAAmBzW,EAAE,CAACwW,KAAH,CAAS/V,MAAT,GAAkB,CAArC,CAA/B;AACA,UAAIw3B,WAAW,GAAG,CAAlB;AACA,UAAIC,YAAY,GAAG,CAAnB;;AACA,UAAIwE,SAAJ,EAAe;AACb,YAAIC,gBAAJ,EAAsB;AACpB1E,UAAAA,WAAW,GAAG9a,GAAG,GAAG6X,KAAK,CAAC/a,KAA1B;AACAie,UAAAA,YAAY,GAAG7a,GAAG,GAAGlD,IAAI,CAACH,MAA1B;AACD,SAHD,MAGO;AACLie,UAAAA,WAAW,GAAG5a,GAAG,GAAG2X,KAAK,CAAChb,MAA1B;AACAke,UAAAA,YAAY,GAAG/a,GAAG,GAAGhD,IAAI,CAACF,KAA1B;AACD;AACF,OARD,MAQO,IAAIga,KAAK,KAAK,OAAd,EAAuB;AAC5BiE,QAAAA,YAAY,GAAG/d,IAAI,CAACF,KAApB;AACD,OAFM,MAEA,IAAIga,KAAK,KAAK,KAAd,EAAqB;AAC1BgE,QAAAA,WAAW,GAAGjD,KAAK,CAAC/a,KAApB;AACD,OAFM,MAEA;AACLge,QAAAA,WAAW,GAAGjD,KAAK,CAAC/a,KAAN,GAAc,CAA5B;AACAie,QAAAA,YAAY,GAAG/d,IAAI,CAACF,KAAL,GAAa,CAA5B;AACD;;AACDja,MAAAA,EAAE,CAACi4B,WAAH,GAAiBr4B,IAAI,CAACmC,GAAL,CAAS,CAACk2B,WAAW,GAAG2E,UAAd,GAA2B1Q,OAA5B,IAAuClsB,EAAE,CAACia,KAA1C,IAAmDja,EAAE,CAACia,KAAH,GAAW2iB,UAA9D,CAAT,EAAoF,CAApF,CAAjB;AACA58B,MAAAA,EAAE,CAACk4B,YAAH,GAAkBt4B,IAAI,CAACmC,GAAL,CAAS,CAACm2B,YAAY,GAAG2E,WAAf,GAA6B3Q,OAA9B,IAAyClsB,EAAE,CAACia,KAA5C,IAAqDja,EAAE,CAACia,KAAH,GAAW4iB,WAAhE,CAAT,EAAuF,CAAvF,CAAlB;AACD,KAvBD,MAuBO;AACL,UAAI9E,UAAU,GAAG5d,IAAI,CAACH,MAAL,GAAc,CAA/B;AACA,UAAIge,aAAa,GAAGhD,KAAK,CAAChb,MAAN,GAAe,CAAnC;;AACA,UAAIia,KAAK,KAAK,OAAd,EAAuB;AACrB8D,QAAAA,UAAU,GAAG,CAAb;AACAC,QAAAA,aAAa,GAAGhD,KAAK,CAAChb,MAAtB;AACD,OAHD,MAGO,IAAIia,KAAK,KAAK,KAAd,EAAqB;AAC1B8D,QAAAA,UAAU,GAAG5d,IAAI,CAACH,MAAlB;AACAge,QAAAA,aAAa,GAAG,CAAhB;AACD;;AACDh4B,MAAAA,EAAE,CAAC+3B,UAAH,GAAgBA,UAAU,GAAG7L,OAA7B;AACAlsB,MAAAA,EAAE,CAACg4B,aAAH,GAAmBA,aAAa,GAAG9L,OAAnC;AACD;AACF;;AACDuQ,EAAAA,cAAc,GAAG;AACf,UAAMz8B,EAAE,GAAG,IAAX;;AACA,QAAIA,EAAE,CAAC83B,QAAP,EAAiB;AACf93B,MAAAA,EAAE,CAAC83B,QAAH,CAAYvvB,IAAZ,GAAmB3I,IAAI,CAACmC,GAAL,CAAS/B,EAAE,CAACi4B,WAAZ,EAAyBj4B,EAAE,CAAC83B,QAAH,CAAYvvB,IAArC,CAAnB;AACAvI,MAAAA,EAAE,CAAC83B,QAAH,CAAY1vB,GAAZ,GAAkBxI,IAAI,CAACmC,GAAL,CAAS/B,EAAE,CAAC+3B,UAAZ,EAAwB/3B,EAAE,CAAC83B,QAAH,CAAY1vB,GAApC,CAAlB;AACApI,MAAAA,EAAE,CAAC83B,QAAH,CAAYzvB,KAAZ,GAAoBzI,IAAI,CAACmC,GAAL,CAAS/B,EAAE,CAACk4B,YAAZ,EAA0Bl4B,EAAE,CAAC83B,QAAH,CAAYzvB,KAAtC,CAApB;AACArI,MAAAA,EAAE,CAAC83B,QAAH,CAAYxvB,MAAZ,GAAqB1I,IAAI,CAACmC,GAAL,CAAS/B,EAAE,CAACg4B,aAAZ,EAA2Bh4B,EAAE,CAAC83B,QAAH,CAAYxvB,MAAvC,CAArB;AACD;AACF;;AACDqyB,EAAAA,QAAQ,GAAG;AACTrjC,IAAAA,QAAQ,CAAC,KAAKuP,OAAL,CAAa8zB,QAAd,EAAwB,CAAC,IAAD,CAAxB,CAAR;AACD;;AACDviB,EAAAA,YAAY,GAAG;AACb,UAAM;AAAC5M,MAAAA,IAAD;AAAOqb,MAAAA;AAAP,QAAmB,KAAKhgB,OAA9B;AACA,WAAOggB,QAAQ,KAAK,KAAb,IAAsBA,QAAQ,KAAK,QAAnC,IAA+Crb,IAAI,KAAK,GAA/D;AACD;;AACDsxB,EAAAA,UAAU,GAAG;AACX,WAAO,KAAKj2B,OAAL,CAAaijB,QAApB;AACD;;AACDsQ,EAAAA,qBAAqB,CAAC5jB,KAAD,EAAQ;AAC3B,UAAMxW,EAAE,GAAG,IAAX;AACAA,IAAAA,EAAE,CAACo7B,2BAAH;AACAp7B,IAAAA,EAAE,CAACq7B,kBAAH,CAAsB7kB,KAAtB;AACA,QAAI3jB,CAAJ,EAAOiW,IAAP;;AACA,SAAKjW,CAAC,GAAG,CAAJ,EAAOiW,IAAI,GAAG0N,KAAK,CAAC/V,MAAzB,EAAiC5N,CAAC,GAAGiW,IAArC,EAA2CjW,CAAC,EAA5C,EAAgD;AAC9C,UAAImB,aAAa,CAACwiB,KAAK,CAAC3jB,CAAD,CAAL,CAASuf,KAAV,CAAjB,EAAmC;AACjCoE,QAAAA,KAAK,CAACpB,MAAN,CAAaviB,CAAb,EAAgB,CAAhB;AACAiW,QAAAA,IAAI;AACJjW,QAAAA,CAAC;AACF;AACF;;AACDmN,IAAAA,EAAE,CAACs7B,0BAAH;AACD;;AACDK,EAAAA,cAAc,GAAG;AACf,UAAM37B,EAAE,GAAG,IAAX;AACA,QAAI07B,UAAU,GAAG17B,EAAE,CAACu4B,WAApB;;AACA,QAAI,CAACmD,UAAL,EAAiB;AACf,YAAMjC,UAAU,GAAGz5B,EAAE,CAAC6G,OAAH,CAAW2P,KAAX,CAAiBijB,UAApC;AACA,UAAIjjB,KAAK,GAAGxW,EAAE,CAACwW,KAAf;;AACA,UAAIijB,UAAU,GAAGjjB,KAAK,CAAC/V,MAAvB,EAA+B;AAC7B+V,QAAAA,KAAK,GAAG4f,MAAM,CAAC5f,KAAD,EAAQijB,UAAR,CAAd;AACD;;AACDz5B,MAAAA,EAAE,CAACu4B,WAAH,GAAiBmD,UAAU,GAAG17B,EAAE,CAAC+8B,kBAAH,CAAsBvmB,KAAtB,EAA6BA,KAAK,CAAC/V,MAAnC,CAA9B;AACD;;AACD,WAAOi7B,UAAP;AACD;;AACDqB,EAAAA,kBAAkB,CAACvmB,KAAD,EAAQ/V,MAAR,EAAgB;AAChC,UAAM;AAACwM,MAAAA,GAAD;AAAMurB,MAAAA,iBAAiB,EAAE3B;AAAzB,QAAmC,IAAzC;AACA,UAAMmG,MAAM,GAAG,EAAf;AACA,UAAMC,OAAO,GAAG,EAAhB;AACA,QAAIC,eAAe,GAAG,CAAtB;AACA,QAAIC,gBAAgB,GAAG,CAAvB;AACA,QAAItqC,CAAJ,EAAOkB,CAAP,EAAUqyB,IAAV,EAAgBhU,KAAhB,EAAuBgrB,QAAvB,EAAiCC,UAAjC,EAA6ClqB,KAA7C,EAAoDkkB,UAApD,EAAgEpd,KAAhE,EAAuED,MAAvE,EAA+EsjB,WAA/E;;AACA,SAAKzqC,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAG4N,MAAhB,EAAwB,EAAE5N,CAA1B,EAA6B;AAC3Buf,MAAAA,KAAK,GAAGoE,KAAK,CAAC3jB,CAAD,CAAL,CAASuf,KAAjB;AACAgrB,MAAAA,QAAQ,GAAG,KAAKG,uBAAL,CAA6B1qC,CAA7B,CAAX;AACAoa,MAAAA,GAAG,CAACkqB,IAAJ,GAAWkG,UAAU,GAAGD,QAAQ,CAACI,MAAjC;AACArqB,MAAAA,KAAK,GAAG0jB,MAAM,CAACwG,UAAD,CAAN,GAAqBxG,MAAM,CAACwG,UAAD,CAAN,IAAsB;AAAC7zB,QAAAA,IAAI,EAAE,EAAP;AAAWstB,QAAAA,EAAE,EAAE;AAAf,OAAnD;AACAO,MAAAA,UAAU,GAAG+F,QAAQ,CAAC/F,UAAtB;AACApd,MAAAA,KAAK,GAAGD,MAAM,GAAG,CAAjB;;AACA,UAAI,CAAChmB,aAAa,CAACoe,KAAD,CAAd,IAAyB,CAACpf,OAAO,CAACof,KAAD,CAArC,EAA8C;AAC5C6H,QAAAA,KAAK,GAAGriB,YAAY,CAACqV,GAAD,EAAMkG,KAAK,CAAC3J,IAAZ,EAAkB2J,KAAK,CAAC2jB,EAAxB,EAA4B7c,KAA5B,EAAmC7H,KAAnC,CAApB;AACA4H,QAAAA,MAAM,GAAGqd,UAAT;AACD,OAHD,MAGO,IAAIrkC,OAAO,CAACof,KAAD,CAAX,EAAoB;AACzB,aAAKre,CAAC,GAAG,CAAJ,EAAOqyB,IAAI,GAAGhU,KAAK,CAAC3R,MAAzB,EAAiC1M,CAAC,GAAGqyB,IAArC,EAA2C,EAAEryB,CAA7C,EAAgD;AAC9CupC,UAAAA,WAAW,GAAGlrB,KAAK,CAACre,CAAD,CAAnB;;AACA,cAAI,CAACC,aAAa,CAACspC,WAAD,CAAd,IAA+B,CAACtqC,OAAO,CAACsqC,WAAD,CAA3C,EAA0D;AACxDrjB,YAAAA,KAAK,GAAGriB,YAAY,CAACqV,GAAD,EAAMkG,KAAK,CAAC3J,IAAZ,EAAkB2J,KAAK,CAAC2jB,EAAxB,EAA4B7c,KAA5B,EAAmCqjB,WAAnC,CAApB;AACAtjB,YAAAA,MAAM,IAAIqd,UAAV;AACD;AACF;AACF;;AACD2F,MAAAA,MAAM,CAACv7B,IAAP,CAAYwY,KAAZ;AACAgjB,MAAAA,OAAO,CAACx7B,IAAR,CAAauY,MAAb;AACAkjB,MAAAA,eAAe,GAAGt9B,IAAI,CAACmC,GAAL,CAASkY,KAAT,EAAgBijB,eAAhB,CAAlB;AACAC,MAAAA,gBAAgB,GAAGv9B,IAAI,CAACmC,GAAL,CAASiY,MAAT,EAAiBmjB,gBAAjB,CAAnB;AACD;;AACDvG,IAAAA,cAAc,CAACC,MAAD,EAASp2B,MAAT,CAAd;AACA,UAAMo7B,MAAM,GAAGmB,MAAM,CAACziB,OAAP,CAAe2iB,eAAf,CAAf;AACA,UAAMnB,OAAO,GAAGkB,OAAO,CAAC1iB,OAAR,CAAgB4iB,gBAAhB,CAAhB;;AACA,UAAMM,OAAO,GAAIC,GAAD,KAAU;AAACzjB,MAAAA,KAAK,EAAE+iB,MAAM,CAACU,GAAD,CAAN,IAAe,CAAvB;AAA0B1jB,MAAAA,MAAM,EAAEijB,OAAO,CAACS,GAAD,CAAP,IAAgB;AAAlD,KAAV,CAAhB;;AACA,WAAO;AACL1I,MAAAA,KAAK,EAAEyI,OAAO,CAAC,CAAD,CADT;AAELtjB,MAAAA,IAAI,EAAEsjB,OAAO,CAACh9B,MAAM,GAAG,CAAV,CAFR;AAGLo7B,MAAAA,MAAM,EAAE4B,OAAO,CAAC5B,MAAD,CAHV;AAILE,MAAAA,OAAO,EAAE0B,OAAO,CAAC1B,OAAD,CAJX;AAKLiB,MAAAA,MALK;AAMLC,MAAAA;AANK,KAAP;AAQD;;AACD5qB,EAAAA,gBAAgB,CAAC/K,KAAD,EAAQ;AACtB,WAAOA,KAAP;AACD;;AACDiP,EAAAA,gBAAgB,CAACjP,KAAD,EAAQyB,KAAR,EAAe;AAC7B,WAAO2I,GAAP;AACD;;AACDisB,EAAAA,gBAAgB,CAACC,KAAD,EAAQ,CAAE;;AAC1BnnB,EAAAA,eAAe,CAAC1N,KAAD,EAAQ;AACrB,UAAMyN,KAAK,GAAG,KAAKA,KAAnB;;AACA,QAAIzN,KAAK,GAAG,CAAR,IAAaA,KAAK,GAAGyN,KAAK,CAAC/V,MAAN,GAAe,CAAxC,EAA2C;AACzC,aAAO,IAAP;AACD;;AACD,WAAO,KAAK8V,gBAAL,CAAsBC,KAAK,CAACzN,KAAD,CAAL,CAAazB,KAAnC,CAAP;AACD;;AACD2U,EAAAA,kBAAkB,CAAC4hB,OAAD,EAAU;AAC1B,UAAM79B,EAAE,GAAG,IAAX;;AACA,QAAIA,EAAE,CAACymB,cAAP,EAAuB;AACrBoX,MAAAA,OAAO,GAAG,IAAIA,OAAd;AACD;;AACD,UAAMD,KAAK,GAAG59B,EAAE,CAAC0a,WAAH,GAAiBmjB,OAAO,GAAG79B,EAAE,CAACmW,OAA5C;AACA,WAAOre,WAAW,CAACkI,EAAE,CAACg7B,cAAH,GAAoBhjC,WAAW,CAACgI,EAAE,CAAChB,KAAJ,EAAW4+B,KAAX,EAAkB,CAAlB,CAA/B,GAAsDA,KAAvD,CAAlB;AACD;;AACDE,EAAAA,kBAAkB,CAACF,KAAD,EAAQ;AACxB,UAAMC,OAAO,GAAG,CAACD,KAAK,GAAG,KAAKljB,WAAd,IAA6B,KAAKvE,OAAlD;AACA,WAAO,KAAKsQ,cAAL,GAAsB,IAAIoX,OAA1B,GAAoCA,OAA3C;AACD;;AACDtkB,EAAAA,YAAY,GAAG;AACb,WAAO,KAAKhD,gBAAL,CAAsB,KAAKwnB,YAAL,EAAtB,CAAP;AACD;;AACDA,EAAAA,YAAY,GAAG;AACb,UAAM;AAACl+B,MAAAA,GAAD;AAAMkC,MAAAA;AAAN,QAAa,IAAnB;AACA,WAAOlC,GAAG,GAAG,CAAN,IAAWkC,GAAG,GAAG,CAAjB,GAAqBA,GAArB,GACLlC,GAAG,GAAG,CAAN,IAAWkC,GAAG,GAAG,CAAjB,GAAqBlC,GAArB,GACA,CAFF;AAGD;;AACDwQ,EAAAA,UAAU,CAACtH,KAAD,EAAQ;AAChB,UAAM/I,EAAE,GAAG,IAAX;AACA,UAAMwW,KAAK,GAAGxW,EAAE,CAACwW,KAAH,IAAY,EAA1B;;AACA,QAAIzN,KAAK,IAAI,CAAT,IAAcA,KAAK,GAAGyN,KAAK,CAAC/V,MAAhC,EAAwC;AACtC,YAAMK,IAAI,GAAG0V,KAAK,CAACzN,KAAD,CAAlB;AACA,aAAOjI,IAAI,CAAC8M,QAAL,KACR9M,IAAI,CAAC8M,QAAL,GAAgB2pB,iBAAiB,CAACv3B,EAAE,CAACqQ,UAAH,EAAD,EAAkBtH,KAAlB,EAAyBjI,IAAzB,CADzB,CAAP;AAED;;AACD,WAAOd,EAAE,CAAC4N,QAAH,KACP5N,EAAE,CAAC4N,QAAH,GAAc0pB,kBAAkB,CAACt3B,EAAE,CAAChB,KAAH,CAASqR,UAAT,EAAD,EAAwBrQ,EAAxB,CADzB,CAAP;AAED;;AACDs1B,EAAAA,SAAS,GAAG;AACV,UAAMt1B,EAAE,GAAG,IAAX;AACA,UAAMg+B,WAAW,GAAGh+B,EAAE,CAAC6G,OAAH,CAAW2P,KAA/B;AACA,UAAMynB,GAAG,GAAG7pC,SAAS,CAAC4L,EAAE,CAACm4B,aAAJ,CAArB;AACA,UAAMhb,GAAG,GAAGvd,IAAI,CAAC0W,GAAL,CAAS1W,IAAI,CAACud,GAAL,CAAS8gB,GAAT,CAAT,CAAZ;AACA,UAAM5gB,GAAG,GAAGzd,IAAI,CAAC0W,GAAL,CAAS1W,IAAI,CAACyd,GAAL,CAAS4gB,GAAT,CAAT,CAAZ;;AACA,UAAMvC,UAAU,GAAG17B,EAAE,CAAC27B,cAAH,EAAnB;;AACA,UAAMzP,OAAO,GAAG8R,WAAW,CAACnK,eAAZ,IAA+B,CAA/C;AACA,UAAMt+B,CAAC,GAAGmmC,UAAU,GAAGA,UAAU,CAACG,MAAX,CAAkB5hB,KAAlB,GAA0BiS,OAA7B,GAAuC,CAA3D;AACA,UAAMv4B,CAAC,GAAG+nC,UAAU,GAAGA,UAAU,CAACK,OAAX,CAAmB/hB,MAAnB,GAA4BkS,OAA/B,GAAyC,CAA7D;AACA,WAAOlsB,EAAE,CAACoY,YAAH,KACHzkB,CAAC,GAAGwpB,GAAJ,GAAU5nB,CAAC,GAAG8nB,GAAd,GAAoB9nB,CAAC,GAAG4nB,GAAxB,GAA8BxpB,CAAC,GAAG0pB,GAD/B,GAEH1pB,CAAC,GAAG0pB,GAAJ,GAAU9nB,CAAC,GAAG4nB,GAAd,GAAoBxpB,CAAC,GAAGwpB,GAAxB,GAA8B5nB,CAAC,GAAG8nB,GAFtC;AAGD;;AACDoe,EAAAA,UAAU,GAAG;AACX,UAAMrX,OAAO,GAAG,KAAKvd,OAAL,CAAaud,OAA7B;;AACA,QAAIA,OAAO,KAAK,MAAhB,EAAwB;AACtB,aAAO,CAAC,CAACA,OAAT;AACD;;AACD,WAAO,KAAKpZ,uBAAL,GAA+BvK,MAA/B,GAAwC,CAA/C;AACD;;AACDy9B,EAAAA,qBAAqB,CAACxrB,SAAD,EAAY;AAC/B,UAAM1S,EAAE,GAAG,IAAX;AACA,UAAMwL,IAAI,GAAGxL,EAAE,CAACwL,IAAhB;AACA,UAAMxM,KAAK,GAAGgB,EAAE,CAAChB,KAAjB;AACA,UAAM6H,OAAO,GAAG7G,EAAE,CAAC6G,OAAnB;AACA,UAAM;AAAC6U,MAAAA,IAAD;AAAOmL,MAAAA;AAAP,QAAmBhgB,OAAzB;AACA,UAAM4U,MAAM,GAAGC,IAAI,CAACD,MAApB;AACA,UAAMrD,YAAY,GAAGpY,EAAE,CAACoY,YAAH,EAArB;AACA,UAAM5B,KAAK,GAAGxW,EAAE,CAACwW,KAAjB;AACA,UAAM2nB,WAAW,GAAG3nB,KAAK,CAAC/V,MAAN,IAAgBgb,MAAM,GAAG,CAAH,GAAO,CAA7B,CAApB;AACA,UAAM2iB,EAAE,GAAGpH,iBAAiB,CAACtb,IAAD,CAA5B;AACA,UAAMlb,KAAK,GAAG,EAAd;AACA,UAAM69B,UAAU,GAAG3iB,IAAI,CAACud,UAAL,CAAgBj5B,EAAE,CAACqQ,UAAH,EAAhB,CAAnB;AACA,UAAMiuB,SAAS,GAAGD,UAAU,CAACtL,UAAX,GAAwBsL,UAAU,CAACre,WAAnC,GAAiD,CAAnE;AACA,UAAMue,aAAa,GAAGD,SAAS,GAAG,CAAlC;;AACA,UAAME,gBAAgB,GAAG,UAASZ,KAAT,EAAgB;AACvC,aAAO5lC,WAAW,CAACgH,KAAD,EAAQ4+B,KAAR,EAAeU,SAAf,CAAlB;AACD,KAFD;;AAGA,QAAIG,WAAJ,EAAiB5rC,CAAjB,EAAoB8jC,SAApB,EAA+B+H,gBAA/B;AACA,QAAIC,GAAJ,EAASC,GAAT,EAAcC,GAAd,EAAmBC,GAAnB,EAAwBC,EAAxB,EAA4BC,EAA5B,EAAgCC,EAAhC,EAAoCC,EAApC;;AACA,QAAIrY,QAAQ,KAAK,KAAjB,EAAwB;AACtB4X,MAAAA,WAAW,GAAGD,gBAAgB,CAACx+B,EAAE,CAACsI,MAAJ,CAA9B;AACAs2B,MAAAA,GAAG,GAAG5+B,EAAE,CAACsI,MAAH,GAAY81B,EAAlB;AACAU,MAAAA,GAAG,GAAGL,WAAW,GAAGF,aAApB;AACAS,MAAAA,EAAE,GAAGR,gBAAgB,CAAC9rB,SAAS,CAACtK,GAAX,CAAhB,GAAkCm2B,aAAvC;AACAW,MAAAA,EAAE,GAAGxsB,SAAS,CAACpK,MAAf;AACD,KAND,MAMO,IAAIue,QAAQ,KAAK,QAAjB,EAA2B;AAChC4X,MAAAA,WAAW,GAAGD,gBAAgB,CAACx+B,EAAE,CAACoI,GAAJ,CAA9B;AACA42B,MAAAA,EAAE,GAAGtsB,SAAS,CAACtK,GAAf;AACA82B,MAAAA,EAAE,GAAGV,gBAAgB,CAAC9rB,SAAS,CAACpK,MAAX,CAAhB,GAAqCi2B,aAA1C;AACAK,MAAAA,GAAG,GAAGH,WAAW,GAAGF,aAApB;AACAO,MAAAA,GAAG,GAAG9+B,EAAE,CAACoI,GAAH,GAASg2B,EAAf;AACD,KANM,MAMA,IAAIvX,QAAQ,KAAK,MAAjB,EAAyB;AAC9B4X,MAAAA,WAAW,GAAGD,gBAAgB,CAACx+B,EAAE,CAACqI,KAAJ,CAA9B;AACAs2B,MAAAA,GAAG,GAAG3+B,EAAE,CAACqI,KAAH,GAAW+1B,EAAjB;AACAS,MAAAA,GAAG,GAAGJ,WAAW,GAAGF,aAApB;AACAQ,MAAAA,EAAE,GAAGP,gBAAgB,CAAC9rB,SAAS,CAACnK,IAAX,CAAhB,GAAmCg2B,aAAxC;AACAU,MAAAA,EAAE,GAAGvsB,SAAS,CAACrK,KAAf;AACD,KANM,MAMA,IAAIwe,QAAQ,KAAK,OAAjB,EAA0B;AAC/B4X,MAAAA,WAAW,GAAGD,gBAAgB,CAACx+B,EAAE,CAACuI,IAAJ,CAA9B;AACAw2B,MAAAA,EAAE,GAAGrsB,SAAS,CAACnK,IAAf;AACA02B,MAAAA,EAAE,GAAGT,gBAAgB,CAAC9rB,SAAS,CAACrK,KAAX,CAAhB,GAAoCk2B,aAAzC;AACAI,MAAAA,GAAG,GAAGF,WAAW,GAAGF,aAApB;AACAM,MAAAA,GAAG,GAAG7+B,EAAE,CAACuI,IAAH,GAAU61B,EAAhB;AACD,KANM,MAMA,IAAI5yB,IAAI,KAAK,GAAb,EAAkB;AACvB,UAAIqb,QAAQ,KAAK,QAAjB,EAA2B;AACzB4X,QAAAA,WAAW,GAAGD,gBAAgB,CAAC,CAAC9rB,SAAS,CAACtK,GAAV,GAAgBsK,SAAS,CAACpK,MAA3B,IAAqC,CAArC,GAAyC,GAA1C,CAA9B;AACD,OAFD,MAEO,IAAIxV,QAAQ,CAAC+zB,QAAD,CAAZ,EAAwB;AAC7B,cAAM+Q,cAAc,GAAGzyB,MAAM,CAACC,IAAP,CAAYyhB,QAAZ,EAAsB,CAAtB,CAAvB;AACA,cAAMvf,KAAK,GAAGuf,QAAQ,CAAC+Q,cAAD,CAAtB;AACA6G,QAAAA,WAAW,GAAGD,gBAAgB,CAACx+B,EAAE,CAAChB,KAAH,CAAS8M,MAAT,CAAgB8rB,cAAhB,EAAgCrhB,gBAAhC,CAAiDjP,KAAjD,CAAD,CAA9B;AACD;;AACD03B,MAAAA,EAAE,GAAGtsB,SAAS,CAACtK,GAAf;AACA82B,MAAAA,EAAE,GAAGxsB,SAAS,CAACpK,MAAf;AACAs2B,MAAAA,GAAG,GAAGH,WAAW,GAAGF,aAApB;AACAO,MAAAA,GAAG,GAAGF,GAAG,GAAGR,EAAZ;AACD,KAZM,MAYA,IAAI5yB,IAAI,KAAK,GAAb,EAAkB;AACvB,UAAIqb,QAAQ,KAAK,QAAjB,EAA2B;AACzB4X,QAAAA,WAAW,GAAGD,gBAAgB,CAAC,CAAC9rB,SAAS,CAACnK,IAAV,GAAiBmK,SAAS,CAACrK,KAA5B,IAAqC,CAAtC,CAA9B;AACD,OAFD,MAEO,IAAIvV,QAAQ,CAAC+zB,QAAD,CAAZ,EAAwB;AAC7B,cAAM+Q,cAAc,GAAGzyB,MAAM,CAACC,IAAP,CAAYyhB,QAAZ,EAAsB,CAAtB,CAAvB;AACA,cAAMvf,KAAK,GAAGuf,QAAQ,CAAC+Q,cAAD,CAAtB;AACA6G,QAAAA,WAAW,GAAGD,gBAAgB,CAACx+B,EAAE,CAAChB,KAAH,CAAS8M,MAAT,CAAgB8rB,cAAhB,EAAgCrhB,gBAAhC,CAAiDjP,KAAjD,CAAD,CAA9B;AACD;;AACDq3B,MAAAA,GAAG,GAAGF,WAAW,GAAGF,aAApB;AACAM,MAAAA,GAAG,GAAGF,GAAG,GAAGP,EAAZ;AACAW,MAAAA,EAAE,GAAGrsB,SAAS,CAACnK,IAAf;AACA02B,MAAAA,EAAE,GAAGvsB,SAAS,CAACrK,KAAf;AACD;;AACD,UAAM82B,KAAK,GAAGjsC,cAAc,CAAC2T,OAAO,CAAC2P,KAAR,CAAcke,aAAf,EAA8ByJ,WAA9B,CAA5B;AACA,UAAMiB,IAAI,GAAGx/B,IAAI,CAACmC,GAAL,CAAS,CAAT,EAAYnC,IAAI,CAACk2B,IAAL,CAAUqI,WAAW,GAAGgB,KAAxB,CAAZ,CAAb;;AACA,SAAKtsC,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGsrC,WAAhB,EAA6BtrC,CAAC,IAAIusC,IAAlC,EAAwC;AACtC,YAAMC,WAAW,GAAG3jB,IAAI,CAACud,UAAL,CAAgBj5B,EAAE,CAACqQ,UAAH,CAAcxd,CAAd,CAAhB,CAApB;AACA,YAAMmuB,SAAS,GAAGqe,WAAW,CAACre,SAA9B;AACA,YAAMse,SAAS,GAAGD,WAAW,CAAC3sC,KAA9B;AACA,YAAM2gC,UAAU,GAAG3X,IAAI,CAAC2X,UAAL,IAAmB,EAAtC;AACA,YAAMC,gBAAgB,GAAG+L,WAAW,CAAC/L,gBAArC;AACA,YAAMH,SAAS,GAAGkM,WAAW,CAAClM,SAA9B;AACA,YAAMC,SAAS,GAAGiM,WAAW,CAACjM,SAA9B;AACA,YAAMmM,cAAc,GAAGF,WAAW,CAACE,cAAZ,IAA8B,EAArD;AACA,YAAMC,oBAAoB,GAAGH,WAAW,CAACG,oBAAzC;AACA7I,MAAAA,SAAS,GAAGJ,mBAAmB,CAACv2B,EAAD,EAAKnN,CAAL,EAAQ4oB,MAAR,CAA/B;;AACA,UAAIkb,SAAS,KAAK73B,SAAlB,EAA6B;AAC3B;AACD;;AACD4/B,MAAAA,gBAAgB,GAAG1mC,WAAW,CAACgH,KAAD,EAAQ23B,SAAR,EAAmB3V,SAAnB,CAA9B;;AACA,UAAI5I,YAAJ,EAAkB;AAChBumB,QAAAA,GAAG,GAAGE,GAAG,GAAGE,EAAE,GAAGE,EAAE,GAAGP,gBAAtB;AACD,OAFD,MAEO;AACLE,QAAAA,GAAG,GAAGE,GAAG,GAAGE,EAAE,GAAGE,EAAE,GAAGR,gBAAtB;AACD;;AACDl+B,MAAAA,KAAK,CAACiB,IAAN,CAAW;AACTk9B,QAAAA,GADS;AAETC,QAAAA,GAFS;AAGTC,QAAAA,GAHS;AAITC,QAAAA,GAJS;AAKTC,QAAAA,EALS;AAMTC,QAAAA,EANS;AAOTC,QAAAA,EAPS;AAQTC,QAAAA,EARS;AASTjlB,QAAAA,KAAK,EAAE+G,SATE;AAUTtuB,QAAAA,KAAK,EAAE4sC,SAVE;AAWTjM,QAAAA,UAXS;AAYTC,QAAAA,gBAZS;AAaTH,QAAAA,SAbS;AAcTC,QAAAA,SAdS;AAeTmM,QAAAA,cAfS;AAgBTC,QAAAA;AAhBS,OAAX;AAkBD;;AACDx/B,IAAAA,EAAE,CAAC64B,YAAH,GAAkBsF,WAAlB;AACAn+B,IAAAA,EAAE,CAAC84B,YAAH,GAAkB2F,WAAlB;AACA,WAAOj+B,KAAP;AACD;;AACDi/B,EAAAA,kBAAkB,CAAC/sB,SAAD,EAAY;AAC5B,UAAM1S,EAAE,GAAG,IAAX;AACA,UAAMwL,IAAI,GAAGxL,EAAE,CAACwL,IAAhB;AACA,UAAM3E,OAAO,GAAG7G,EAAE,CAAC6G,OAAnB;AACA,UAAM;AAACggB,MAAAA,QAAD;AAAWrQ,MAAAA,KAAK,EAAEwnB;AAAlB,QAAiCn3B,OAAvC;AACA,UAAMuR,YAAY,GAAGpY,EAAE,CAACoY,YAAH,EAArB;AACA,UAAM5B,KAAK,GAAGxW,EAAE,CAACwW,KAAjB;AACA,UAAM;AAACyd,MAAAA,KAAD;AAAQC,MAAAA,UAAR;AAAoBhI,MAAAA,OAApB;AAA6BuH,MAAAA;AAA7B,QAAuCuK,WAA7C;AACA,UAAMI,EAAE,GAAGpH,iBAAiB,CAACnwB,OAAO,CAAC6U,IAAT,CAA5B;AACA,UAAMgkB,cAAc,GAAGtB,EAAE,GAAGlS,OAA5B;AACA,UAAMyT,eAAe,GAAGlM,MAAM,GAAG,CAACvH,OAAJ,GAAcwT,cAA5C;AACA,UAAMjjB,QAAQ,GAAG,CAACroB,SAAS,CAAC4L,EAAE,CAACm4B,aAAJ,CAA3B;AACA,UAAM33B,KAAK,GAAG,EAAd;AACA,QAAI3N,CAAJ,EAAOiW,IAAP,EAAahI,IAAb,EAAmBsR,KAAnB,EAA0B3c,CAA1B,EAA6BE,CAA7B,EAAgCiqC,SAAhC,EAA2ChC,KAA3C,EAAkDzG,IAAlD,EAAwDE,UAAxD,EAAoEwI,SAApE,EAA+EC,UAA/E;AACA,QAAIC,YAAY,GAAG,QAAnB;;AACA,QAAIlZ,QAAQ,KAAK,KAAjB,EAAwB;AACtBlxB,MAAAA,CAAC,GAAGqK,EAAE,CAACsI,MAAH,GAAYq3B,eAAhB;AACAC,MAAAA,SAAS,GAAG5/B,EAAE,CAACggC,uBAAH,EAAZ;AACD,KAHD,MAGO,IAAInZ,QAAQ,KAAK,QAAjB,EAA2B;AAChClxB,MAAAA,CAAC,GAAGqK,EAAE,CAACoI,GAAH,GAASu3B,eAAb;AACAC,MAAAA,SAAS,GAAG5/B,EAAE,CAACggC,uBAAH,EAAZ;AACD,KAHM,MAGA,IAAInZ,QAAQ,KAAK,MAAjB,EAAyB;AAC9B,YAAMiL,GAAG,GAAG9xB,EAAE,CAACigC,uBAAH,CAA2B7B,EAA3B,CAAZ;;AACAwB,MAAAA,SAAS,GAAG9N,GAAG,CAAC8N,SAAhB;AACAnqC,MAAAA,CAAC,GAAGq8B,GAAG,CAACr8B,CAAR;AACD,KAJM,MAIA,IAAIoxB,QAAQ,KAAK,OAAjB,EAA0B;AAC/B,YAAMiL,GAAG,GAAG9xB,EAAE,CAACigC,uBAAH,CAA2B7B,EAA3B,CAAZ;;AACAwB,MAAAA,SAAS,GAAG9N,GAAG,CAAC8N,SAAhB;AACAnqC,MAAAA,CAAC,GAAGq8B,GAAG,CAACr8B,CAAR;AACD,KAJM,MAIA,IAAI+V,IAAI,KAAK,GAAb,EAAkB;AACvB,UAAIqb,QAAQ,KAAK,QAAjB,EAA2B;AACzBlxB,QAAAA,CAAC,GAAI,CAAC+c,SAAS,CAACtK,GAAV,GAAgBsK,SAAS,CAACpK,MAA3B,IAAqC,CAAtC,GAA2Co3B,cAA/C;AACD,OAFD,MAEO,IAAI5sC,QAAQ,CAAC+zB,QAAD,CAAZ,EAAwB;AAC7B,cAAM+Q,cAAc,GAAGzyB,MAAM,CAACC,IAAP,CAAYyhB,QAAZ,EAAsB,CAAtB,CAAvB;AACA,cAAMvf,KAAK,GAAGuf,QAAQ,CAAC+Q,cAAD,CAAtB;AACAjiC,QAAAA,CAAC,GAAGqK,EAAE,CAAChB,KAAH,CAAS8M,MAAT,CAAgB8rB,cAAhB,EAAgCrhB,gBAAhC,CAAiDjP,KAAjD,IAA0Do4B,cAA9D;AACD;;AACDE,MAAAA,SAAS,GAAG5/B,EAAE,CAACggC,uBAAH,EAAZ;AACD,KATM,MASA,IAAIx0B,IAAI,KAAK,GAAb,EAAkB;AACvB,UAAIqb,QAAQ,KAAK,QAAjB,EAA2B;AACzBpxB,QAAAA,CAAC,GAAI,CAACid,SAAS,CAACnK,IAAV,GAAiBmK,SAAS,CAACrK,KAA5B,IAAqC,CAAtC,GAA2Cq3B,cAA/C;AACD,OAFD,MAEO,IAAI5sC,QAAQ,CAAC+zB,QAAD,CAAZ,EAAwB;AAC7B,cAAM+Q,cAAc,GAAGzyB,MAAM,CAACC,IAAP,CAAYyhB,QAAZ,EAAsB,CAAtB,CAAvB;AACA,cAAMvf,KAAK,GAAGuf,QAAQ,CAAC+Q,cAAD,CAAtB;AACAniC,QAAAA,CAAC,GAAGuK,EAAE,CAAChB,KAAH,CAAS8M,MAAT,CAAgB8rB,cAAhB,EAAgCrhB,gBAAhC,CAAiDjP,KAAjD,CAAJ;AACD;;AACDs4B,MAAAA,SAAS,GAAG5/B,EAAE,CAACigC,uBAAH,CAA2B7B,EAA3B,EAA+BwB,SAA3C;AACD;;AACD,QAAIp0B,IAAI,KAAK,GAAb,EAAkB;AAChB,UAAIyoB,KAAK,KAAK,OAAd,EAAuB;AACrB8L,QAAAA,YAAY,GAAG,KAAf;AACD,OAFD,MAEO,IAAI9L,KAAK,KAAK,KAAd,EAAqB;AAC1B8L,QAAAA,YAAY,GAAG,QAAf;AACD;AACF;;AACD,UAAMrE,UAAU,GAAG17B,EAAE,CAAC27B,cAAH,EAAnB;;AACA,SAAK9oC,CAAC,GAAG,CAAJ,EAAOiW,IAAI,GAAG0N,KAAK,CAAC/V,MAAzB,EAAiC5N,CAAC,GAAGiW,IAArC,EAA2C,EAAEjW,CAA7C,EAAgD;AAC9CiO,MAAAA,IAAI,GAAG0V,KAAK,CAAC3jB,CAAD,CAAZ;AACAuf,MAAAA,KAAK,GAAGtR,IAAI,CAACsR,KAAb;AACA,YAAMitB,WAAW,GAAGrB,WAAW,CAAC/E,UAAZ,CAAuBj5B,EAAE,CAACqQ,UAAH,CAAcxd,CAAd,CAAvB,CAApB;AACA+qC,MAAAA,KAAK,GAAG59B,EAAE,CAACyW,eAAH,CAAmB5jB,CAAnB,IAAwBmrC,WAAW,CAAClK,WAA5C;AACAqD,MAAAA,IAAI,GAAGn3B,EAAE,CAACu9B,uBAAH,CAA2B1qC,CAA3B,CAAP;AACAwkC,MAAAA,UAAU,GAAGF,IAAI,CAACE,UAAlB;AACAwI,MAAAA,SAAS,GAAG7sC,OAAO,CAACof,KAAD,CAAP,GAAiBA,KAAK,CAAC3R,MAAvB,GAAgC,CAA5C;AACA,YAAMy/B,SAAS,GAAGL,SAAS,GAAG,CAA9B;AACA,YAAMntC,KAAK,GAAG2sC,WAAW,CAAC3sC,KAA1B;AACA,YAAMytC,WAAW,GAAGd,WAAW,CAAC1L,eAAhC;AACA,YAAMyM,WAAW,GAAGf,WAAW,CAAC3L,eAAhC;;AACA,UAAItb,YAAJ,EAAkB;AAChB3iB,QAAAA,CAAC,GAAGmoC,KAAJ;;AACA,YAAI/W,QAAQ,KAAK,KAAjB,EAAwB;AACtB,cAAIqN,UAAU,KAAK,MAAf,IAAyBzX,QAAQ,KAAK,CAA1C,EAA6C;AAC3CqjB,YAAAA,UAAU,GAAG,CAACD,SAAD,GAAaxI,UAAb,GAA0BA,UAAU,GAAG,CAApD;AACD,WAFD,MAEO,IAAInD,UAAU,KAAK,QAAnB,EAA6B;AAClC4L,YAAAA,UAAU,GAAG,CAACpE,UAAU,CAACK,OAAX,CAAmB/hB,MAApB,GAA6B,CAA7B,GAAiCkmB,SAAS,GAAG7I,UAA7C,GAA0DA,UAAvE;AACD,WAFM,MAEA;AACLyI,YAAAA,UAAU,GAAG,CAACpE,UAAU,CAACK,OAAX,CAAmB/hB,MAApB,GAA6Bqd,UAAU,GAAG,CAAvD;AACD;AACF,SARD,MAQO;AACL,cAAInD,UAAU,KAAK,MAAf,IAAyBzX,QAAQ,KAAK,CAA1C,EAA6C;AAC3CqjB,YAAAA,UAAU,GAAGzI,UAAU,GAAG,CAA1B;AACD,WAFD,MAEO,IAAInD,UAAU,KAAK,QAAnB,EAA6B;AAClC4L,YAAAA,UAAU,GAAGpE,UAAU,CAACK,OAAX,CAAmB/hB,MAAnB,GAA4B,CAA5B,GAAgCkmB,SAAS,GAAG7I,UAAzD;AACD,WAFM,MAEA;AACLyI,YAAAA,UAAU,GAAGpE,UAAU,CAACK,OAAX,CAAmB/hB,MAAnB,GAA4B6lB,SAAS,GAAGxI,UAArD;AACD;AACF;;AACD,YAAI5D,MAAJ,EAAY;AACVqM,UAAAA,UAAU,IAAI,CAAC,CAAf;AACD;AACF,OAtBD,MAsBO;AACLnqC,QAAAA,CAAC,GAAGioC,KAAJ;AACAkC,QAAAA,UAAU,GAAG,CAAC,IAAID,SAAL,IAAkBxI,UAAlB,GAA+B,CAA5C;AACD;;AACD,UAAIgJ,QAAJ;;AACA,UAAIhB,WAAW,CAAClL,iBAAhB,EAAmC;AACjC,cAAMmM,YAAY,GAAGtqC,SAAS,CAACqpC,WAAW,CAAChL,eAAb,CAA9B;AACA,cAAMra,MAAM,GAAG0hB,UAAU,CAACuB,OAAX,CAAmBpqC,CAAnB,CAAf;AACA,cAAMonB,KAAK,GAAGyhB,UAAU,CAACsB,MAAX,CAAkBnqC,CAAlB,CAAd;AACA,YAAIuV,GAAG,GAAGzS,CAAC,GAAGmqC,UAAJ,GAAiBQ,YAAY,CAACl4B,GAAxC;AACA,YAAIG,IAAI,GAAG9S,CAAC,GAAG6qC,YAAY,CAAC/3B,IAA5B;;AACA,gBAAQw3B,YAAR;AACA,eAAK,QAAL;AACE33B,YAAAA,GAAG,IAAI4R,MAAM,GAAG,CAAhB;AACA;;AACF,eAAK,QAAL;AACE5R,YAAAA,GAAG,IAAI4R,MAAP;AACA;AANF;;AAQA,gBAAQ4lB,SAAR;AACA,eAAK,QAAL;AACEr3B,YAAAA,IAAI,IAAI0R,KAAK,GAAG,CAAhB;AACA;;AACF,eAAK,OAAL;AACE1R,YAAAA,IAAI,IAAI0R,KAAR;AACA;AANF;;AAQAomB,QAAAA,QAAQ,GAAG;AACT93B,UAAAA,IADS;AAETH,UAAAA,GAFS;AAGT6R,UAAAA,KAAK,EAAEA,KAAK,GAAGqmB,YAAY,CAACrmB,KAHnB;AAITD,UAAAA,MAAM,EAAEA,MAAM,GAAGsmB,YAAY,CAACtmB,MAJrB;AAKTtnB,UAAAA,KAAK,EAAE2sC,WAAW,CAACjL;AALV,SAAX;AAOD;;AACD5zB,MAAAA,KAAK,CAACiB,IAAN,CAAW;AACTgb,QAAAA,QADS;AAETrK,QAAAA,KAFS;AAGT+kB,QAAAA,IAHS;AAITzkC,QAAAA,KAJS;AAKTytC,QAAAA,WALS;AAMTC,QAAAA,WANS;AAOTN,QAAAA,UAPS;AAQTF,QAAAA,SARS;AASTG,QAAAA,YATS;AAUTQ,QAAAA,WAAW,EAAE,CAAC9qC,CAAD,EAAIE,CAAJ,CAVJ;AAWT0qC,QAAAA;AAXS,OAAX;AAaD;;AACD,WAAO7/B,KAAP;AACD;;AACDw/B,EAAAA,uBAAuB,GAAG;AACxB,UAAMhgC,EAAE,GAAG,IAAX;AACA,UAAM;AAAC6mB,MAAAA,QAAD;AAAWrQ,MAAAA;AAAX,QAAoBxW,EAAE,CAAC6G,OAA7B;AACA,UAAM4V,QAAQ,GAAG,CAACroB,SAAS,CAAC4L,EAAE,CAACm4B,aAAJ,CAA3B;;AACA,QAAI1b,QAAJ,EAAc;AACZ,aAAOoK,QAAQ,KAAK,KAAb,GAAqB,MAArB,GAA8B,OAArC;AACD;;AACD,QAAIoN,KAAK,GAAG,QAAZ;;AACA,QAAIzd,KAAK,CAACyd,KAAN,KAAgB,OAApB,EAA6B;AAC3BA,MAAAA,KAAK,GAAG,MAAR;AACD,KAFD,MAEO,IAAIzd,KAAK,CAACyd,KAAN,KAAgB,KAApB,EAA2B;AAChCA,MAAAA,KAAK,GAAG,OAAR;AACD;;AACD,WAAOA,KAAP;AACD;;AACDgM,EAAAA,uBAAuB,CAAC7B,EAAD,EAAK;AAC1B,UAAMp+B,EAAE,GAAG,IAAX;AACA,UAAM;AAAC6mB,MAAAA,QAAD;AAAWrQ,MAAAA,KAAK,EAAE;AAAC0d,QAAAA,UAAD;AAAaT,QAAAA,MAAb;AAAqBvH,QAAAA;AAArB;AAAlB,QAAmDlsB,EAAE,CAAC6G,OAA5D;;AACA,UAAM60B,UAAU,GAAG17B,EAAE,CAAC27B,cAAH,EAAnB;;AACA,UAAM+D,cAAc,GAAGtB,EAAE,GAAGlS,OAA5B;AACA,UAAM2P,MAAM,GAAGH,UAAU,CAACG,MAAX,CAAkB5hB,KAAjC;AACA,QAAI2lB,SAAJ;AACA,QAAInqC,CAAJ;;AACA,QAAIoxB,QAAQ,KAAK,MAAjB,EAAyB;AACvB,UAAI4M,MAAJ,EAAY;AACVmM,QAAAA,SAAS,GAAG,MAAZ;AACAnqC,QAAAA,CAAC,GAAGuK,EAAE,CAACqI,KAAH,GAAW6jB,OAAf;AACD,OAHD,MAGO;AACLz2B,QAAAA,CAAC,GAAGuK,EAAE,CAACqI,KAAH,GAAWq3B,cAAf;;AACA,YAAIxL,UAAU,KAAK,MAAnB,EAA2B;AACzB0L,UAAAA,SAAS,GAAG,OAAZ;AACD,SAFD,MAEO,IAAI1L,UAAU,KAAK,QAAnB,EAA6B;AAClC0L,UAAAA,SAAS,GAAG,QAAZ;AACAnqC,UAAAA,CAAC,IAAKomC,MAAM,GAAG,CAAf;AACD,SAHM,MAGA;AACL+D,UAAAA,SAAS,GAAG,MAAZ;AACAnqC,UAAAA,CAAC,GAAGuK,EAAE,CAACuI,IAAP;AACD;AACF;AACF,KAhBD,MAgBO,IAAIse,QAAQ,KAAK,OAAjB,EAA0B;AAC/B,UAAI4M,MAAJ,EAAY;AACVmM,QAAAA,SAAS,GAAG,OAAZ;AACAnqC,QAAAA,CAAC,GAAGuK,EAAE,CAACuI,IAAH,GAAU2jB,OAAd;AACD,OAHD,MAGO;AACLz2B,QAAAA,CAAC,GAAGuK,EAAE,CAACuI,IAAH,GAAUm3B,cAAd;;AACA,YAAIxL,UAAU,KAAK,MAAnB,EAA2B;AACzB0L,UAAAA,SAAS,GAAG,MAAZ;AACD,SAFD,MAEO,IAAI1L,UAAU,KAAK,QAAnB,EAA6B;AAClC0L,UAAAA,SAAS,GAAG,QAAZ;AACAnqC,UAAAA,CAAC,IAAIomC,MAAM,GAAG,CAAd;AACD,SAHM,MAGA;AACL+D,UAAAA,SAAS,GAAG,OAAZ;AACAnqC,UAAAA,CAAC,GAAGuK,EAAE,CAACqI,KAAP;AACD;AACF;AACF,KAhBM,MAgBA;AACLu3B,MAAAA,SAAS,GAAG,OAAZ;AACD;;AACD,WAAO;AAACA,MAAAA,SAAD;AAAYnqC,MAAAA;AAAZ,KAAP;AACD;;AACD+qC,EAAAA,iBAAiB,GAAG;AAClB,UAAMxgC,EAAE,GAAG,IAAX;;AACA,QAAIA,EAAE,CAAC6G,OAAH,CAAW2P,KAAX,CAAiBid,MAArB,EAA6B;AAC3B;AACD;;AACD,UAAMz0B,KAAK,GAAGgB,EAAE,CAAChB,KAAjB;AACA,UAAM6nB,QAAQ,GAAG7mB,EAAE,CAAC6G,OAAH,CAAWggB,QAA5B;;AACA,QAAIA,QAAQ,KAAK,MAAb,IAAuBA,QAAQ,KAAK,OAAxC,EAAiD;AAC/C,aAAO;AAACze,QAAAA,GAAG,EAAE,CAAN;AAASG,QAAAA,IAAI,EAAEvI,EAAE,CAACuI,IAAlB;AAAwBD,QAAAA,MAAM,EAAEtJ,KAAK,CAACgb,MAAtC;AAA8C3R,QAAAA,KAAK,EAAErI,EAAE,CAACqI;AAAxD,OAAP;AACD;;AAAC,QAAIwe,QAAQ,KAAK,KAAb,IAAsBA,QAAQ,KAAK,QAAvC,EAAiD;AACjD,aAAO;AAACze,QAAAA,GAAG,EAAEpI,EAAE,CAACoI,GAAT;AAAcG,QAAAA,IAAI,EAAE,CAApB;AAAuBD,QAAAA,MAAM,EAAEtI,EAAE,CAACsI,MAAlC;AAA0CD,QAAAA,KAAK,EAAErJ,KAAK,CAACib;AAAvD,OAAP;AACD;AACF;;AACDwmB,EAAAA,cAAc,GAAG;AACf,UAAM;AAACxzB,MAAAA,GAAD;AAAMpG,MAAAA,OAAO,EAAE;AAACga,QAAAA;AAAD,OAAf;AAAkCtY,MAAAA,IAAlC;AAAwCH,MAAAA,GAAxC;AAA6C6R,MAAAA,KAA7C;AAAoDD,MAAAA;AAApD,QAA8D,IAApE;;AACA,QAAI6G,eAAJ,EAAqB;AACnB5T,MAAAA,GAAG,CAACyzB,IAAJ;AACAzzB,MAAAA,GAAG,CAAC2T,SAAJ,GAAgBC,eAAhB;AACA5T,MAAAA,GAAG,CAAC0zB,QAAJ,CAAap4B,IAAb,EAAmBH,GAAnB,EAAwB6R,KAAxB,EAA+BD,MAA/B;AACA/M,MAAAA,GAAG,CAAC2zB,OAAJ;AACD;AACF;;AACD3lB,EAAAA,oBAAoB,CAAC3T,KAAD,EAAQ;AAC1B,UAAMtH,EAAE,GAAG,IAAX;AACA,UAAM0b,IAAI,GAAG1b,EAAE,CAAC6G,OAAH,CAAW6U,IAAxB;;AACA,QAAI,CAAC1b,EAAE,CAACy7B,UAAH,EAAD,IAAoB,CAAC/f,IAAI,CAAC0I,OAA9B,EAAuC;AACrC,aAAO,CAAP;AACD;;AACD,UAAM5N,KAAK,GAAGxW,EAAE,CAACwW,KAAjB;AACA,UAAMzN,KAAK,GAAGyN,KAAK,CAACqqB,SAAN,CAAgB1sC,CAAC,IAAIA,CAAC,CAACmT,KAAF,KAAYA,KAAjC,CAAd;;AACA,QAAIyB,KAAK,IAAI,CAAb,EAAgB;AACd,YAAMjB,IAAI,GAAG4T,IAAI,CAACud,UAAL,CAAgBj5B,EAAE,CAACqQ,UAAH,CAActH,KAAd,CAAhB,CAAb;AACA,aAAOjB,IAAI,CAACkZ,SAAZ;AACD;;AACD,WAAO,CAAP;AACD;;AACD8f,EAAAA,QAAQ,CAACpuB,SAAD,EAAY;AAClB,UAAM1S,EAAE,GAAG,IAAX;AACA,UAAM0b,IAAI,GAAG1b,EAAE,CAAC6G,OAAH,CAAW6U,IAAxB;AACA,UAAMzO,GAAG,GAAGjN,EAAE,CAACiN,GAAf;;AACA,UAAMzM,KAAK,GAAGR,EAAE,CAACq4B,cAAH,KAAsBr4B,EAAE,CAACq4B,cAAH,GAAoBr4B,EAAE,CAACk+B,qBAAH,CAAyBxrB,SAAzB,CAA1C,CAAd;;AACA,QAAI7f,CAAJ,EAAOiW,IAAP;;AACA,UAAMi4B,QAAQ,GAAG,CAACC,EAAD,EAAKC,EAAL,EAASvgB,KAAT,KAAmB;AAClC,UAAI,CAACA,KAAK,CAACzG,KAAP,IAAgB,CAACyG,KAAK,CAAChuB,KAA3B,EAAkC;AAChC;AACD;;AACDua,MAAAA,GAAG,CAACyzB,IAAJ;AACAzzB,MAAAA,GAAG,CAAC+T,SAAJ,GAAgBN,KAAK,CAACzG,KAAtB;AACAhN,MAAAA,GAAG,CAAC6T,WAAJ,GAAkBJ,KAAK,CAAChuB,KAAxB;AACAua,MAAAA,GAAG,CAACi0B,WAAJ,CAAgBxgB,KAAK,CAAC2S,UAAN,IAAoB,EAApC;AACApmB,MAAAA,GAAG,CAACk0B,cAAJ,GAAqBzgB,KAAK,CAAC4S,gBAA3B;AACArmB,MAAAA,GAAG,CAACm0B,SAAJ;AACAn0B,MAAAA,GAAG,CAACo0B,MAAJ,CAAWL,EAAE,CAACvrC,CAAd,EAAiBurC,EAAE,CAACrrC,CAApB;AACAsX,MAAAA,GAAG,CAACq0B,MAAJ,CAAWL,EAAE,CAACxrC,CAAd,EAAiBwrC,EAAE,CAACtrC,CAApB;AACAsX,MAAAA,GAAG,CAACs0B,MAAJ;AACAt0B,MAAAA,GAAG,CAAC2zB,OAAJ;AACD,KAdD;;AAeA,QAAIllB,IAAI,CAAC0I,OAAT,EAAkB;AAChB,WAAKvxB,CAAC,GAAG,CAAJ,EAAOiW,IAAI,GAAGtI,KAAK,CAACC,MAAzB,EAAiC5N,CAAC,GAAGiW,IAArC,EAA2C,EAAEjW,CAA7C,EAAgD;AAC9C,cAAM8N,IAAI,GAAGH,KAAK,CAAC3N,CAAD,CAAlB;;AACA,YAAI6oB,IAAI,CAACsX,eAAT,EAA0B;AACxB+N,UAAAA,QAAQ,CACN;AAACtrC,YAAAA,CAAC,EAAEkL,IAAI,CAACo+B,EAAT;AAAappC,YAAAA,CAAC,EAAEgL,IAAI,CAACq+B;AAArB,WADM,EAEN;AAACvpC,YAAAA,CAAC,EAAEkL,IAAI,CAACs+B,EAAT;AAAatpC,YAAAA,CAAC,EAAEgL,IAAI,CAACu+B;AAArB,WAFM,EAGNv+B,IAHM,CAAR;AAKD;;AACD,YAAI+a,IAAI,CAACuX,SAAT,EAAoB;AAClB8N,UAAAA,QAAQ,CACN;AAACtrC,YAAAA,CAAC,EAAEkL,IAAI,CAACg+B,GAAT;AAAchpC,YAAAA,CAAC,EAAEgL,IAAI,CAACi+B;AAAtB,WADM,EAEN;AAACnpC,YAAAA,CAAC,EAAEkL,IAAI,CAACk+B,GAAT;AAAclpC,YAAAA,CAAC,EAAEgL,IAAI,CAACm+B;AAAtB,WAFM,EAGN;AACEpsC,YAAAA,KAAK,EAAEiO,IAAI,CAACyyB,SADd;AAEEnZ,YAAAA,KAAK,EAAEtZ,IAAI,CAACwyB,SAFd;AAGEE,YAAAA,UAAU,EAAE1yB,IAAI,CAAC4+B,cAHnB;AAIEjM,YAAAA,gBAAgB,EAAE3yB,IAAI,CAAC6+B;AAJzB,WAHM,CAAR;AAUD;AACF;AACF;AACF;;AACDzM,EAAAA,UAAU,GAAG;AACX,UAAM/yB,EAAE,GAAG,IAAX;AACA,UAAM;AAAChB,MAAAA,KAAD;AAAQiO,MAAAA,GAAR;AAAapG,MAAAA,OAAO,EAAE;AAAC6U,QAAAA;AAAD;AAAtB,QAAgC1b,EAAtC;AACA,UAAMq+B,UAAU,GAAG3iB,IAAI,CAACud,UAAL,CAAgBj5B,EAAE,CAACqQ,UAAH,EAAhB,CAAnB;AACA,UAAMiuB,SAAS,GAAG5iB,IAAI,CAACqX,UAAL,GAAkBsL,UAAU,CAACre,WAA7B,GAA2C,CAA7D;;AACA,QAAI,CAACse,SAAL,EAAgB;AACd;AACD;;AACD,UAAMkD,aAAa,GAAG9lB,IAAI,CAACud,UAAL,CAAgBj5B,EAAE,CAACqQ,UAAH,CAAc,CAAd,CAAhB,EAAkC2Q,SAAxD;AACA,UAAMyd,WAAW,GAAGz+B,EAAE,CAAC84B,YAAvB;AACA,QAAIiG,EAAJ,EAAQE,EAAR,EAAYD,EAAZ,EAAgBE,EAAhB;;AACA,QAAIl/B,EAAE,CAACoY,YAAH,EAAJ,EAAuB;AACrB2mB,MAAAA,EAAE,GAAG/mC,WAAW,CAACgH,KAAD,EAAQgB,EAAE,CAACuI,IAAX,EAAiB+1B,SAAjB,CAAX,GAAyCA,SAAS,GAAG,CAA1D;AACAW,MAAAA,EAAE,GAAGjnC,WAAW,CAACgH,KAAD,EAAQgB,EAAE,CAACqI,KAAX,EAAkBm5B,aAAlB,CAAX,GAA8CA,aAAa,GAAG,CAAnE;AACAxC,MAAAA,EAAE,GAAGE,EAAE,GAAGT,WAAV;AACD,KAJD,MAIO;AACLO,MAAAA,EAAE,GAAGhnC,WAAW,CAACgH,KAAD,EAAQgB,EAAE,CAACoI,GAAX,EAAgBk2B,SAAhB,CAAX,GAAwCA,SAAS,GAAG,CAAzD;AACAY,MAAAA,EAAE,GAAGlnC,WAAW,CAACgH,KAAD,EAAQgB,EAAE,CAACsI,MAAX,EAAmBk5B,aAAnB,CAAX,GAA+CA,aAAa,GAAG,CAApE;AACAzC,MAAAA,EAAE,GAAGE,EAAE,GAAGR,WAAV;AACD;;AACDxxB,IAAAA,GAAG,CAACyzB,IAAJ;AACAzzB,IAAAA,GAAG,CAAC+T,SAAJ,GAAgBqd,UAAU,CAACre,WAA3B;AACA/S,IAAAA,GAAG,CAAC6T,WAAJ,GAAkBud,UAAU,CAACtd,WAA7B;AACA9T,IAAAA,GAAG,CAACm0B,SAAJ;AACAn0B,IAAAA,GAAG,CAACo0B,MAAJ,CAAWtC,EAAX,EAAeC,EAAf;AACA/xB,IAAAA,GAAG,CAACq0B,MAAJ,CAAWrC,EAAX,EAAeC,EAAf;AACAjyB,IAAAA,GAAG,CAACs0B,MAAJ;AACAt0B,IAAAA,GAAG,CAAC2zB,OAAJ;AACD;;AACDa,EAAAA,UAAU,CAAC/uB,SAAD,EAAY;AACpB,UAAM1S,EAAE,GAAG,IAAX;AACA,UAAMg+B,WAAW,GAAGh+B,EAAE,CAAC6G,OAAH,CAAW2P,KAA/B;;AACA,QAAI,CAACwnB,WAAW,CAAC5Z,OAAjB,EAA0B;AACxB;AACD;;AACD,UAAMnX,GAAG,GAAGjN,EAAE,CAACiN,GAAf;;AACA,UAAMwF,IAAI,GAAGzS,EAAE,CAACwgC,iBAAH,EAAb;;AACA,QAAI/tB,IAAJ,EAAU;AACRva,MAAAA,QAAQ,CAAC+U,GAAD,EAAMwF,IAAN,CAAR;AACD;;AACD,UAAMjS,KAAK,GAAGR,EAAE,CAACs4B,WAAH,KAAmBt4B,EAAE,CAACs4B,WAAH,GAAiBt4B,EAAE,CAACy/B,kBAAH,CAAsB/sB,SAAtB,CAApC,CAAd;;AACA,QAAI7f,CAAJ,EAAOiW,IAAP;;AACA,SAAKjW,CAAC,GAAG,CAAJ,EAAOiW,IAAI,GAAGtI,KAAK,CAACC,MAAzB,EAAiC5N,CAAC,GAAGiW,IAArC,EAA2C,EAAEjW,CAA7C,EAAgD;AAC9C,YAAM8N,IAAI,GAAGH,KAAK,CAAC3N,CAAD,CAAlB;AACA,YAAMuqC,QAAQ,GAAGz8B,IAAI,CAACw2B,IAAtB;AACA,YAAM/kB,KAAK,GAAGzR,IAAI,CAACyR,KAAnB;;AACA,UAAIzR,IAAI,CAAC0/B,QAAT,EAAmB;AACjBpzB,QAAAA,GAAG,CAAC2T,SAAJ,GAAgBjgB,IAAI,CAAC0/B,QAAL,CAAc3tC,KAA9B;AACAua,QAAAA,GAAG,CAAC0zB,QAAJ,CAAahgC,IAAI,CAAC0/B,QAAL,CAAc93B,IAA3B,EAAiC5H,IAAI,CAAC0/B,QAAL,CAAcj4B,GAA/C,EAAoDzH,IAAI,CAAC0/B,QAAL,CAAcpmB,KAAlE,EAAyEtZ,IAAI,CAAC0/B,QAAL,CAAcrmB,MAAvF;AACD;;AACD,UAAIrkB,CAAC,GAAGgL,IAAI,CAACm/B,UAAb;AACA1nC,MAAAA,UAAU,CAAC6U,GAAD,EAAMmF,KAAN,EAAa,CAAb,EAAgBzc,CAAhB,EAAmBynC,QAAnB,EAA6Bz8B,IAA7B,CAAV;AACD;;AACD,QAAI8R,IAAJ,EAAU;AACRna,MAAAA,UAAU,CAAC2U,GAAD,CAAV;AACD;AACF;;AACDy0B,EAAAA,SAAS,GAAG;AACV,UAAM;AAACz0B,MAAAA,GAAD;AAAMpG,MAAAA,OAAO,EAAE;AAACggB,QAAAA,QAAD;AAAWtK,QAAAA,KAAX;AAAkBxU,QAAAA;AAAlB;AAAf,QAA6C,IAAnD;;AACA,QAAI,CAACwU,KAAK,CAAC6H,OAAX,EAAoB;AAClB;AACD;;AACD,UAAM+S,IAAI,GAAG3+B,MAAM,CAAC+jB,KAAK,CAAC4a,IAAP,CAAnB;AACA,UAAMjL,OAAO,GAAGl2B,SAAS,CAACumB,KAAK,CAAC2P,OAAP,CAAzB;AACA,UAAM+H,KAAK,GAAG1X,KAAK,CAAC0X,KAApB;AACA,QAAIxY,MAAM,GAAG0b,IAAI,CAACE,UAAL,GAAkB,CAA/B;;AACA,QAAIxQ,QAAQ,KAAK,QAAb,IAAyBA,QAAQ,KAAK,QAAtC,IAAkD/zB,QAAQ,CAAC+zB,QAAD,CAA9D,EAA0E;AACxEpL,MAAAA,MAAM,IAAIyQ,OAAO,CAAC5jB,MAAlB;;AACA,UAAItV,OAAO,CAACupB,KAAK,CAACoE,IAAP,CAAX,EAAyB;AACvBlF,QAAAA,MAAM,IAAI0b,IAAI,CAACE,UAAL,IAAmB9a,KAAK,CAACoE,IAAN,CAAWlgB,MAAX,GAAoB,CAAvC,CAAV;AACD;AACF,KALD,MAKO;AACLgb,MAAAA,MAAM,IAAIyQ,OAAO,CAAC9jB,GAAlB;AACD;;AACD,UAAM;AAACsvB,MAAAA,MAAD;AAASC,MAAAA,MAAT;AAAiB9Y,MAAAA,QAAjB;AAA2BpC,MAAAA;AAA3B,QAAuCgb,SAAS,CAAC,IAAD,EAAOhc,MAAP,EAAeoL,QAAf,EAAyBoN,KAAzB,CAAtD;AACA77B,IAAAA,UAAU,CAAC6U,GAAD,EAAMsP,KAAK,CAACoE,IAAZ,EAAkB,CAAlB,EAAqB,CAArB,EAAwBwW,IAAxB,EAA8B;AACtCzkC,MAAAA,KAAK,EAAE6pB,KAAK,CAAC7pB,KADyB;AAEtCmsB,MAAAA,QAFsC;AAGtCpC,MAAAA,QAHsC;AAItCmjB,MAAAA,SAAS,EAAEpI,UAAU,CAACvD,KAAD,EAAQpN,QAAR,EAAkB9e,OAAlB,CAJiB;AAKtCg4B,MAAAA,YAAY,EAAE,QALwB;AAMtCQ,MAAAA,WAAW,EAAE,CAAC7I,MAAD,EAASC,MAAT;AANyB,KAA9B,CAAV;AAQD;;AACDj3B,EAAAA,IAAI,CAACgS,SAAD,EAAY;AACd,UAAM1S,EAAE,GAAG,IAAX;;AACA,QAAI,CAACA,EAAE,CAACy7B,UAAH,EAAL,EAAsB;AACpB;AACD;;AACDz7B,IAAAA,EAAE,CAACygC,cAAH;AACAzgC,IAAAA,EAAE,CAAC8gC,QAAH,CAAYpuB,SAAZ;AACA1S,IAAAA,EAAE,CAAC+yB,UAAH;AACA/yB,IAAAA,EAAE,CAAC0hC,SAAH;AACA1hC,IAAAA,EAAE,CAACyhC,UAAH,CAAc/uB,SAAd;AACD;;AACD0Z,EAAAA,OAAO,GAAG;AACR,UAAMpsB,EAAE,GAAG,IAAX;AACA,UAAM8H,IAAI,GAAG9H,EAAE,CAAC6G,OAAhB;AACA,UAAM86B,EAAE,GAAG75B,IAAI,CAAC0O,KAAL,IAAc1O,IAAI,CAAC0O,KAAL,CAAW3gB,CAAzB,IAA8B,CAAzC;AACA,UAAM+rC,EAAE,GAAG1uC,cAAc,CAAC4U,IAAI,CAAC4T,IAAL,IAAa5T,IAAI,CAAC4T,IAAL,CAAU7lB,CAAxB,EAA2B,CAAC,CAA5B,CAAzB;;AACA,QAAI,CAACmK,EAAE,CAACy7B,UAAH,EAAD,IAAoBz7B,EAAE,CAACU,IAAH,KAAYm3B,KAAK,CAACliB,SAAN,CAAgBjV,IAApD,EAA0D;AACxD,aAAO,CAAC;AACN7K,QAAAA,CAAC,EAAE8rC,EADG;;AAENjhC,QAAAA,IAAI,CAACgS,SAAD,EAAY;AACd1S,UAAAA,EAAE,CAACU,IAAH,CAAQgS,SAAR;AACD;;AAJK,OAAD,CAAP;AAMD;;AACD,WAAO,CAAC;AACN7c,MAAAA,CAAC,EAAE+rC,EADG;;AAENlhC,MAAAA,IAAI,CAACgS,SAAD,EAAY;AACd1S,QAAAA,EAAE,CAACygC,cAAH;AACAzgC,QAAAA,EAAE,CAAC8gC,QAAH,CAAYpuB,SAAZ;AACA1S,QAAAA,EAAE,CAAC0hC,SAAH;AACD;;AANK,KAAD,EAOJ;AACD7rC,MAAAA,CAAC,EAAE+rC,EAAE,GAAG,CADP;;AAEDlhC,MAAAA,IAAI,GAAG;AACLV,QAAAA,EAAE,CAAC+yB,UAAH;AACD;;AAJA,KAPI,EAYJ;AACDl9B,MAAAA,CAAC,EAAE8rC,EADF;;AAEDjhC,MAAAA,IAAI,CAACgS,SAAD,EAAY;AACd1S,QAAAA,EAAE,CAACyhC,UAAH,CAAc/uB,SAAd;AACD;;AAJA,KAZI,CAAP;AAkBD;;AACD1H,EAAAA,uBAAuB,CAAC7L,IAAD,EAAO;AAC5B,UAAMa,EAAE,GAAG,IAAX;AACA,UAAM+V,KAAK,GAAG/V,EAAE,CAAChB,KAAH,CAASmnB,4BAAT,EAAd;AACA,UAAM0b,MAAM,GAAG7hC,EAAE,CAACwL,IAAH,GAAU,QAAzB;AACA,UAAMqqB,MAAM,GAAG,EAAf;AACA,QAAIhjC,CAAJ,EAAOiW,IAAP;;AACA,SAAKjW,CAAC,GAAG,CAAJ,EAAOiW,IAAI,GAAGiN,KAAK,CAACtV,MAAzB,EAAiC5N,CAAC,GAAGiW,IAArC,EAA2C,EAAEjW,CAA7C,EAAgD;AAC9C,YAAM+W,IAAI,GAAGmM,KAAK,CAACljB,CAAD,CAAlB;;AACA,UAAI+W,IAAI,CAACi4B,MAAD,CAAJ,KAAiB7hC,EAAE,CAACiK,EAApB,KAA2B,CAAC9K,IAAD,IAASyK,IAAI,CAACzK,IAAL,KAAcA,IAAlD,CAAJ,EAA6D;AAC3D02B,QAAAA,MAAM,CAACp0B,IAAP,CAAYmI,IAAZ;AACD;AACF;;AACD,WAAOisB,MAAP;AACD;;AACD0H,EAAAA,uBAAuB,CAACx0B,KAAD,EAAQ;AAC7B,UAAMjB,IAAI,GAAG,KAAKjB,OAAL,CAAa2P,KAAb,CAAmByiB,UAAnB,CAA8B,KAAK5oB,UAAL,CAAgBtH,KAAhB,CAA9B,CAAb;AACA,WAAOvQ,MAAM,CAACsP,IAAI,CAACqvB,IAAN,CAAb;AACD;;AACD2K,EAAAA,UAAU,GAAG;AACX,UAAM9hC,EAAE,GAAG,IAAX;;AACA,UAAM+hC,QAAQ,GAAG/hC,EAAE,CAACu9B,uBAAH,CAA2B,CAA3B,EAA8BlG,UAA/C;;AACA,WAAO,CAACr3B,EAAE,CAACoY,YAAH,KAAoBpY,EAAE,CAACia,KAAvB,GAA+Bja,EAAE,CAACga,MAAnC,IAA6C+nB,QAApD;AACD;;AAvjCyB;;AA0jC5B,MAAMC,aAAN,CAAoB;AAClBxjC,EAAAA,WAAW,CAACW,IAAD,EAAO8iC,KAAP,EAAcrc,QAAd,EAAwB;AACjC,SAAKzmB,IAAL,GAAYA,IAAZ;AACA,SAAK8iC,KAAL,GAAaA,KAAb;AACA,SAAKrc,QAAL,GAAgBA,QAAhB;AACA,SAAKplB,KAAL,GAAa2E,MAAM,CAACgH,MAAP,CAAc,IAAd,CAAb;AACD;;AACD+1B,EAAAA,SAAS,CAAC/iC,IAAD,EAAO;AACd,WAAOgG,MAAM,CAACwQ,SAAP,CAAiBwsB,aAAjB,CAA+BliC,IAA/B,CAAoC,KAAKd,IAAL,CAAUwW,SAA9C,EAAyDxW,IAAI,CAACwW,SAA9D,CAAP;AACD;;AACDysB,EAAAA,QAAQ,CAACzhC,IAAD,EAAO;AACb,UAAMX,EAAE,GAAG,IAAX;AACA,UAAMqiC,KAAK,GAAGl9B,MAAM,CAACm9B,cAAP,CAAsB3hC,IAAtB,CAAd;AACA,QAAI4hC,WAAJ;;AACA,QAAIC,iBAAiB,CAACH,KAAD,CAArB,EAA8B;AAC5BE,MAAAA,WAAW,GAAGviC,EAAE,CAACoiC,QAAH,CAAYC,KAAZ,CAAd;AACD;;AACD,UAAM7hC,KAAK,GAAGR,EAAE,CAACQ,KAAjB;AACA,UAAMyJ,EAAE,GAAGtJ,IAAI,CAACsJ,EAAhB;AACA,UAAMg4B,KAAK,GAAGjiC,EAAE,CAACiiC,KAAH,GAAW,GAAX,GAAiBh4B,EAA/B;;AACA,QAAI,CAACA,EAAL,EAAS;AACP,YAAM,IAAIgb,KAAJ,CAAU,6BAA6BtkB,IAAvC,CAAN;AACD;;AACD,QAAIsJ,EAAE,IAAIzJ,KAAV,EAAiB;AACf,aAAOyhC,KAAP;AACD;;AACDzhC,IAAAA,KAAK,CAACyJ,EAAD,CAAL,GAAYtJ,IAAZ;AACA8hC,IAAAA,gBAAgB,CAAC9hC,IAAD,EAAOshC,KAAP,EAAcM,WAAd,CAAhB;;AACA,QAAIviC,EAAE,CAAC4lB,QAAP,EAAiB;AACfhzB,MAAAA,QAAQ,CAACgzB,QAAT,CAAkBjlB,IAAI,CAACsJ,EAAvB,EAA2BtJ,IAAI,CAAC7H,SAAhC;AACD;;AACD,WAAOmpC,KAAP;AACD;;AACD/gC,EAAAA,GAAG,CAAC+I,EAAD,EAAK;AACN,WAAO,KAAKzJ,KAAL,CAAWyJ,EAAX,CAAP;AACD;;AACDy4B,EAAAA,UAAU,CAAC/hC,IAAD,EAAO;AACf,UAAMH,KAAK,GAAG,KAAKA,KAAnB;AACA,UAAMyJ,EAAE,GAAGtJ,IAAI,CAACsJ,EAAhB;AACA,UAAMg4B,KAAK,GAAG,KAAKA,KAAnB;;AACA,QAAIh4B,EAAE,IAAIzJ,KAAV,EAAiB;AACf,aAAOA,KAAK,CAACyJ,EAAD,CAAZ;AACD;;AACD,QAAIg4B,KAAK,IAAIh4B,EAAE,IAAIrX,QAAQ,CAACqvC,KAAD,CAA3B,EAAoC;AAClC,aAAOrvC,QAAQ,CAACqvC,KAAD,CAAR,CAAgBh4B,EAAhB,CAAP;;AACA,UAAI,KAAK2b,QAAT,EAAmB;AACjB,eAAO9sB,SAAS,CAACmR,EAAD,CAAhB;AACD;AACF;AACF;;AAjDiB;;AAmDpB,SAASw4B,gBAAT,CAA0B9hC,IAA1B,EAAgCshC,KAAhC,EAAuCM,WAAvC,EAAoD;AAClD,QAAMI,YAAY,GAAG3pC,KAAK,CAACmM,MAAM,CAACgH,MAAP,CAAc,IAAd,CAAD,EAAsB,CAC9Co2B,WAAW,GAAG3vC,QAAQ,CAACsO,GAAT,CAAaqhC,WAAb,CAAH,GAA+B,EADI,EAE9C3vC,QAAQ,CAACsO,GAAT,CAAa+gC,KAAb,CAF8C,EAG9CthC,IAAI,CAAC/N,QAHyC,CAAtB,CAA1B;AAKAA,EAAAA,QAAQ,CAACyO,GAAT,CAAa4gC,KAAb,EAAoBU,YAApB;;AACA,MAAIhiC,IAAI,CAACoxB,aAAT,EAAwB;AACtB6Q,IAAAA,aAAa,CAACX,KAAD,EAAQthC,IAAI,CAACoxB,aAAb,CAAb;AACD;;AACD,MAAIpxB,IAAI,CAACvH,WAAT,EAAsB;AACpBxG,IAAAA,QAAQ,CAAC0S,QAAT,CAAkB28B,KAAlB,EAAyBthC,IAAI,CAACvH,WAA9B;AACD;AACF;;AACD,SAASwpC,aAAT,CAAuBX,KAAvB,EAA8BY,MAA9B,EAAsC;AACpC19B,EAAAA,MAAM,CAACC,IAAP,CAAYy9B,MAAZ,EAAoBrjC,OAApB,CAA4BsjC,QAAQ,IAAI;AACtC,UAAMC,aAAa,GAAGD,QAAQ,CAACE,KAAT,CAAe,GAAf,CAAtB;AACA,UAAMC,UAAU,GAAGF,aAAa,CAAChiC,GAAd,EAAnB;AACA,UAAMmiC,WAAW,GAAG,CAACjB,KAAD,EAAQjsB,MAAR,CAAe+sB,aAAf,EAA8BI,IAA9B,CAAmC,GAAnC,CAApB;AACA,UAAMC,KAAK,GAAGP,MAAM,CAACC,QAAD,CAAN,CAAiBE,KAAjB,CAAuB,GAAvB,CAAd;AACA,UAAMK,UAAU,GAAGD,KAAK,CAACriC,GAAN,EAAnB;AACA,UAAMuiC,WAAW,GAAGF,KAAK,CAACD,IAAN,CAAW,GAAX,CAApB;AACAvwC,IAAAA,QAAQ,CAAC0hC,KAAT,CAAe4O,WAAf,EAA4BD,UAA5B,EAAwCK,WAAxC,EAAqDD,UAArD;AACD,GARD;AASD;;AACD,SAASb,iBAAT,CAA2BH,KAA3B,EAAkC;AAChC,SAAO,QAAQA,KAAR,IAAiB,cAAcA,KAAtC;AACD;;AAED,MAAMkB,QAAN,CAAe;AACb/kC,EAAAA,WAAW,GAAG;AACZ,SAAKsmB,WAAL,GAAmB,IAAIkd,aAAJ,CAAkBj1B,iBAAlB,EAAqC,UAArC,EAAiD,IAAjD,CAAnB;AACA,SAAKyF,QAAL,GAAgB,IAAIwvB,aAAJ,CAAkBvQ,OAAlB,EAA2B,UAA3B,CAAhB;AACA,SAAKpV,OAAL,GAAe,IAAI2lB,aAAJ,CAAkB78B,MAAlB,EAA0B,SAA1B,CAAf;AACA,SAAK2G,MAAL,GAAc,IAAIk2B,aAAJ,CAAkBnK,KAAlB,EAAyB,QAAzB,CAAd;AACA,SAAK2L,gBAAL,GAAwB,CAAC,KAAK1e,WAAN,EAAmB,KAAKhZ,MAAxB,EAAgC,KAAK0G,QAArC,CAAxB;AACD;;AACD9Q,EAAAA,GAAG,CAAC,GAAGmvB,IAAJ,EAAU;AACX,SAAK4S,KAAL,CAAW,UAAX,EAAuB5S,IAAvB;AACD;;AACD1uB,EAAAA,MAAM,CAAC,GAAG0uB,IAAJ,EAAU;AACd,SAAK4S,KAAL,CAAW,YAAX,EAAyB5S,IAAzB;AACD;;AACD6S,EAAAA,cAAc,CAAC,GAAG7S,IAAJ,EAAU;AACtB,SAAK4S,KAAL,CAAW,UAAX,EAAuB5S,IAAvB,EAA6B,KAAK/L,WAAlC;AACD;;AACD7W,EAAAA,WAAW,CAAC,GAAG4iB,IAAJ,EAAU;AACnB,SAAK4S,KAAL,CAAW,UAAX,EAAuB5S,IAAvB,EAA6B,KAAKre,QAAlC;AACD;;AACDmxB,EAAAA,UAAU,CAAC,GAAG9S,IAAJ,EAAU;AAClB,SAAK4S,KAAL,CAAW,UAAX,EAAuB5S,IAAvB,EAA6B,KAAKxU,OAAlC;AACD;;AACDunB,EAAAA,SAAS,CAAC,GAAG/S,IAAJ,EAAU;AACjB,SAAK4S,KAAL,CAAW,UAAX,EAAuB5S,IAAvB,EAA6B,KAAK/kB,MAAlC;AACD;;AACD+3B,EAAAA,aAAa,CAAC55B,EAAD,EAAK;AAChB,WAAO,KAAK65B,IAAL,CAAU75B,EAAV,EAAc,KAAK6a,WAAnB,EAAgC,YAAhC,CAAP;AACD;;AACDif,EAAAA,UAAU,CAAC95B,EAAD,EAAK;AACb,WAAO,KAAK65B,IAAL,CAAU75B,EAAV,EAAc,KAAKuI,QAAnB,EAA6B,SAA7B,CAAP;AACD;;AACDwxB,EAAAA,SAAS,CAAC/5B,EAAD,EAAK;AACZ,WAAO,KAAK65B,IAAL,CAAU75B,EAAV,EAAc,KAAKoS,OAAnB,EAA4B,QAA5B,CAAP;AACD;;AACD4nB,EAAAA,QAAQ,CAACh6B,EAAD,EAAK;AACX,WAAO,KAAK65B,IAAL,CAAU75B,EAAV,EAAc,KAAK6B,MAAnB,EAA2B,OAA3B,CAAP;AACD;;AACDo4B,EAAAA,iBAAiB,CAAC,GAAGrT,IAAJ,EAAU;AACzB,SAAK4S,KAAL,CAAW,YAAX,EAAyB5S,IAAzB,EAA+B,KAAK/L,WAApC;AACD;;AACDqf,EAAAA,cAAc,CAAC,GAAGtT,IAAJ,EAAU;AACtB,SAAK4S,KAAL,CAAW,YAAX,EAAyB5S,IAAzB,EAA+B,KAAKre,QAApC;AACD;;AACD4xB,EAAAA,aAAa,CAAC,GAAGvT,IAAJ,EAAU;AACrB,SAAK4S,KAAL,CAAW,YAAX,EAAyB5S,IAAzB,EAA+B,KAAKxU,OAApC;AACD;;AACDgoB,EAAAA,YAAY,CAAC,GAAGxT,IAAJ,EAAU;AACpB,SAAK4S,KAAL,CAAW,YAAX,EAAyB5S,IAAzB,EAA+B,KAAK/kB,MAApC;AACD;;AACD23B,EAAAA,KAAK,CAAC1+B,MAAD,EAAS8rB,IAAT,EAAeyT,aAAf,EAA8B;AACjC,UAAMtkC,EAAE,GAAG,IAAX;AACA,KAAC,GAAG6wB,IAAJ,EAAUrxB,OAAV,CAAkB+kC,GAAG,IAAI;AACvB,YAAMC,GAAG,GAAGF,aAAa,IAAItkC,EAAE,CAACykC,mBAAH,CAAuBF,GAAvB,CAA7B;;AACA,UAAID,aAAa,IAAIE,GAAG,CAACtC,SAAJ,CAAcqC,GAAd,CAAjB,IAAwCC,GAAG,KAAKxkC,EAAE,CAACqc,OAAX,IAAsBkoB,GAAG,CAACt6B,EAAtE,EAA2E;AACzEjK,QAAAA,EAAE,CAAC0kC,KAAH,CAAS3/B,MAAT,EAAiBy/B,GAAjB,EAAsBD,GAAtB;AACD,OAFD,MAEO;AACLruC,QAAAA,IAAI,CAACquC,GAAD,EAAM5jC,IAAI,IAAI;AAChB,gBAAMgkC,OAAO,GAAGL,aAAa,IAAItkC,EAAE,CAACykC,mBAAH,CAAuB9jC,IAAvB,CAAjC;;AACAX,UAAAA,EAAE,CAAC0kC,KAAH,CAAS3/B,MAAT,EAAiB4/B,OAAjB,EAA0BhkC,IAA1B;AACD,SAHG,CAAJ;AAID;AACF,KAVD;AAWD;;AACD+jC,EAAAA,KAAK,CAAC3/B,MAAD,EAAS6/B,QAAT,EAAmBC,SAAnB,EAA8B;AACjC,UAAMC,WAAW,GAAG5rC,WAAW,CAAC6L,MAAD,CAA/B;;AACAzN,IAAAA,QAAQ,CAACutC,SAAS,CAAC,WAAWC,WAAZ,CAAV,EAAoC,EAApC,EAAwCD,SAAxC,CAAR;AACAD,IAAAA,QAAQ,CAAC7/B,MAAD,CAAR,CAAiB8/B,SAAjB;AACAvtC,IAAAA,QAAQ,CAACutC,SAAS,CAAC,UAAUC,WAAX,CAAV,EAAmC,EAAnC,EAAuCD,SAAvC,CAAR;AACD;;AACDJ,EAAAA,mBAAmB,CAACtlC,IAAD,EAAO;AACxB,SAAK,IAAItM,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAK2wC,gBAAL,CAAsB/iC,MAA1C,EAAkD5N,CAAC,EAAnD,EAAuD;AACrD,YAAM2xC,GAAG,GAAG,KAAKhB,gBAAL,CAAsB3wC,CAAtB,CAAZ;;AACA,UAAI2xC,GAAG,CAACtC,SAAJ,CAAc/iC,IAAd,CAAJ,EAAyB;AACvB,eAAOqlC,GAAP;AACD;AACF;;AACD,WAAO,KAAKnoB,OAAZ;AACD;;AACDynB,EAAAA,IAAI,CAAC75B,EAAD,EAAKq6B,aAAL,EAAoBnlC,IAApB,EAA0B;AAC5B,UAAMwB,IAAI,GAAG2jC,aAAa,CAACpjC,GAAd,CAAkB+I,EAAlB,CAAb;;AACA,QAAItJ,IAAI,KAAK7B,SAAb,EAAwB;AACtB,YAAM,IAAImmB,KAAJ,CAAU,MAAMhb,EAAN,GAAW,wBAAX,GAAsC9K,IAAtC,GAA6C,GAAvD,CAAN;AACD;;AACD,WAAOwB,IAAP;AACD;;AArFY;;AAuFf,IAAIikC,QAAQ,GAAG,IAAIrB,QAAJ,EAAf;;AAEA,MAAMwB,aAAN,CAAoB;AAClBvmC,EAAAA,WAAW,GAAG;AACZ,SAAKwmC,KAAL,GAAa,EAAb;AACD;;AACDC,EAAAA,MAAM,CAACjmC,KAAD,EAAQkmC,IAAR,EAAcrU,IAAd,EAAoB9kB,MAApB,EAA4B;AAChC,UAAM/L,EAAE,GAAG,IAAX;;AACA,QAAIklC,IAAI,KAAK,YAAb,EAA2B;AACzBllC,MAAAA,EAAE,CAACglC,KAAH,GAAWhlC,EAAE,CAACmlC,kBAAH,CAAsBnmC,KAAtB,EAA6B,IAA7B,CAAX;;AACAgB,MAAAA,EAAE,CAACjB,OAAH,CAAWiB,EAAE,CAACglC,KAAd,EAAqBhmC,KAArB,EAA4B,SAA5B;AACD;;AACD,UAAM5F,WAAW,GAAG2S,MAAM,GAAG/L,EAAE,CAACpG,YAAH,CAAgBoF,KAAhB,EAAuB+M,MAAvB,CAA8BA,MAA9B,CAAH,GAA2C/L,EAAE,CAACpG,YAAH,CAAgBoF,KAAhB,CAArE;;AACA,UAAM62B,MAAM,GAAG71B,EAAE,CAACjB,OAAH,CAAW3F,WAAX,EAAwB4F,KAAxB,EAA+BkmC,IAA/B,EAAqCrU,IAArC,CAAf;;AACA,QAAIqU,IAAI,KAAK,SAAb,EAAwB;AACtBllC,MAAAA,EAAE,CAACjB,OAAH,CAAW3F,WAAX,EAAwB4F,KAAxB,EAA+B,MAA/B;;AACAgB,MAAAA,EAAE,CAACjB,OAAH,CAAWiB,EAAE,CAACglC,KAAd,EAAqBhmC,KAArB,EAA4B,WAA5B;AACD;;AACD,WAAO62B,MAAP;AACD;;AACD92B,EAAAA,OAAO,CAAC3F,WAAD,EAAc4F,KAAd,EAAqBkmC,IAArB,EAA2BrU,IAA3B,EAAiC;AACtCA,IAAAA,IAAI,GAAGA,IAAI,IAAI,EAAf;;AACA,SAAK,MAAMuU,UAAX,IAAyBhsC,WAAzB,EAAsC;AACpC,YAAMisC,MAAM,GAAGD,UAAU,CAACC,MAA1B;AACA,YAAMtgC,MAAM,GAAGsgC,MAAM,CAACH,IAAD,CAArB;AACA,YAAMxb,MAAM,GAAG,CAAC1qB,KAAD,EAAQ6xB,IAAR,EAAcuU,UAAU,CAACv+B,OAAzB,CAAf;;AACA,UAAIvP,QAAQ,CAACyN,MAAD,EAAS2kB,MAAT,EAAiB2b,MAAjB,CAAR,KAAqC,KAArC,IAA8CxU,IAAI,CAACyU,UAAvD,EAAmE;AACjE,eAAO,KAAP;AACD;AACF;;AACD,WAAO,IAAP;AACD;;AACDC,EAAAA,UAAU,GAAG;AACX,QAAI,CAACvxC,aAAa,CAAC,KAAK6hB,MAAN,CAAlB,EAAiC;AAC/B,WAAK2vB,SAAL,GAAiB,KAAK3vB,MAAtB;AACA,WAAKA,MAAL,GAAc/W,SAAd;AACD;AACF;;AACDlF,EAAAA,YAAY,CAACoF,KAAD,EAAQ;AAClB,QAAI,KAAK6W,MAAT,EAAiB;AACf,aAAO,KAAKA,MAAZ;AACD;;AACD,UAAMzc,WAAW,GAAG,KAAKyc,MAAL,GAAc,KAAKsvB,kBAAL,CAAwBnmC,KAAxB,CAAlC;;AACA,SAAKymC,mBAAL,CAAyBzmC,KAAzB;;AACA,WAAO5F,WAAP;AACD;;AACD+rC,EAAAA,kBAAkB,CAACnmC,KAAD,EAAQ0I,GAAR,EAAa;AAC7B,UAAMxB,MAAM,GAAGlH,KAAK,IAAIA,KAAK,CAACkH,MAA9B;AACA,UAAMW,OAAO,GAAG3T,cAAc,CAACgT,MAAM,CAACW,OAAP,IAAkBX,MAAM,CAACW,OAAP,CAAewV,OAAlC,EAA2C,EAA3C,CAA9B;AACA,UAAMA,OAAO,GAAGqpB,UAAU,CAACx/B,MAAD,CAA1B;AACA,WAAOW,OAAO,KAAK,KAAZ,IAAqB,CAACa,GAAtB,GAA4B,EAA5B,GAAiCi+B,iBAAiB,CAAC3mC,KAAD,EAAQqd,OAAR,EAAiBxV,OAAjB,EAA0Ba,GAA1B,CAAzD;AACD;;AACD+9B,EAAAA,mBAAmB,CAACzmC,KAAD,EAAQ;AACzB,UAAM4mC,mBAAmB,GAAG,KAAKJ,SAAL,IAAkB,EAA9C;AACA,UAAMpsC,WAAW,GAAG,KAAKyc,MAAzB;;AACA,UAAM2P,IAAI,GAAG,CAACnzB,CAAD,EAAIU,CAAJ,KAAUV,CAAC,CAAC0Z,MAAF,CAAStW,CAAC,IAAI,CAAC1C,CAAC,CAAC8yC,IAAF,CAAOlwC,CAAC,IAAIF,CAAC,CAAC4vC,MAAF,CAASp7B,EAAT,KAAgBtU,CAAC,CAAC0vC,MAAF,CAASp7B,EAArC,CAAf,CAAvB;;AACA,SAAKlL,OAAL,CAAaymB,IAAI,CAACogB,mBAAD,EAAsBxsC,WAAtB,CAAjB,EAAqD4F,KAArD,EAA4D,MAA5D;;AACA,SAAKD,OAAL,CAAaymB,IAAI,CAACpsB,WAAD,EAAcwsC,mBAAd,CAAjB,EAAqD5mC,KAArD,EAA4D,OAA5D;AACD;;AAxDiB;;AA0DpB,SAAS0mC,UAAT,CAAoBx/B,MAApB,EAA4B;AAC1B,QAAMmW,OAAO,GAAG,EAAhB;AACA,QAAMjX,IAAI,GAAGD,MAAM,CAACC,IAAP,CAAYw/B,QAAQ,CAACvoB,OAAT,CAAiB7b,KAA7B,CAAb;;AACA,OAAK,IAAI3N,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGuS,IAAI,CAAC3E,MAAzB,EAAiC5N,CAAC,EAAlC,EAAsC;AACpCwpB,IAAAA,OAAO,CAAC5a,IAAR,CAAamjC,QAAQ,CAACZ,SAAT,CAAmB5+B,IAAI,CAACvS,CAAD,CAAvB,CAAb;AACD;;AACD,QAAMizC,KAAK,GAAG5/B,MAAM,CAACmW,OAAP,IAAkB,EAAhC;;AACA,OAAK,IAAIxpB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGizC,KAAK,CAACrlC,MAA1B,EAAkC5N,CAAC,EAAnC,EAAuC;AACrC,UAAMwyC,MAAM,GAAGS,KAAK,CAACjzC,CAAD,CAApB;;AACA,QAAIwpB,OAAO,CAAC9B,OAAR,CAAgB8qB,MAAhB,MAA4B,CAAC,CAAjC,EAAoC;AAClChpB,MAAAA,OAAO,CAAC5a,IAAR,CAAa4jC,MAAb;AACD;AACF;;AACD,SAAOhpB,OAAP;AACD;;AACD,SAAS0pB,OAAT,CAAiBl/B,OAAjB,EAA0Ba,GAA1B,EAA+B;AAC7B,MAAI,CAACA,GAAD,IAAQb,OAAO,KAAK,KAAxB,EAA+B;AAC7B,WAAO,IAAP;AACD;;AACD,MAAIA,OAAO,KAAK,IAAhB,EAAsB;AACpB,WAAO,EAAP;AACD;;AACD,SAAOA,OAAP;AACD;;AACD,SAAS8+B,iBAAT,CAA2B3mC,KAA3B,EAAkCqd,OAAlC,EAA2CxV,OAA3C,EAAoDa,GAApD,EAAyD;AACvD,QAAMmuB,MAAM,GAAG,EAAf;AACA,QAAM9iB,OAAO,GAAG/T,KAAK,CAACqR,UAAN,EAAhB;;AACA,OAAK,IAAIxd,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGwpB,OAAO,CAAC5b,MAA5B,EAAoC5N,CAAC,EAArC,EAAyC;AACvC,UAAMwyC,MAAM,GAAGhpB,OAAO,CAACxpB,CAAD,CAAtB;AACA,UAAMoX,EAAE,GAAGo7B,MAAM,CAACp7B,EAAlB;AACA,UAAMnC,IAAI,GAAGi+B,OAAO,CAACl/B,OAAO,CAACoD,EAAD,CAAR,EAAcvC,GAAd,CAApB;;AACA,QAAII,IAAI,KAAK,IAAb,EAAmB;AACjB;AACD;;AACD+tB,IAAAA,MAAM,CAACp0B,IAAP,CAAY;AACV4jC,MAAAA,MADU;AAEVx+B,MAAAA,OAAO,EAAEm/B,UAAU,CAAChnC,KAAK,CAACkH,MAAP,EAAem/B,MAAf,EAAuBv9B,IAAvB,EAA6BiL,OAA7B;AAFT,KAAZ;AAID;;AACD,SAAO8iB,MAAP;AACD;;AACD,SAASmQ,UAAT,CAAoB9/B,MAApB,EAA4Bm/B,MAA5B,EAAoCv9B,IAApC,EAA0CiL,OAA1C,EAAmD;AACjD,QAAM3N,IAAI,GAAGc,MAAM,CAAC+/B,eAAP,CAAuBZ,MAAvB,CAAb;AACA,QAAMn1B,MAAM,GAAGhK,MAAM,CAACiK,eAAP,CAAuBrI,IAAvB,EAA6B1C,IAA7B,CAAf;AACA,SAAOc,MAAM,CAACkK,cAAP,CAAsBF,MAAtB,EAA8B6C,OAA9B,EAAuC,CAAC,EAAD,CAAvC,EAA6C;AAACmzB,IAAAA,UAAU,EAAE,KAAb;AAAoBC,IAAAA,SAAS,EAAE,KAA/B;AAAsCC,IAAAA,OAAO,EAAE;AAA/C,GAA7C,CAAP;AACD;;AAED,SAASC,YAAT,CAAsBlnC,IAAtB,EAA4B0H,OAA5B,EAAqC;AACnC,QAAMy/B,eAAe,GAAG1zC,QAAQ,CAACsc,QAAT,CAAkB/P,IAAlB,KAA2B,EAAnD;AACA,QAAMonC,cAAc,GAAG,CAAC1/B,OAAO,CAACqI,QAAR,IAAoB,EAArB,EAAyB/P,IAAzB,KAAkC,EAAzD;AACA,SAAOonC,cAAc,CAAC53B,SAAf,IAA4B9H,OAAO,CAAC8H,SAApC,IAAiD23B,eAAe,CAAC33B,SAAjE,IAA8E,GAArF;AACD;;AACD,SAAS63B,yBAAT,CAAmCv8B,EAAnC,EAAuC0E,SAAvC,EAAkD;AAChD,MAAInD,IAAI,GAAGvB,EAAX;;AACA,MAAIA,EAAE,KAAK,SAAX,EAAsB;AACpBuB,IAAAA,IAAI,GAAGmD,SAAP;AACD,GAFD,MAEO,IAAI1E,EAAE,KAAK,SAAX,EAAsB;AAC3BuB,IAAAA,IAAI,GAAGmD,SAAS,KAAK,GAAd,GAAoB,GAApB,GAA0B,GAAjC;AACD;;AACD,SAAOnD,IAAP;AACD;;AACD,SAASi7B,yBAAT,CAAmCj7B,IAAnC,EAAyCmD,SAAzC,EAAoD;AAClD,SAAOnD,IAAI,KAAKmD,SAAT,GAAqB,SAArB,GAAiC,SAAxC;AACD;;AACD,SAAS+3B,gBAAT,CAA0B7f,QAA1B,EAAoC;AAClC,MAAIA,QAAQ,KAAK,KAAb,IAAsBA,QAAQ,KAAK,QAAvC,EAAiD;AAC/C,WAAO,GAAP;AACD;;AACD,MAAIA,QAAQ,KAAK,MAAb,IAAuBA,QAAQ,KAAK,OAAxC,EAAiD;AAC/C,WAAO,GAAP;AACD;AACF;;AACD,SAAS8f,aAAT,CAAuB18B,EAAvB,EAA2B28B,YAA3B,EAAyC;AACvC,MAAI38B,EAAE,KAAK,GAAP,IAAcA,EAAE,KAAK,GAAzB,EAA8B;AAC5B,WAAOA,EAAP;AACD;;AACD,SAAO28B,YAAY,CAACp7B,IAAb,IAAqBk7B,gBAAgB,CAACE,YAAY,CAAC/f,QAAd,CAArC,IAAgE5c,EAAE,CAAC5C,MAAH,CAAU,CAAV,EAAaw/B,WAAb,EAAvE;AACD;;AACD,SAASC,gBAAT,CAA0B5gC,MAA1B,EAAkCW,OAAlC,EAA2C;AACzC,QAAMkgC,aAAa,GAAGjuC,SAAS,CAACoN,MAAM,CAAC/G,IAAR,CAAT,IAA0B;AAAC2M,IAAAA,MAAM,EAAE;AAAT,GAAhD;AACA,QAAMk7B,YAAY,GAAGngC,OAAO,CAACiF,MAAR,IAAkB,EAAvC;AACA,QAAMm7B,cAAc,GAAGZ,YAAY,CAACngC,MAAM,CAAC/G,IAAR,EAAc0H,OAAd,CAAnC;AACA,QAAMqgC,QAAQ,GAAG/hC,MAAM,CAACgH,MAAP,CAAc,IAAd,CAAjB;AACA,QAAML,MAAM,GAAG3G,MAAM,CAACgH,MAAP,CAAc,IAAd,CAAf;AACAhH,EAAAA,MAAM,CAACC,IAAP,CAAY4hC,YAAZ,EAA0BxnC,OAA1B,CAAkCyK,EAAE,IAAI;AACtC,UAAMk9B,SAAS,GAAGH,YAAY,CAAC/8B,EAAD,CAA9B;AACA,UAAMuB,IAAI,GAAGm7B,aAAa,CAAC18B,EAAD,EAAKk9B,SAAL,CAA1B;AACA,UAAMC,SAAS,GAAGX,yBAAyB,CAACj7B,IAAD,EAAOy7B,cAAP,CAA3C;AACA,UAAMI,mBAAmB,GAAGN,aAAa,CAACj7B,MAAd,IAAwB,EAApD;AACAo7B,IAAAA,QAAQ,CAAC17B,IAAD,CAAR,GAAiB07B,QAAQ,CAAC17B,IAAD,CAAR,IAAkBvB,EAAnC;AACA6B,IAAAA,MAAM,CAAC7B,EAAD,CAAN,GAAanQ,OAAO,CAACqL,MAAM,CAACgH,MAAP,CAAc,IAAd,CAAD,EAAsB,CAAC;AAACX,MAAAA;AAAD,KAAD,EAAS27B,SAAT,EAAoBE,mBAAmB,CAAC77B,IAAD,CAAvC,EAA+C67B,mBAAmB,CAACD,SAAD,CAAlE,CAAtB,CAApB;AACD,GAPD;AAQAlhC,EAAAA,MAAM,CAACsD,IAAP,CAAY0F,QAAZ,CAAqB1P,OAArB,CAA6B4M,OAAO,IAAI;AACtC,UAAMjN,IAAI,GAAGiN,OAAO,CAACjN,IAAR,IAAgB+G,MAAM,CAAC/G,IAApC;AACA,UAAMwP,SAAS,GAAGvC,OAAO,CAACuC,SAAR,IAAqB03B,YAAY,CAAClnC,IAAD,EAAO0H,OAAP,CAAnD;AACA,UAAMy/B,eAAe,GAAGxtC,SAAS,CAACqG,IAAD,CAAT,IAAmB,EAA3C;AACA,UAAMkoC,mBAAmB,GAAGf,eAAe,CAACx6B,MAAhB,IAA0B,EAAtD;AACA3G,IAAAA,MAAM,CAACC,IAAP,CAAYiiC,mBAAZ,EAAiC7nC,OAAjC,CAAyC8nC,SAAS,IAAI;AACpD,YAAM97B,IAAI,GAAGg7B,yBAAyB,CAACc,SAAD,EAAY34B,SAAZ,CAAtC;AACA,YAAM1E,EAAE,GAAGmC,OAAO,CAACZ,IAAI,GAAG,QAAR,CAAP,IAA4B07B,QAAQ,CAAC17B,IAAD,CAApC,IAA8CA,IAAzD;AACAM,MAAAA,MAAM,CAAC7B,EAAD,CAAN,GAAa6B,MAAM,CAAC7B,EAAD,CAAN,IAAc9E,MAAM,CAACgH,MAAP,CAAc,IAAd,CAA3B;AACArS,MAAAA,OAAO,CAACgS,MAAM,CAAC7B,EAAD,CAAP,EAAa,CAAC;AAACuB,QAAAA;AAAD,OAAD,EAASw7B,YAAY,CAAC/8B,EAAD,CAArB,EAA2Bo9B,mBAAmB,CAACC,SAAD,CAA9C,CAAb,CAAP;AACD,KALD;AAMD,GAXD;AAYAniC,EAAAA,MAAM,CAACC,IAAP,CAAY0G,MAAZ,EAAoBtM,OAApB,CAA4BgH,GAAG,IAAI;AACjC,UAAMoB,KAAK,GAAGkE,MAAM,CAACtF,GAAD,CAApB;AACA1M,IAAAA,OAAO,CAAC8N,KAAD,EAAQ,CAAChV,QAAQ,CAACkZ,MAAT,CAAgBlE,KAAK,CAACzI,IAAtB,CAAD,EAA8BvM,QAAQ,CAACgV,KAAvC,CAAR,CAAP;AACD,GAHD;AAIA,SAAOkE,MAAP;AACD;;AACD,SAASy7B,WAAT,CAAqBrhC,MAArB,EAA6B;AAC3B,QAAMW,OAAO,GAAGX,MAAM,CAACW,OAAP,KAAmBX,MAAM,CAACW,OAAP,GAAiB,EAApC,CAAhB;AACAA,EAAAA,OAAO,CAACwV,OAAR,GAAkBnpB,cAAc,CAAC2T,OAAO,CAACwV,OAAT,EAAkB,EAAlB,CAAhC;AACAxV,EAAAA,OAAO,CAACiF,MAAR,GAAiBg7B,gBAAgB,CAAC5gC,MAAD,EAASW,OAAT,CAAjC;AACD;;AACD,SAAS2gC,QAAT,CAAkBh+B,IAAlB,EAAwB;AACtBA,EAAAA,IAAI,GAAGA,IAAI,IAAI,EAAf;AACAA,EAAAA,IAAI,CAAC0F,QAAL,GAAgB1F,IAAI,CAAC0F,QAAL,IAAiB,EAAjC;AACA1F,EAAAA,IAAI,CAACwH,MAAL,GAAcxH,IAAI,CAACwH,MAAL,IAAe,EAA7B;AACA,SAAOxH,IAAP;AACD;;AACD,SAASi+B,UAAT,CAAoBvhC,MAApB,EAA4B;AAC1BA,EAAAA,MAAM,GAAGA,MAAM,IAAI,EAAnB;AACAA,EAAAA,MAAM,CAACsD,IAAP,GAAcg+B,QAAQ,CAACthC,MAAM,CAACsD,IAAR,CAAtB;AACA+9B,EAAAA,WAAW,CAACrhC,MAAD,CAAX;AACA,SAAOA,MAAP;AACD;;AACD,MAAMwhC,QAAQ,GAAG,IAAI/oC,GAAJ,EAAjB;AACA,MAAMgpC,UAAU,GAAG,IAAIC,GAAJ,EAAnB;;AACA,SAASC,UAAT,CAAoBz0B,QAApB,EAA8B00B,QAA9B,EAAwC;AACtC,MAAI1iC,IAAI,GAAGsiC,QAAQ,CAACxmC,GAAT,CAAakS,QAAb,CAAX;;AACA,MAAI,CAAChO,IAAL,EAAW;AACTA,IAAAA,IAAI,GAAG0iC,QAAQ,EAAf;AACAJ,IAAAA,QAAQ,CAACrmC,GAAT,CAAa+R,QAAb,EAAuBhO,IAAvB;AACAuiC,IAAAA,UAAU,CAACjmC,GAAX,CAAe0D,IAAf;AACD;;AACD,SAAOA,IAAP;AACD;;AACD,MAAM2iC,UAAU,GAAG,CAAC1mC,GAAD,EAAMgY,GAAN,EAAW7S,GAAX,KAAmB;AACpC,QAAMsB,IAAI,GAAGtU,gBAAgB,CAAC6lB,GAAD,EAAM7S,GAAN,CAA7B;;AACA,MAAIsB,IAAI,KAAKhJ,SAAb,EAAwB;AACtBuC,IAAAA,GAAG,CAACK,GAAJ,CAAQoG,IAAR;AACD;AACF,CALD;;AAMA,MAAMkgC,MAAN,CAAa;AACXxpC,EAAAA,WAAW,CAAC0H,MAAD,EAAS;AAClB,SAAK+hC,OAAL,GAAeR,UAAU,CAACvhC,MAAD,CAAzB;AACA,SAAKgiC,WAAL,GAAmB,IAAIvpC,GAAJ,EAAnB;AACA,SAAKwpC,cAAL,GAAsB,IAAIxpC,GAAJ,EAAtB;AACD;;AACW,MAARypC,QAAQ,GAAG;AACb,WAAO,KAAKH,OAAL,CAAaG,QAApB;AACD;;AACO,MAAJjpC,IAAI,GAAG;AACT,WAAO,KAAK8oC,OAAL,CAAa9oC,IAApB;AACD;;AACO,MAAJA,IAAI,CAACA,IAAD,EAAO;AACb,SAAK8oC,OAAL,CAAa9oC,IAAb,GAAoBA,IAApB;AACD;;AACO,MAAJqK,IAAI,GAAG;AACT,WAAO,KAAKy+B,OAAL,CAAaz+B,IAApB;AACD;;AACO,MAAJA,IAAI,CAACA,IAAD,EAAO;AACb,SAAKy+B,OAAL,CAAaz+B,IAAb,GAAoBg+B,QAAQ,CAACh+B,IAAD,CAA5B;AACD;;AACU,MAAP3C,OAAO,GAAG;AACZ,WAAO,KAAKohC,OAAL,CAAaphC,OAApB;AACD;;AACU,MAAPA,OAAO,CAACA,OAAD,EAAU;AACnB,SAAKohC,OAAL,CAAaphC,OAAb,GAAuBA,OAAvB;AACD;;AACU,MAAPwV,OAAO,GAAG;AACZ,WAAO,KAAK4rB,OAAL,CAAa5rB,OAApB;AACD;;AACD/X,EAAAA,MAAM,GAAG;AACP,UAAM4B,MAAM,GAAG,KAAK+hC,OAApB;AACA,SAAKI,UAAL;AACAd,IAAAA,WAAW,CAACrhC,MAAD,CAAX;AACD;;AACDmiC,EAAAA,UAAU,GAAG;AACX,SAAKH,WAAL,CAAiBI,KAAjB;;AACA,SAAKH,cAAL,CAAoBG,KAApB;AACD;;AACDr4B,EAAAA,gBAAgB,CAACs4B,WAAD,EAAc;AAC5B,WAAOV,UAAU,CAACU,WAAD,EACf,MAAM,CAAC,CACJ,YAAWA,WAAY,EADnB,EAEL,EAFK,CAAD,CADS,CAAjB;AAKD;;AACD10B,EAAAA,yBAAyB,CAAC00B,WAAD,EAAc30B,UAAd,EAA0B;AACjD,WAAOi0B,UAAU,CAAE,GAAEU,WAAY,eAAc30B,UAAW,EAAzC,EACf,MAAM,CACJ,CACG,YAAW20B,WAAY,gBAAe30B,UAAW,EADpD,EAEG,eAAcA,UAAW,EAF5B,CADI,EAKJ,CACG,YAAW20B,WAAY,EAD1B,EAEE,EAFF,CALI,CADS,CAAjB;AAWD;;AACDj1B,EAAAA,uBAAuB,CAACi1B,WAAD,EAAcr1B,WAAd,EAA2B;AAChD,WAAO20B,UAAU,CAAE,GAAEU,WAAY,IAAGr1B,WAAY,EAA/B,EACf,MAAM,CAAC,CACJ,YAAWq1B,WAAY,aAAYr1B,WAAY,EAD3C,EAEJ,YAAWq1B,WAAY,EAFnB,EAGJ,YAAWr1B,WAAY,EAHnB,EAIL,EAJK,CAAD,CADS,CAAjB;AAOD;;AACD+yB,EAAAA,eAAe,CAACZ,MAAD,EAAS;AACtB,UAAMp7B,EAAE,GAAGo7B,MAAM,CAACp7B,EAAlB;AACA,UAAM9K,IAAI,GAAG,KAAKA,IAAlB;AACA,WAAO0oC,UAAU,CAAE,GAAE1oC,IAAK,WAAU8K,EAAG,EAAtB,EACf,MAAM,CAAC,CACJ,WAAUA,EAAG,EADT,EAEL,IAAGo7B,MAAM,CAACmD,sBAAP,IAAiC,EAApC,CAFK,CAAD,CADS,CAAjB;AAKD;;AACDC,EAAAA,aAAa,CAACC,SAAD,EAAYC,UAAZ,EAAwB;AACnC,UAAMT,WAAW,GAAG,KAAKA,WAAzB;;AACA,QAAI/0B,KAAK,GAAG+0B,WAAW,CAAChnC,GAAZ,CAAgBwnC,SAAhB,CAAZ;;AACA,QAAI,CAACv1B,KAAD,IAAUw1B,UAAd,EAA0B;AACxBx1B,MAAAA,KAAK,GAAG,IAAIxU,GAAJ,EAAR;;AACAupC,MAAAA,WAAW,CAAC7mC,GAAZ,CAAgBqnC,SAAhB,EAA2Bv1B,KAA3B;AACD;;AACD,WAAOA,KAAP;AACD;;AACDhD,EAAAA,eAAe,CAACu4B,SAAD,EAAYE,QAAZ,EAAsBD,UAAtB,EAAkC;AAC/C,UAAM;AAAC9hC,MAAAA,OAAD;AAAU1H,MAAAA;AAAV,QAAkB,IAAxB;;AACA,UAAMgU,KAAK,GAAG,KAAKs1B,aAAL,CAAmBC,SAAnB,EAA8BC,UAA9B,CAAd;;AACA,UAAM97B,MAAM,GAAGsG,KAAK,CAACjS,GAAN,CAAU0nC,QAAV,CAAf;;AACA,QAAI/7B,MAAJ,EAAY;AACV,aAAOA,MAAP;AACD;;AACD,UAAMqD,MAAM,GAAG,IAAI03B,GAAJ,EAAf;AACAgB,IAAAA,QAAQ,CAACppC,OAAT,CAAiB4F,IAAI,IAAI;AACvB,UAAIsjC,SAAJ,EAAe;AACbx4B,QAAAA,MAAM,CAACxO,GAAP,CAAWgnC,SAAX;AACAtjC,QAAAA,IAAI,CAAC5F,OAAL,CAAagH,GAAG,IAAIuhC,UAAU,CAAC73B,MAAD,EAASw4B,SAAT,EAAoBliC,GAApB,CAA9B;AACD;;AACDpB,MAAAA,IAAI,CAAC5F,OAAL,CAAagH,GAAG,IAAIuhC,UAAU,CAAC73B,MAAD,EAASrJ,OAAT,EAAkBL,GAAlB,CAA9B;AACApB,MAAAA,IAAI,CAAC5F,OAAL,CAAagH,GAAG,IAAIuhC,UAAU,CAAC73B,MAAD,EAASpX,SAAS,CAACqG,IAAD,CAAT,IAAmB,EAA5B,EAAgCqH,GAAhC,CAA9B;AACApB,MAAAA,IAAI,CAAC5F,OAAL,CAAagH,GAAG,IAAIuhC,UAAU,CAAC73B,MAAD,EAAStd,QAAT,EAAmB4T,GAAnB,CAA9B;AACApB,MAAAA,IAAI,CAAC5F,OAAL,CAAagH,GAAG,IAAIuhC,UAAU,CAAC73B,MAAD,EAAS9W,WAAT,EAAsBoN,GAAtB,CAA9B;AACD,KATD;AAUA,UAAMiiB,KAAK,GAAG/e,KAAK,CAACjH,IAAN,CAAWyN,MAAX,CAAd;;AACA,QAAIuY,KAAK,CAAChoB,MAAN,KAAiB,CAArB,EAAwB;AACtBgoB,MAAAA,KAAK,CAAChnB,IAAN,CAAW0D,MAAM,CAACgH,MAAP,CAAc,IAAd,CAAX;AACD;;AACD,QAAIw7B,UAAU,CAAChmC,GAAX,CAAeinC,QAAf,CAAJ,EAA8B;AAC5Bz1B,MAAAA,KAAK,CAAC9R,GAAN,CAAUunC,QAAV,EAAoBngB,KAApB;AACD;;AACD,WAAOA,KAAP;AACD;;AACDogB,EAAAA,iBAAiB,GAAG;AAClB,UAAM;AAAChiC,MAAAA,OAAD;AAAU1H,MAAAA;AAAV,QAAkB,IAAxB;AACA,WAAO,CACL0H,OADK,EAEL/N,SAAS,CAACqG,IAAD,CAAT,IAAmB,EAFd,EAGLvM,QAAQ,CAACsc,QAAT,CAAkB/P,IAAlB,KAA2B,EAHtB,EAIL;AAACA,MAAAA;AAAD,KAJK,EAKLvM,QALK,EAMLwG,WANK,CAAP;AAQD;;AACDqa,EAAAA,mBAAmB,CAACvD,MAAD,EAASsD,KAAT,EAAgBT,OAAhB,EAAyBQ,QAAQ,GAAG,CAAC,EAAD,CAApC,EAA0C;AAC3D,UAAMsiB,MAAM,GAAG;AAAC7uB,MAAAA,OAAO,EAAE;AAAV,KAAf;AACA,UAAM;AAAC8hC,MAAAA,QAAD;AAAWC,MAAAA;AAAX,QAA0BC,WAAW,CAAC,KAAKb,cAAN,EAAsBj4B,MAAtB,EAA8BqD,QAA9B,CAA3C;AACA,QAAI1M,OAAO,GAAGiiC,QAAd;;AACA,QAAIG,WAAW,CAACH,QAAD,EAAWt1B,KAAX,CAAf,EAAkC;AAChCqiB,MAAAA,MAAM,CAAC7uB,OAAP,GAAiB,KAAjB;AACA+L,MAAAA,OAAO,GAAGzZ,UAAU,CAACyZ,OAAD,CAAV,GAAsBA,OAAO,EAA7B,GAAkCA,OAA5C;AACA,YAAMm2B,WAAW,GAAG,KAAK94B,cAAL,CAAoBF,MAApB,EAA4B6C,OAA5B,EAAqCg2B,WAArC,CAApB;AACAliC,MAAAA,OAAO,GAAGrN,cAAc,CAACsvC,QAAD,EAAW/1B,OAAX,EAAoBm2B,WAApB,CAAxB;AACD;;AACD,SAAK,MAAM7lC,IAAX,IAAmBmQ,KAAnB,EAA0B;AACxBqiB,MAAAA,MAAM,CAACxyB,IAAD,CAAN,GAAewD,OAAO,CAACxD,IAAD,CAAtB;AACD;;AACD,WAAOwyB,MAAP;AACD;;AACDzlB,EAAAA,cAAc,CAACF,MAAD,EAAS6C,OAAT,EAAkBQ,QAAQ,GAAG,CAAC,EAAD,CAA7B,EAAmC41B,kBAAnC,EAAuD;AACnE,UAAM;AAACL,MAAAA;AAAD,QAAaE,WAAW,CAAC,KAAKb,cAAN,EAAsBj4B,MAAtB,EAA8BqD,QAA9B,CAA9B;AACA,WAAOzgB,QAAQ,CAACigB,OAAD,CAAR,GACHvZ,cAAc,CAACsvC,QAAD,EAAW/1B,OAAX,EAAoBjU,SAApB,EAA+BqqC,kBAA/B,CADX,GAEHL,QAFJ;AAGD;;AAhJU;;AAkJb,SAASE,WAAT,CAAqBI,aAArB,EAAoCl5B,MAApC,EAA4CqD,QAA5C,EAAsD;AACpD,MAAIJ,KAAK,GAAGi2B,aAAa,CAACloC,GAAd,CAAkBgP,MAAlB,CAAZ;;AACA,MAAI,CAACiD,KAAL,EAAY;AACVA,IAAAA,KAAK,GAAG,IAAIxU,GAAJ,EAAR;AACAyqC,IAAAA,aAAa,CAAC/nC,GAAd,CAAkB6O,MAAlB,EAA0BiD,KAA1B;AACD;;AACD,QAAMC,QAAQ,GAAGG,QAAQ,CAAC4vB,IAAT,EAAjB;AACA,MAAIt2B,MAAM,GAAGsG,KAAK,CAACjS,GAAN,CAAUkS,QAAV,CAAb;;AACA,MAAI,CAACvG,MAAL,EAAa;AACX,UAAMi8B,QAAQ,GAAGpvC,eAAe,CAACwW,MAAD,EAASqD,QAAT,CAAhC;;AACA1G,IAAAA,MAAM,GAAG;AACPi8B,MAAAA,QADO;AAEPC,MAAAA,WAAW,EAAEx1B,QAAQ,CAACxH,MAAT,CAAgB5W,CAAC,IAAI,CAACA,CAAC,CAAC0xC,WAAF,GAAgBvd,QAAhB,CAAyB,OAAzB,CAAtB;AAFN,KAAT;AAIAnW,IAAAA,KAAK,CAAC9R,GAAN,CAAU+R,QAAV,EAAoBvG,MAApB;AACD;;AACD,SAAOA,MAAP;AACD;;AACD,SAASo8B,WAAT,CAAqBrY,KAArB,EAA4Bpd,KAA5B,EAAmC;AACjC,QAAM;AAAC61B,IAAAA,YAAD;AAAeC,IAAAA;AAAf,MAA8B1vC,YAAY,CAACg3B,KAAD,CAAhD;;AACA,OAAK,MAAMvtB,IAAX,IAAmBmQ,KAAnB,EAA0B;AACxB,QAAK61B,YAAY,CAAChmC,IAAD,CAAZ,IAAsB/J,UAAU,CAACs3B,KAAK,CAACvtB,IAAD,CAAN,CAAjC,IACEimC,WAAW,CAACjmC,IAAD,CAAX,IAAqBrQ,OAAO,CAAC49B,KAAK,CAACvtB,IAAD,CAAN,CADlC,EACkD;AAChD,aAAO,IAAP;AACD;AACF;;AACD,SAAO,KAAP;AACD;;AAED,IAAIkmC,OAAO,GAAG,OAAd;AAEA,MAAMC,eAAe,GAAG,CAAC,KAAD,EAAQ,QAAR,EAAkB,MAAlB,EAA0B,OAA1B,EAAmC,WAAnC,CAAxB;;AACA,SAASC,oBAAT,CAA8B5iB,QAA9B,EAAwCrb,IAAxC,EAA8C;AAC5C,SAAOqb,QAAQ,KAAK,KAAb,IAAsBA,QAAQ,KAAK,QAAnC,IAAgD2iB,eAAe,CAACjvB,OAAhB,CAAwBsM,QAAxB,MAAsC,CAAC,CAAvC,IAA4Crb,IAAI,KAAK,GAA5G;AACD;;AACD,SAASk+B,aAAT,CAAuBC,EAAvB,EAA2BC,EAA3B,EAA+B;AAC7B,SAAO,UAASv3C,CAAT,EAAYU,CAAZ,EAAe;AACpB,WAAOV,CAAC,CAACs3C,EAAD,CAAD,KAAU52C,CAAC,CAAC42C,EAAD,CAAX,GACHt3C,CAAC,CAACu3C,EAAD,CAAD,GAAQ72C,CAAC,CAAC62C,EAAD,CADN,GAEHv3C,CAAC,CAACs3C,EAAD,CAAD,GAAQ52C,CAAC,CAAC42C,EAAD,CAFb;AAGD,GAJD;AAKD;;AACD,SAASE,oBAAT,CAA8B92B,OAA9B,EAAuC;AACrC,QAAM/T,KAAK,GAAG+T,OAAO,CAAC/T,KAAtB;AACA,QAAMkG,gBAAgB,GAAGlG,KAAK,CAAC6H,OAAN,CAAcxB,SAAvC;AACArG,EAAAA,KAAK,CAACm8B,aAAN,CAAoB,aAApB;AACA7jC,EAAAA,QAAQ,CAAC4N,gBAAgB,IAAIA,gBAAgB,CAAC4kC,UAAtC,EAAkD,CAAC/2B,OAAD,CAAlD,EAA6D/T,KAA7D,CAAR;AACD;;AACD,SAAS+qC,mBAAT,CAA6Bh3B,OAA7B,EAAsC;AACpC,QAAM/T,KAAK,GAAG+T,OAAO,CAAC/T,KAAtB;AACA,QAAMkG,gBAAgB,GAAGlG,KAAK,CAAC6H,OAAN,CAAcxB,SAAvC;AACA/N,EAAAA,QAAQ,CAAC4N,gBAAgB,IAAIA,gBAAgB,CAAC8kC,UAAtC,EAAkD,CAACj3B,OAAD,CAAlD,EAA6D/T,KAA7D,CAAR;AACD;;AACD,SAASirC,SAAT,CAAmBtpC,IAAnB,EAAyB;AACvB,MAAI7J,eAAe,MAAM,OAAO6J,IAAP,KAAgB,QAAzC,EAAmD;AACjDA,IAAAA,IAAI,GAAG6uB,QAAQ,CAAC0a,cAAT,CAAwBvpC,IAAxB,CAAP;AACD,GAFD,MAEO,IAAIA,IAAI,IAAIA,IAAI,CAACF,MAAjB,EAAyB;AAC9BE,IAAAA,IAAI,GAAGA,IAAI,CAAC,CAAD,CAAX;AACD;;AACD,MAAIA,IAAI,IAAIA,IAAI,CAACmsB,MAAjB,EAAyB;AACvBnsB,IAAAA,IAAI,GAAGA,IAAI,CAACmsB,MAAZ;AACD;;AACD,SAAOnsB,IAAP;AACD;;AACD,MAAMwpC,SAAS,GAAG,EAAlB;;AACA,MAAMC,QAAQ,GAAI5jC,GAAD,IAAS;AACxB,QAAMsmB,MAAM,GAAGmd,SAAS,CAACzjC,GAAD,CAAxB;AACA,SAAOrB,MAAM,CAACwB,MAAP,CAAcwjC,SAAd,EAAyBp+B,MAAzB,CAAiCtZ,CAAD,IAAOA,CAAC,CAACq6B,MAAF,KAAaA,MAApD,EAA4D/rB,GAA5D,EAAP;AACD,CAHD;;AAIA,MAAMspC,KAAN,CAAY;AACV7rC,EAAAA,WAAW,CAACmC,IAAD,EAAO2pC,UAAP,EAAmB;AAC5B,UAAMtqC,EAAE,GAAG,IAAX;AACA,UAAMkG,MAAM,GAAG,KAAKA,MAAL,GAAc,IAAI8hC,MAAJ,CAAWsC,UAAX,CAA7B;AACA,UAAMC,aAAa,GAAGN,SAAS,CAACtpC,IAAD,CAA/B;AACA,UAAM6pC,aAAa,GAAGJ,QAAQ,CAACG,aAAD,CAA9B;;AACA,QAAIC,aAAJ,EAAmB;AACjB,YAAM,IAAIvlB,KAAJ,CACJ,+CAA+CulB,aAAa,CAACvgC,EAA7D,GAAkE,IAAlE,GACJ,qDAFQ,CAAN;AAID;;AACD,UAAMpD,OAAO,GAAGX,MAAM,CAACkK,cAAP,CAAsBlK,MAAM,CAAC2iC,iBAAP,EAAtB,EAAkD7oC,EAAE,CAACqQ,UAAH,EAAlD,CAAhB;AACA,SAAK+3B,QAAL,GAAgB,KAAKliC,MAAM,CAACkiC,QAAP,IAAmB7W,eAAe,CAACgZ,aAAD,CAAvC,GAAhB;AACA,UAAMx3B,OAAO,GAAG/S,EAAE,CAACooC,QAAH,CAAYvb,cAAZ,CAA2B0d,aAA3B,EAA0C1jC,OAAO,CAACwZ,WAAlD,CAAhB;AACA,UAAMyM,MAAM,GAAG/Z,OAAO,IAAIA,OAAO,CAAC+Z,MAAlC;AACA,UAAM9S,MAAM,GAAG8S,MAAM,IAAIA,MAAM,CAAC9S,MAAhC;AACA,UAAMC,KAAK,GAAG6S,MAAM,IAAIA,MAAM,CAAC7S,KAA/B;AACA,SAAKhQ,EAAL,GAAUjQ,GAAG,EAAb;AACA,SAAKiT,GAAL,GAAW8F,OAAX;AACA,SAAK+Z,MAAL,GAAcA,MAAd;AACA,SAAK7S,KAAL,GAAaA,KAAb;AACA,SAAKD,MAAL,GAAcA,MAAd;AACA,SAAKywB,QAAL,GAAgB5jC,OAAhB;AACA,SAAK6jC,YAAL,GAAoB,KAAKrqB,WAAzB;AACA,SAAK+L,OAAL,GAAe,EAAf;AACA,SAAKue,SAAL,GAAiB,EAAjB;AACA,SAAKt/B,OAAL,GAAevM,SAAf;AACA,SAAKkqB,KAAL,GAAa,EAAb;AACA,SAAKkH,uBAAL,GAA+BpxB,SAA/B;AACA,SAAK4T,SAAL,GAAiB5T,SAAjB;AACA,SAAK8B,OAAL,GAAe,EAAf;AACA,SAAKgqC,UAAL,GAAkB9rC,SAAlB;AACA,SAAK+rC,UAAL,GAAkB,EAAlB;AACA,SAAKC,oBAAL,GAA4BhsC,SAA5B;AACA,SAAKisC,eAAL,GAAuB,EAAvB;AACA,SAAKj/B,MAAL,GAAc,EAAd;AACA,SAAKlE,KAAL,GAAa9I,SAAb;AACA,SAAKksC,QAAL,GAAgB,IAAIjG,aAAJ,EAAhB;AACA,SAAK7T,QAAL,GAAgB,EAAhB;AACA,SAAK+Z,cAAL,GAAsB,EAAtB;AACA,SAAKC,QAAL,GAAgB,KAAhB;AACA,SAAKh3B,mBAAL,GAA2BpV,SAA3B;AACA,SAAK8O,QAAL,GAAgB9O,SAAhB;AACA,SAAKqsC,SAAL,GAAiBjxC,QAAQ,CAAC,MAAM,KAAKoK,MAAL,CAAY,QAAZ,CAAP,EAA8BuC,OAAO,CAACukC,WAAR,IAAuB,CAArD,CAAzB;AACAjB,IAAAA,SAAS,CAACnqC,EAAE,CAACiK,EAAJ,CAAT,GAAmBjK,EAAnB;;AACA,QAAI,CAAC+S,OAAD,IAAY,CAAC+Z,MAAjB,EAAyB;AACvBue,MAAAA,OAAO,CAACC,KAAR,CAAc,mEAAd;AACA;AACD;;AACDjpC,IAAAA,QAAQ,CAACf,MAAT,CAAgBtB,EAAhB,EAAoB,UAApB,EAAgC6pC,oBAAhC;AACAxnC,IAAAA,QAAQ,CAACf,MAAT,CAAgBtB,EAAhB,EAAoB,UAApB,EAAgC+pC,mBAAhC;;AACA/pC,IAAAA,EAAE,CAACurC,WAAH;;AACA,QAAIvrC,EAAE,CAACkrC,QAAP,EAAiB;AACflrC,MAAAA,EAAE,CAACsE,MAAH;AACD;AACF;;AACc,MAAX+b,WAAW,GAAG;AAChB,UAAM;AAACxZ,MAAAA,OAAO,EAAE;AAACwZ,QAAAA,WAAD;AAAcmrB,QAAAA;AAAd,OAAV;AAA8CvxB,MAAAA,KAA9C;AAAqDD,MAAAA,MAArD;AAA6D0wB,MAAAA;AAA7D,QAA6E,IAAnF;;AACA,QAAI,CAAC12C,aAAa,CAACqsB,WAAD,CAAlB,EAAiC;AAC/B,aAAOA,WAAP;AACD;;AACD,QAAImrB,mBAAmB,IAAId,YAA3B,EAAyC;AACvC,aAAOA,YAAP;AACD;;AACD,WAAO1wB,MAAM,GAAGC,KAAK,GAAGD,MAAX,GAAoB,IAAjC;AACD;;AACO,MAAJxQ,IAAI,GAAG;AACT,WAAO,KAAKtD,MAAL,CAAYsD,IAAnB;AACD;;AACO,MAAJA,IAAI,CAACA,IAAD,EAAO;AACb,SAAKtD,MAAL,CAAYsD,IAAZ,GAAmBA,IAAnB;AACD;;AACU,MAAP3C,OAAO,GAAG;AACZ,WAAO,KAAK4jC,QAAZ;AACD;;AACU,MAAP5jC,OAAO,CAACA,OAAD,EAAU;AACnB,SAAKX,MAAL,CAAYW,OAAZ,GAAsBA,OAAtB;AACD;;AACD0kC,EAAAA,WAAW,GAAG;AACZ,UAAMvrC,EAAE,GAAG,IAAX;AACAA,IAAAA,EAAE,CAACm7B,aAAH,CAAiB,YAAjB;;AACA,QAAIn7B,EAAE,CAAC6G,OAAH,CAAW4kC,UAAf,EAA2B;AACzBzrC,MAAAA,EAAE,CAAC4F,MAAH;AACD,KAFD,MAEO;AACLxL,MAAAA,WAAW,CAAC4F,EAAD,EAAKA,EAAE,CAAC6G,OAAH,CAAWopB,gBAAhB,CAAX;AACD;;AACDjwB,IAAAA,EAAE,CAAC0rC,UAAH;AACA1rC,IAAAA,EAAE,CAACm7B,aAAH,CAAiB,WAAjB;AACA,WAAOn7B,EAAP;AACD;;AACDsoC,EAAAA,KAAK,GAAG;AACNhuC,IAAAA,WAAW,CAAC,KAAKwyB,MAAN,EAAc,KAAK7f,GAAnB,CAAX;AACA,WAAO,IAAP;AACD;;AACDhL,EAAAA,IAAI,GAAG;AACLI,IAAAA,QAAQ,CAACJ,IAAT,CAAc,IAAd;AACA,WAAO,IAAP;AACD;;AACD2D,EAAAA,MAAM,CAACqU,KAAD,EAAQD,MAAR,EAAgB;AACpB,QAAI,CAAC3X,QAAQ,CAAC9B,OAAT,CAAiB,IAAjB,CAAL,EAA6B;AAC3B,WAAKorC,OAAL,CAAa1xB,KAAb,EAAoBD,MAApB;AACD,KAFD,MAEO;AACL,WAAK4xB,iBAAL,GAAyB;AAAC3xB,QAAAA,KAAD;AAAQD,QAAAA;AAAR,OAAzB;AACD;AACF;;AACD2xB,EAAAA,OAAO,CAAC1xB,KAAD,EAAQD,MAAR,EAAgB;AACrB,UAAMha,EAAE,GAAG,IAAX;AACA,UAAM6G,OAAO,GAAG7G,EAAE,CAAC6G,OAAnB;AACA,UAAMimB,MAAM,GAAG9sB,EAAE,CAAC8sB,MAAlB;AACA,UAAMzM,WAAW,GAAGxZ,OAAO,CAAC2kC,mBAAR,IAA+BxrC,EAAE,CAACqgB,WAAtD;AACA,UAAMwrB,OAAO,GAAG7rC,EAAE,CAACooC,QAAH,CAAYhyC,cAAZ,CAA2B02B,MAA3B,EAAmC7S,KAAnC,EAA0CD,MAA1C,EAAkDqG,WAAlD,CAAhB;AACA,UAAMyrB,QAAQ,GAAGjlC,OAAO,CAACopB,gBAAR,IAA4BjwB,EAAE,CAACooC,QAAH,CAAYjb,mBAAZ,EAA7C;AACAntB,IAAAA,EAAE,CAACia,KAAH,GAAW4xB,OAAO,CAAC5xB,KAAnB;AACAja,IAAAA,EAAE,CAACga,MAAH,GAAY6xB,OAAO,CAAC7xB,MAApB;AACAha,IAAAA,EAAE,CAAC0qC,YAAH,GAAkB1qC,EAAE,CAACqgB,WAArB;;AACA,QAAI,CAACjmB,WAAW,CAAC4F,EAAD,EAAK8rC,QAAL,EAAe,IAAf,CAAhB,EAAsC;AACpC;AACD;;AACD9rC,IAAAA,EAAE,CAACm7B,aAAH,CAAiB,QAAjB,EAA2B;AAAC5zB,MAAAA,IAAI,EAAEskC;AAAP,KAA3B;AACAv0C,IAAAA,QAAQ,CAACuP,OAAO,CAACklC,QAAT,EAAmB,CAAC/rC,EAAD,EAAK6rC,OAAL,CAAnB,EAAkC7rC,EAAlC,CAAR;;AACA,QAAIA,EAAE,CAACkrC,QAAP,EAAiB;AACf,UAAIlrC,EAAE,CAACmrC,SAAH,EAAJ,EAAoB;AAClBnrC,QAAAA,EAAE,CAACgsC,MAAH;AACD;AACF;AACF;;AACDC,EAAAA,mBAAmB,GAAG;AACpB,UAAMplC,OAAO,GAAG,KAAKA,OAArB;AACA,UAAMqlC,aAAa,GAAGrlC,OAAO,CAACiF,MAAR,IAAkB,EAAxC;AACA5V,IAAAA,IAAI,CAACg2C,aAAD,EAAgB,CAACC,WAAD,EAActK,MAAd,KAAyB;AAC3CsK,MAAAA,WAAW,CAACliC,EAAZ,GAAiB43B,MAAjB;AACD,KAFG,CAAJ;AAGD;;AACDuK,EAAAA,mBAAmB,GAAG;AACpB,UAAMpsC,EAAE,GAAG,IAAX;AACA,UAAM6G,OAAO,GAAG7G,EAAE,CAAC6G,OAAnB;AACA,UAAMwlC,SAAS,GAAGxlC,OAAO,CAACiF,MAA1B;AACA,UAAMA,MAAM,GAAG9L,EAAE,CAAC8L,MAAlB;AACA,UAAMwgC,OAAO,GAAGnnC,MAAM,CAACC,IAAP,CAAY0G,MAAZ,EAAoBlK,MAApB,CAA2B,CAACyX,GAAD,EAAMpP,EAAN,KAAa;AACtDoP,MAAAA,GAAG,CAACpP,EAAD,CAAH,GAAU,KAAV;AACA,aAAOoP,GAAP;AACD,KAHe,EAGb,EAHa,CAAhB;AAIA,QAAI7Y,KAAK,GAAG,EAAZ;;AACA,QAAI6rC,SAAJ,EAAe;AACb7rC,MAAAA,KAAK,GAAGA,KAAK,CAACwV,MAAN,CACN7Q,MAAM,CAACC,IAAP,CAAYinC,SAAZ,EAAuB5rB,GAAvB,CAA4BxW,EAAD,IAAQ;AACjC,cAAM28B,YAAY,GAAGyF,SAAS,CAACpiC,EAAD,CAA9B;AACA,cAAMuB,IAAI,GAAGm7B,aAAa,CAAC18B,EAAD,EAAK28B,YAAL,CAA1B;AACA,cAAM2F,QAAQ,GAAG/gC,IAAI,KAAK,GAA1B;AACA,cAAM4M,YAAY,GAAG5M,IAAI,KAAK,GAA9B;AACA,eAAO;AACL3E,UAAAA,OAAO,EAAE+/B,YADJ;AAEL4F,UAAAA,SAAS,EAAED,QAAQ,GAAG,WAAH,GAAiBn0B,YAAY,GAAG,QAAH,GAAc,MAFzD;AAGLq0B,UAAAA,KAAK,EAAEF,QAAQ,GAAG,cAAH,GAAoBn0B,YAAY,GAAG,UAAH,GAAgB;AAH1D,SAAP;AAKD,OAVD,CADM,CAAR;AAaD;;AACDliB,IAAAA,IAAI,CAACsK,KAAD,EAASG,IAAD,IAAU;AACpB,YAAMimC,YAAY,GAAGjmC,IAAI,CAACkG,OAA1B;AACA,YAAMoD,EAAE,GAAG28B,YAAY,CAAC38B,EAAxB;AACA,YAAMuB,IAAI,GAAGm7B,aAAa,CAAC18B,EAAD,EAAK28B,YAAL,CAA1B;AACA,YAAM8F,SAAS,GAAGx5C,cAAc,CAAC0zC,YAAY,CAACznC,IAAd,EAAoBwB,IAAI,CAAC8rC,KAAzB,CAAhC;;AACA,UAAI7F,YAAY,CAAC/f,QAAb,KAA0B/nB,SAA1B,IAAuC2qC,oBAAoB,CAAC7C,YAAY,CAAC/f,QAAd,EAAwBrb,IAAxB,CAApB,KAAsDi+B,oBAAoB,CAAC9oC,IAAI,CAAC6rC,SAAN,CAArH,EAAuI;AACrI5F,QAAAA,YAAY,CAAC/f,QAAb,GAAwBlmB,IAAI,CAAC6rC,SAA7B;AACD;;AACDF,MAAAA,OAAO,CAACriC,EAAD,CAAP,GAAc,IAAd;AACA,UAAIrC,KAAK,GAAG,IAAZ;;AACA,UAAIqC,EAAE,IAAI6B,MAAN,IAAgBA,MAAM,CAAC7B,EAAD,CAAN,CAAW9K,IAAX,KAAoButC,SAAxC,EAAmD;AACjD9kC,QAAAA,KAAK,GAAGkE,MAAM,CAAC7B,EAAD,CAAd;AACD,OAFD,MAEO;AACL,cAAM0iC,UAAU,GAAG/H,QAAQ,CAACX,QAAT,CAAkByI,SAAlB,CAAnB;AACA9kC,QAAAA,KAAK,GAAG,IAAI+kC,UAAJ,CAAe;AACrB1iC,UAAAA,EADqB;AAErB9K,UAAAA,IAAI,EAAEutC,SAFe;AAGrBz/B,UAAAA,GAAG,EAAEjN,EAAE,CAACiN,GAHa;AAIrBjO,UAAAA,KAAK,EAAEgB;AAJc,SAAf,CAAR;AAMA8L,QAAAA,MAAM,CAAClE,KAAK,CAACqC,EAAP,CAAN,GAAmBrC,KAAnB;AACD;;AACDA,MAAAA,KAAK,CAACoxB,IAAN,CAAW4N,YAAX,EAAyB//B,OAAzB;AACD,KAvBG,CAAJ;AAwBA3Q,IAAAA,IAAI,CAACo2C,OAAD,EAAU,CAACM,UAAD,EAAa3iC,EAAb,KAAoB;AAChC,UAAI,CAAC2iC,UAAL,EAAiB;AACf,eAAO9gC,MAAM,CAAC7B,EAAD,CAAb;AACD;AACF,KAJG,CAAJ;AAKA/T,IAAAA,IAAI,CAAC4V,MAAD,EAAUlE,KAAD,IAAW;AACtBwhB,MAAAA,OAAO,CAAC/iB,SAAR,CAAkBrG,EAAlB,EAAsB4H,KAAtB,EAA6BA,KAAK,CAACf,OAAnC;AACAuiB,MAAAA,OAAO,CAAC+C,MAAR,CAAensB,EAAf,EAAmB4H,KAAnB;AACD,KAHG,CAAJ;AAID;;AACDilC,EAAAA,eAAe,GAAG;AAChB,UAAM7sC,EAAE,GAAG,IAAX;AACA,UAAM4I,QAAQ,GAAG5I,EAAE,CAAC2qC,SAApB;AACA,UAAM91B,OAAO,GAAG7U,EAAE,CAACwJ,IAAH,CAAQ0F,QAAR,CAAiBzO,MAAjC;AACA,UAAMmU,OAAO,GAAGhM,QAAQ,CAACnI,MAAzB;AACAmI,IAAAA,QAAQ,CAACqN,IAAT,CAAc,CAAC5jB,CAAD,EAAIU,CAAJ,KAAUV,CAAC,CAAC0W,KAAF,GAAUhW,CAAC,CAACgW,KAApC;;AACA,QAAI6L,OAAO,GAAGC,OAAd,EAAuB;AACrB,WAAK,IAAIhiB,CAAC,GAAGgiB,OAAb,EAAsBhiB,CAAC,GAAG+hB,OAA1B,EAAmC,EAAE/hB,CAArC,EAAwC;AACtCmN,QAAAA,EAAE,CAAC8sC,mBAAH,CAAuBj6C,CAAvB;AACD;;AACD+V,MAAAA,QAAQ,CAACwM,MAAT,CAAgBP,OAAhB,EAAyBD,OAAO,GAAGC,OAAnC;AACD;;AACD7U,IAAAA,EAAE,CAAC+qC,eAAH,GAAqBniC,QAAQ,CAAC2Y,KAAT,CAAe,CAAf,EAAkBtL,IAAlB,CAAuByzB,aAAa,CAAC,OAAD,EAAU,OAAV,CAApC,CAArB;AACD;;AACDqD,EAAAA,2BAA2B,GAAG;AAC5B,UAAM/sC,EAAE,GAAG,IAAX;AACA,UAAM;AAAC2qC,MAAAA,SAAS,EAAE/hC,QAAZ;AAAsBY,MAAAA,IAAI,EAAE;AAAC0F,QAAAA;AAAD;AAA5B,QAA0ClP,EAAhD;;AACA,QAAI4I,QAAQ,CAACnI,MAAT,GAAkByO,QAAQ,CAACzO,MAA/B,EAAuC;AACrC,aAAOT,EAAE,CAACqL,OAAV;AACD;;AACDzC,IAAAA,QAAQ,CAACpJ,OAAT,CAAiB,CAACoK,IAAD,EAAOb,KAAP,KAAiB;AAChC,UAAImG,QAAQ,CAACnD,MAAT,CAAgBtW,CAAC,IAAIA,CAAC,KAAKmU,IAAI,CAAC8X,QAAhC,EAA0CjhB,MAA1C,KAAqD,CAAzD,EAA4D;AAC1DT,QAAAA,EAAE,CAAC8sC,mBAAH,CAAuB/jC,KAAvB;AACD;AACF,KAJD;AAKD;;AACDikC,EAAAA,wBAAwB,GAAG;AACzB,UAAMhtC,EAAE,GAAG,IAAX;AACA,UAAMitC,cAAc,GAAG,EAAvB;AACA,UAAM/9B,QAAQ,GAAGlP,EAAE,CAACwJ,IAAH,CAAQ0F,QAAzB;AACA,QAAIrc,CAAJ,EAAOiW,IAAP;;AACA9I,IAAAA,EAAE,CAAC+sC,2BAAH;;AACA,SAAKl6C,CAAC,GAAG,CAAJ,EAAOiW,IAAI,GAAGoG,QAAQ,CAACzO,MAA5B,EAAoC5N,CAAC,GAAGiW,IAAxC,EAA8CjW,CAAC,EAA/C,EAAmD;AACjD,YAAMuZ,OAAO,GAAG8C,QAAQ,CAACrc,CAAD,CAAxB;AACA,UAAI+W,IAAI,GAAG5J,EAAE,CAACmP,cAAH,CAAkBtc,CAAlB,CAAX;AACA,YAAMsM,IAAI,GAAGiN,OAAO,CAACjN,IAAR,IAAgBa,EAAE,CAACkG,MAAH,CAAU/G,IAAvC;;AACA,UAAIyK,IAAI,CAACzK,IAAL,IAAayK,IAAI,CAACzK,IAAL,KAAcA,IAA/B,EAAqC;AACnCa,QAAAA,EAAE,CAAC8sC,mBAAH,CAAuBj6C,CAAvB;;AACA+W,QAAAA,IAAI,GAAG5J,EAAE,CAACmP,cAAH,CAAkBtc,CAAlB,CAAP;AACD;;AACD+W,MAAAA,IAAI,CAACzK,IAAL,GAAYA,IAAZ;AACAyK,MAAAA,IAAI,CAAC+E,SAAL,GAAiBvC,OAAO,CAACuC,SAAR,IAAqB03B,YAAY,CAAClnC,IAAD,EAAOa,EAAE,CAAC6G,OAAV,CAAlD;AACA+C,MAAAA,IAAI,CAACsjC,KAAL,GAAa9gC,OAAO,CAAC8gC,KAAR,IAAiB,CAA9B;AACAtjC,MAAAA,IAAI,CAACb,KAAL,GAAalW,CAAb;AACA+W,MAAAA,IAAI,CAACwI,KAAL,GAAa,KAAKhG,OAAO,CAACgG,KAA1B;AACAxI,MAAAA,IAAI,CAAC7D,OAAL,GAAe/F,EAAE,CAACqe,gBAAH,CAAoBxrB,CAApB,CAAf;;AACA,UAAI+W,IAAI,CAACsB,UAAT,EAAqB;AACnBtB,QAAAA,IAAI,CAACsB,UAAL,CAAgBgD,WAAhB,CAA4Brb,CAA5B;AACA+W,QAAAA,IAAI,CAACsB,UAAL,CAAgB6C,UAAhB;AACD,OAHD,MAGO;AACL,cAAMo/B,eAAe,GAAGvI,QAAQ,CAACf,aAAT,CAAuB1kC,IAAvB,CAAxB;AACA,cAAM;AAACuQ,UAAAA,kBAAD;AAAqBuD,UAAAA;AAArB,YAAwCrgB,QAAQ,CAACsc,QAAT,CAAkB/P,IAAlB,CAA9C;AACAgG,QAAAA,MAAM,CAACqC,MAAP,CAAc2lC,eAAe,CAACx3B,SAA9B,EAAyC;AACvC1C,UAAAA,eAAe,EAAE2xB,QAAQ,CAACb,UAAT,CAAoB9wB,eAApB,CADsB;AAEvCvD,UAAAA,kBAAkB,EAAEA,kBAAkB,IAAIk1B,QAAQ,CAACb,UAAT,CAAoBr0B,kBAApB;AAFH,SAAzC;AAIA9F,QAAAA,IAAI,CAACsB,UAAL,GAAkB,IAAIiiC,eAAJ,CAAoBntC,EAApB,EAAwBnN,CAAxB,CAAlB;AACAo6C,QAAAA,cAAc,CAACxrC,IAAf,CAAoBmI,IAAI,CAACsB,UAAzB;AACD;AACF;;AACDlL,IAAAA,EAAE,CAAC6sC,eAAH;;AACA,WAAOI,cAAP;AACD;;AACDG,EAAAA,cAAc,GAAG;AACf,UAAMptC,EAAE,GAAG,IAAX;AACA9J,IAAAA,IAAI,CAAC8J,EAAE,CAACwJ,IAAH,CAAQ0F,QAAT,EAAmB,CAAC9C,OAAD,EAAU/C,YAAV,KAA2B;AAChDrJ,MAAAA,EAAE,CAACmP,cAAH,CAAkB9F,YAAlB,EAAgC6B,UAAhC,CAA2CoE,KAA3C;AACD,KAFG,EAEDtP,EAFC,CAAJ;AAGD;;AACDsP,EAAAA,KAAK,GAAG;AACN,SAAK89B,cAAL;;AACA,SAAKjS,aAAL,CAAmB,OAAnB;AACD;;AACD72B,EAAAA,MAAM,CAAC8E,IAAD,EAAO;AACX,UAAMpJ,EAAE,GAAG,IAAX;AACA,UAAMkG,MAAM,GAAGlG,EAAE,CAACkG,MAAlB;AACAA,IAAAA,MAAM,CAAC5B,MAAP;AACAtE,IAAAA,EAAE,CAACyqC,QAAH,GAAcvkC,MAAM,CAACkK,cAAP,CAAsBlK,MAAM,CAAC2iC,iBAAP,EAAtB,EAAkD7oC,EAAE,CAACqQ,UAAH,EAAlD,CAAd;AACAna,IAAAA,IAAI,CAAC8J,EAAE,CAAC8L,MAAJ,EAAalE,KAAD,IAAW;AACzBwhB,MAAAA,OAAO,CAACiD,SAAR,CAAkBrsB,EAAlB,EAAsB4H,KAAtB;AACD,KAFG,CAAJ;AAGA,UAAMylC,aAAa,GAAGrtC,EAAE,CAACkU,mBAAH,GAAyB,CAAClU,EAAE,CAAC6G,OAAH,CAAWxB,SAA3D;AACArF,IAAAA,EAAE,CAACisC,mBAAH;AACAjsC,IAAAA,EAAE,CAACosC,mBAAH;AACA,UAAMkB,cAAc,GAAG,IAAI1F,GAAJ,CAAQziC,MAAM,CAACC,IAAP,CAAYpF,EAAE,CAAC6qC,UAAf,CAAR,CAAvB;AACA,UAAM0C,SAAS,GAAG,IAAI3F,GAAJ,CAAQ5nC,EAAE,CAAC6G,OAAH,CAAW2mC,MAAnB,CAAlB;;AACA,QAAI,CAAChzC,SAAS,CAAC8yC,cAAD,EAAiBC,SAAjB,CAAV,IAAyC,CAAC,CAAC,KAAKzC,oBAAP,KAAgC9qC,EAAE,CAAC6G,OAAH,CAAW4kC,UAAxF,EAAoG;AAClGzrC,MAAAA,EAAE,CAACytC,YAAH;AACAztC,MAAAA,EAAE,CAAC0rC,UAAH;AACD;;AACD1rC,IAAAA,EAAE,CAACgrC,QAAH,CAAYzF,UAAZ;;AACA,QAAIvlC,EAAE,CAACm7B,aAAH,CAAiB,cAAjB,EAAiC;AAAC/xB,MAAAA,IAAD;AAAOk8B,MAAAA,UAAU,EAAE;AAAnB,KAAjC,MAA+D,KAAnE,EAA0E;AACxE;AACD;;AACD,UAAM2H,cAAc,GAAGjtC,EAAE,CAACgtC,wBAAH,EAAvB;AACAhtC,IAAAA,EAAE,CAACm7B,aAAH,CAAiB,sBAAjB;AACA,QAAI5O,UAAU,GAAG,CAAjB;;AACA,SAAK,IAAI15B,CAAC,GAAG,CAAR,EAAWiW,IAAI,GAAG9I,EAAE,CAACwJ,IAAH,CAAQ0F,QAAR,CAAiBzO,MAAxC,EAAgD5N,CAAC,GAAGiW,IAApD,EAA0DjW,CAAC,EAA3D,EAA+D;AAC7D,YAAM;AAACqY,QAAAA;AAAD,UAAelL,EAAE,CAACmP,cAAH,CAAkBtc,CAAlB,CAArB;AACA,YAAMyc,KAAK,GAAG,CAAC+9B,aAAD,IAAkBJ,cAAc,CAAC1yB,OAAf,CAAuBrP,UAAvB,MAAuC,CAAC,CAAxE;AACAA,MAAAA,UAAU,CAACyE,qBAAX,CAAiCL,KAAjC;AACAid,MAAAA,UAAU,GAAG3sB,IAAI,CAACmC,GAAL,CAAS,CAACmJ,UAAU,CAACgH,cAAX,EAAV,EAAuCqa,UAAvC,CAAb;AACD;;AACDvsB,IAAAA,EAAE,CAACynB,WAAH,GAAiB8E,UAAjB;;AACAvsB,IAAAA,EAAE,CAAC0tC,aAAH,CAAiBnhB,UAAjB;;AACA,QAAI,CAAC8gB,aAAL,EAAoB;AAClBn3C,MAAAA,IAAI,CAAC+2C,cAAD,EAAkB/hC,UAAD,IAAgB;AACnCA,QAAAA,UAAU,CAACoE,KAAX;AACD,OAFG,CAAJ;AAGD;;AACDtP,IAAAA,EAAE,CAAC2tC,eAAH,CAAmBvkC,IAAnB;;AACApJ,IAAAA,EAAE,CAACm7B,aAAH,CAAiB,aAAjB,EAAgC;AAAC/xB,MAAAA;AAAD,KAAhC;;AACApJ,IAAAA,EAAE,CAACosB,OAAH,CAAWnW,IAAX,CAAgByzB,aAAa,CAAC,GAAD,EAAM,MAAN,CAA7B;;AACA,QAAI1pC,EAAE,CAAC4qC,UAAP,EAAmB;AACjB5qC,MAAAA,EAAE,CAAC4tC,aAAH,CAAiB5tC,EAAE,CAAC4qC,UAApB,EAAgC,IAAhC;AACD;;AACD5qC,IAAAA,EAAE,CAACgsC,MAAH;AACD;;AACD0B,EAAAA,aAAa,CAACnhB,UAAD,EAAa;AACxB,UAAMvsB,EAAE,GAAG,IAAX;;AACA,QAAIA,EAAE,CAACm7B,aAAH,CAAiB,cAAjB,EAAiC;AAACmK,MAAAA,UAAU,EAAE;AAAb,KAAjC,MAAyD,KAA7D,EAAoE;AAClE;AACD;;AACDlc,IAAAA,OAAO,CAAC9kB,MAAR,CAAetE,EAAf,EAAmBA,EAAE,CAACia,KAAtB,EAA6Bja,EAAE,CAACga,MAAhC,EAAwCuS,UAAxC;AACA,UAAM9Z,IAAI,GAAGzS,EAAE,CAAC0S,SAAhB;AACA,UAAMm7B,MAAM,GAAGp7B,IAAI,CAACwH,KAAL,IAAc,CAAd,IAAmBxH,IAAI,CAACuH,MAAL,IAAe,CAAjD;AACAha,IAAAA,EAAE,CAACosB,OAAH,GAAa,EAAb;AACAl2B,IAAAA,IAAI,CAAC8J,EAAE,CAACgpB,KAAJ,EAAYJ,GAAD,IAAS;AACtB,UAAIilB,MAAM,IAAIjlB,GAAG,CAAC/B,QAAJ,KAAiB,WAA/B,EAA4C;AAC1C;AACD;;AACD,UAAI+B,GAAG,CAACviB,SAAR,EAAmB;AACjBuiB,QAAAA,GAAG,CAACviB,SAAJ;AACD;;AACDrG,MAAAA,EAAE,CAACosB,OAAH,CAAW3qB,IAAX,CAAgB,GAAGmnB,GAAG,CAACwD,OAAJ,EAAnB;AACD,KARG,EAQDpsB,EARC,CAAJ;;AASAA,IAAAA,EAAE,CAACosB,OAAH,CAAW5sB,OAAX,CAAmB,CAACmB,IAAD,EAAOoI,KAAP,KAAiB;AAClCpI,MAAAA,IAAI,CAACmtC,IAAL,GAAY/kC,KAAZ;AACD,KAFD;;AAGA/I,IAAAA,EAAE,CAACm7B,aAAH,CAAiB,aAAjB;AACD;;AACDwS,EAAAA,eAAe,CAACvkC,IAAD,EAAO;AACpB,UAAMpJ,EAAE,GAAG,IAAX;AACA,UAAM1G,UAAU,GAAG,OAAO8P,IAAP,KAAgB,UAAnC;;AACA,QAAIpJ,EAAE,CAACm7B,aAAH,CAAiB,sBAAjB,EAAyC;AAAC/xB,MAAAA,IAAD;AAAOk8B,MAAAA,UAAU,EAAE;AAAnB,KAAzC,MAAuE,KAA3E,EAAkF;AAChF;AACD;;AACD,SAAK,IAAIzyC,CAAC,GAAG,CAAR,EAAWiW,IAAI,GAAG9I,EAAE,CAACwJ,IAAH,CAAQ0F,QAAR,CAAiBzO,MAAxC,EAAgD5N,CAAC,GAAGiW,IAApD,EAA0D,EAAEjW,CAA5D,EAA+D;AAC7DmN,MAAAA,EAAE,CAAC+tC,cAAH,CAAkBl7C,CAAlB,EAAqByG,UAAU,GAAG8P,IAAI,CAAC;AAACC,QAAAA,YAAY,EAAExW;AAAf,OAAD,CAAP,GAA6BuW,IAA5D;AACD;;AACDpJ,IAAAA,EAAE,CAACm7B,aAAH,CAAiB,qBAAjB,EAAwC;AAAC/xB,MAAAA;AAAD,KAAxC;AACD;;AACD2kC,EAAAA,cAAc,CAAChlC,KAAD,EAAQK,IAAR,EAAc;AAC1B,UAAMpJ,EAAE,GAAG,IAAX;AACA,UAAM4J,IAAI,GAAG5J,EAAE,CAACmP,cAAH,CAAkBpG,KAAlB,CAAb;AACA,UAAM8nB,IAAI,GAAG;AAACjnB,MAAAA,IAAD;AAAOb,MAAAA,KAAP;AAAcK,MAAAA,IAAd;AAAoBk8B,MAAAA,UAAU,EAAE;AAAhC,KAAb;;AACA,QAAItlC,EAAE,CAACm7B,aAAH,CAAiB,qBAAjB,EAAwCtK,IAAxC,MAAkD,KAAtD,EAA6D;AAC3D;AACD;;AACDjnB,IAAAA,IAAI,CAACsB,UAAL,CAAgB/K,OAAhB,CAAwBiJ,IAAxB;;AACAynB,IAAAA,IAAI,CAACyU,UAAL,GAAkB,KAAlB;AACAtlC,IAAAA,EAAE,CAACm7B,aAAH,CAAiB,oBAAjB,EAAuCtK,IAAvC;AACD;;AACDmb,EAAAA,MAAM,GAAG;AACP,UAAMhsC,EAAE,GAAG,IAAX;;AACA,QAAIA,EAAE,CAACm7B,aAAH,CAAiB,cAAjB,EAAiC;AAACmK,MAAAA,UAAU,EAAE;AAAb,KAAjC,MAAyD,KAA7D,EAAoE;AAClE;AACD;;AACD,QAAIjjC,QAAQ,CAACV,GAAT,CAAa3B,EAAb,CAAJ,EAAsB;AACpB,UAAIA,EAAE,CAACkrC,QAAH,IAAe,CAAC7oC,QAAQ,CAAC9B,OAAT,CAAiBP,EAAjB,CAApB,EAA0C;AACxCqC,QAAAA,QAAQ,CAACvC,KAAT,CAAeE,EAAf;AACD;AACF,KAJD,MAIO;AACLA,MAAAA,EAAE,CAACU,IAAH;AACAmpC,MAAAA,oBAAoB,CAAC;AAAC7qC,QAAAA,KAAK,EAAEgB;AAAR,OAAD,CAApB;AACD;AACF;;AACDU,EAAAA,IAAI,GAAG;AACL,UAAMV,EAAE,GAAG,IAAX;AACA,QAAInN,CAAJ;;AACA,QAAImN,EAAE,CAAC4rC,iBAAP,EAA0B;AACxB,YAAM;AAAC3xB,QAAAA,KAAD;AAAQD,QAAAA;AAAR,UAAkBha,EAAE,CAAC4rC,iBAA3B;;AACA5rC,MAAAA,EAAE,CAAC2rC,OAAH,CAAW1xB,KAAX,EAAkBD,MAAlB;;AACAha,MAAAA,EAAE,CAAC4rC,iBAAH,GAAuB,IAAvB;AACD;;AACD5rC,IAAAA,EAAE,CAACsoC,KAAH;;AACA,QAAItoC,EAAE,CAACia,KAAH,IAAY,CAAZ,IAAiBja,EAAE,CAACga,MAAH,IAAa,CAAlC,EAAqC;AACnC;AACD;;AACD,QAAIha,EAAE,CAACm7B,aAAH,CAAiB,YAAjB,EAA+B;AAACmK,MAAAA,UAAU,EAAE;AAAb,KAA/B,MAAuD,KAA3D,EAAkE;AAChE;AACD;;AACD,UAAM0I,MAAM,GAAGhuC,EAAE,CAACosB,OAAlB;;AACA,SAAKv5B,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGm7C,MAAM,CAACvtC,MAAX,IAAqButC,MAAM,CAACn7C,CAAD,CAAN,CAAUgD,CAAV,IAAe,CAAhD,EAAmD,EAAEhD,CAArD,EAAwD;AACtDm7C,MAAAA,MAAM,CAACn7C,CAAD,CAAN,CAAU6N,IAAV,CAAeV,EAAE,CAAC0S,SAAlB;AACD;;AACD1S,IAAAA,EAAE,CAACiuC,aAAH;;AACA,WAAOp7C,CAAC,GAAGm7C,MAAM,CAACvtC,MAAlB,EAA0B,EAAE5N,CAA5B,EAA+B;AAC7Bm7C,MAAAA,MAAM,CAACn7C,CAAD,CAAN,CAAU6N,IAAV,CAAeV,EAAE,CAAC0S,SAAlB;AACD;;AACD1S,IAAAA,EAAE,CAACm7B,aAAH,CAAiB,WAAjB;AACD;;AACDtyB,EAAAA,sBAAsB,CAACF,aAAD,EAAgB;AACpC,UAAM3I,EAAE,GAAG,IAAX;AACA,UAAM4I,QAAQ,GAAG5I,EAAE,CAAC+qC,eAApB;AACA,UAAMlV,MAAM,GAAG,EAAf;AACA,QAAIhjC,CAAJ,EAAOiW,IAAP;;AACA,SAAKjW,CAAC,GAAG,CAAJ,EAAOiW,IAAI,GAAGF,QAAQ,CAACnI,MAA5B,EAAoC5N,CAAC,GAAGiW,IAAxC,EAA8C,EAAEjW,CAAhD,EAAmD;AACjD,YAAM+W,IAAI,GAAGhB,QAAQ,CAAC/V,CAAD,CAArB;;AACA,UAAI,CAAC8V,aAAD,IAAkBiB,IAAI,CAAC7D,OAA3B,EAAoC;AAClC8vB,QAAAA,MAAM,CAACp0B,IAAP,CAAYmI,IAAZ;AACD;AACF;;AACD,WAAOisB,MAAP;AACD;;AACD1P,EAAAA,4BAA4B,GAAG;AAC7B,WAAO,KAAKtd,sBAAL,CAA4B,IAA5B,CAAP;AACD;;AACDolC,EAAAA,aAAa,GAAG;AACd,UAAMjuC,EAAE,GAAG,IAAX;;AACA,QAAIA,EAAE,CAACm7B,aAAH,CAAiB,oBAAjB,EAAuC;AAACmK,MAAAA,UAAU,EAAE;AAAb,KAAvC,MAA+D,KAAnE,EAA0E;AACxE;AACD;;AACD,UAAM18B,QAAQ,GAAG5I,EAAE,CAACmmB,4BAAH,EAAjB;;AACA,SAAK,IAAItzB,CAAC,GAAG+V,QAAQ,CAACnI,MAAT,GAAkB,CAA/B,EAAkC5N,CAAC,IAAI,CAAvC,EAA0C,EAAEA,CAA5C,EAA+C;AAC7CmN,MAAAA,EAAE,CAACkuC,YAAH,CAAgBtlC,QAAQ,CAAC/V,CAAD,CAAxB;AACD;;AACDmN,IAAAA,EAAE,CAACm7B,aAAH,CAAiB,mBAAjB;AACD;;AACD+S,EAAAA,YAAY,CAACtkC,IAAD,EAAO;AACjB,UAAM5J,EAAE,GAAG,IAAX;AACA,UAAMiN,GAAG,GAAGjN,EAAE,CAACiN,GAAf;AACA,UAAMsF,IAAI,GAAG3I,IAAI,CAAC0I,KAAlB;AACA,UAAM67B,OAAO,GAAG,CAAC57B,IAAI,CAAC9J,QAAtB;AACA,UAAMgK,IAAI,GAAGzS,EAAE,CAAC0S,SAAhB;AACA,UAAMme,IAAI,GAAG;AACXjnB,MAAAA,IADW;AAEXb,MAAAA,KAAK,EAAEa,IAAI,CAACb,KAFD;AAGXu8B,MAAAA,UAAU,EAAE;AAHD,KAAb;;AAKA,QAAItlC,EAAE,CAACm7B,aAAH,CAAiB,mBAAjB,EAAsCtK,IAAtC,MAAgD,KAApD,EAA2D;AACzD;AACD;;AACD,QAAIsd,OAAJ,EAAa;AACXj2C,MAAAA,QAAQ,CAAC+U,GAAD,EAAM;AACZ1E,QAAAA,IAAI,EAAEgK,IAAI,CAAChK,IAAL,KAAc,KAAd,GAAsB,CAAtB,GAA0BkK,IAAI,CAAClK,IAAL,GAAYgK,IAAI,CAAChK,IADrC;AAEZF,QAAAA,KAAK,EAAEkK,IAAI,CAAClK,KAAL,KAAe,KAAf,GAAuBrI,EAAE,CAACia,KAA1B,GAAkCxH,IAAI,CAACpK,KAAL,GAAakK,IAAI,CAAClK,KAF/C;AAGZD,QAAAA,GAAG,EAAEmK,IAAI,CAACnK,GAAL,KAAa,KAAb,GAAqB,CAArB,GAAyBqK,IAAI,CAACrK,GAAL,GAAWmK,IAAI,CAACnK,GAHlC;AAIZE,QAAAA,MAAM,EAAEiK,IAAI,CAACjK,MAAL,KAAgB,KAAhB,GAAwBtI,EAAE,CAACga,MAA3B,GAAoCvH,IAAI,CAACnK,MAAL,GAAciK,IAAI,CAACjK;AAJnD,OAAN,CAAR;AAMD;;AACDsB,IAAAA,IAAI,CAACsB,UAAL,CAAgBxK,IAAhB;;AACA,QAAIytC,OAAJ,EAAa;AACX71C,MAAAA,UAAU,CAAC2U,GAAD,CAAV;AACD;;AACD4jB,IAAAA,IAAI,CAACyU,UAAL,GAAkB,KAAlB;AACAtlC,IAAAA,EAAE,CAACm7B,aAAH,CAAiB,kBAAjB,EAAqCtK,IAArC;AACD;;AACDud,EAAAA,yBAAyB,CAAC77C,CAAD,EAAI6W,IAAJ,EAAUvC,OAAV,EAAmB2gB,gBAAnB,EAAqC;AAC5D,UAAMziB,MAAM,GAAGqjB,WAAW,CAACC,KAAZ,CAAkBjf,IAAlB,CAAf;;AACA,QAAI,OAAOrE,MAAP,KAAkB,UAAtB,EAAkC;AAChC,aAAOA,MAAM,CAAC,IAAD,EAAOxS,CAAP,EAAUsU,OAAV,EAAmB2gB,gBAAnB,CAAb;AACD;;AACD,WAAO,EAAP;AACD;;AACDrY,EAAAA,cAAc,CAAC9F,YAAD,EAAe;AAC3B,UAAMrJ,EAAE,GAAG,IAAX;AACA,UAAMoM,OAAO,GAAGpM,EAAE,CAACwJ,IAAH,CAAQ0F,QAAR,CAAiB7F,YAAjB,CAAhB;AACA,UAAMT,QAAQ,GAAG5I,EAAE,CAAC2qC,SAApB;AACA,QAAI/gC,IAAI,GAAGhB,QAAQ,CAACmD,MAAT,CAAgBtW,CAAC,IAAIA,CAAC,IAAIA,CAAC,CAACisB,QAAF,KAAetV,OAAzC,EAAkDrL,GAAlD,EAAX;;AACA,QAAI,CAAC6I,IAAL,EAAW;AACTA,MAAAA,IAAI,GAAG;AACLzK,QAAAA,IAAI,EAAE,IADD;AAELqK,QAAAA,IAAI,EAAE,EAFD;AAGL4C,QAAAA,OAAO,EAAE,IAHJ;AAILlB,QAAAA,UAAU,EAAE,IAJP;AAKLyH,QAAAA,MAAM,EAAE,IALH;AAMLrE,QAAAA,OAAO,EAAE,IANJ;AAOLE,QAAAA,OAAO,EAAE,IAPJ;AAQL0+B,QAAAA,KAAK,EAAE9gC,OAAO,IAAIA,OAAO,CAAC8gC,KAAnB,IAA4B,CAR9B;AASLnkC,QAAAA,KAAK,EAAEM,YATF;AAULqY,QAAAA,QAAQ,EAAEtV,OAVL;AAWLM,QAAAA,OAAO,EAAE,EAXJ;AAYLgE,QAAAA,OAAO,EAAE;AAZJ,OAAP;AAcA9H,MAAAA,QAAQ,CAACnH,IAAT,CAAcmI,IAAd;AACD;;AACD,WAAOA,IAAP;AACD;;AACDyG,EAAAA,UAAU,GAAG;AACX,WAAO,KAAKzC,QAAL,KAAkB,KAAKA,QAAL,GAAgB;AAAC5O,MAAAA,KAAK,EAAE,IAAR;AAAcG,MAAAA,IAAI,EAAE;AAApB,KAAlC,CAAP;AACD;;AACDukB,EAAAA,sBAAsB,GAAG;AACvB,WAAO,KAAKyC,4BAAL,GAAoC1lB,MAA3C;AACD;;AACD4d,EAAAA,gBAAgB,CAAChV,YAAD,EAAe;AAC7B,UAAM+C,OAAO,GAAG,KAAK5C,IAAL,CAAU0F,QAAV,CAAmB7F,YAAnB,CAAhB;;AACA,QAAI,CAAC+C,OAAL,EAAc;AACZ,aAAO,KAAP;AACD;;AACD,UAAMxC,IAAI,GAAG,KAAKuF,cAAL,CAAoB9F,YAApB,CAAb;AACA,WAAO,OAAOO,IAAI,CAAC+I,MAAZ,KAAuB,SAAvB,GAAmC,CAAC/I,IAAI,CAAC+I,MAAzC,GAAkD,CAACvG,OAAO,CAACuG,MAAlE;AACD;;AACD07B,EAAAA,oBAAoB,CAAChlC,YAAD,EAAetD,OAAf,EAAwB;AAC1C,UAAM6D,IAAI,GAAG,KAAKuF,cAAL,CAAoB9F,YAApB,CAAb;AACAO,IAAAA,IAAI,CAAC+I,MAAL,GAAc,CAAC5M,OAAf;AACD;;AACDob,EAAAA,oBAAoB,CAACpY,KAAD,EAAQ;AAC1B,SAAKkiC,cAAL,CAAoBliC,KAApB,IAA6B,CAAC,KAAKkiC,cAAL,CAAoBliC,KAApB,CAA9B;AACD;;AACDgS,EAAAA,iBAAiB,CAAChS,KAAD,EAAQ;AACvB,WAAO,CAAC,KAAKkiC,cAAL,CAAoBliC,KAApB,CAAR;AACD;;AACDulC,EAAAA,iBAAiB,CAACjlC,YAAD,EAAekD,SAAf,EAA0BxG,OAA1B,EAAmC;AAClD,UAAM/F,EAAE,GAAG,IAAX;AACA,UAAMoJ,IAAI,GAAGrD,OAAO,GAAG,MAAH,GAAY,MAAhC;AACA,UAAM6D,IAAI,GAAG5J,EAAE,CAACmP,cAAH,CAAkB9F,YAAlB,CAAb;;AACA,UAAMpK,KAAK,GAAG2K,IAAI,CAACsB,UAAL,CAAgByI,kBAAhB,CAAmC7U,SAAnC,EAA8CsK,IAA9C,CAAd;;AACA,QAAIxV,OAAO,CAAC2Y,SAAD,CAAX,EAAwB;AACtB3C,MAAAA,IAAI,CAACJ,IAAL,CAAU+C,SAAV,EAAqBoG,MAArB,GAA8B,CAAC5M,OAA/B;AACA/F,MAAAA,EAAE,CAACsE,MAAH;AACD,KAHD,MAGO;AACLtE,MAAAA,EAAE,CAACquC,oBAAH,CAAwBhlC,YAAxB,EAAsCtD,OAAtC;AACA9G,MAAAA,KAAK,CAACqF,MAAN,CAAasF,IAAb,EAAmB;AAAC7D,QAAAA;AAAD,OAAnB;AACA/F,MAAAA,EAAE,CAACsE,MAAH,CAAW2I,GAAD,IAASA,GAAG,CAAC5D,YAAJ,KAAqBA,YAArB,GAAoCD,IAApC,GAA2CtK,SAA9D;AACD;AACF;;AACDkH,EAAAA,IAAI,CAACqD,YAAD,EAAekD,SAAf,EAA0B;AAC5B,SAAK+hC,iBAAL,CAAuBjlC,YAAvB,EAAqCkD,SAArC,EAAgD,KAAhD;AACD;;AACD1G,EAAAA,IAAI,CAACwD,YAAD,EAAekD,SAAf,EAA0B;AAC5B,SAAK+hC,iBAAL,CAAuBjlC,YAAvB,EAAqCkD,SAArC,EAAgD,IAAhD;AACD;;AACDugC,EAAAA,mBAAmB,CAACzjC,YAAD,EAAe;AAChC,UAAMrJ,EAAE,GAAG,IAAX;AACA,UAAM4J,IAAI,GAAG5J,EAAE,CAAC2qC,SAAH,IAAgB3qC,EAAE,CAAC2qC,SAAH,CAAathC,YAAb,CAA7B;;AACA,QAAIO,IAAI,IAAIA,IAAI,CAACsB,UAAjB,EAA6B;AAC3BtB,MAAAA,IAAI,CAACsB,UAAL,CAAgBqE,QAAhB;;AACA,aAAOvP,EAAE,CAAC2qC,SAAH,CAAathC,YAAb,CAAP;AACD;AACF;;AACDklC,EAAAA,OAAO,GAAG;AACR,UAAMvuC,EAAE,GAAG,IAAX;AACA,UAAM;AAAC8sB,MAAAA,MAAD;AAAS7f,MAAAA;AAAT,QAAgBjN,EAAtB;AACA,QAAInN,CAAJ,EAAOiW,IAAP;AACA9I,IAAAA,EAAE,CAACiC,IAAH;AACAI,IAAAA,QAAQ,CAACF,MAAT,CAAgBnC,EAAhB;;AACA,SAAKnN,CAAC,GAAG,CAAJ,EAAOiW,IAAI,GAAG9I,EAAE,CAACwJ,IAAH,CAAQ0F,QAAR,CAAiBzO,MAApC,EAA4C5N,CAAC,GAAGiW,IAAhD,EAAsD,EAAEjW,CAAxD,EAA2D;AACzDmN,MAAAA,EAAE,CAAC8sC,mBAAH,CAAuBj6C,CAAvB;AACD;;AACDmN,IAAAA,EAAE,CAACkG,MAAH,CAAUmiC,UAAV;;AACA,QAAIvb,MAAJ,EAAY;AACV9sB,MAAAA,EAAE,CAACytC,YAAH;AACAnzC,MAAAA,WAAW,CAACwyB,MAAD,EAAS7f,GAAT,CAAX;AACAjN,MAAAA,EAAE,CAACooC,QAAH,CAAYrb,cAAZ,CAA2B9f,GAA3B;AACAjN,MAAAA,EAAE,CAAC8sB,MAAH,GAAY,IAAZ;AACA9sB,MAAAA,EAAE,CAACiN,GAAH,GAAS,IAAT;AACD;;AACDjN,IAAAA,EAAE,CAACm7B,aAAH,CAAiB,SAAjB;AACA,WAAOgP,SAAS,CAACnqC,EAAE,CAACiK,EAAJ,CAAhB;AACD;;AACDukC,EAAAA,aAAa,CAAC,GAAG3d,IAAJ,EAAU;AACrB,WAAO,KAAK/D,MAAL,CAAY2hB,SAAZ,CAAsB,GAAG5d,IAAzB,CAAP;AACD;;AACD6a,EAAAA,UAAU,GAAG;AACX,SAAKgD,cAAL;;AACA,QAAI,KAAK7nC,OAAL,CAAa4kC,UAAjB,EAA6B;AAC3B,WAAKkD,oBAAL;AACD,KAFD,MAEO;AACL,WAAKzD,QAAL,GAAgB,IAAhB;AACD;AACF;;AACDwD,EAAAA,cAAc,GAAG;AACf,UAAM1uC,EAAE,GAAG,IAAX;AACA,UAAMX,SAAS,GAAGW,EAAE,CAAC6qC,UAArB;AACA,UAAMzC,QAAQ,GAAGpoC,EAAE,CAACooC,QAApB;;AACA,UAAMwG,IAAI,GAAG,CAACzvC,IAAD,EAAO8tB,QAAP,KAAoB;AAC/Bmb,MAAAA,QAAQ,CAACpb,gBAAT,CAA0BhtB,EAA1B,EAA8Bb,IAA9B,EAAoC8tB,QAApC;AACA5tB,MAAAA,SAAS,CAACF,IAAD,CAAT,GAAkB8tB,QAAlB;AACD,KAHD;;AAIA,UAAMA,QAAQ,GAAG,UAAS16B,CAAT,EAAYkD,CAAZ,EAAeE,CAAf,EAAkB;AACjCpD,MAAAA,CAAC,CAACuqB,OAAF,GAAYrnB,CAAZ;AACAlD,MAAAA,CAAC,CAACwqB,OAAF,GAAYpnB,CAAZ;;AACAqK,MAAAA,EAAE,CAAC4tC,aAAH,CAAiBr7C,CAAjB;AACD,KAJD;;AAKA2D,IAAAA,IAAI,CAAC8J,EAAE,CAAC6G,OAAH,CAAW2mC,MAAZ,EAAqBruC,IAAD,IAAUyvC,IAAI,CAACzvC,IAAD,EAAO8tB,QAAP,CAAlC,CAAJ;AACD;;AACD0hB,EAAAA,oBAAoB,GAAG;AACrB,UAAM3uC,EAAE,GAAG,IAAX;;AACA,QAAI,CAACA,EAAE,CAAC8qC,oBAAR,EAA8B;AAC5B9qC,MAAAA,EAAE,CAAC8qC,oBAAH,GAA0B,EAA1B;AACD;;AACD,UAAMzrC,SAAS,GAAGW,EAAE,CAAC8qC,oBAArB;AACA,UAAM1C,QAAQ,GAAGpoC,EAAE,CAACooC,QAApB;;AACA,UAAMwG,IAAI,GAAG,CAACzvC,IAAD,EAAO8tB,QAAP,KAAoB;AAC/Bmb,MAAAA,QAAQ,CAACpb,gBAAT,CAA0BhtB,EAA1B,EAA8Bb,IAA9B,EAAoC8tB,QAApC;AACA5tB,MAAAA,SAAS,CAACF,IAAD,CAAT,GAAkB8tB,QAAlB;AACD,KAHD;;AAIA,UAAM4hB,OAAO,GAAG,CAAC1vC,IAAD,EAAO8tB,QAAP,KAAoB;AAClC,UAAI5tB,SAAS,CAACF,IAAD,CAAb,EAAqB;AACnBipC,QAAAA,QAAQ,CAAClb,mBAAT,CAA6BltB,EAA7B,EAAiCb,IAAjC,EAAuC8tB,QAAvC;AACA,eAAO5tB,SAAS,CAACF,IAAD,CAAhB;AACD;AACF,KALD;;AAMA,UAAM8tB,QAAQ,GAAG,CAAChT,KAAD,EAAQD,MAAR,KAAmB;AAClC,UAAIha,EAAE,CAAC8sB,MAAP,EAAe;AACb9sB,QAAAA,EAAE,CAAC4F,MAAH,CAAUqU,KAAV,EAAiBD,MAAjB;AACD;AACF,KAJD;;AAKA,QAAI80B,QAAJ;;AACA,UAAM5D,QAAQ,GAAG,MAAM;AACrB2D,MAAAA,OAAO,CAAC,QAAD,EAAW3D,QAAX,CAAP;;AACAlrC,MAAAA,EAAE,CAACkrC,QAAH,GAAc,IAAd;AACAlrC,MAAAA,EAAE,CAAC4F,MAAH;;AACAgpC,MAAAA,IAAI,CAAC,QAAD,EAAW3hB,QAAX,CAAJ;;AACA2hB,MAAAA,IAAI,CAAC,QAAD,EAAWE,QAAX,CAAJ;AACD,KAND;;AAOAA,IAAAA,QAAQ,GAAG,MAAM;AACf9uC,MAAAA,EAAE,CAACkrC,QAAH,GAAc,KAAd;;AACA2D,MAAAA,OAAO,CAAC,QAAD,EAAW5hB,QAAX,CAAP;;AACA2hB,MAAAA,IAAI,CAAC,QAAD,EAAW1D,QAAX,CAAJ;AACD,KAJD;;AAKA,QAAI9C,QAAQ,CAAChb,UAAT,CAAoBptB,EAAE,CAAC8sB,MAAvB,CAAJ,EAAoC;AAClCoe,MAAAA,QAAQ;AACT,KAFD,MAEO;AACL4D,MAAAA,QAAQ;AACT;AACF;;AACDrB,EAAAA,YAAY,GAAG;AACb,UAAMztC,EAAE,GAAG,IAAX;AACA9J,IAAAA,IAAI,CAAC8J,EAAE,CAAC6qC,UAAJ,EAAgB,CAAC5d,QAAD,EAAW9tB,IAAX,KAAoB;AACtCa,MAAAA,EAAE,CAACooC,QAAH,CAAYlb,mBAAZ,CAAgCltB,EAAhC,EAAoCb,IAApC,EAA0C8tB,QAA1C;AACD,KAFG,CAAJ;AAGAjtB,IAAAA,EAAE,CAAC6qC,UAAH,GAAgB,EAAhB;AACA30C,IAAAA,IAAI,CAAC8J,EAAE,CAAC8qC,oBAAJ,EAA0B,CAAC7d,QAAD,EAAW9tB,IAAX,KAAoB;AAChDa,MAAAA,EAAE,CAACooC,QAAH,CAAYlb,mBAAZ,CAAgCltB,EAAhC,EAAoCb,IAApC,EAA0C8tB,QAA1C;AACD,KAFG,CAAJ;AAGAjtB,IAAAA,EAAE,CAAC8qC,oBAAH,GAA0BhsC,SAA1B;AACD;;AACDiwC,EAAAA,gBAAgB,CAACvuC,KAAD,EAAQ4I,IAAR,EAAcyrB,OAAd,EAAuB;AACrC,UAAMma,MAAM,GAAGna,OAAO,GAAG,KAAH,GAAW,QAAjC;AACA,QAAIjrB,IAAJ,EAAUjJ,IAAV,EAAgB9N,CAAhB,EAAmBiW,IAAnB;;AACA,QAAIM,IAAI,KAAK,SAAb,EAAwB;AACtBQ,MAAAA,IAAI,GAAG,KAAKuF,cAAL,CAAoB3O,KAAK,CAAC,CAAD,CAAL,CAAS6I,YAA7B,CAAP;AACAO,MAAAA,IAAI,CAACsB,UAAL,CAAgB,MAAM8jC,MAAN,GAAe,mBAA/B;AACD;;AACD,SAAKn8C,CAAC,GAAG,CAAJ,EAAOiW,IAAI,GAAGtI,KAAK,CAACC,MAAzB,EAAiC5N,CAAC,GAAGiW,IAArC,EAA2C,EAAEjW,CAA7C,EAAgD;AAC9C8N,MAAAA,IAAI,GAAGH,KAAK,CAAC3N,CAAD,CAAZ;AACA,YAAMqY,UAAU,GAAGvK,IAAI,IAAI,KAAKwO,cAAL,CAAoBxO,IAAI,CAAC0I,YAAzB,EAAuC6B,UAAlE;;AACA,UAAIA,UAAJ,EAAgB;AACdA,QAAAA,UAAU,CAAC8jC,MAAM,GAAG,YAAV,CAAV,CAAkCruC,IAAI,CAAC2L,OAAvC,EAAgD3L,IAAI,CAAC0I,YAArD,EAAmE1I,IAAI,CAACoI,KAAxE;AACD;AACF;AACF;;AACDkmC,EAAAA,iBAAiB,GAAG;AAClB,WAAO,KAAKruC,OAAL,IAAgB,EAAvB;AACD;;AACDsuC,EAAAA,iBAAiB,CAACC,cAAD,EAAiB;AAChC,UAAMnvC,EAAE,GAAG,IAAX;AACA,UAAMovC,UAAU,GAAGpvC,EAAE,CAACY,OAAH,IAAc,EAAjC;AACA,UAAMyD,MAAM,GAAG8qC,cAAc,CAAC1uB,GAAf,CAAmB,CAAC;AAACpX,MAAAA,YAAD;AAAeN,MAAAA;AAAf,KAAD,KAA2B;AAC3D,YAAMa,IAAI,GAAG5J,EAAE,CAACmP,cAAH,CAAkB9F,YAAlB,CAAb;;AACA,UAAI,CAACO,IAAL,EAAW;AACT,cAAM,IAAIqb,KAAJ,CAAU,+BAA+B5b,YAAzC,CAAN;AACD;;AACD,aAAO;AACLA,QAAAA,YADK;AAELiD,QAAAA,OAAO,EAAE1C,IAAI,CAACJ,IAAL,CAAUT,KAAV,CAFJ;AAGLA,QAAAA;AAHK,OAAP;AAKD,KAVc,CAAf;AAWA,UAAMsa,OAAO,GAAG,CAAC3oB,cAAc,CAAC2J,MAAD,EAAS+qC,UAAT,CAA/B;;AACA,QAAI/rB,OAAJ,EAAa;AACXrjB,MAAAA,EAAE,CAACY,OAAH,GAAayD,MAAb;;AACArE,MAAAA,EAAE,CAACqvC,kBAAH,CAAsBhrC,MAAtB,EAA8B+qC,UAA9B;AACD;AACF;;AACDjU,EAAAA,aAAa,CAAC+J,IAAD,EAAOrU,IAAP,EAAa9kB,MAAb,EAAqB;AAChC,WAAO,KAAKi/B,QAAL,CAAc/F,MAAd,CAAqB,IAArB,EAA2BC,IAA3B,EAAiCrU,IAAjC,EAAuC9kB,MAAvC,CAAP;AACD;;AACDsjC,EAAAA,kBAAkB,CAAChrC,MAAD,EAAS+qC,UAAT,EAAqBE,MAArB,EAA6B;AAC7C,UAAMtvC,EAAE,GAAG,IAAX;AACA,UAAMuvC,YAAY,GAAGvvC,EAAE,CAAC6G,OAAH,CAAW2oC,KAAhC;;AACA,UAAMhqB,IAAI,GAAG,CAACnzB,CAAD,EAAIU,CAAJ,KAAUV,CAAC,CAAC0Z,MAAF,CAAStW,CAAC,IAAI,CAAC1C,CAAC,CAAC8yC,IAAF,CAAOlwC,CAAC,IAAIF,CAAC,CAAC4T,YAAF,KAAmB1T,CAAC,CAAC0T,YAArB,IAAqC5T,CAAC,CAACsT,KAAF,KAAYpT,CAAC,CAACoT,KAA/D,CAAf,CAAvB;;AACA,UAAM0mC,WAAW,GAAGjqB,IAAI,CAAC4pB,UAAD,EAAa/qC,MAAb,CAAxB;AACA,UAAMqrC,SAAS,GAAGJ,MAAM,GAAGjrC,MAAH,GAAYmhB,IAAI,CAACnhB,MAAD,EAAS+qC,UAAT,CAAxC;;AACA,QAAIK,WAAW,CAAChvC,MAAhB,EAAwB;AACtBT,MAAAA,EAAE,CAAC+uC,gBAAH,CAAoBU,WAApB,EAAiCF,YAAY,CAACnmC,IAA9C,EAAoD,KAApD;AACD;;AACD,QAAIsmC,SAAS,CAACjvC,MAAV,IAAoB8uC,YAAY,CAACnmC,IAArC,EAA2C;AACzCpJ,MAAAA,EAAE,CAAC+uC,gBAAH,CAAoBW,SAApB,EAA+BH,YAAY,CAACnmC,IAA5C,EAAkD,IAAlD;AACD;AACF;;AACDwkC,EAAAA,aAAa,CAACr7C,CAAD,EAAI+8C,MAAJ,EAAY;AACvB,UAAMtvC,EAAE,GAAG,IAAX;AACA,UAAM6wB,IAAI,GAAG;AAACtvB,MAAAA,KAAK,EAAEhP,CAAR;AAAW+8C,MAAAA,MAAX;AAAmBhK,MAAAA,UAAU,EAAE;AAA/B,KAAb;;AACA,UAAMqK,WAAW,GAAItK,MAAD,IAAY,CAACA,MAAM,CAACx+B,OAAP,CAAe2mC,MAAf,IAAyB,KAAK3mC,OAAL,CAAa2mC,MAAvC,EAA+ClkB,QAA/C,CAAwD/2B,CAAC,CAAC4M,IAA1D,CAAhC;;AACA,QAAIa,EAAE,CAACm7B,aAAH,CAAiB,aAAjB,EAAgCtK,IAAhC,EAAsC8e,WAAtC,MAAuD,KAA3D,EAAkE;AAChE;AACD;;AACD,UAAMtsB,OAAO,GAAGrjB,EAAE,CAAC4vC,YAAH,CAAgBr9C,CAAhB,EAAmB+8C,MAAnB,CAAhB;;AACAze,IAAAA,IAAI,CAACyU,UAAL,GAAkB,KAAlB;AACAtlC,IAAAA,EAAE,CAACm7B,aAAH,CAAiB,YAAjB,EAA+BtK,IAA/B,EAAqC8e,WAArC;;AACA,QAAItsB,OAAO,IAAIwN,IAAI,CAACxN,OAApB,EAA6B;AAC3BrjB,MAAAA,EAAE,CAACgsC,MAAH;AACD;;AACD,WAAOhsC,EAAP;AACD;;AACD4vC,EAAAA,YAAY,CAACr9C,CAAD,EAAI+8C,MAAJ,EAAY;AACtB,UAAMtvC,EAAE,GAAG,IAAX;AACA,UAAM;AAACY,MAAAA,OAAO,EAAEwuC,UAAU,GAAG,EAAvB;AAA2BvoC,MAAAA;AAA3B,QAAsC7G,EAA5C;AACA,UAAMuvC,YAAY,GAAG1oC,OAAO,CAAC2oC,KAA7B;AACA,UAAMhoB,gBAAgB,GAAG8nB,MAAzB;AACA,QAAIjrC,MAAM,GAAG,EAAb;AACA,QAAIgf,OAAO,GAAG,KAAd;AACA,QAAIwsB,SAAS,GAAG,IAAhB;;AACA,QAAIt9C,CAAC,CAAC4M,IAAF,KAAW,UAAf,EAA2B;AACzBkF,MAAAA,MAAM,GAAGrE,EAAE,CAACouC,yBAAH,CAA6B77C,CAA7B,EAAgCg9C,YAAY,CAACnmC,IAA7C,EAAmDmmC,YAAnD,EAAiE/nB,gBAAjE,CAAT;AACAqoB,MAAAA,SAAS,GAAGt9C,CAAC,CAAC4M,IAAF,KAAW,OAAX,GAAqBa,EAAE,CAAC4qC,UAAxB,GAAqCr4C,CAAjD;AACD;;AACDyN,IAAAA,EAAE,CAAC4qC,UAAH,GAAgB,IAAhB;;AACA,QAAIh1C,cAAc,CAACrD,CAAD,EAAIyN,EAAE,CAAC0S,SAAP,EAAkB1S,EAAE,CAACynB,WAArB,CAAlB,EAAqD;AACnDnwB,MAAAA,QAAQ,CAACuP,OAAO,CAACipC,OAAT,EAAkB,CAACv9C,CAAD,EAAI8R,MAAJ,EAAYrE,EAAZ,CAAlB,EAAmCA,EAAnC,CAAR;;AACA,UAAIzN,CAAC,CAAC4M,IAAF,KAAW,SAAX,IAAwB5M,CAAC,CAAC4M,IAAF,KAAW,OAAnC,IAA8C5M,CAAC,CAAC4M,IAAF,KAAW,aAA7D,EAA4E;AAC1E7H,QAAAA,QAAQ,CAACuP,OAAO,CAACoa,OAAT,EAAkB,CAAC1uB,CAAD,EAAI8R,MAAJ,EAAYrE,EAAZ,CAAlB,EAAmCA,EAAnC,CAAR;AACD;AACF;;AACDqjB,IAAAA,OAAO,GAAG,CAAC3oB,cAAc,CAAC2J,MAAD,EAAS+qC,UAAT,CAAzB;;AACA,QAAI/rB,OAAO,IAAIisB,MAAf,EAAuB;AACrBtvC,MAAAA,EAAE,CAACY,OAAH,GAAayD,MAAb;;AACArE,MAAAA,EAAE,CAACqvC,kBAAH,CAAsBhrC,MAAtB,EAA8B+qC,UAA9B,EAA0CE,MAA1C;AACD;;AACDtvC,IAAAA,EAAE,CAAC4qC,UAAH,GAAgBiF,SAAhB;AACA,WAAOxsB,OAAP;AACD;;AAvtBS;;AAytBZ,MAAM0sB,iBAAiB,GAAG,MAAM75C,IAAI,CAACm0C,KAAK,CAACF,SAAP,EAAmBnrC,KAAD,IAAWA,KAAK,CAACgsC,QAAN,CAAezF,UAAf,EAA7B,CAApC;;AACA,MAAMyK,UAAU,GAAG,IAAnB;AACA7qC,MAAM,CAAC8qC,gBAAP,CAAwB5F,KAAxB,EAA+B;AAC7Bz3C,EAAAA,QAAQ,EAAE;AACRo9C,IAAAA,UADQ;AAER1oC,IAAAA,KAAK,EAAE1U;AAFC,GADmB;AAK7Bu3C,EAAAA,SAAS,EAAE;AACT6F,IAAAA,UADS;AAET1oC,IAAAA,KAAK,EAAE6iC;AAFE,GALkB;AAS7BrxC,EAAAA,SAAS,EAAE;AACTk3C,IAAAA,UADS;AAET1oC,IAAAA,KAAK,EAAExO;AAFE,GATkB;AAa7B8rC,EAAAA,QAAQ,EAAE;AACRoL,IAAAA,UADQ;AAER1oC,IAAAA,KAAK,EAAEs9B;AAFC,GAbmB;AAiB7B2E,EAAAA,OAAO,EAAE;AACPyG,IAAAA,UADO;AAEP1oC,IAAAA,KAAK,EAAEiiC;AAFA,GAjBoB;AAqB7Ba,EAAAA,QAAQ,EAAE;AACR4F,IAAAA,UADQ;AAER1oC,IAAAA,KAAK,EAAE8iC;AAFC,GArBmB;AAyB7BhI,EAAAA,QAAQ,EAAE;AACR4N,IAAAA,UADQ;AAER1oC,IAAAA,KAAK,EAAE,CAAC,GAAG9G,KAAJ,KAAc;AACnBokC,MAAAA,QAAQ,CAACljC,GAAT,CAAa,GAAGlB,KAAhB;AACAuvC,MAAAA,iBAAiB;AAClB;AALO,GAzBmB;AAgC7BrN,EAAAA,UAAU,EAAE;AACVsN,IAAAA,UADU;AAEV1oC,IAAAA,KAAK,EAAE,CAAC,GAAG9G,KAAJ,KAAc;AACnBokC,MAAAA,QAAQ,CAACziC,MAAT,CAAgB,GAAG3B,KAAnB;AACAuvC,MAAAA,iBAAiB;AAClB;AALS;AAhCiB,CAA/B;;AAyCA,SAASG,OAAT,CAAiBjjC,GAAjB,EAAsBX,OAAtB,EAA+B2Q,QAA/B,EAAyC;AACvC,QAAM;AAACD,IAAAA,UAAD;AAAamzB,IAAAA,WAAb;AAA0B16C,IAAAA,CAA1B;AAA6BE,IAAAA,CAA7B;AAAgCsoB,IAAAA,WAAhC;AAA6CD,IAAAA;AAA7C,MAA4D1R,OAAlE;AACA,MAAI8jC,WAAW,GAAGD,WAAW,GAAGlyB,WAAhC;AACAhR,EAAAA,GAAG,CAACm0B,SAAJ;AACAn0B,EAAAA,GAAG,CAAC2S,GAAJ,CAAQnqB,CAAR,EAAWE,CAAX,EAAcsoB,WAAd,EAA2BjB,UAAU,GAAGozB,WAAxC,EAAqDnzB,QAAQ,GAAGmzB,WAAhE;;AACA,MAAIpyB,WAAW,GAAGmyB,WAAlB,EAA+B;AAC7BC,IAAAA,WAAW,GAAGD,WAAW,GAAGnyB,WAA5B;AACA/Q,IAAAA,GAAG,CAAC2S,GAAJ,CAAQnqB,CAAR,EAAWE,CAAX,EAAcqoB,WAAd,EAA2Bf,QAAQ,GAAGmzB,WAAtC,EAAmDpzB,UAAU,GAAGozB,WAAhE,EAA6E,IAA7E;AACD,GAHD,MAGO;AACLnjC,IAAAA,GAAG,CAAC2S,GAAJ,CAAQnqB,CAAR,EAAWE,CAAX,EAAcw6C,WAAd,EAA2BlzB,QAAQ,GAAGjoB,OAAtC,EAA+CgoB,UAAU,GAAGhoB,OAA5D;AACD;;AACDiY,EAAAA,GAAG,CAACojC,SAAJ;AACApjC,EAAAA,GAAG,CAACsF,IAAJ;AACD;;AACD,SAAS+9B,eAAT,CAAyBhpC,KAAzB,EAAgC;AAC9B,SAAOxM,iBAAiB,CAACwM,KAAD,EAAQ,CAAC,YAAD,EAAe,UAAf,EAA2B,YAA3B,EAAyC,UAAzC,CAAR,CAAxB;AACD;;AACD,SAASipC,mBAAT,CAA6B3wB,GAA7B,EAAkC5B,WAAlC,EAA+CC,WAA/C,EAA4DuyB,UAA5D,EAAwE;AACtE,QAAM37C,CAAC,GAAGy7C,eAAe,CAAC1wB,GAAG,CAAC/Y,OAAJ,CAAY4pC,YAAb,CAAzB;AACA,QAAMC,aAAa,GAAG,CAACzyB,WAAW,GAAGD,WAAf,IAA8B,CAApD;AACA,QAAM2yB,UAAU,GAAG/wC,IAAI,CAACC,GAAL,CAAS6wC,aAAT,EAAwBF,UAAU,GAAGxyB,WAAb,GAA2B,CAAnD,CAAnB;;AACA,QAAM4yB,iBAAiB,GAAIv2B,GAAD,IAAS;AACjC,UAAMw2B,aAAa,GAAG,CAAC5yB,WAAW,GAAGre,IAAI,CAACC,GAAL,CAAS6wC,aAAT,EAAwBr2B,GAAxB,CAAf,IAA+Cm2B,UAA/C,GAA4D,CAAlF;AACA,WAAOl7C,WAAW,CAAC+kB,GAAD,EAAM,CAAN,EAASza,IAAI,CAACC,GAAL,CAAS6wC,aAAT,EAAwBG,aAAxB,CAAT,CAAlB;AACD,GAHD;;AAIA,SAAO;AACLC,IAAAA,UAAU,EAAEF,iBAAiB,CAAC/7C,CAAC,CAACi8C,UAAH,CADxB;AAELC,IAAAA,QAAQ,EAAEH,iBAAiB,CAAC/7C,CAAC,CAACk8C,QAAH,CAFtB;AAGLC,IAAAA,UAAU,EAAE17C,WAAW,CAACT,CAAC,CAACm8C,UAAH,EAAe,CAAf,EAAkBL,UAAlB,CAHlB;AAILM,IAAAA,QAAQ,EAAE37C,WAAW,CAACT,CAAC,CAACo8C,QAAH,EAAa,CAAb,EAAgBN,UAAhB;AAJhB,GAAP;AAMD;;AACD,SAASO,UAAT,CAAoB/+C,CAApB,EAAuBg/C,KAAvB,EAA8B17C,CAA9B,EAAiCE,CAAjC,EAAoC;AAClC,SAAO;AACLF,IAAAA,CAAC,EAAEA,CAAC,GAAGtD,CAAC,GAAGyN,IAAI,CAACud,GAAL,CAASg0B,KAAT,CADN;AAELx7C,IAAAA,CAAC,EAAEA,CAAC,GAAGxD,CAAC,GAAGyN,IAAI,CAACyd,GAAL,CAAS8zB,KAAT;AAFN,GAAP;AAID;;AACD,SAASC,OAAT,CAAiBnkC,GAAjB,EAAsBX,OAAtB,EAA+BmP,MAA/B,EAAuC8C,OAAvC,EAAgDvW,GAAhD,EAAqD;AACnD,QAAM;AAACvS,IAAAA,CAAD;AAAIE,IAAAA,CAAJ;AAAOqnB,IAAAA,UAAU,EAAEld,KAAnB;AAA0BqwC,IAAAA,WAA1B;AAAuCnyB,IAAAA,WAAW,EAAEqzB;AAApD,MAA8D/kC,OAApE;AACA,QAAM2R,WAAW,GAAGre,IAAI,CAACmC,GAAL,CAASuK,OAAO,CAAC2R,WAAR,GAAsBM,OAAtB,GAAgC9C,MAAhC,GAAyC00B,WAAlD,EAA+D,CAA/D,CAApB;AACA,QAAMnyB,WAAW,GAAGqzB,MAAM,GAAG,CAAT,GAAaA,MAAM,GAAG9yB,OAAT,GAAmB9C,MAAnB,GAA4B00B,WAAzC,GAAuD,CAA3E;AACA,MAAImB,aAAa,GAAG,CAApB;AACA,QAAMC,KAAK,GAAGvpC,GAAG,GAAGlI,KAApB;;AACA,MAAIye,OAAJ,EAAa;AACX,UAAMizB,oBAAoB,GAAGH,MAAM,GAAG,CAAT,GAAaA,MAAM,GAAG9yB,OAAtB,GAAgC,CAA7D;AACA,UAAMkzB,oBAAoB,GAAGxzB,WAAW,GAAG,CAAd,GAAkBA,WAAW,GAAGM,OAAhC,GAA0C,CAAvE;AACA,UAAMmzB,kBAAkB,GAAG,CAACF,oBAAoB,GAAGC,oBAAxB,IAAgD,CAA3E;AACA,UAAME,aAAa,GAAGD,kBAAkB,KAAK,CAAvB,GAA4BH,KAAK,GAAGG,kBAAT,IAAgCA,kBAAkB,GAAGnzB,OAArD,CAA3B,GAA2FgzB,KAAjH;AACAD,IAAAA,aAAa,GAAG,CAACC,KAAK,GAAGI,aAAT,IAA0B,CAA1C;AACD;;AACD,QAAMC,IAAI,GAAGhyC,IAAI,CAACmC,GAAL,CAAS,KAAT,EAAgBwvC,KAAK,GAAGtzB,WAAR,GAAsBxC,MAAM,GAAGvmB,EAA/C,IAAqD+oB,WAAlE;AACA,QAAM4zB,WAAW,GAAG,CAACN,KAAK,GAAGK,IAAT,IAAiB,CAArC;AACA,QAAM50B,UAAU,GAAGld,KAAK,GAAG+xC,WAAR,GAAsBP,aAAzC;AACA,QAAMr0B,QAAQ,GAAGjV,GAAG,GAAG6pC,WAAN,GAAoBP,aAArC;AACA,QAAM;AAACR,IAAAA,UAAD;AAAaC,IAAAA,QAAb;AAAuBC,IAAAA,UAAvB;AAAmCC,IAAAA;AAAnC,MAA+CV,mBAAmB,CAACjkC,OAAD,EAAU0R,WAAV,EAAuBC,WAAvB,EAAoChB,QAAQ,GAAGD,UAA/C,CAAxE;AACA,QAAM80B,wBAAwB,GAAG7zB,WAAW,GAAG6yB,UAA/C;AACA,QAAMiB,sBAAsB,GAAG9zB,WAAW,GAAG8yB,QAA7C;AACA,QAAMiB,uBAAuB,GAAGh1B,UAAU,GAAG8zB,UAAU,GAAGgB,wBAA1D;AACA,QAAMG,qBAAqB,GAAGh1B,QAAQ,GAAG8zB,QAAQ,GAAGgB,sBAApD;AACA,QAAMG,wBAAwB,GAAGl0B,WAAW,GAAGgzB,UAA/C;AACA,QAAMmB,sBAAsB,GAAGn0B,WAAW,GAAGizB,QAA7C;AACA,QAAMmB,uBAAuB,GAAGp1B,UAAU,GAAGg0B,UAAU,GAAGkB,wBAA1D;AACA,QAAMG,qBAAqB,GAAGp1B,QAAQ,GAAGg0B,QAAQ,GAAGkB,sBAApD;AACAllC,EAAAA,GAAG,CAACm0B,SAAJ;AACAn0B,EAAAA,GAAG,CAAC2S,GAAJ,CAAQnqB,CAAR,EAAWE,CAAX,EAAcsoB,WAAd,EAA2B+zB,uBAA3B,EAAoDC,qBAApD;;AACA,MAAIlB,QAAQ,GAAG,CAAf,EAAkB;AAChB,UAAMuB,OAAO,GAAGpB,UAAU,CAACa,sBAAD,EAAyBE,qBAAzB,EAAgDx8C,CAAhD,EAAmDE,CAAnD,CAA1B;AACAsX,IAAAA,GAAG,CAAC2S,GAAJ,CAAQ0yB,OAAO,CAAC78C,CAAhB,EAAmB68C,OAAO,CAAC38C,CAA3B,EAA8Bo7C,QAA9B,EAAwCkB,qBAAxC,EAA+Dh1B,QAAQ,GAAGjoB,OAA1E;AACD;;AACD,QAAMu9C,EAAE,GAAGrB,UAAU,CAACiB,sBAAD,EAAyBl1B,QAAzB,EAAmCxnB,CAAnC,EAAsCE,CAAtC,CAArB;AACAsX,EAAAA,GAAG,CAACq0B,MAAJ,CAAWiR,EAAE,CAAC98C,CAAd,EAAiB88C,EAAE,CAAC58C,CAApB;;AACA,MAAIs7C,QAAQ,GAAG,CAAf,EAAkB;AAChB,UAAMqB,OAAO,GAAGpB,UAAU,CAACiB,sBAAD,EAAyBE,qBAAzB,EAAgD58C,CAAhD,EAAmDE,CAAnD,CAA1B;AACAsX,IAAAA,GAAG,CAAC2S,GAAJ,CAAQ0yB,OAAO,CAAC78C,CAAhB,EAAmB68C,OAAO,CAAC38C,CAA3B,EAA8Bs7C,QAA9B,EAAwCh0B,QAAQ,GAAGjoB,OAAnD,EAA4Dq9C,qBAAqB,GAAGzyC,IAAI,CAAC1K,EAAzF;AACD;;AACD+X,EAAAA,GAAG,CAAC2S,GAAJ,CAAQnqB,CAAR,EAAWE,CAAX,EAAcqoB,WAAd,EAA2Bf,QAAQ,GAAIg0B,QAAQ,GAAGjzB,WAAlD,EAAgEhB,UAAU,GAAIg0B,UAAU,GAAGhzB,WAA3F,EAAyG,IAAzG;;AACA,MAAIgzB,UAAU,GAAG,CAAjB,EAAoB;AAClB,UAAMsB,OAAO,GAAGpB,UAAU,CAACgB,wBAAD,EAA2BE,uBAA3B,EAAoD38C,CAApD,EAAuDE,CAAvD,CAA1B;AACAsX,IAAAA,GAAG,CAAC2S,GAAJ,CAAQ0yB,OAAO,CAAC78C,CAAhB,EAAmB68C,OAAO,CAAC38C,CAA3B,EAA8Bq7C,UAA9B,EAA0CoB,uBAAuB,GAAGxyC,IAAI,CAAC1K,EAAzE,EAA6E8nB,UAAU,GAAGhoB,OAA1F;AACD;;AACD,QAAMw9C,EAAE,GAAGtB,UAAU,CAACY,wBAAD,EAA2B90B,UAA3B,EAAuCvnB,CAAvC,EAA0CE,CAA1C,CAArB;AACAsX,EAAAA,GAAG,CAACq0B,MAAJ,CAAWkR,EAAE,CAAC/8C,CAAd,EAAiB+8C,EAAE,CAAC78C,CAApB;;AACA,MAAIm7C,UAAU,GAAG,CAAjB,EAAoB;AAClB,UAAMwB,OAAO,GAAGpB,UAAU,CAACY,wBAAD,EAA2BE,uBAA3B,EAAoDv8C,CAApD,EAAuDE,CAAvD,CAA1B;AACAsX,IAAAA,GAAG,CAAC2S,GAAJ,CAAQ0yB,OAAO,CAAC78C,CAAhB,EAAmB68C,OAAO,CAAC38C,CAA3B,EAA8Bm7C,UAA9B,EAA0C9zB,UAAU,GAAGhoB,OAAvD,EAAgEg9C,uBAAhE;AACD;;AACD/kC,EAAAA,GAAG,CAACojC,SAAJ;AACD;;AACD,SAASoC,OAAT,CAAiBxlC,GAAjB,EAAsBX,OAAtB,EAA+BmP,MAA/B,EAAuC8C,OAAvC,EAAgD;AAC9C,QAAM;AAACm0B,IAAAA,WAAD;AAAc11B,IAAAA,UAAd;AAA0BN,IAAAA;AAA1B,MAA2CpQ,OAAjD;AACA,MAAI2Q,QAAQ,GAAG3Q,OAAO,CAAC2Q,QAAvB;;AACA,MAAIy1B,WAAJ,EAAiB;AACftB,IAAAA,OAAO,CAACnkC,GAAD,EAAMX,OAAN,EAAemP,MAAf,EAAuB8C,OAAvB,EAAgCvB,UAAU,GAAGtoB,GAA7C,CAAP;;AACA,SAAK,IAAI7B,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG6/C,WAApB,EAAiC,EAAE7/C,CAAnC,EAAsC;AACpCoa,MAAAA,GAAG,CAAC2X,IAAJ;AACD;;AACD,QAAI,CAACtK,KAAK,CAACoC,aAAD,CAAV,EAA2B;AACzBO,MAAAA,QAAQ,GAAGD,UAAU,GAAGN,aAAa,GAAGhoB,GAAxC;;AACA,UAAIgoB,aAAa,GAAGhoB,GAAhB,KAAwB,CAA5B,EAA+B;AAC7BuoB,QAAAA,QAAQ,IAAIvoB,GAAZ;AACD;AACF;AACF;;AACD08C,EAAAA,OAAO,CAACnkC,GAAD,EAAMX,OAAN,EAAemP,MAAf,EAAuB8C,OAAvB,EAAgCtB,QAAhC,CAAP;AACAhQ,EAAAA,GAAG,CAAC2X,IAAJ;AACA,SAAO3H,QAAP;AACD;;AACD,SAAS01B,qBAAT,CAA+B1lC,GAA/B,EAAoCX,OAApC,EAA6CsmC,KAA7C,EAAoD;AAClD,QAAM;AAACn9C,IAAAA,CAAD;AAAIE,IAAAA,CAAJ;AAAOqnB,IAAAA,UAAP;AAAmBmzB,IAAAA,WAAnB;AAAgCuC,IAAAA;AAAhC,MAA+CpmC,OAArD;AACA,QAAM2R,WAAW,GAAGre,IAAI,CAACmC,GAAL,CAASuK,OAAO,CAAC2R,WAAR,GAAsBkyB,WAA/B,EAA4C,CAA5C,CAApB;AACA,QAAMnyB,WAAW,GAAG1R,OAAO,CAAC0R,WAAR,GAAsBmyB,WAA1C;AACA,MAAIt9C,CAAJ;;AACA,MAAI+/C,KAAJ,EAAW;AACT1C,IAAAA,OAAO,CAACjjC,GAAD,EAAMX,OAAN,EAAe0Q,UAAU,GAAGtoB,GAA5B,CAAP;AACD;;AACDuY,EAAAA,GAAG,CAACm0B,SAAJ;AACAn0B,EAAAA,GAAG,CAAC2S,GAAJ,CAAQnqB,CAAR,EAAWE,CAAX,EAAcqoB,WAAd,EAA2BhB,UAAU,GAAGtoB,GAAxC,EAA6CsoB,UAA7C,EAAyD,IAAzD;;AACA,OAAKnqB,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAG6/C,WAAhB,EAA6B,EAAE7/C,CAA/B,EAAkC;AAChCoa,IAAAA,GAAG,CAACs0B,MAAJ;AACD;;AACDt0B,EAAAA,GAAG,CAACm0B,SAAJ;AACAn0B,EAAAA,GAAG,CAAC2S,GAAJ,CAAQnqB,CAAR,EAAWE,CAAX,EAAcsoB,WAAd,EAA2BjB,UAA3B,EAAuCA,UAAU,GAAGtoB,GAApD;;AACA,OAAK7B,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAG6/C,WAAhB,EAA6B,EAAE7/C,CAA/B,EAAkC;AAChCoa,IAAAA,GAAG,CAACs0B,MAAJ;AACD;AACF;;AACD,SAASxO,UAAT,CAAoB9lB,GAApB,EAAyBX,OAAzB,EAAkCmP,MAAlC,EAA0C8C,OAA1C,EAAmDtB,QAAnD,EAA6D;AAC3D,QAAM;AAACpW,IAAAA;AAAD,MAAYyF,OAAlB;AACA,QAAMsmC,KAAK,GAAG/rC,OAAO,CAACkZ,WAAR,KAAwB,OAAtC;;AACA,MAAI,CAAClZ,OAAO,CAACmZ,WAAb,EAA0B;AACxB;AACD;;AACD,MAAI4yB,KAAJ,EAAW;AACT3lC,IAAAA,GAAG,CAAC+T,SAAJ,GAAgBna,OAAO,CAACmZ,WAAR,GAAsB,CAAtC;AACA/S,IAAAA,GAAG,CAAC4lC,QAAJ,GAAe,OAAf;AACD,GAHD,MAGO;AACL5lC,IAAAA,GAAG,CAAC+T,SAAJ,GAAgBna,OAAO,CAACmZ,WAAxB;AACA/S,IAAAA,GAAG,CAAC4lC,QAAJ,GAAe,OAAf;AACD;;AACD,MAAIvmC,OAAO,CAAComC,WAAZ,EAAyB;AACvBC,IAAAA,qBAAqB,CAAC1lC,GAAD,EAAMX,OAAN,EAAesmC,KAAf,CAArB;AACD;;AACD,MAAIA,KAAJ,EAAW;AACT1C,IAAAA,OAAO,CAACjjC,GAAD,EAAMX,OAAN,EAAe2Q,QAAf,CAAP;AACD;;AACDm0B,EAAAA,OAAO,CAACnkC,GAAD,EAAMX,OAAN,EAAemP,MAAf,EAAuB8C,OAAvB,EAAgCtB,QAAhC,CAAP;AACAhQ,EAAAA,GAAG,CAACs0B,MAAJ;AACD;;AACD,MAAMuR,UAAN,SAAyBrhB,OAAzB,CAAiC;AAC/BjzB,EAAAA,WAAW,CAAC2E,GAAD,EAAM;AACf;AACA,SAAK0D,OAAL,GAAe/H,SAAf;AACA,SAAK4d,aAAL,GAAqB5d,SAArB;AACA,SAAKke,UAAL,GAAkBle,SAAlB;AACA,SAAKme,QAAL,GAAgBne,SAAhB;AACA,SAAKkf,WAAL,GAAmBlf,SAAnB;AACA,SAAKmf,WAAL,GAAmBnf,SAAnB;AACA,SAAKqxC,WAAL,GAAmB,CAAnB;AACA,SAAKuC,WAAL,GAAmB,CAAnB;;AACA,QAAIvvC,GAAJ,EAAS;AACPgC,MAAAA,MAAM,CAACqC,MAAP,CAAc,IAAd,EAAoBrE,GAApB;AACD;AACF;;AACDwkB,EAAAA,OAAO,CAACorB,MAAD,EAASC,MAAT,EAAiBxrB,gBAAjB,EAAmC;AACxC,UAAMzL,KAAK,GAAG,KAAK4V,QAAL,CAAc,CAAC,GAAD,EAAM,GAAN,CAAd,EAA0BnK,gBAA1B,CAAd;AACA,UAAM;AAAC/J,MAAAA,KAAD;AAAQuK,MAAAA;AAAR,QAAoBptB,iBAAiB,CAACmhB,KAAD,EAAQ;AAACtmB,MAAAA,CAAC,EAAEs9C,MAAJ;AAAYp9C,MAAAA,CAAC,EAAEq9C;AAAf,KAAR,CAA3C;AACA,UAAM;AAACh2B,MAAAA,UAAD;AAAaC,MAAAA,QAAb;AAAuBe,MAAAA,WAAvB;AAAoCC,MAAAA,WAApC;AAAiDvB,MAAAA;AAAjD,QAAkE,KAAKiV,QAAL,CAAc,CACpF,YADoF,EAEpF,UAFoF,EAGpF,aAHoF,EAIpF,aAJoF,EAKpF,eALoF,CAAd,EAMrEnK,gBANqE,CAAxE;AAOA,UAAMyrB,OAAO,GAAG,KAAKpsC,OAAL,CAAa0X,OAAb,GAAuB,CAAvC;;AACA,UAAM20B,aAAa,GAAGx2B,aAAa,IAAIhoB,GAAjB,IAAwBI,aAAa,CAAC2oB,KAAD,EAAQT,UAAR,EAAoBC,QAApB,CAA3D;;AACA,UAAMk2B,YAAY,GAAInrB,QAAQ,IAAIhK,WAAW,GAAGi1B,OAA1B,IAAqCjrB,QAAQ,IAAI/J,WAAW,GAAGg1B,OAArF;AACA,WAAQC,aAAa,IAAIC,YAAzB;AACD;;AACDprB,EAAAA,cAAc,CAACP,gBAAD,EAAmB;AAC/B,UAAM;AAAC/xB,MAAAA,CAAD;AAAIE,MAAAA,CAAJ;AAAOqnB,MAAAA,UAAP;AAAmBC,MAAAA,QAAnB;AAA6Be,MAAAA,WAA7B;AAA0CC,MAAAA;AAA1C,QAAyD,KAAK0T,QAAL,CAAc,CAC3E,GAD2E,EAE3E,GAF2E,EAG3E,YAH2E,EAI3E,UAJ2E,EAK3E,aAL2E,EAM3E,aAN2E,EAO3E,eAP2E,CAAd,EAQ5DnK,gBAR4D,CAA/D;AASA,UAAM;AAAC/L,MAAAA,MAAD;AAAS8C,MAAAA;AAAT,QAAoB,KAAK1X,OAA/B;AACA,UAAMusC,SAAS,GAAG,CAACp2B,UAAU,GAAGC,QAAd,IAA0B,CAA5C;AACA,UAAMo2B,UAAU,GAAG,CAACr1B,WAAW,GAAGC,WAAd,GAA4BM,OAA5B,GAAsC9C,MAAvC,IAAiD,CAApE;AACA,WAAO;AACLhmB,MAAAA,CAAC,EAAEA,CAAC,GAAGmK,IAAI,CAACud,GAAL,CAASi2B,SAAT,IAAsBC,UADxB;AAEL19C,MAAAA,CAAC,EAAEA,CAAC,GAAGiK,IAAI,CAACyd,GAAL,CAAS+1B,SAAT,IAAsBC;AAFxB,KAAP;AAID;;AACD3hB,EAAAA,eAAe,CAAClK,gBAAD,EAAmB;AAChC,WAAO,KAAKO,cAAL,CAAoBP,gBAApB,CAAP;AACD;;AACD9mB,EAAAA,IAAI,CAACuM,GAAD,EAAM;AACR,UAAMjN,EAAE,GAAG,IAAX;AACA,UAAM;AAAC6G,MAAAA,OAAD;AAAU6V,MAAAA;AAAV,QAA2B1c,EAAjC;AACA,UAAMyb,MAAM,GAAG,CAAC5U,OAAO,CAAC4U,MAAR,IAAkB,CAAnB,IAAwB,CAAvC;AACA,UAAM8C,OAAO,GAAG,CAAC1X,OAAO,CAAC0X,OAAR,IAAmB,CAApB,IAAyB,CAAzC;AACAve,IAAAA,EAAE,CAACmwC,WAAH,GAAkBtpC,OAAO,CAACkZ,WAAR,KAAwB,OAAzB,GAAoC,IAApC,GAA2C,CAA5D;AACA/f,IAAAA,EAAE,CAAC0yC,WAAH,GAAiBh2B,aAAa,GAAGhoB,GAAhB,GAAsBkL,IAAI,CAACgE,KAAL,CAAW8Y,aAAa,GAAGhoB,GAA3B,CAAtB,GAAwD,CAAzE;;AACA,QAAIgoB,aAAa,KAAK,CAAlB,IAAuB1c,EAAE,CAACge,WAAH,GAAiB,CAAxC,IAA6Che,EAAE,CAACie,WAAH,GAAiB,CAAlE,EAAqE;AACnE;AACD;;AACDhR,IAAAA,GAAG,CAACyzB,IAAJ;AACA,QAAI4S,YAAY,GAAG,CAAnB;;AACA,QAAI73B,MAAJ,EAAY;AACV63B,MAAAA,YAAY,GAAG73B,MAAM,GAAG,CAAxB;AACA,YAAM23B,SAAS,GAAG,CAACpzC,EAAE,CAACgd,UAAH,GAAgBhd,EAAE,CAACid,QAApB,IAAgC,CAAlD;AACAhQ,MAAAA,GAAG,CAACsmC,SAAJ,CAAc3zC,IAAI,CAACud,GAAL,CAASi2B,SAAT,IAAsBE,YAApC,EAAkD1zC,IAAI,CAACyd,GAAL,CAAS+1B,SAAT,IAAsBE,YAAxE;;AACA,UAAItzC,EAAE,CAAC0c,aAAH,IAAoBxnB,EAAxB,EAA4B;AAC1Bo+C,QAAAA,YAAY,GAAG73B,MAAf;AACD;AACF;;AACDxO,IAAAA,GAAG,CAAC2T,SAAJ,GAAgB/Z,OAAO,CAACga,eAAxB;AACA5T,IAAAA,GAAG,CAAC6T,WAAJ,GAAkBja,OAAO,CAACka,WAA1B;AACA,UAAM9D,QAAQ,GAAGw1B,OAAO,CAACxlC,GAAD,EAAMjN,EAAN,EAAUszC,YAAV,EAAwB/0B,OAAxB,CAAxB;AACAwU,IAAAA,UAAU,CAAC9lB,GAAD,EAAMjN,EAAN,EAAUszC,YAAV,EAAwB/0B,OAAxB,EAAiCtB,QAAjC,CAAV;AACAhQ,IAAAA,GAAG,CAAC2zB,OAAJ;AACD;;AA5E8B;;AA8EjCkS,UAAU,CAAC7oC,EAAX,GAAgB,KAAhB;AACA6oC,UAAU,CAAClgD,QAAX,GAAsB;AACpBmtB,EAAAA,WAAW,EAAE,QADO;AAEpBgB,EAAAA,WAAW,EAAE,MAFO;AAGpB0vB,EAAAA,YAAY,EAAE,CAHM;AAIpBzwB,EAAAA,WAAW,EAAE,CAJO;AAKpBvE,EAAAA,MAAM,EAAE,CALY;AAMpB8C,EAAAA,OAAO,EAAE,CANW;AAOpBd,EAAAA,KAAK,EAAE3e;AAPa,CAAtB;AASAg0C,UAAU,CAAC/gB,aAAX,GAA2B;AACzBlR,EAAAA,eAAe,EAAE;AADQ,CAA3B;;AAIA,SAAS2yB,QAAT,CAAkBvmC,GAAlB,EAAuBpG,OAAvB,EAAgC6Z,KAAK,GAAG7Z,OAAxC,EAAiD;AAC/CoG,EAAAA,GAAG,CAACwmC,OAAJ,GAAcvgD,cAAc,CAACwtB,KAAK,CAACgzB,cAAP,EAAuB7sC,OAAO,CAAC6sC,cAA/B,CAA5B;AACAzmC,EAAAA,GAAG,CAACi0B,WAAJ,CAAgBhuC,cAAc,CAACwtB,KAAK,CAAC2S,UAAP,EAAmBxsB,OAAO,CAACwsB,UAA3B,CAA9B;AACApmB,EAAAA,GAAG,CAACk0B,cAAJ,GAAqBjuC,cAAc,CAACwtB,KAAK,CAAC4S,gBAAP,EAAyBzsB,OAAO,CAACysB,gBAAjC,CAAnC;AACArmB,EAAAA,GAAG,CAAC4lC,QAAJ,GAAe3/C,cAAc,CAACwtB,KAAK,CAACizB,eAAP,EAAwB9sC,OAAO,CAAC8sC,eAAhC,CAA7B;AACA1mC,EAAAA,GAAG,CAAC+T,SAAJ,GAAgB9tB,cAAc,CAACwtB,KAAK,CAACV,WAAP,EAAoBnZ,OAAO,CAACmZ,WAA5B,CAA9B;AACA/S,EAAAA,GAAG,CAAC6T,WAAJ,GAAkB5tB,cAAc,CAACwtB,KAAK,CAACK,WAAP,EAAoBla,OAAO,CAACka,WAA5B,CAAhC;AACD;;AACD,SAASugB,MAAT,CAAgBr0B,GAAhB,EAAqB2mC,QAArB,EAA+BxwC,MAA/B,EAAuC;AACrC6J,EAAAA,GAAG,CAACq0B,MAAJ,CAAWl+B,MAAM,CAAC3N,CAAlB,EAAqB2N,MAAM,CAACzN,CAA5B;AACD;;AACD,SAASk+C,aAAT,CAAuBhtC,OAAvB,EAAgC;AAC9B,MAAIA,OAAO,CAACitC,OAAZ,EAAqB;AACnB,WAAOl4C,cAAP;AACD;;AACD,MAAIiL,OAAO,CAACktC,OAAR,IAAmBltC,OAAO,CAACmtC,sBAAR,KAAmC,UAA1D,EAAsE;AACpE,WAAOl4C,cAAP;AACD;;AACD,SAAOwlC,MAAP;AACD;;AACD,SAAS2S,QAAT,CAAkBn4B,MAAlB,EAA0BmG,OAA1B,EAAmCyH,MAAM,GAAG,EAA5C,EAAgD;AAC9C,QAAMlZ,KAAK,GAAGsL,MAAM,CAACrb,MAArB;AACA,QAAM;AAACX,IAAAA,KAAK,EAAEo0C,WAAW,GAAG,CAAtB;AAAyBlsC,IAAAA,GAAG,EAAEmsC,SAAS,GAAG3jC,KAAK,GAAG;AAAlD,MAAuDkZ,MAA7D;AACA,QAAM;AAAC5pB,IAAAA,KAAK,EAAEs0C,YAAR;AAAsBpsC,IAAAA,GAAG,EAAEqsC;AAA3B,MAAyCpyB,OAA/C;AACA,QAAMniB,KAAK,GAAGF,IAAI,CAACmC,GAAL,CAASmyC,WAAT,EAAsBE,YAAtB,CAAd;AACA,QAAMpsC,GAAG,GAAGpI,IAAI,CAACC,GAAL,CAASs0C,SAAT,EAAoBE,UAApB,CAAZ;AACA,QAAMC,OAAO,GAAGJ,WAAW,GAAGE,YAAd,IAA8BD,SAAS,GAAGC,YAA1C,IAA0DF,WAAW,GAAGG,UAAd,IAA4BF,SAAS,GAAGE,UAAlH;AACA,SAAO;AACL7jC,IAAAA,KADK;AAEL1Q,IAAAA,KAFK;AAGLiE,IAAAA,IAAI,EAAEke,OAAO,CAACle,IAHT;AAIL+E,IAAAA,IAAI,EAAEd,GAAG,GAAGlI,KAAN,IAAe,CAACw0C,OAAhB,GAA0B9jC,KAAK,GAAGxI,GAAR,GAAclI,KAAxC,GAAgDkI,GAAG,GAAGlI;AAJvD,GAAP;AAMD;;AACD,SAASy0C,WAAT,CAAqBtnC,GAArB,EAA0BwU,IAA1B,EAAgCQ,OAAhC,EAAyCyH,MAAzC,EAAiD;AAC/C,QAAM;AAAC5N,IAAAA,MAAD;AAASjV,IAAAA;AAAT,MAAoB4a,IAA1B;AACA,QAAM;AAACjR,IAAAA,KAAD;AAAQ1Q,IAAAA,KAAR;AAAeiE,IAAAA,IAAf;AAAqB+E,IAAAA;AAArB,MAA6BmrC,QAAQ,CAACn4B,MAAD,EAASmG,OAAT,EAAkByH,MAAlB,CAA3C;AACA,QAAM8qB,UAAU,GAAGX,aAAa,CAAChtC,OAAD,CAAhC;AACA,MAAI;AAACmO,IAAAA,IAAI,GAAG,IAAR;AAAcjN,IAAAA;AAAd,MAAyB2hB,MAAM,IAAI,EAAvC;AACA,MAAI72B,CAAJ,EAAOkpB,KAAP,EAAcpL,IAAd;;AACA,OAAK9d,CAAC,GAAG,CAAT,EAAYA,CAAC,IAAIiW,IAAjB,EAAuB,EAAEjW,CAAzB,EAA4B;AAC1BkpB,IAAAA,KAAK,GAAGD,MAAM,CAAC,CAAChc,KAAK,IAAIiI,OAAO,GAAGe,IAAI,GAAGjW,CAAV,GAAcA,CAAzB,CAAN,IAAqC2d,KAAtC,CAAd;;AACA,QAAIuL,KAAK,CAACI,IAAV,EAAgB;AACd;AACD,KAFD,MAEO,IAAInH,IAAJ,EAAU;AACf/H,MAAAA,GAAG,CAACo0B,MAAJ,CAAWtlB,KAAK,CAACtmB,CAAjB,EAAoBsmB,KAAK,CAACpmB,CAA1B;AACAqf,MAAAA,IAAI,GAAG,KAAP;AACD,KAHM,MAGA;AACLw/B,MAAAA,UAAU,CAACvnC,GAAD,EAAM0D,IAAN,EAAYoL,KAAZ,EAAmBhU,OAAnB,EAA4BlB,OAAO,CAACitC,OAApC,CAAV;AACD;;AACDnjC,IAAAA,IAAI,GAAGoL,KAAP;AACD;;AACD,MAAIhY,IAAJ,EAAU;AACRgY,IAAAA,KAAK,GAAGD,MAAM,CAAC,CAAChc,KAAK,IAAIiI,OAAO,GAAGe,IAAH,GAAU,CAArB,CAAN,IAAiC0H,KAAlC,CAAd;AACAgkC,IAAAA,UAAU,CAACvnC,GAAD,EAAM0D,IAAN,EAAYoL,KAAZ,EAAmBhU,OAAnB,EAA4BlB,OAAO,CAACitC,OAApC,CAAV;AACD;;AACD,SAAO,CAAC,CAAC/vC,IAAT;AACD;;AACD,SAAS0wC,eAAT,CAAyBxnC,GAAzB,EAA8BwU,IAA9B,EAAoCQ,OAApC,EAA6CyH,MAA7C,EAAqD;AACnD,QAAM5N,MAAM,GAAG2F,IAAI,CAAC3F,MAApB;AACA,QAAM;AAACtL,IAAAA,KAAD;AAAQ1Q,IAAAA,KAAR;AAAegJ,IAAAA;AAAf,MAAuBmrC,QAAQ,CAACn4B,MAAD,EAASmG,OAAT,EAAkByH,MAAlB,CAArC;AACA,QAAM;AAAC1U,IAAAA,IAAI,GAAG,IAAR;AAAcjN,IAAAA;AAAd,MAAyB2hB,MAAM,IAAI,EAAzC;AACA,MAAIgrB,IAAI,GAAG,CAAX;AACA,MAAIC,MAAM,GAAG,CAAb;AACA,MAAI9hD,CAAJ,EAAOkpB,KAAP,EAAc64B,KAAd,EAAqB92B,IAArB,EAA2BF,IAA3B,EAAiCi3B,KAAjC;;AACA,QAAMC,UAAU,GAAI/rC,KAAD,IAAW,CAACjJ,KAAK,IAAIiI,OAAO,GAAGe,IAAI,GAAGC,KAAV,GAAkBA,KAA7B,CAAN,IAA6CyH,KAA3E;;AACA,QAAMukC,KAAK,GAAG,MAAM;AAClB,QAAIj3B,IAAI,KAAKF,IAAb,EAAmB;AACjB3Q,MAAAA,GAAG,CAACq0B,MAAJ,CAAWoT,IAAX,EAAiB92B,IAAjB;AACA3Q,MAAAA,GAAG,CAACq0B,MAAJ,CAAWoT,IAAX,EAAiB52B,IAAjB;AACA7Q,MAAAA,GAAG,CAACq0B,MAAJ,CAAWoT,IAAX,EAAiBG,KAAjB;AACD;AACF,GAND;;AAOA,MAAI7/B,IAAJ,EAAU;AACR+G,IAAAA,KAAK,GAAGD,MAAM,CAACg5B,UAAU,CAAC,CAAD,CAAX,CAAd;AACA7nC,IAAAA,GAAG,CAACo0B,MAAJ,CAAWtlB,KAAK,CAACtmB,CAAjB,EAAoBsmB,KAAK,CAACpmB,CAA1B;AACD;;AACD,OAAK9C,CAAC,GAAG,CAAT,EAAYA,CAAC,IAAIiW,IAAjB,EAAuB,EAAEjW,CAAzB,EAA4B;AAC1BkpB,IAAAA,KAAK,GAAGD,MAAM,CAACg5B,UAAU,CAACjiD,CAAD,CAAX,CAAd;;AACA,QAAIkpB,KAAK,CAACI,IAAV,EAAgB;AACd;AACD;;AACD,UAAM1mB,CAAC,GAAGsmB,KAAK,CAACtmB,CAAhB;AACA,UAAME,CAAC,GAAGomB,KAAK,CAACpmB,CAAhB;AACA,UAAMq/C,MAAM,GAAGv/C,CAAC,GAAG,CAAnB;;AACA,QAAIu/C,MAAM,KAAKJ,KAAf,EAAsB;AACpB,UAAIj/C,CAAC,GAAGmoB,IAAR,EAAc;AACZA,QAAAA,IAAI,GAAGnoB,CAAP;AACD,OAFD,MAEO,IAAIA,CAAC,GAAGioB,IAAR,EAAc;AACnBA,QAAAA,IAAI,GAAGjoB,CAAP;AACD;;AACD++C,MAAAA,IAAI,GAAG,CAACC,MAAM,GAAGD,IAAT,GAAgBj/C,CAAjB,IAAsB,EAAEk/C,MAA/B;AACD,KAPD,MAOO;AACLI,MAAAA,KAAK;AACL9nC,MAAAA,GAAG,CAACq0B,MAAJ,CAAW7rC,CAAX,EAAcE,CAAd;AACAi/C,MAAAA,KAAK,GAAGI,MAAR;AACAL,MAAAA,MAAM,GAAG,CAAT;AACA72B,MAAAA,IAAI,GAAGF,IAAI,GAAGjoB,CAAd;AACD;;AACDk/C,IAAAA,KAAK,GAAGl/C,CAAR;AACD;;AACDo/C,EAAAA,KAAK;AACN;;AACD,SAASE,iBAAT,CAA2BxzB,IAA3B,EAAiC;AAC/B,QAAM3Z,IAAI,GAAG2Z,IAAI,CAAC5a,OAAlB;AACA,QAAMwsB,UAAU,GAAGvrB,IAAI,CAACurB,UAAL,IAAmBvrB,IAAI,CAACurB,UAAL,CAAgB5yB,MAAtD;AACA,QAAMy0C,WAAW,GAAG,CAACzzB,IAAI,CAACM,UAAN,IAAoB,CAACN,IAAI,CAAC3d,KAA1B,IAAmC,CAACgE,IAAI,CAACisC,OAAzC,IAAoDjsC,IAAI,CAACksC,sBAAL,KAAgC,UAApF,IAAkG,CAAClsC,IAAI,CAACgsC,OAAxG,IAAmH,CAACzgB,UAAxI;AACA,SAAO6hB,WAAW,GAAGT,eAAH,GAAqBF,WAAvC;AACD;;AACD,SAASY,uBAAT,CAAiCtuC,OAAjC,EAA0C;AACxC,MAAIA,OAAO,CAACitC,OAAZ,EAAqB;AACnB,WAAOx4C,qBAAP;AACD;;AACD,MAAIuL,OAAO,CAACktC,OAAR,IAAmBltC,OAAO,CAACmtC,sBAAR,KAAmC,UAA1D,EAAsE;AACpE,WAAOx4C,oBAAP;AACD;;AACD,SAAOE,YAAP;AACD;;AACD,SAAS05C,mBAAT,CAA6BnoC,GAA7B,EAAkCwU,IAAlC,EAAwC3hB,KAAxC,EAA+C0Q,KAA/C,EAAsD;AACpD,MAAI6kC,IAAI,GAAG5zB,IAAI,CAAC6zB,KAAhB;;AACA,MAAI,CAACD,IAAL,EAAW;AACTA,IAAAA,IAAI,GAAG5zB,IAAI,CAAC6zB,KAAL,GAAa,IAAIC,MAAJ,EAApB;;AACA,QAAI9zB,IAAI,CAAC4zB,IAAL,CAAUA,IAAV,EAAgBv1C,KAAhB,EAAuB0Q,KAAvB,CAAJ,EAAmC;AACjC6kC,MAAAA,IAAI,CAAChF,SAAL;AACD;AACF;;AACDmD,EAAAA,QAAQ,CAACvmC,GAAD,EAAMwU,IAAI,CAAC5a,OAAX,CAAR;AACAoG,EAAAA,GAAG,CAACs0B,MAAJ,CAAW8T,IAAX;AACD;;AACD,SAASG,gBAAT,CAA0BvoC,GAA1B,EAA+BwU,IAA/B,EAAqC3hB,KAArC,EAA4C0Q,KAA5C,EAAmD;AACjD,QAAM;AAACilC,IAAAA,QAAD;AAAW5uC,IAAAA;AAAX,MAAsB4a,IAA5B;;AACA,QAAMi0B,aAAa,GAAGT,iBAAiB,CAACxzB,IAAD,CAAvC;;AACA,OAAK,MAAMQ,OAAX,IAAsBwzB,QAAtB,EAAgC;AAC9BjC,IAAAA,QAAQ,CAACvmC,GAAD,EAAMpG,OAAN,EAAeob,OAAO,CAACvB,KAAvB,CAAR;AACAzT,IAAAA,GAAG,CAACm0B,SAAJ;;AACA,QAAIsU,aAAa,CAACzoC,GAAD,EAAMwU,IAAN,EAAYQ,OAAZ,EAAqB;AAACniB,MAAAA,KAAD;AAAQkI,MAAAA,GAAG,EAAElI,KAAK,GAAG0Q,KAAR,GAAgB;AAA7B,KAArB,CAAjB,EAAwE;AACtEvD,MAAAA,GAAG,CAACojC,SAAJ;AACD;;AACDpjC,IAAAA,GAAG,CAACs0B,MAAJ;AACD;AACF;;AACD,MAAMoU,SAAS,GAAG,OAAOJ,MAAP,KAAkB,UAApC;;AACA,SAAS70C,IAAT,CAAcuM,GAAd,EAAmBwU,IAAnB,EAAyB3hB,KAAzB,EAAgC0Q,KAAhC,EAAuC;AACrC,MAAImlC,SAAS,IAAIl0B,IAAI,CAACg0B,QAAL,CAAch1C,MAAd,KAAyB,CAA1C,EAA6C;AAC3C20C,IAAAA,mBAAmB,CAACnoC,GAAD,EAAMwU,IAAN,EAAY3hB,KAAZ,EAAmB0Q,KAAnB,CAAnB;AACD,GAFD,MAEO;AACLglC,IAAAA,gBAAgB,CAACvoC,GAAD,EAAMwU,IAAN,EAAY3hB,KAAZ,EAAmB0Q,KAAnB,CAAhB;AACD;AACF;;AACD,MAAMolC,WAAN,SAA0BnkB,OAA1B,CAAkC;AAChCjzB,EAAAA,WAAW,CAAC2E,GAAD,EAAM;AACf;AACA,SAAK+e,QAAL,GAAgB,IAAhB;AACA,SAAKrb,OAAL,GAAe/H,SAAf;AACA,SAAKgF,KAAL,GAAahF,SAAb;AACA,SAAK2lB,SAAL,GAAiB3lB,SAAjB;AACA,SAAKw2C,KAAL,GAAax2C,SAAb;AACA,SAAK+2C,OAAL,GAAe/2C,SAAf;AACA,SAAKg3C,SAAL,GAAiBh3C,SAAjB;AACA,SAAKijB,UAAL,GAAkB,KAAlB;AACA,SAAKg0B,cAAL,GAAsB,KAAtB;AACA,SAAKj0B,aAAL,GAAqBhjB,SAArB;;AACA,QAAIqE,GAAJ,EAAS;AACPgC,MAAAA,MAAM,CAACqC,MAAP,CAAc,IAAd,EAAoBrE,GAApB;AACD;AACF;;AACDwf,EAAAA,mBAAmB,CAACjQ,SAAD,EAAY/D,SAAZ,EAAuB;AACxC,UAAM3O,EAAE,GAAG,IAAX;AACA,UAAM6G,OAAO,GAAG7G,EAAE,CAAC6G,OAAnB;;AACA,QAAI,CAACA,OAAO,CAACktC,OAAR,IAAmBltC,OAAO,CAACmtC,sBAAR,KAAmC,UAAvD,KAAsE,CAACntC,OAAO,CAACitC,OAA/E,IAA0F,CAAC9zC,EAAE,CAAC+1C,cAAlG,EAAkH;AAChH,YAAMhyC,IAAI,GAAG8C,OAAO,CAACsb,QAAR,GAAmBniB,EAAE,CAAC8D,KAAtB,GAA8B9D,EAAE,CAACykB,SAA9C;;AACAzpB,MAAAA,0BAA0B,CAACgF,EAAE,CAAC61C,OAAJ,EAAahvC,OAAb,EAAsB6L,SAAtB,EAAiC3O,IAAjC,EAAuC4K,SAAvC,CAA1B;;AACA3O,MAAAA,EAAE,CAAC+1C,cAAH,GAAoB,IAApB;AACD;AACF;;AACS,MAANj6B,MAAM,CAACA,MAAD,EAAS;AACjB,UAAM9b,EAAE,GAAG,IAAX;AACAA,IAAAA,EAAE,CAAC61C,OAAH,GAAa/5B,MAAb;AACA,WAAO9b,EAAE,CAAC81C,SAAV;AACA,WAAO91C,EAAE,CAACs1C,KAAV;AACAt1C,IAAAA,EAAE,CAAC+1C,cAAH,GAAoB,KAApB;AACD;;AACS,MAANj6B,MAAM,GAAG;AACX,WAAO,KAAK+5B,OAAZ;AACD;;AACW,MAARJ,QAAQ,GAAG;AACb,WAAO,KAAKK,SAAL,KAAmB,KAAKA,SAAL,GAAiB56C,gBAAgB,CAAC,IAAD,EAAO,KAAK2L,OAAL,CAAaob,OAApB,CAApD,CAAP;AACD;;AACD+S,EAAAA,KAAK,GAAG;AACN,UAAMygB,QAAQ,GAAG,KAAKA,QAAtB;AACA,UAAM35B,MAAM,GAAG,KAAKA,MAApB;AACA,WAAO25B,QAAQ,CAACh1C,MAAT,IAAmBqb,MAAM,CAAC25B,QAAQ,CAAC,CAAD,CAAR,CAAY31C,KAAb,CAAhC;AACD;;AACDqa,EAAAA,IAAI,GAAG;AACL,UAAMs7B,QAAQ,GAAG,KAAKA,QAAtB;AACA,UAAM35B,MAAM,GAAG,KAAKA,MAApB;AACA,UAAMtL,KAAK,GAAGilC,QAAQ,CAACh1C,MAAvB;AACA,WAAO+P,KAAK,IAAIsL,MAAM,CAAC25B,QAAQ,CAACjlC,KAAK,GAAG,CAAT,CAAR,CAAoBxI,GAArB,CAAtB;AACD;;AACDguC,EAAAA,WAAW,CAACj6B,KAAD,EAAQ+mB,QAAR,EAAkB;AAC3B,UAAM9iC,EAAE,GAAG,IAAX;AACA,UAAM6G,OAAO,GAAG7G,EAAE,CAAC6G,OAAnB;AACA,UAAMS,KAAK,GAAGyU,KAAK,CAAC+mB,QAAD,CAAnB;AACA,UAAMhnB,MAAM,GAAG9b,EAAE,CAAC8b,MAAlB;;AACA,UAAM25B,QAAQ,GAAGr6C,cAAc,CAAC4E,EAAD,EAAK;AAAC8iC,MAAAA,QAAD;AAAWhjC,MAAAA,KAAK,EAAEwH,KAAlB;AAAyBU,MAAAA,GAAG,EAAEV;AAA9B,KAAL,CAA/B;;AACA,QAAI,CAACmuC,QAAQ,CAACh1C,MAAd,EAAsB;AACpB;AACD;;AACD,UAAMo1B,MAAM,GAAG,EAAf;;AACA,UAAMogB,YAAY,GAAGd,uBAAuB,CAACtuC,OAAD,CAA5C;;AACA,QAAIhU,CAAJ,EAAOiW,IAAP;;AACA,SAAKjW,CAAC,GAAG,CAAJ,EAAOiW,IAAI,GAAG2sC,QAAQ,CAACh1C,MAA5B,EAAoC5N,CAAC,GAAGiW,IAAxC,EAA8C,EAAEjW,CAAhD,EAAmD;AACjD,YAAM;AAACiN,QAAAA,KAAD;AAAQkI,QAAAA;AAAR,UAAeytC,QAAQ,CAAC5iD,CAAD,CAA7B;AACA,YAAMmuC,EAAE,GAAGllB,MAAM,CAAChc,KAAD,CAAjB;AACA,YAAMmhC,EAAE,GAAGnlB,MAAM,CAAC9T,GAAD,CAAjB;;AACA,UAAIg5B,EAAE,KAAKC,EAAX,EAAe;AACbpL,QAAAA,MAAM,CAACp0B,IAAP,CAAYu/B,EAAZ;AACA;AACD;;AACD,YAAM7sC,CAAC,GAAGyL,IAAI,CAAC0W,GAAL,CAAS,CAAChP,KAAK,GAAG05B,EAAE,CAAC8B,QAAD,CAAX,KAA0B7B,EAAE,CAAC6B,QAAD,CAAF,GAAe9B,EAAE,CAAC8B,QAAD,CAA3C,CAAT,CAAV;;AACA,YAAMoT,YAAY,GAAGD,YAAY,CAACjV,EAAD,EAAKC,EAAL,EAAS9sC,CAAT,EAAY0S,OAAO,CAACitC,OAApB,CAAjC;;AACAoC,MAAAA,YAAY,CAACpT,QAAD,CAAZ,GAAyB/mB,KAAK,CAAC+mB,QAAD,CAA9B;AACAjN,MAAAA,MAAM,CAACp0B,IAAP,CAAYy0C,YAAZ;AACD;;AACD,WAAOrgB,MAAM,CAACp1B,MAAP,KAAkB,CAAlB,GAAsBo1B,MAAM,CAAC,CAAD,CAA5B,GAAkCA,MAAzC;AACD;;AACD0e,EAAAA,WAAW,CAACtnC,GAAD,EAAMgV,OAAN,EAAeyH,MAAf,EAAuB;AAChC,UAAMgsB,aAAa,GAAGT,iBAAiB,CAAC,IAAD,CAAvC;;AACA,WAAOS,aAAa,CAACzoC,GAAD,EAAM,IAAN,EAAYgV,OAAZ,EAAqByH,MAArB,CAApB;AACD;;AACD2rB,EAAAA,IAAI,CAACpoC,GAAD,EAAMnN,KAAN,EAAa0Q,KAAb,EAAoB;AACtB,UAAMxQ,EAAE,GAAG,IAAX;AACA,UAAMy1C,QAAQ,GAAGz1C,EAAE,CAACy1C,QAApB;;AACA,UAAMC,aAAa,GAAGT,iBAAiB,CAACj1C,EAAD,CAAvC;;AACA,QAAI+D,IAAI,GAAG/D,EAAE,CAAC8D,KAAd;AACAhE,IAAAA,KAAK,GAAGA,KAAK,IAAI,CAAjB;AACA0Q,IAAAA,KAAK,GAAGA,KAAK,IAAKxQ,EAAE,CAAC8b,MAAH,CAAUrb,MAAV,GAAmBX,KAArC;;AACA,SAAK,MAAMmiB,OAAX,IAAsBwzB,QAAtB,EAAgC;AAC9B1xC,MAAAA,IAAI,IAAI2xC,aAAa,CAACzoC,GAAD,EAAMjN,EAAN,EAAUiiB,OAAV,EAAmB;AAACniB,QAAAA,KAAD;AAAQkI,QAAAA,GAAG,EAAElI,KAAK,GAAG0Q,KAAR,GAAgB;AAA7B,OAAnB,CAArB;AACD;;AACD,WAAO,CAAC,CAACzM,IAAT;AACD;;AACDrD,EAAAA,IAAI,CAACuM,GAAD,EAAMyF,SAAN,EAAiB5S,KAAjB,EAAwB0Q,KAAxB,EAA+B;AACjC,UAAMxQ,EAAE,GAAG,IAAX;AACA,UAAM6G,OAAO,GAAG7G,EAAE,CAAC6G,OAAH,IAAc,EAA9B;AACA,UAAMiV,MAAM,GAAG9b,EAAE,CAAC8b,MAAH,IAAa,EAA5B;;AACA,QAAI,CAACA,MAAM,CAACrb,MAAR,IAAkB,CAACoG,OAAO,CAACmZ,WAA/B,EAA4C;AAC1C;AACD;;AACD/S,IAAAA,GAAG,CAACyzB,IAAJ;AACAhgC,IAAAA,IAAI,CAACuM,GAAD,EAAMjN,EAAN,EAAUF,KAAV,EAAiB0Q,KAAjB,CAAJ;AACAvD,IAAAA,GAAG,CAAC2zB,OAAJ;;AACA,QAAI5gC,EAAE,CAACkiB,QAAP,EAAiB;AACfliB,MAAAA,EAAE,CAAC+1C,cAAH,GAAoB,KAApB;AACA/1C,MAAAA,EAAE,CAACs1C,KAAH,GAAWx2C,SAAX;AACD;AACF;;AA3G+B;;AA6GlC82C,WAAW,CAAC3rC,EAAZ,GAAiB,MAAjB;AACA2rC,WAAW,CAAChjD,QAAZ,GAAuB;AACrB8gD,EAAAA,cAAc,EAAE,MADK;AAErBrgB,EAAAA,UAAU,EAAE,EAFS;AAGrBC,EAAAA,gBAAgB,EAAE,CAHG;AAIrBqgB,EAAAA,eAAe,EAAE,OAJI;AAKrB3zB,EAAAA,WAAW,EAAE,CALQ;AAMrBm2B,EAAAA,eAAe,EAAE,IANI;AAOrBnC,EAAAA,sBAAsB,EAAE,SAPH;AAQrBpvB,EAAAA,IAAI,EAAE,KARe;AASrBzC,EAAAA,QAAQ,EAAE,KATW;AAUrB2xB,EAAAA,OAAO,EAAE,KAVY;AAWrBC,EAAAA,OAAO,EAAE;AAXY,CAAvB;AAaA6B,WAAW,CAAC7jB,aAAZ,GAA4B;AAC1BlR,EAAAA,eAAe,EAAE,iBADS;AAE1BE,EAAAA,WAAW,EAAE;AAFa,CAA5B;AAIA60B,WAAW,CAACx8C,WAAZ,GAA0B;AACxBqM,EAAAA,WAAW,EAAE,IADW;AAExBD,EAAAA,UAAU,EAAGE,IAAD,IAAUA,IAAI,KAAK,YAAT,IAAyBA,IAAI,KAAK;AAFhC,CAA1B;;AAKA,SAAS0wC,SAAT,CAAmB1vB,EAAnB,EAAuBgC,GAAvB,EAA4Bld,IAA5B,EAAkCgc,gBAAlC,EAAoD;AAClD,QAAM3gB,OAAO,GAAG6f,EAAE,CAAC7f,OAAnB;AACA,QAAM;AAAC,KAAC2E,IAAD,GAAQlE;AAAT,MAAkBof,EAAE,CAACiL,QAAH,CAAY,CAACnmB,IAAD,CAAZ,EAAoBgc,gBAApB,CAAxB;AACA,SAAQ5nB,IAAI,CAAC0W,GAAL,CAASoS,GAAG,GAAGphB,KAAf,IAAwBT,OAAO,CAACuV,MAAR,GAAiBvV,OAAO,CAACwvC,SAAzD;AACD;;AACD,MAAMC,YAAN,SAA2B7kB,OAA3B,CAAmC;AACjCjzB,EAAAA,WAAW,CAAC2E,GAAD,EAAM;AACf;AACA,SAAK0D,OAAL,GAAe/H,SAAf;AACA,SAAKqM,MAAL,GAAcrM,SAAd;AACA,SAAKqd,IAAL,GAAYrd,SAAZ;AACA,SAAKmD,IAAL,GAAYnD,SAAZ;;AACA,QAAIqE,GAAJ,EAAS;AACPgC,MAAAA,MAAM,CAACqC,MAAP,CAAc,IAAd,EAAoBrE,GAApB;AACD;AACF;;AACDwkB,EAAAA,OAAO,CAAC4uB,MAAD,EAASC,MAAT,EAAiBhvB,gBAAjB,EAAmC;AACxC,UAAM3gB,OAAO,GAAG,KAAKA,OAArB;AACA,UAAM;AAACpR,MAAAA,CAAD;AAAIE,MAAAA;AAAJ,QAAS,KAAKg8B,QAAL,CAAc,CAAC,GAAD,EAAM,GAAN,CAAd,EAA0BnK,gBAA1B,CAAf;AACA,WAAS5nB,IAAI,CAAC0nB,GAAL,CAASivB,MAAM,GAAG9gD,CAAlB,EAAqB,CAArB,IAA0BmK,IAAI,CAAC0nB,GAAL,CAASkvB,MAAM,GAAG7gD,CAAlB,EAAqB,CAArB,CAA3B,GAAsDiK,IAAI,CAAC0nB,GAAL,CAASzgB,OAAO,CAACwvC,SAAR,GAAoBxvC,OAAO,CAACuV,MAArC,EAA6C,CAA7C,CAA9D;AACD;;AACDq6B,EAAAA,QAAQ,CAACF,MAAD,EAAS/uB,gBAAT,EAA2B;AACjC,WAAO4uB,SAAS,CAAC,IAAD,EAAOG,MAAP,EAAe,GAAf,EAAoB/uB,gBAApB,CAAhB;AACD;;AACDkvB,EAAAA,QAAQ,CAACF,MAAD,EAAShvB,gBAAT,EAA2B;AACjC,WAAO4uB,SAAS,CAAC,IAAD,EAAOI,MAAP,EAAe,GAAf,EAAoBhvB,gBAApB,CAAhB;AACD;;AACDO,EAAAA,cAAc,CAACP,gBAAD,EAAmB;AAC/B,UAAM;AAAC/xB,MAAAA,CAAD;AAAIE,MAAAA;AAAJ,QAAS,KAAKg8B,QAAL,CAAc,CAAC,GAAD,EAAM,GAAN,CAAd,EAA0BnK,gBAA1B,CAAf;AACA,WAAO;AAAC/xB,MAAAA,CAAD;AAAIE,MAAAA;AAAJ,KAAP;AACD;;AACD4R,EAAAA,IAAI,CAACV,OAAD,EAAU;AACZA,IAAAA,OAAO,GAAGA,OAAO,IAAI,KAAKA,OAAhB,IAA2B,EAArC;AACA,QAAIuV,MAAM,GAAGvV,OAAO,CAACuV,MAAR,IAAkB,CAA/B;AACAA,IAAAA,MAAM,GAAGxc,IAAI,CAACmC,GAAL,CAASqa,MAAT,EAAiBA,MAAM,IAAIvV,OAAO,CAAC8vC,WAAlB,IAAiC,CAAlD,CAAT;AACA,UAAM32B,WAAW,GAAG5D,MAAM,IAAIvV,OAAO,CAACmZ,WAAlB,IAAiC,CAArD;AACA,WAAO,CAAC5D,MAAM,GAAG4D,WAAV,IAAyB,CAAhC;AACD;;AACDtf,EAAAA,IAAI,CAACuM,GAAD,EAAMwF,IAAN,EAAY;AACd,UAAMzS,EAAE,GAAG,IAAX;AACA,UAAM6G,OAAO,GAAG7G,EAAE,CAAC6G,OAAnB;;AACA,QAAI7G,EAAE,CAACmc,IAAH,IAAWtV,OAAO,CAACuV,MAAR,GAAiB,GAA5B,IAAmC,CAACxmB,cAAc,CAACoK,EAAD,EAAKyS,IAAL,EAAWzS,EAAE,CAACuH,IAAH,CAAQV,OAAR,IAAmB,CAA9B,CAAtD,EAAwF;AACtF;AACD;;AACDoG,IAAAA,GAAG,CAAC6T,WAAJ,GAAkBja,OAAO,CAACka,WAA1B;AACA9T,IAAAA,GAAG,CAAC+T,SAAJ,GAAgBna,OAAO,CAACmZ,WAAxB;AACA/S,IAAAA,GAAG,CAAC2T,SAAJ,GAAgB/Z,OAAO,CAACga,eAAxB;AACA7kB,IAAAA,SAAS,CAACiR,GAAD,EAAMpG,OAAN,EAAe7G,EAAE,CAACvK,CAAlB,EAAqBuK,EAAE,CAACrK,CAAxB,CAAT;AACD;;AACDgxB,EAAAA,QAAQ,GAAG;AACT,UAAM9f,OAAO,GAAG,KAAKA,OAAL,IAAgB,EAAhC;AACA,WAAOA,OAAO,CAACuV,MAAR,GAAiBvV,OAAO,CAACwvC,SAAhC;AACD;;AA/CgC;;AAiDnCC,YAAY,CAACrsC,EAAb,GAAkB,OAAlB;AACAqsC,YAAY,CAAC1jD,QAAb,GAAwB;AACtBotB,EAAAA,WAAW,EAAE,CADS;AAEtBq2B,EAAAA,SAAS,EAAE,CAFW;AAGtBp2B,EAAAA,gBAAgB,EAAE,CAHI;AAItB02B,EAAAA,WAAW,EAAE,CAJS;AAKtBn2B,EAAAA,UAAU,EAAE,QALU;AAMtBpE,EAAAA,MAAM,EAAE,CANc;AAOtBK,EAAAA,QAAQ,EAAE;AAPY,CAAxB;AASA65B,YAAY,CAACvkB,aAAb,GAA6B;AAC3BlR,EAAAA,eAAe,EAAE,iBADU;AAE3BE,EAAAA,WAAW,EAAE;AAFc,CAA7B;;AAKA,SAAS61B,YAAT,CAAsBC,GAAtB,EAA2BrvB,gBAA3B,EAA6C;AAC3C,QAAM;AAAC/xB,IAAAA,CAAD;AAAIE,IAAAA,CAAJ;AAAO4iB,IAAAA,IAAP;AAAa0B,IAAAA,KAAb;AAAoBD,IAAAA;AAApB,MAA8B68B,GAAG,CAACllB,QAAJ,CAAa,CAAC,GAAD,EAAM,GAAN,EAAW,MAAX,EAAmB,OAAnB,EAA4B,QAA5B,CAAb,EAAoDnK,gBAApD,CAApC;AACA,MAAIjf,IAAJ,EAAUF,KAAV,EAAiBD,GAAjB,EAAsBE,MAAtB,EAA8BwuC,IAA9B;;AACA,MAAID,GAAG,CAACv+B,UAAR,EAAoB;AAClBw+B,IAAAA,IAAI,GAAG98B,MAAM,GAAG,CAAhB;AACAzR,IAAAA,IAAI,GAAG3I,IAAI,CAACC,GAAL,CAASpK,CAAT,EAAY8iB,IAAZ,CAAP;AACAlQ,IAAAA,KAAK,GAAGzI,IAAI,CAACmC,GAAL,CAAStM,CAAT,EAAY8iB,IAAZ,CAAR;AACAnQ,IAAAA,GAAG,GAAGzS,CAAC,GAAGmhD,IAAV;AACAxuC,IAAAA,MAAM,GAAG3S,CAAC,GAAGmhD,IAAb;AACD,GAND,MAMO;AACLA,IAAAA,IAAI,GAAG78B,KAAK,GAAG,CAAf;AACA1R,IAAAA,IAAI,GAAG9S,CAAC,GAAGqhD,IAAX;AACAzuC,IAAAA,KAAK,GAAG5S,CAAC,GAAGqhD,IAAZ;AACA1uC,IAAAA,GAAG,GAAGxI,IAAI,CAACC,GAAL,CAASlK,CAAT,EAAY4iB,IAAZ,CAAN;AACAjQ,IAAAA,MAAM,GAAG1I,IAAI,CAACmC,GAAL,CAASpM,CAAT,EAAY4iB,IAAZ,CAAT;AACD;;AACD,SAAO;AAAChQ,IAAAA,IAAD;AAAOH,IAAAA,GAAP;AAAYC,IAAAA,KAAZ;AAAmBC,IAAAA;AAAnB,GAAP;AACD;;AACD,SAASyuC,WAAT,CAAqB56B,IAArB,EAA2B7U,KAA3B,EAAkCzH,GAAlC,EAAuCkC,GAAvC,EAA4C;AAC1C,SAAOoa,IAAI,GAAG,CAAH,GAAO7mB,WAAW,CAACgS,KAAD,EAAQzH,GAAR,EAAakC,GAAb,CAA7B;AACD;;AACD,SAASi1C,gBAAT,CAA0BH,GAA1B,EAA+BI,IAA/B,EAAqCC,IAArC,EAA2C;AACzC,QAAM5vC,KAAK,GAAGuvC,GAAG,CAAChwC,OAAJ,CAAYmZ,WAA1B;AACA,QAAM7D,IAAI,GAAG06B,GAAG,CAACn+B,aAAjB;AACA,QAAM7jB,CAAC,GAAGuH,MAAM,CAACkL,KAAD,CAAhB;AACA,SAAO;AACLnT,IAAAA,CAAC,EAAE4iD,WAAW,CAAC56B,IAAI,CAAC/T,GAAN,EAAWvT,CAAC,CAACuT,GAAb,EAAkB,CAAlB,EAAqB8uC,IAArB,CADT;AAEL/kD,IAAAA,CAAC,EAAE4kD,WAAW,CAAC56B,IAAI,CAAC9T,KAAN,EAAaxT,CAAC,CAACwT,KAAf,EAAsB,CAAtB,EAAyB4uC,IAAzB,CAFT;AAGLlkD,IAAAA,CAAC,EAAEgkD,WAAW,CAAC56B,IAAI,CAAC7T,MAAN,EAAczT,CAAC,CAACyT,MAAhB,EAAwB,CAAxB,EAA2B4uC,IAA3B,CAHT;AAIL7jD,IAAAA,CAAC,EAAE0jD,WAAW,CAAC56B,IAAI,CAAC5T,IAAN,EAAY1T,CAAC,CAAC0T,IAAd,EAAoB,CAApB,EAAuB0uC,IAAvB;AAJT,GAAP;AAMD;;AACD,SAASE,iBAAT,CAA2BN,GAA3B,EAAgCI,IAAhC,EAAsCC,IAAtC,EAA4C;AAC1C,QAAM;AAACv+B,IAAAA;AAAD,MAAuBk+B,GAAG,CAACllB,QAAJ,CAAa,CAAC,oBAAD,CAAb,CAA7B;AACA,QAAMrqB,KAAK,GAAGuvC,GAAG,CAAChwC,OAAJ,CAAY4pC,YAA1B;AACA,QAAM57C,CAAC,GAAGyH,aAAa,CAACgL,KAAD,CAAvB;AACA,QAAM8vC,IAAI,GAAGx3C,IAAI,CAACC,GAAL,CAASo3C,IAAT,EAAeC,IAAf,CAAb;AACA,QAAM/6B,IAAI,GAAG06B,GAAG,CAACn+B,aAAjB;AACA,QAAM2+B,YAAY,GAAG1+B,kBAAkB,IAAI7lB,QAAQ,CAACwU,KAAD,CAAnD;AACA,SAAO;AACLgwC,IAAAA,OAAO,EAAEP,WAAW,CAAC,CAACM,YAAD,IAAiBl7B,IAAI,CAAC/T,GAAtB,IAA6B+T,IAAI,CAAC5T,IAAnC,EAAyC1T,CAAC,CAACyiD,OAA3C,EAAoD,CAApD,EAAuDF,IAAvD,CADf;AAELG,IAAAA,QAAQ,EAAER,WAAW,CAAC,CAACM,YAAD,IAAiBl7B,IAAI,CAAC/T,GAAtB,IAA6B+T,IAAI,CAAC9T,KAAnC,EAA0CxT,CAAC,CAAC0iD,QAA5C,EAAsD,CAAtD,EAAyDH,IAAzD,CAFhB;AAGLI,IAAAA,UAAU,EAAET,WAAW,CAAC,CAACM,YAAD,IAAiBl7B,IAAI,CAAC7T,MAAtB,IAAgC6T,IAAI,CAAC5T,IAAtC,EAA4C1T,CAAC,CAAC2iD,UAA9C,EAA0D,CAA1D,EAA6DJ,IAA7D,CAHlB;AAILK,IAAAA,WAAW,EAAEV,WAAW,CAAC,CAACM,YAAD,IAAiBl7B,IAAI,CAAC7T,MAAtB,IAAgC6T,IAAI,CAAC9T,KAAtC,EAA6CxT,CAAC,CAAC4iD,WAA/C,EAA4D,CAA5D,EAA+DL,IAA/D;AAJnB,GAAP;AAMD;;AACD,SAASM,aAAT,CAAuBb,GAAvB,EAA4B;AAC1B,QAAMhkB,MAAM,GAAG+jB,YAAY,CAACC,GAAD,CAA3B;AACA,QAAM58B,KAAK,GAAG4Y,MAAM,CAACxqB,KAAP,GAAewqB,MAAM,CAACtqB,IAApC;AACA,QAAMyR,MAAM,GAAG6Y,MAAM,CAACvqB,MAAP,GAAgBuqB,MAAM,CAACzqB,GAAtC;AACA,QAAMoa,MAAM,GAAGw0B,gBAAgB,CAACH,GAAD,EAAM58B,KAAK,GAAG,CAAd,EAAiBD,MAAM,GAAG,CAA1B,CAA/B;AACA,QAAMoC,MAAM,GAAG+6B,iBAAiB,CAACN,GAAD,EAAM58B,KAAK,GAAG,CAAd,EAAiBD,MAAM,GAAG,CAA1B,CAAhC;AACA,SAAO;AACL29B,IAAAA,KAAK,EAAE;AACLliD,MAAAA,CAAC,EAAEo9B,MAAM,CAACtqB,IADL;AAEL5S,MAAAA,CAAC,EAAEk9B,MAAM,CAACzqB,GAFL;AAGL7S,MAAAA,CAAC,EAAE0kB,KAHE;AAILtmB,MAAAA,CAAC,EAAEqmB,MAJE;AAKLoC,MAAAA;AALK,KADF;AAQLw2B,IAAAA,KAAK,EAAE;AACLn9C,MAAAA,CAAC,EAAEo9B,MAAM,CAACtqB,IAAP,GAAcia,MAAM,CAACnvB,CADnB;AAELsC,MAAAA,CAAC,EAAEk9B,MAAM,CAACzqB,GAAP,GAAaoa,MAAM,CAACruB,CAFlB;AAGLoB,MAAAA,CAAC,EAAE0kB,KAAK,GAAGuI,MAAM,CAACnvB,CAAf,GAAmBmvB,MAAM,CAACrwB,CAHxB;AAILwB,MAAAA,CAAC,EAAEqmB,MAAM,GAAGwI,MAAM,CAACruB,CAAhB,GAAoBquB,MAAM,CAACzvB,CAJzB;AAKLqpB,MAAAA,MAAM,EAAE;AACNk7B,QAAAA,OAAO,EAAE13C,IAAI,CAACmC,GAAL,CAAS,CAAT,EAAYqa,MAAM,CAACk7B,OAAP,GAAiB13C,IAAI,CAACmC,GAAL,CAASygB,MAAM,CAACruB,CAAhB,EAAmBquB,MAAM,CAACnvB,CAA1B,CAA7B,CADH;AAENkkD,QAAAA,QAAQ,EAAE33C,IAAI,CAACmC,GAAL,CAAS,CAAT,EAAYqa,MAAM,CAACm7B,QAAP,GAAkB33C,IAAI,CAACmC,GAAL,CAASygB,MAAM,CAACruB,CAAhB,EAAmBquB,MAAM,CAACrwB,CAA1B,CAA9B,CAFJ;AAGNqlD,QAAAA,UAAU,EAAE53C,IAAI,CAACmC,GAAL,CAAS,CAAT,EAAYqa,MAAM,CAACo7B,UAAP,GAAoB53C,IAAI,CAACmC,GAAL,CAASygB,MAAM,CAACzvB,CAAhB,EAAmByvB,MAAM,CAACnvB,CAA1B,CAAhC,CAHN;AAINokD,QAAAA,WAAW,EAAE73C,IAAI,CAACmC,GAAL,CAAS,CAAT,EAAYqa,MAAM,CAACq7B,WAAP,GAAqB73C,IAAI,CAACmC,GAAL,CAASygB,MAAM,CAACzvB,CAAhB,EAAmByvB,MAAM,CAACrwB,CAA1B,CAAjC;AAJP;AALH;AARF,GAAP;AAqBD;;AACD,SAASw1B,OAAT,CAAiBkvB,GAAjB,EAAsBphD,CAAtB,EAAyBE,CAAzB,EAA4B6xB,gBAA5B,EAA8C;AAC5C,QAAMowB,KAAK,GAAGniD,CAAC,KAAK,IAApB;AACA,QAAMoiD,KAAK,GAAGliD,CAAC,KAAK,IAApB;AACA,QAAMmiD,QAAQ,GAAGF,KAAK,IAAIC,KAA1B;AACA,QAAMhlB,MAAM,GAAGgkB,GAAG,IAAI,CAACiB,QAAR,IAAoBlB,YAAY,CAACC,GAAD,EAAMrvB,gBAAN,CAA/C;AACA,SAAOqL,MAAM,KACT+kB,KAAK,IAAIniD,CAAC,IAAIo9B,MAAM,CAACtqB,IAAZ,IAAoB9S,CAAC,IAAIo9B,MAAM,CAACxqB,KADhC,CAAN,KAEHwvC,KAAK,IAAIliD,CAAC,IAAIk9B,MAAM,CAACzqB,GAAZ,IAAmBzS,CAAC,IAAIk9B,MAAM,CAACvqB,MAFrC,CAAP;AAGD;;AACD,SAASyvC,SAAT,CAAmB37B,MAAnB,EAA2B;AACzB,SAAOA,MAAM,CAACk7B,OAAP,IAAkBl7B,MAAM,CAACm7B,QAAzB,IAAqCn7B,MAAM,CAACo7B,UAA5C,IAA0Dp7B,MAAM,CAACq7B,WAAxE;AACD;;AACD,SAASO,iBAAT,CAA2B/qC,GAA3B,EAAgCgrC,IAAhC,EAAsC;AACpChrC,EAAAA,GAAG,CAACgrC,IAAJ,CAASA,IAAI,CAACxiD,CAAd,EAAiBwiD,IAAI,CAACtiD,CAAtB,EAAyBsiD,IAAI,CAAC1iD,CAA9B,EAAiC0iD,IAAI,CAACtkD,CAAtC;AACD;;AACD,SAASukD,WAAT,CAAqBD,IAArB,EAA2B3yB,MAA3B,EAAmC6yB,OAAO,GAAG,EAA7C,EAAiD;AAC/C,QAAM1iD,CAAC,GAAGwiD,IAAI,CAACxiD,CAAL,KAAW0iD,OAAO,CAAC1iD,CAAnB,GAAuB,CAAC6vB,MAAxB,GAAiC,CAA3C;AACA,QAAM3vB,CAAC,GAAGsiD,IAAI,CAACtiD,CAAL,KAAWwiD,OAAO,CAACxiD,CAAnB,GAAuB,CAAC2vB,MAAxB,GAAiC,CAA3C;AACA,QAAM/vB,CAAC,GAAG,CAAC0iD,IAAI,CAACxiD,CAAL,GAASwiD,IAAI,CAAC1iD,CAAd,KAAoB4iD,OAAO,CAAC1iD,CAAR,GAAY0iD,OAAO,CAAC5iD,CAAxC,GAA4C+vB,MAA5C,GAAqD,CAAtD,IAA2D7vB,CAArE;AACA,QAAM9B,CAAC,GAAG,CAACskD,IAAI,CAACtiD,CAAL,GAASsiD,IAAI,CAACtkD,CAAd,KAAoBwkD,OAAO,CAACxiD,CAAR,GAAYwiD,OAAO,CAACxkD,CAAxC,GAA4C2xB,MAA5C,GAAqD,CAAtD,IAA2D3vB,CAArE;AACA,SAAO;AACLF,IAAAA,CAAC,EAAEwiD,IAAI,CAACxiD,CAAL,GAASA,CADP;AAELE,IAAAA,CAAC,EAAEsiD,IAAI,CAACtiD,CAAL,GAASA,CAFP;AAGLJ,IAAAA,CAAC,EAAE0iD,IAAI,CAAC1iD,CAAL,GAASA,CAHP;AAIL5B,IAAAA,CAAC,EAAEskD,IAAI,CAACtkD,CAAL,GAASA,CAJP;AAKLyoB,IAAAA,MAAM,EAAE67B,IAAI,CAAC77B;AALR,GAAP;AAOD;;AACD,MAAMg8B,UAAN,SAAyB3mB,OAAzB,CAAiC;AAC/BjzB,EAAAA,WAAW,CAAC2E,GAAD,EAAM;AACf;AACA,SAAK0D,OAAL,GAAe/H,SAAf;AACA,SAAKwZ,UAAL,GAAkBxZ,SAAlB;AACA,SAAKyZ,IAAL,GAAYzZ,SAAZ;AACA,SAAKmb,KAAL,GAAanb,SAAb;AACA,SAAKkb,MAAL,GAAclb,SAAd;;AACA,QAAIqE,GAAJ,EAAS;AACPgC,MAAAA,MAAM,CAACqC,MAAP,CAAc,IAAd,EAAoBrE,GAApB;AACD;AACF;;AACDzC,EAAAA,IAAI,CAACuM,GAAD,EAAM;AACR,UAAMpG,OAAO,GAAG,KAAKA,OAArB;AACA,UAAM;AAAC+rC,MAAAA,KAAD;AAAQ+E,MAAAA;AAAR,QAAiBD,aAAa,CAAC,IAAD,CAApC;AACA,UAAMW,WAAW,GAAGN,SAAS,CAACJ,KAAK,CAACv7B,MAAP,CAAT,GAA0BlgB,kBAA1B,GAA+C87C,iBAAnE;AACA,UAAMM,aAAa,GAAG,IAAtB;AACArrC,IAAAA,GAAG,CAACyzB,IAAJ;;AACA,QAAIiX,KAAK,CAACpiD,CAAN,KAAYq9C,KAAK,CAACr9C,CAAlB,IAAuBoiD,KAAK,CAAChkD,CAAN,KAAYi/C,KAAK,CAACj/C,CAA7C,EAAgD;AAC9CsZ,MAAAA,GAAG,CAACm0B,SAAJ;AACAiX,MAAAA,WAAW,CAACprC,GAAD,EAAMirC,WAAW,CAACP,KAAD,EAAQW,aAAR,EAAuB1F,KAAvB,CAAjB,CAAX;AACA3lC,MAAAA,GAAG,CAACsF,IAAJ;AACA8lC,MAAAA,WAAW,CAACprC,GAAD,EAAMirC,WAAW,CAACtF,KAAD,EAAQ,CAAC0F,aAAT,EAAwBX,KAAxB,CAAjB,CAAX;AACA1qC,MAAAA,GAAG,CAAC2T,SAAJ,GAAgB/Z,OAAO,CAACka,WAAxB;AACA9T,MAAAA,GAAG,CAAC2X,IAAJ,CAAS,SAAT;AACD;;AACD3X,IAAAA,GAAG,CAACm0B,SAAJ;AACAiX,IAAAA,WAAW,CAACprC,GAAD,EAAMirC,WAAW,CAACtF,KAAD,EAAQ0F,aAAR,EAAuBX,KAAvB,CAAjB,CAAX;AACA1qC,IAAAA,GAAG,CAAC2T,SAAJ,GAAgB/Z,OAAO,CAACga,eAAxB;AACA5T,IAAAA,GAAG,CAAC2X,IAAJ;AACA3X,IAAAA,GAAG,CAAC2zB,OAAJ;AACD;;AACDjZ,EAAAA,OAAO,CAAC4uB,MAAD,EAASC,MAAT,EAAiBhvB,gBAAjB,EAAmC;AACxC,WAAOG,OAAO,CAAC,IAAD,EAAO4uB,MAAP,EAAeC,MAAf,EAAuBhvB,gBAAvB,CAAd;AACD;;AACDivB,EAAAA,QAAQ,CAACF,MAAD,EAAS/uB,gBAAT,EAA2B;AACjC,WAAOG,OAAO,CAAC,IAAD,EAAO4uB,MAAP,EAAe,IAAf,EAAqB/uB,gBAArB,CAAd;AACD;;AACDkvB,EAAAA,QAAQ,CAACF,MAAD,EAAShvB,gBAAT,EAA2B;AACjC,WAAOG,OAAO,CAAC,IAAD,EAAO,IAAP,EAAa6uB,MAAb,EAAqBhvB,gBAArB,CAAd;AACD;;AACDO,EAAAA,cAAc,CAACP,gBAAD,EAAmB;AAC/B,UAAM;AAAC/xB,MAAAA,CAAD;AAAIE,MAAAA,CAAJ;AAAO4iB,MAAAA,IAAP;AAAaD,MAAAA;AAAb,QAA2B,KAAKqZ,QAAL,CAAc,CAAC,GAAD,EAAM,GAAN,EAAW,MAAX,EAAmB,YAAnB,CAAd,EAAgDnK,gBAAhD,CAAjC;AACA,WAAO;AACL/xB,MAAAA,CAAC,EAAE6iB,UAAU,GAAG,CAAC7iB,CAAC,GAAG8iB,IAAL,IAAa,CAAhB,GAAoB9iB,CAD5B;AAELE,MAAAA,CAAC,EAAE2iB,UAAU,GAAG3iB,CAAH,GAAO,CAACA,CAAC,GAAG4iB,IAAL,IAAa;AAF5B,KAAP;AAID;;AACDoO,EAAAA,QAAQ,CAACnb,IAAD,EAAO;AACb,WAAOA,IAAI,KAAK,GAAT,GAAe,KAAKyO,KAAL,GAAa,CAA5B,GAAgC,KAAKD,MAAL,GAAc,CAArD;AACD;;AAlD8B;;AAoDjCo+B,UAAU,CAACnuC,EAAX,GAAgB,KAAhB;AACAmuC,UAAU,CAACxlD,QAAX,GAAsB;AACpB8lB,EAAAA,aAAa,EAAE,OADK;AAEpBsH,EAAAA,WAAW,EAAE,CAFO;AAGpBywB,EAAAA,YAAY,EAAE,CAHM;AAIpB93B,EAAAA,kBAAkB,EAAE,IAJA;AAKpB6H,EAAAA,UAAU,EAAE1hB;AALQ,CAAtB;AAOAs5C,UAAU,CAACrmB,aAAX,GAA2B;AACzBlR,EAAAA,eAAe,EAAE,iBADQ;AAEzBE,EAAAA,WAAW,EAAE;AAFY,CAA3B;AAKA,IAAIvO,QAAQ,GAAG,aAAarN,MAAM,CAACuO,MAAP,CAAc;AAC1CqR,EAAAA,SAAS,EAAE,IAD+B;AAE1C+tB,EAAAA,UAAU,EAAEA,UAF8B;AAG1C8C,EAAAA,WAAW,EAAEA,WAH6B;AAI1CU,EAAAA,YAAY,EAAEA,YAJ4B;AAK1C8B,EAAAA,UAAU,EAAEA;AAL8B,CAAd,CAA5B;;AAQA,SAASG,cAAT,CAAwB/uC,IAAxB,EAA8B1J,KAA9B,EAAqC0Q,KAArC,EAA4CuZ,cAA5C,EAA4DljB,OAA5D,EAAqE;AACnE,QAAM2xC,OAAO,GAAG3xC,OAAO,CAAC2xC,OAAR,IAAmBzuB,cAAnC;;AACA,MAAIyuB,OAAO,IAAIhoC,KAAf,EAAsB;AACpB,WAAOhH,IAAI,CAAC+X,KAAL,CAAWzhB,KAAX,EAAkBA,KAAK,GAAG0Q,KAA1B,CAAP;AACD;;AACD,QAAMioC,SAAS,GAAG,EAAlB;AACA,QAAMC,WAAW,GAAG,CAACloC,KAAK,GAAG,CAAT,KAAegoC,OAAO,GAAG,CAAzB,CAApB;AACA,MAAIG,YAAY,GAAG,CAAnB;AACA,QAAMC,QAAQ,GAAG94C,KAAK,GAAG0Q,KAAR,GAAgB,CAAjC;AACA,MAAIne,CAAC,GAAGyN,KAAR;AACA,MAAIjN,CAAJ,EAAOgmD,YAAP,EAAqBC,OAArB,EAA8BrmC,IAA9B,EAAoCsmC,KAApC;AACAN,EAAAA,SAAS,CAACE,YAAY,EAAb,CAAT,GAA4BnvC,IAAI,CAACnX,CAAD,CAAhC;;AACA,OAAKQ,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAG2lD,OAAO,GAAG,CAA1B,EAA6B3lD,CAAC,EAA9B,EAAkC;AAChC,QAAI6hD,IAAI,GAAG,CAAX;AACA,QAAIsE,IAAI,GAAG,CAAX;AACA,QAAIjlD,CAAJ;AACA,UAAMklD,aAAa,GAAGr5C,IAAI,CAACgE,KAAL,CAAW,CAAC/Q,CAAC,GAAG,CAAL,IAAU6lD,WAArB,IAAoC,CAApC,GAAwC54C,KAA9D;AACA,UAAMo5C,WAAW,GAAGt5C,IAAI,CAACC,GAAL,CAASD,IAAI,CAACgE,KAAL,CAAW,CAAC/Q,CAAC,GAAG,CAAL,IAAU6lD,WAArB,IAAoC,CAA7C,EAAgDloC,KAAhD,IAAyD1Q,KAA7E;AACA,UAAMq5C,cAAc,GAAGD,WAAW,GAAGD,aAArC;;AACA,SAAKllD,CAAC,GAAGklD,aAAT,EAAwBllD,CAAC,GAAGmlD,WAA5B,EAAyCnlD,CAAC,EAA1C,EAA8C;AAC5C2gD,MAAAA,IAAI,IAAIlrC,IAAI,CAACzV,CAAD,CAAJ,CAAQ0B,CAAhB;AACAujD,MAAAA,IAAI,IAAIxvC,IAAI,CAACzV,CAAD,CAAJ,CAAQ4B,CAAhB;AACD;;AACD++C,IAAAA,IAAI,IAAIyE,cAAR;AACAH,IAAAA,IAAI,IAAIG,cAAR;AACA,UAAMC,SAAS,GAAGx5C,IAAI,CAACgE,KAAL,CAAW/Q,CAAC,GAAG6lD,WAAf,IAA8B,CAA9B,GAAkC54C,KAApD;AACA,UAAMu5C,OAAO,GAAGz5C,IAAI,CAACC,GAAL,CAASD,IAAI,CAACgE,KAAL,CAAW,CAAC/Q,CAAC,GAAG,CAAL,IAAU6lD,WAArB,IAAoC,CAA7C,EAAgDloC,KAAhD,IAAyD1Q,KAAzE;AACA,UAAM;AAACrK,MAAAA,CAAC,EAAE6jD,OAAJ;AAAa3jD,MAAAA,CAAC,EAAE4jD;AAAhB,QAA2B/vC,IAAI,CAACnX,CAAD,CAArC;AACAymD,IAAAA,OAAO,GAAGrmC,IAAI,GAAG,CAAC,CAAlB;;AACA,SAAK1e,CAAC,GAAGqlD,SAAT,EAAoBrlD,CAAC,GAAGslD,OAAxB,EAAiCtlD,CAAC,EAAlC,EAAsC;AACpC0e,MAAAA,IAAI,GAAG,MAAM7S,IAAI,CAAC0W,GAAL,CACX,CAACgjC,OAAO,GAAG5E,IAAX,KAAoBlrC,IAAI,CAACzV,CAAD,CAAJ,CAAQ4B,CAAR,GAAY4jD,OAAhC,IACA,CAACD,OAAO,GAAG9vC,IAAI,CAACzV,CAAD,CAAJ,CAAQ0B,CAAnB,KAAyBujD,IAAI,GAAGO,OAAhC,CAFW,CAAb;;AAIA,UAAI9mC,IAAI,GAAGqmC,OAAX,EAAoB;AAClBA,QAAAA,OAAO,GAAGrmC,IAAV;AACAomC,QAAAA,YAAY,GAAGrvC,IAAI,CAACzV,CAAD,CAAnB;AACAglD,QAAAA,KAAK,GAAGhlD,CAAR;AACD;AACF;;AACD0kD,IAAAA,SAAS,CAACE,YAAY,EAAb,CAAT,GAA4BE,YAA5B;AACAxmD,IAAAA,CAAC,GAAG0mD,KAAJ;AACD;;AACDN,EAAAA,SAAS,CAACE,YAAY,EAAb,CAAT,GAA4BnvC,IAAI,CAACovC,QAAD,CAAhC;AACA,SAAOH,SAAP;AACD;;AACD,SAASe,gBAAT,CAA0BhwC,IAA1B,EAAgC1J,KAAhC,EAAuC0Q,KAAvC,EAA8CuZ,cAA9C,EAA8D;AAC5D,MAAI2qB,IAAI,GAAG,CAAX;AACA,MAAIC,MAAM,GAAG,CAAb;AACA,MAAI9hD,CAAJ,EAAOkpB,KAAP,EAActmB,CAAd,EAAiBE,CAAjB,EAAoBi/C,KAApB,EAA2B6E,QAA3B,EAAqCC,QAArC,EAA+CC,UAA/C,EAA2D77B,IAA3D,EAAiEF,IAAjE;AACA,QAAM66B,SAAS,GAAG,EAAlB;AACA,QAAMG,QAAQ,GAAG94C,KAAK,GAAG0Q,KAAR,GAAgB,CAAjC;AACA,QAAMopC,IAAI,GAAGpwC,IAAI,CAAC1J,KAAD,CAAJ,CAAYrK,CAAzB;AACA,QAAMokD,IAAI,GAAGrwC,IAAI,CAACovC,QAAD,CAAJ,CAAenjD,CAA5B;AACA,QAAMqkD,EAAE,GAAGD,IAAI,GAAGD,IAAlB;;AACA,OAAK/mD,CAAC,GAAGiN,KAAT,EAAgBjN,CAAC,GAAGiN,KAAK,GAAG0Q,KAA5B,EAAmC,EAAE3d,CAArC,EAAwC;AACtCkpB,IAAAA,KAAK,GAAGvS,IAAI,CAAC3W,CAAD,CAAZ;AACA4C,IAAAA,CAAC,GAAG,CAACsmB,KAAK,CAACtmB,CAAN,GAAUmkD,IAAX,IAAmBE,EAAnB,GAAwB/vB,cAA5B;AACAp0B,IAAAA,CAAC,GAAGomB,KAAK,CAACpmB,CAAV;AACA,UAAMq/C,MAAM,GAAGv/C,CAAC,GAAG,CAAnB;;AACA,QAAIu/C,MAAM,KAAKJ,KAAf,EAAsB;AACpB,UAAIj/C,CAAC,GAAGmoB,IAAR,EAAc;AACZA,QAAAA,IAAI,GAAGnoB,CAAP;AACA8jD,QAAAA,QAAQ,GAAG5mD,CAAX;AACD,OAHD,MAGO,IAAI8C,CAAC,GAAGioB,IAAR,EAAc;AACnBA,QAAAA,IAAI,GAAGjoB,CAAP;AACA+jD,QAAAA,QAAQ,GAAG7mD,CAAX;AACD;;AACD6hD,MAAAA,IAAI,GAAG,CAACC,MAAM,GAAGD,IAAT,GAAgB34B,KAAK,CAACtmB,CAAvB,IAA4B,EAAEk/C,MAArC;AACD,KATD,MASO;AACL,YAAMoF,SAAS,GAAGlnD,CAAC,GAAG,CAAtB;;AACA,UAAI,CAACmB,aAAa,CAACylD,QAAD,CAAd,IAA4B,CAACzlD,aAAa,CAAC0lD,QAAD,CAA9C,EAA0D;AACxD,cAAMM,kBAAkB,GAAGp6C,IAAI,CAACC,GAAL,CAAS45C,QAAT,EAAmBC,QAAnB,CAA3B;AACA,cAAMO,kBAAkB,GAAGr6C,IAAI,CAACmC,GAAL,CAAS03C,QAAT,EAAmBC,QAAnB,CAA3B;;AACA,YAAIM,kBAAkB,KAAKL,UAAvB,IAAqCK,kBAAkB,KAAKD,SAAhE,EAA2E;AACzEtB,UAAAA,SAAS,CAACh3C,IAAV,CAAe,EACb,GAAG+H,IAAI,CAACwwC,kBAAD,CADM;AAEbvkD,YAAAA,CAAC,EAAEi/C;AAFU,WAAf;AAID;;AACD,YAAIuF,kBAAkB,KAAKN,UAAvB,IAAqCM,kBAAkB,KAAKF,SAAhE,EAA2E;AACzEtB,UAAAA,SAAS,CAACh3C,IAAV,CAAe,EACb,GAAG+H,IAAI,CAACywC,kBAAD,CADM;AAEbxkD,YAAAA,CAAC,EAAEi/C;AAFU,WAAf;AAID;AACF;;AACD,UAAI7hD,CAAC,GAAG,CAAJ,IAASknD,SAAS,KAAKJ,UAA3B,EAAuC;AACrClB,QAAAA,SAAS,CAACh3C,IAAV,CAAe+H,IAAI,CAACuwC,SAAD,CAAnB;AACD;;AACDtB,MAAAA,SAAS,CAACh3C,IAAV,CAAesa,KAAf;AACA64B,MAAAA,KAAK,GAAGI,MAAR;AACAL,MAAAA,MAAM,GAAG,CAAT;AACA72B,MAAAA,IAAI,GAAGF,IAAI,GAAGjoB,CAAd;AACA8jD,MAAAA,QAAQ,GAAGC,QAAQ,GAAGC,UAAU,GAAG9mD,CAAnC;AACD;AACF;;AACD,SAAO4lD,SAAP;AACD;;AACD,SAASyB,qBAAT,CAA+B9tC,OAA/B,EAAwC;AACtC,MAAIA,OAAO,CAAC2V,UAAZ,EAAwB;AACtB,UAAMvY,IAAI,GAAG4C,OAAO,CAACkB,KAArB;AACA,WAAOlB,OAAO,CAAC2V,UAAf;AACA,WAAO3V,OAAO,CAACkB,KAAf;AACAnI,IAAAA,MAAM,CAACg1C,cAAP,CAAsB/tC,OAAtB,EAA+B,MAA/B,EAAuC;AAAC9E,MAAAA,KAAK,EAAEkC;AAAR,KAAvC;AACD;AACF;;AACD,SAAS4wC,kBAAT,CAA4Bp7C,KAA5B,EAAmC;AACjCA,EAAAA,KAAK,CAACwK,IAAN,CAAW0F,QAAX,CAAoB1P,OAApB,CAA6B4M,OAAD,IAAa;AACvC8tC,IAAAA,qBAAqB,CAAC9tC,OAAD,CAArB;AACD,GAFD;AAGD;;AACD,SAASiuC,yCAAT,CAAmDzwC,IAAnD,EAAyDkS,MAAzD,EAAiE;AAC/D,QAAM8G,UAAU,GAAG9G,MAAM,CAACrb,MAA1B;AACA,MAAIX,KAAK,GAAG,CAAZ;AACA,MAAI0Q,KAAJ;AACA,QAAM;AAAClF,IAAAA;AAAD,MAAW1B,IAAjB;AACA,QAAM;AAAC/J,IAAAA,GAAD;AAAMkC,IAAAA,GAAN;AAAWoI,IAAAA,UAAX;AAAuBC,IAAAA;AAAvB,MAAqCkB,MAAM,CAACpB,aAAP,EAA3C;;AACA,MAAIC,UAAJ,EAAgB;AACdrK,IAAAA,KAAK,GAAGxK,WAAW,CAACE,YAAY,CAACsmB,MAAD,EAASxQ,MAAM,CAACE,IAAhB,EAAsB3L,GAAtB,CAAZ,CAAuCgjB,EAAxC,EAA4C,CAA5C,EAA+CD,UAAU,GAAG,CAA5D,CAAnB;AACD;;AACD,MAAIxY,UAAJ,EAAgB;AACdoG,IAAAA,KAAK,GAAGlb,WAAW,CAACE,YAAY,CAACsmB,MAAD,EAASxQ,MAAM,CAACE,IAAhB,EAAsBzJ,GAAtB,CAAZ,CAAuC+gB,EAAvC,GAA4C,CAA7C,EAAgDhjB,KAAhD,EAAuD8iB,UAAvD,CAAX,GAAgF9iB,KAAxF;AACD,GAFD,MAEO;AACL0Q,IAAAA,KAAK,GAAGoS,UAAU,GAAG9iB,KAArB;AACD;;AACD,SAAO;AAACA,IAAAA,KAAD;AAAQ0Q,IAAAA;AAAR,GAAP;AACD;;AACD,IAAI8pC,iBAAiB,GAAG;AACtBrwC,EAAAA,EAAE,EAAE,YADkB;AAEtBrX,EAAAA,QAAQ,EAAE;AACR2nD,IAAAA,SAAS,EAAE,SADH;AAER1lB,IAAAA,OAAO,EAAE;AAFD,GAFY;AAMtB2lB,EAAAA,oBAAoB,EAAE,CAACx7C,KAAD,EAAQ6xB,IAAR,EAAchqB,OAAd,KAA0B;AAC9C,QAAI,CAACA,OAAO,CAACguB,OAAb,EAAsB;AACpBulB,MAAAA,kBAAkB,CAACp7C,KAAD,CAAlB;AACA;AACD;;AACD,UAAM+qB,cAAc,GAAG/qB,KAAK,CAACib,KAA7B;AACAjb,IAAAA,KAAK,CAACwK,IAAN,CAAW0F,QAAX,CAAoB1P,OAApB,CAA4B,CAAC4M,OAAD,EAAU/C,YAAV,KAA2B;AACrD,YAAM;AAACiE,QAAAA,KAAD;AAAQqB,QAAAA;AAAR,UAAqBvC,OAA3B;AACA,YAAMxC,IAAI,GAAG5K,KAAK,CAACmQ,cAAN,CAAqB9F,YAArB,CAAb;AACA,YAAMG,IAAI,GAAG8D,KAAK,IAAIlB,OAAO,CAAC5C,IAA9B;;AACA,UAAIlX,OAAO,CAAC,CAACqc,SAAD,EAAY3P,KAAK,CAAC6H,OAAN,CAAc8H,SAA1B,CAAD,CAAP,KAAkD,GAAtD,EAA2D;AACzD;AACD;;AACD,UAAI/E,IAAI,CAACzK,IAAL,KAAc,MAAlB,EAA0B;AACxB;AACD;;AACD,YAAMs7C,KAAK,GAAGz7C,KAAK,CAAC8M,MAAN,CAAalC,IAAI,CAAC0E,OAAlB,CAAd;;AACA,UAAImsC,KAAK,CAACt7C,IAAN,KAAe,QAAf,IAA2Bs7C,KAAK,CAACt7C,IAAN,KAAe,MAA9C,EAAsD;AACpD;AACD;;AACD,UAAIH,KAAK,CAAC6H,OAAN,CAAcyJ,OAAlB,EAA2B;AACzB;AACD;;AACD,UAAI;AAACxQ,QAAAA,KAAD;AAAQ0Q,QAAAA;AAAR,UAAiB6pC,yCAAyC,CAACzwC,IAAD,EAAOJ,IAAP,CAA9D;AACA,YAAMkxC,SAAS,GAAG7zC,OAAO,CAAC6zC,SAAR,IAAqB,IAAI3wB,cAA3C;;AACA,UAAIvZ,KAAK,IAAIkqC,SAAb,EAAwB;AACtBR,QAAAA,qBAAqB,CAAC9tC,OAAD,CAArB;AACA;AACD;;AACD,UAAIpY,aAAa,CAACsZ,KAAD,CAAjB,EAA0B;AACxBlB,QAAAA,OAAO,CAACkB,KAAR,GAAgB9D,IAAhB;AACA,eAAO4C,OAAO,CAAC5C,IAAf;AACArE,QAAAA,MAAM,CAACg1C,cAAP,CAAsB/tC,OAAtB,EAA+B,MAA/B,EAAuC;AACrCuuC,UAAAA,YAAY,EAAE,IADuB;AAErC3K,UAAAA,UAAU,EAAE,IAFyB;AAGrC9uC,UAAAA,GAAG,EAAE,YAAW;AACd,mBAAO,KAAK6gB,UAAZ;AACD,WALoC;AAMrC1gB,UAAAA,GAAG,EAAE,UAAS1O,CAAT,EAAY;AACf,iBAAK2a,KAAL,GAAa3a,CAAb;AACD;AARoC,SAAvC;AAUD;;AACD,UAAI8lD,SAAJ;;AACA,cAAQ5xC,OAAO,CAAC0zC,SAAhB;AACA,aAAK,MAAL;AACE9B,UAAAA,SAAS,GAAGF,cAAc,CAAC/uC,IAAD,EAAO1J,KAAP,EAAc0Q,KAAd,EAAqBuZ,cAArB,EAAqCljB,OAArC,CAA1B;AACA;;AACF,aAAK,SAAL;AACE4xC,UAAAA,SAAS,GAAGe,gBAAgB,CAAChwC,IAAD,EAAO1J,KAAP,EAAc0Q,KAAd,EAAqBuZ,cAArB,CAA5B;AACA;;AACF;AACE,gBAAM,IAAI9E,KAAJ,CAAW,qCAAoCpe,OAAO,CAAC0zC,SAAU,GAAjE,CAAN;AARF;;AAUAnuC,MAAAA,OAAO,CAAC2V,UAAR,GAAqB02B,SAArB;AACD,KAjDD;AAkDD,GA9DqB;;AA+DtBlK,EAAAA,OAAO,CAACvvC,KAAD,EAAQ;AACbo7C,IAAAA,kBAAkB,CAACp7C,KAAD,CAAlB;AACD;;AAjEqB,CAAxB;;AAoEA,SAAS47C,cAAT,CAAwB57C,KAAxB,EAA+B+J,KAA/B,EAAsC;AACpC,QAAMa,IAAI,GAAG5K,KAAK,CAACmQ,cAAN,CAAqBpG,KAArB,CAAb;AACA,QAAMhD,OAAO,GAAG6D,IAAI,IAAI5K,KAAK,CAACqf,gBAAN,CAAuBtV,KAAvB,CAAxB;AACA,SAAOhD,OAAO,GAAG6D,IAAI,CAACwC,OAAR,GAAkB,IAAhC;AACD;;AACD,SAASyuC,eAAT,CAAyBp5B,IAAzB,EAA+B;AAC7B,QAAM5a,OAAO,GAAG4a,IAAI,CAAC5a,OAArB;AACA,QAAMi0C,UAAU,GAAGj0C,OAAO,CAAC+d,IAA3B;AACA,MAAIA,IAAI,GAAG1xB,cAAc,CAAC4nD,UAAU,IAAIA,UAAU,CAAC13C,MAA1B,EAAkC03C,UAAlC,CAAzB;;AACA,MAAIl2B,IAAI,KAAK9lB,SAAb,EAAwB;AACtB8lB,IAAAA,IAAI,GAAG,CAAC,CAAC/d,OAAO,CAACga,eAAjB;AACD;;AACD,MAAI+D,IAAI,KAAK,KAAT,IAAkBA,IAAI,KAAK,IAA/B,EAAqC;AACnC,WAAO,KAAP;AACD;;AACD,MAAIA,IAAI,KAAK,IAAb,EAAmB;AACjB,WAAO,QAAP;AACD;;AACD,SAAOA,IAAP;AACD;;AACD,SAASm2B,UAAT,CAAoBt5B,IAApB,EAA0B1Y,KAA1B,EAAiCyH,KAAjC,EAAwC;AACtC,QAAMoU,IAAI,GAAGi2B,eAAe,CAACp5B,IAAD,CAA5B;;AACA,MAAI3uB,QAAQ,CAAC8xB,IAAD,CAAZ,EAAoB;AAClB,WAAOtK,KAAK,CAACsK,IAAI,CAACtd,KAAN,CAAL,GAAoB,KAApB,GAA4Bsd,IAAnC;AACD;;AACD,MAAIxhB,MAAM,GAAG43C,UAAU,CAACp2B,IAAD,CAAvB;;AACA,MAAIlxB,cAAc,CAAC0P,MAAD,CAAd,IAA0BxD,IAAI,CAACgE,KAAL,CAAWR,MAAX,MAAuBA,MAArD,EAA6D;AAC3D,QAAIwhB,IAAI,CAAC,CAAD,CAAJ,KAAY,GAAZ,IAAmBA,IAAI,CAAC,CAAD,CAAJ,KAAY,GAAnC,EAAwC;AACtCxhB,MAAAA,MAAM,GAAG2F,KAAK,GAAG3F,MAAjB;AACD;;AACD,QAAIA,MAAM,KAAK2F,KAAX,IAAoB3F,MAAM,GAAG,CAA7B,IAAkCA,MAAM,IAAIoN,KAAhD,EAAuD;AACrD,aAAO,KAAP;AACD;;AACD,WAAOpN,MAAP;AACD;;AACD,SAAO,CAAC,QAAD,EAAW,OAAX,EAAoB,KAApB,EAA2B,OAA3B,EAAoC,OAApC,EAA6CmX,OAA7C,CAAqDqK,IAArD,KAA8D,CAA9D,IAAmEA,IAA1E;AACD;;AACD,SAASq2B,qBAAT,CAA+BzgB,MAA/B,EAAuC;AACrC,QAAM;AAAC5yB,IAAAA,KAAK,GAAG,EAAT;AAAagd,IAAAA;AAAb,MAAqB4V,MAA3B;AACA,MAAIp3B,MAAM,GAAG,IAAb;AACA,MAAIkV,UAAJ;;AACA,MAAIsM,IAAI,KAAK,OAAb,EAAsB;AACpBxhB,IAAAA,MAAM,GAAGwE,KAAK,CAACU,MAAf;AACD,GAFD,MAEO,IAAIsc,IAAI,KAAK,KAAb,EAAoB;AACzBxhB,IAAAA,MAAM,GAAGwE,KAAK,CAACQ,GAAf;AACD,GAFM,MAEA,IAAItV,QAAQ,CAAC8xB,IAAD,CAAZ,EAAoB;AACzBxhB,IAAAA,MAAM,GAAGwE,KAAK,CAAC2O,gBAAN,CAAuBqO,IAAI,CAACtd,KAA5B,CAAT;AACD,GAFM,MAEA,IAAIM,KAAK,CAAC2R,YAAV,EAAwB;AAC7BnW,IAAAA,MAAM,GAAGwE,KAAK,CAAC2R,YAAN,EAAT;AACD;;AACD,MAAI7lB,cAAc,CAAC0P,MAAD,CAAlB,EAA4B;AAC1BkV,IAAAA,UAAU,GAAG1Q,KAAK,CAACwQ,YAAN,EAAb;AACA,WAAO;AACL3iB,MAAAA,CAAC,EAAE6iB,UAAU,GAAGlV,MAAH,GAAY,IADpB;AAELzN,MAAAA,CAAC,EAAE2iB,UAAU,GAAG,IAAH,GAAUlV;AAFlB,KAAP;AAID;;AACD,SAAO,IAAP;AACD;;AACD,MAAM83C,SAAN,CAAgB;AACd18C,EAAAA,WAAW,CAACsJ,IAAD,EAAO;AAChB,SAAKrS,CAAL,GAASqS,IAAI,CAACrS,CAAd;AACA,SAAKE,CAAL,GAASmS,IAAI,CAACnS,CAAd;AACA,SAAKymB,MAAL,GAActU,IAAI,CAACsU,MAAnB;AACD;;AACDm4B,EAAAA,WAAW,CAACtnC,GAAD,EAAM4lB,MAAN,EAAc/qB,IAAd,EAAoB;AAC7B,UAAM;AAACrS,MAAAA,CAAD;AAAIE,MAAAA,CAAJ;AAAOymB,MAAAA;AAAP,QAAiB,IAAvB;AACAyW,IAAAA,MAAM,GAAGA,MAAM,IAAI;AAAC/yB,MAAAA,KAAK,EAAE,CAAR;AAAWkI,MAAAA,GAAG,EAAEtT;AAAhB,KAAnB;AACAuY,IAAAA,GAAG,CAAC2S,GAAJ,CAAQnqB,CAAR,EAAWE,CAAX,EAAcymB,MAAd,EAAsByW,MAAM,CAAC7qB,GAA7B,EAAkC6qB,MAAM,CAAC/yB,KAAzC,EAAgD,IAAhD;AACA,WAAO,CAACgI,IAAI,CAAC+qB,MAAb;AACD;;AACDmjB,EAAAA,WAAW,CAACj6B,KAAD,EAAQ;AACjB,UAAM;AAACtmB,MAAAA,CAAD;AAAIE,MAAAA,CAAJ;AAAOymB,MAAAA;AAAP,QAAiB,IAAvB;AACA,UAAMqB,KAAK,GAAG1B,KAAK,CAAC0B,KAApB;AACA,WAAO;AACLhoB,MAAAA,CAAC,EAAEA,CAAC,GAAGmK,IAAI,CAACud,GAAL,CAASM,KAAT,IAAkBrB,MADpB;AAELzmB,MAAAA,CAAC,EAAEA,CAAC,GAAGiK,IAAI,CAACyd,GAAL,CAASI,KAAT,IAAkBrB,MAFpB;AAGLqB,MAAAA;AAHK,KAAP;AAKD;;AApBa;;AAsBhB,SAAS09B,uBAAT,CAAiC3gB,MAAjC,EAAyC;AACvC,QAAM;AAAC5yB,IAAAA,KAAD;AAAQgd,IAAAA;AAAR,MAAgB4V,MAAtB;AACA,QAAM3zB,OAAO,GAAGe,KAAK,CAACf,OAAtB;AACA,QAAMpG,MAAM,GAAGmH,KAAK,CAACqJ,SAAN,GAAkBxQ,MAAjC;AACA,QAAM2C,MAAM,GAAG,EAAf;AACA,QAAMtD,KAAK,GAAG+G,OAAO,CAACkB,OAAR,GAAkBH,KAAK,CAAC7F,GAAxB,GAA8B6F,KAAK,CAAC/H,GAAlD;AACA,QAAMmI,GAAG,GAAGnB,OAAO,CAACkB,OAAR,GAAkBH,KAAK,CAAC/H,GAAxB,GAA8B+H,KAAK,CAAC7F,GAAhD;AACA,MAAIlP,CAAJ,EAAOknB,MAAP,EAAezS,KAAf;;AACA,MAAIsd,IAAI,KAAK,OAAb,EAAsB;AACpBtd,IAAAA,KAAK,GAAGxH,KAAR;AACD,GAFD,MAEO,IAAI8kB,IAAI,KAAK,KAAb,EAAoB;AACzBtd,IAAAA,KAAK,GAAGU,GAAR;AACD,GAFM,MAEA,IAAIlV,QAAQ,CAAC8xB,IAAD,CAAZ,EAAoB;AACzBtd,IAAAA,KAAK,GAAGsd,IAAI,CAACtd,KAAb;AACD,GAFM,MAEA;AACLA,IAAAA,KAAK,GAAGM,KAAK,CAACm2B,YAAN,EAAR;AACD;;AACD,MAAIl3B,OAAO,CAAC6U,IAAR,CAAa2I,QAAjB,EAA2B;AACzBtK,IAAAA,MAAM,GAAGnS,KAAK,CAAC+c,wBAAN,CAA+B,CAA/B,EAAkC7kB,KAAlC,CAAT;AACA,WAAO,IAAIo7C,SAAJ,CAAc;AACnBzlD,MAAAA,CAAC,EAAEskB,MAAM,CAACtkB,CADS;AAEnBE,MAAAA,CAAC,EAAEokB,MAAM,CAACpkB,CAFS;AAGnBymB,MAAAA,MAAM,EAAExU,KAAK,CAACsc,6BAAN,CAAoC5c,KAApC;AAHW,KAAd,CAAP;AAKD;;AACD,OAAKzU,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAG4N,MAAhB,EAAwB,EAAE5N,CAA1B,EAA6B;AAC3BuQ,IAAAA,MAAM,CAAC3B,IAAP,CAAYmG,KAAK,CAAC+c,wBAAN,CAA+B9xB,CAA/B,EAAkCyU,KAAlC,CAAZ;AACD;;AACD,SAAOlE,MAAP;AACD;;AACD,SAASg4C,eAAT,CAAyB5gB,MAAzB,EAAiC;AAC/B,QAAM5yB,KAAK,GAAG4yB,MAAM,CAAC5yB,KAAP,IAAgB,EAA9B;;AACA,MAAIA,KAAK,CAAC+c,wBAAV,EAAoC;AAClC,WAAOw2B,uBAAuB,CAAC3gB,MAAD,CAA9B;AACD;;AACD,SAAOygB,qBAAqB,CAACzgB,MAAD,CAA5B;AACD;;AACD,SAAS6gB,cAAT,CAAwBv7C,KAAxB,EAA+BkI,GAA/B,EAAoC8T,MAApC,EAA4C;AAC1C,SAAM9T,GAAG,GAAGlI,KAAZ,EAAmBkI,GAAG,EAAtB,EAA0B;AACxB,UAAM+T,KAAK,GAAGD,MAAM,CAAC9T,GAAD,CAApB;;AACA,QAAI,CAACsS,KAAK,CAACyB,KAAK,CAACtmB,CAAP,CAAN,IAAmB,CAAC6kB,KAAK,CAACyB,KAAK,CAACpmB,CAAP,CAA7B,EAAwC;AACtC;AACD;AACF;;AACD,SAAOqS,GAAP;AACD;;AACD,SAASszC,kBAAT,CAA4BC,QAA5B,EAAsC95B,IAAtC,EAA4C;AAC1C,QAAM;AAAChsB,IAAAA,CAAC,GAAG,IAAL;AAAWE,IAAAA,CAAC,GAAG;AAAf,MAAuB4lD,QAAQ,IAAI,EAAzC;AACA,QAAMC,UAAU,GAAG/5B,IAAI,CAAC3F,MAAxB;AACA,QAAMA,MAAM,GAAG,EAAf;AACA2F,EAAAA,IAAI,CAACg0B,QAAL,CAAcj2C,OAAd,CAAsB,CAAC;AAACM,IAAAA,KAAD;AAAQkI,IAAAA;AAAR,GAAD,KAAkB;AACtCA,IAAAA,GAAG,GAAGqzC,cAAc,CAACv7C,KAAD,EAAQkI,GAAR,EAAawzC,UAAb,CAApB;AACA,UAAMxmB,KAAK,GAAGwmB,UAAU,CAAC17C,KAAD,CAAxB;AACA,UAAMqa,IAAI,GAAGqhC,UAAU,CAACxzC,GAAD,CAAvB;;AACA,QAAIrS,CAAC,KAAK,IAAV,EAAgB;AACdmmB,MAAAA,MAAM,CAACra,IAAP,CAAY;AAAChM,QAAAA,CAAC,EAAEu/B,KAAK,CAACv/B,CAAV;AAAaE,QAAAA;AAAb,OAAZ;AACAmmB,MAAAA,MAAM,CAACra,IAAP,CAAY;AAAChM,QAAAA,CAAC,EAAE0kB,IAAI,CAAC1kB,CAAT;AAAYE,QAAAA;AAAZ,OAAZ;AACD,KAHD,MAGO,IAAIF,CAAC,KAAK,IAAV,EAAgB;AACrBqmB,MAAAA,MAAM,CAACra,IAAP,CAAY;AAAChM,QAAAA,CAAD;AAAIE,QAAAA,CAAC,EAAEq/B,KAAK,CAACr/B;AAAb,OAAZ;AACAmmB,MAAAA,MAAM,CAACra,IAAP,CAAY;AAAChM,QAAAA,CAAD;AAAIE,QAAAA,CAAC,EAAEwkB,IAAI,CAACxkB;AAAZ,OAAZ;AACD;AACF,GAXD;AAYA,SAAOmmB,MAAP;AACD;;AACD,SAAS2/B,cAAT,CAAwBjhB,MAAxB,EAAgC;AAC9B,QAAM;AAACx7B,IAAAA,KAAD;AAAQ4I,IAAAA,KAAR;AAAemB,IAAAA,KAAf;AAAsB0Y,IAAAA;AAAtB,MAA8B+Y,MAApC;AACA,QAAM1e,MAAM,GAAG,EAAf;AACA,QAAM25B,QAAQ,GAAGh0B,IAAI,CAACg0B,QAAtB;AACA,QAAMiG,YAAY,GAAGj6B,IAAI,CAAC3F,MAA1B;AACA,QAAM6/B,UAAU,GAAGC,aAAa,CAAC58C,KAAD,EAAQ+J,KAAR,CAAhC;AACA4yC,EAAAA,UAAU,CAACl6C,IAAX,CAAgBo6C,kBAAkB,CAAC;AAACpmD,IAAAA,CAAC,EAAE,IAAJ;AAAUE,IAAAA,CAAC,EAAEiS,KAAK,CAACU;AAAnB,GAAD,EAA6BmZ,IAA7B,CAAlC;;AACA,OAAK,IAAI5uB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG4iD,QAAQ,CAACh1C,MAA7B,EAAqC5N,CAAC,EAAtC,EAA0C;AACxC,UAAMovB,OAAO,GAAGwzB,QAAQ,CAAC5iD,CAAD,CAAxB;;AACA,SAAK,IAAIkB,CAAC,GAAGkuB,OAAO,CAACniB,KAArB,EAA4B/L,CAAC,IAAIkuB,OAAO,CAACja,GAAzC,EAA8CjU,CAAC,EAA/C,EAAmD;AACjD+nD,MAAAA,cAAc,CAAChgC,MAAD,EAAS4/B,YAAY,CAAC3nD,CAAD,CAArB,EAA0B4nD,UAA1B,CAAd;AACD;AACF;;AACD,SAAO,IAAI/F,WAAJ,CAAgB;AAAC95B,IAAAA,MAAD;AAASjV,IAAAA,OAAO,EAAE;AAAlB,GAAhB,CAAP;AACD;;AACD,MAAMk1C,2BAA2B,GAAInyC,IAAD,IAAUA,IAAI,CAACzK,IAAL,KAAc,MAAd,IAAwB,CAACyK,IAAI,CAAC+I,MAA5E;;AACA,SAASipC,aAAT,CAAuB58C,KAAvB,EAA8B+J,KAA9B,EAAqC;AACnC,QAAMizC,KAAK,GAAG,EAAd;AACA,QAAMjmC,KAAK,GAAG/W,KAAK,CAACmnB,4BAAN,EAAd;;AACA,OAAK,IAAItzB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGkjB,KAAK,CAACtV,MAA1B,EAAkC5N,CAAC,EAAnC,EAAuC;AACrC,UAAM+W,IAAI,GAAGmM,KAAK,CAACljB,CAAD,CAAlB;;AACA,QAAI+W,IAAI,CAACb,KAAL,KAAeA,KAAnB,EAA0B;AACxB;AACD;;AACD,QAAIgzC,2BAA2B,CAACnyC,IAAD,CAA/B,EAAuC;AACrCoyC,MAAAA,KAAK,CAACC,OAAN,CAAcryC,IAAI,CAACwC,OAAnB;AACD;AACF;;AACD,SAAO4vC,KAAP;AACD;;AACD,SAASF,cAAT,CAAwBhgC,MAAxB,EAAgCogC,WAAhC,EAA6CP,UAA7C,EAAyD;AACvD,QAAMQ,SAAS,GAAG,EAAlB;;AACA,OAAK,IAAIpoD,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG4nD,UAAU,CAACl7C,MAA/B,EAAuC1M,CAAC,EAAxC,EAA4C;AAC1C,UAAM0tB,IAAI,GAAGk6B,UAAU,CAAC5nD,CAAD,CAAvB;AACA,UAAM;AAACihC,MAAAA,KAAD;AAAQ7a,MAAAA,IAAR;AAAc4B,MAAAA;AAAd,QAAuBqgC,SAAS,CAAC36B,IAAD,EAAOy6B,WAAP,EAAoB,GAApB,CAAtC;;AACA,QAAI,CAACngC,KAAD,IAAWiZ,KAAK,IAAI7a,IAAxB,EAA+B;AAC7B;AACD;;AACD,QAAI6a,KAAJ,EAAW;AACTmnB,MAAAA,SAAS,CAACF,OAAV,CAAkBlgC,KAAlB;AACD,KAFD,MAEO;AACLD,MAAAA,MAAM,CAACra,IAAP,CAAYsa,KAAZ;;AACA,UAAI,CAAC5B,IAAL,EAAW;AACT;AACD;AACF;AACF;;AACD2B,EAAAA,MAAM,CAACra,IAAP,CAAY,GAAG06C,SAAf;AACD;;AACD,SAASC,SAAT,CAAmB36B,IAAnB,EAAyBy6B,WAAzB,EAAsCpZ,QAAtC,EAAgD;AAC9C,QAAM/mB,KAAK,GAAG0F,IAAI,CAACu0B,WAAL,CAAiBkG,WAAjB,EAA8BpZ,QAA9B,CAAd;;AACA,MAAI,CAAC/mB,KAAL,EAAY;AACV,WAAO,EAAP;AACD;;AACD,QAAMsgC,UAAU,GAAGtgC,KAAK,CAAC+mB,QAAD,CAAxB;AACA,QAAM2S,QAAQ,GAAGh0B,IAAI,CAACg0B,QAAtB;AACA,QAAM+F,UAAU,GAAG/5B,IAAI,CAAC3F,MAAxB;AACA,MAAIkZ,KAAK,GAAG,KAAZ;AACA,MAAI7a,IAAI,GAAG,KAAX;;AACA,OAAK,IAAItnB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG4iD,QAAQ,CAACh1C,MAA7B,EAAqC5N,CAAC,EAAtC,EAA0C;AACxC,UAAMovB,OAAO,GAAGwzB,QAAQ,CAAC5iD,CAAD,CAAxB;AACA,UAAMypD,UAAU,GAAGd,UAAU,CAACv5B,OAAO,CAACniB,KAAT,CAAV,CAA0BgjC,QAA1B,CAAnB;AACA,UAAMyZ,SAAS,GAAGf,UAAU,CAACv5B,OAAO,CAACja,GAAT,CAAV,CAAwB86B,QAAxB,CAAlB;;AACA,QAAIuZ,UAAU,IAAIC,UAAd,IAA4BD,UAAU,IAAIE,SAA9C,EAAyD;AACvDvnB,MAAAA,KAAK,GAAGqnB,UAAU,KAAKC,UAAvB;AACAniC,MAAAA,IAAI,GAAGkiC,UAAU,KAAKE,SAAtB;AACA;AACD;AACF;;AACD,SAAO;AAACvnB,IAAAA,KAAD;AAAQ7a,IAAAA,IAAR;AAAc4B,IAAAA;AAAd,GAAP;AACD;;AACD,SAASygC,SAAT,CAAmBhiB,MAAnB,EAA2B;AACzB,QAAM;AAACx7B,IAAAA,KAAD;AAAQ4lB,IAAAA,IAAR;AAAcnD,IAAAA;AAAd,MAAsB+Y,MAA5B;;AACA,MAAI9mC,cAAc,CAACkxB,IAAD,CAAlB,EAA0B;AACxB,WAAOg2B,cAAc,CAAC57C,KAAD,EAAQ4lB,IAAR,CAArB;AACD;;AACD,MAAIA,IAAI,KAAK,OAAb,EAAsB;AACpB,WAAO62B,cAAc,CAACjhB,MAAD,CAArB;AACD;;AACD,MAAI5V,IAAI,KAAK,OAAb,EAAsB;AACpB,WAAO,IAAP;AACD;;AACD,QAAM22B,QAAQ,GAAGH,eAAe,CAAC5gB,MAAD,CAAhC;;AACA,MAAI+gB,QAAQ,YAAYL,SAAxB,EAAmC;AACjC,WAAOK,QAAP;AACD;;AACD,SAAOM,kBAAkB,CAACN,QAAD,EAAW95B,IAAX,CAAzB;AACD;;AACD,SAASo6B,kBAAT,CAA4BN,QAA5B,EAAsC95B,IAAtC,EAA4C;AAC1C,MAAI3F,MAAM,GAAG,EAAb;AACA,MAAIhY,KAAK,GAAG,KAAZ;;AACA,MAAI9Q,OAAO,CAACuoD,QAAD,CAAX,EAAuB;AACrBz3C,IAAAA,KAAK,GAAG,IAAR;AACAgY,IAAAA,MAAM,GAAGy/B,QAAT;AACD,GAHD,MAGO;AACLz/B,IAAAA,MAAM,GAAGw/B,kBAAkB,CAACC,QAAD,EAAW95B,IAAX,CAA3B;AACD;;AACD,SAAO3F,MAAM,CAACrb,MAAP,GAAgB,IAAIm1C,WAAJ,CAAgB;AACrC95B,IAAAA,MADqC;AAErCjV,IAAAA,OAAO,EAAE;AAACktC,MAAAA,OAAO,EAAE;AAAV,KAF4B;AAGrCjwC,IAAAA,KAHqC;AAIrC2gB,IAAAA,SAAS,EAAE3gB;AAJ0B,GAAhB,CAAhB,GAKF,IALL;AAMD;;AACD,SAAS24C,aAAT,CAAuBC,OAAvB,EAAgC3zC,KAAhC,EAAuC4zC,SAAvC,EAAkD;AAChD,QAAMniB,MAAM,GAAGkiB,OAAO,CAAC3zC,KAAD,CAAtB;AACA,MAAI6b,IAAI,GAAG4V,MAAM,CAAC5V,IAAlB;AACA,QAAMg4B,OAAO,GAAG,CAAC7zC,KAAD,CAAhB;AACA,MAAI3F,MAAJ;;AACA,MAAI,CAACu5C,SAAL,EAAgB;AACd,WAAO/3B,IAAP;AACD;;AACD,SAAOA,IAAI,KAAK,KAAT,IAAkBg4B,OAAO,CAACriC,OAAR,CAAgBqK,IAAhB,MAA0B,CAAC,CAApD,EAAuD;AACrD,QAAI,CAAClxB,cAAc,CAACkxB,IAAD,CAAnB,EAA2B;AACzB,aAAOA,IAAP;AACD;;AACDxhB,IAAAA,MAAM,GAAGs5C,OAAO,CAAC93B,IAAD,CAAhB;;AACA,QAAI,CAACxhB,MAAL,EAAa;AACX,aAAO,KAAP;AACD;;AACD,QAAIA,MAAM,CAAC2C,OAAX,EAAoB;AAClB,aAAO6e,IAAP;AACD;;AACDg4B,IAAAA,OAAO,CAACn7C,IAAR,CAAamjB,IAAb;AACAA,IAAAA,IAAI,GAAGxhB,MAAM,CAACwhB,IAAd;AACD;;AACD,SAAO,KAAP;AACD;;AACD,SAAStS,KAAT,CAAerF,GAAf,EAAoB7J,MAApB,EAA4By5C,KAA5B,EAAmC;AACjC5vC,EAAAA,GAAG,CAACm0B,SAAJ;AACAh+B,EAAAA,MAAM,CAACiyC,IAAP,CAAYpoC,GAAZ;AACAA,EAAAA,GAAG,CAACq0B,MAAJ,CAAWl+B,MAAM,CAAC+W,IAAP,GAAc1kB,CAAzB,EAA4BonD,KAA5B;AACA5vC,EAAAA,GAAG,CAACq0B,MAAJ,CAAWl+B,MAAM,CAAC4xB,KAAP,GAAev/B,CAA1B,EAA6BonD,KAA7B;AACA5vC,EAAAA,GAAG,CAACojC,SAAJ;AACApjC,EAAAA,GAAG,CAACsF,IAAJ;AACD;;AACD,SAASuqC,SAAT,CAAmBha,QAAnB,EAA6B9N,KAA7B,EAAoC7a,IAApC,EAA0CpW,IAA1C,EAAgD;AAC9C,MAAIA,IAAJ,EAAU;AACR;AACD;;AACD,MAAIjE,KAAK,GAAGk1B,KAAK,CAAC8N,QAAD,CAAjB;AACA,MAAI96B,GAAG,GAAGmS,IAAI,CAAC2oB,QAAD,CAAd;;AACA,MAAIA,QAAQ,KAAK,OAAjB,EAA0B;AACxBhjC,IAAAA,KAAK,GAAGpD,eAAe,CAACoD,KAAD,CAAvB;AACAkI,IAAAA,GAAG,GAAGtL,eAAe,CAACsL,GAAD,CAArB;AACD;;AACD,SAAO;AAAC86B,IAAAA,QAAD;AAAWhjC,IAAAA,KAAX;AAAkBkI,IAAAA;AAAlB,GAAP;AACD;;AACD,SAAS+0C,QAAT,CAAkB1qD,CAAlB,EAAqBU,CAArB,EAAwBsQ,IAAxB,EAA8B5D,EAA9B,EAAkC;AAChC,MAAIpN,CAAC,IAAIU,CAAT,EAAY;AACV,WAAO0M,EAAE,CAACpN,CAAC,CAACgR,IAAD,CAAF,EAAUtQ,CAAC,CAACsQ,IAAD,CAAX,CAAT;AACD;;AACD,SAAOhR,CAAC,GAAGA,CAAC,CAACgR,IAAD,CAAJ,GAAatQ,CAAC,GAAGA,CAAC,CAACsQ,IAAD,CAAJ,GAAa,CAAnC;AACD;;AACD,SAASyyC,SAAT,CAAmBr0B,IAAnB,EAAyBre,MAAzB,EAAiC0/B,QAAjC,EAA2C;AACzC,QAAM2S,QAAQ,GAAGh0B,IAAI,CAACg0B,QAAtB;AACA,QAAM35B,MAAM,GAAG2F,IAAI,CAAC3F,MAApB;AACA,QAAMkhC,OAAO,GAAG55C,MAAM,CAAC0Y,MAAvB;AACA,QAAMsnB,KAAK,GAAG,EAAd;;AACA,OAAK,MAAMnhB,OAAX,IAAsBwzB,QAAtB,EAAgC;AAC9B,QAAI;AAAC31C,MAAAA,KAAD;AAAQkI,MAAAA;AAAR,QAAeia,OAAnB;AACAja,IAAAA,GAAG,GAAGqzC,cAAc,CAACv7C,KAAD,EAAQkI,GAAR,EAAa8T,MAAb,CAApB;AACA,UAAM+W,MAAM,GAAGiqB,SAAS,CAACha,QAAD,EAAWhnB,MAAM,CAAChc,KAAD,CAAjB,EAA0Bgc,MAAM,CAAC9T,GAAD,CAAhC,EAAuCia,OAAO,CAACle,IAA/C,CAAxB;;AACA,QAAI,CAACX,MAAM,CAACqyC,QAAZ,EAAsB;AACpBrS,MAAAA,KAAK,CAAC3hC,IAAN,CAAW;AACT+4B,QAAAA,MAAM,EAAEvY,OADC;AAET7e,QAAAA,MAAM,EAAEyvB,MAFC;AAGT/yB,QAAAA,KAAK,EAAEgc,MAAM,CAAChc,KAAD,CAHJ;AAITkI,QAAAA,GAAG,EAAE8T,MAAM,CAAC9T,GAAD;AAJF,OAAX;AAMA;AACD;;AACD,UAAMi1C,cAAc,GAAG7hD,cAAc,CAACgI,MAAD,EAASyvB,MAAT,CAArC;;AACA,SAAK,MAAMqqB,GAAX,IAAkBD,cAAlB,EAAkC;AAChC,YAAME,SAAS,GAAGL,SAAS,CAACha,QAAD,EAAWka,OAAO,CAACE,GAAG,CAACp9C,KAAL,CAAlB,EAA+Bk9C,OAAO,CAACE,GAAG,CAACl1C,GAAL,CAAtC,EAAiDk1C,GAAG,CAACn5C,IAArD,CAA3B;;AACA,YAAMq5C,WAAW,GAAG5gD,aAAa,CAACylB,OAAD,EAAUnG,MAAV,EAAkBqhC,SAAlB,CAAjC;;AACA,WAAK,MAAME,UAAX,IAAyBD,WAAzB,EAAsC;AACpCha,QAAAA,KAAK,CAAC3hC,IAAN,CAAW;AACT+4B,UAAAA,MAAM,EAAE6iB,UADC;AAETj6C,UAAAA,MAAM,EAAE85C,GAFC;AAGTp9C,UAAAA,KAAK,EAAE;AACL,aAACgjC,QAAD,GAAYia,QAAQ,CAAClqB,MAAD,EAASsqB,SAAT,EAAoB,OAApB,EAA6Bv9C,IAAI,CAACmC,GAAlC;AADf,WAHE;AAMTiG,UAAAA,GAAG,EAAE;AACH,aAAC86B,QAAD,GAAYia,QAAQ,CAAClqB,MAAD,EAASsqB,SAAT,EAAoB,KAApB,EAA2Bv9C,IAAI,CAACC,GAAhC;AADjB;AANI,SAAX;AAUD;AACF;AACF;;AACD,SAAOujC,KAAP;AACD;;AACD,SAASka,UAAT,CAAoBrwC,GAApB,EAAyBrF,KAAzB,EAAgCirB,MAAhC,EAAwC;AACtC,QAAM;AAACzqB,IAAAA,GAAD;AAAME,IAAAA;AAAN,MAAgBV,KAAK,CAAC5I,KAAN,CAAY0T,SAAlC;AACA,QAAM;AAACowB,IAAAA,QAAD;AAAWhjC,IAAAA,KAAX;AAAkBkI,IAAAA;AAAlB,MAAyB6qB,MAAM,IAAI,EAAzC;;AACA,MAAIiQ,QAAQ,KAAK,GAAjB,EAAsB;AACpB71B,IAAAA,GAAG,CAACm0B,SAAJ;AACAn0B,IAAAA,GAAG,CAACgrC,IAAJ,CAASn4C,KAAT,EAAgBsI,GAAhB,EAAqBJ,GAAG,GAAGlI,KAA3B,EAAkCwI,MAAM,GAAGF,GAA3C;AACA6E,IAAAA,GAAG,CAACsF,IAAJ;AACD;AACF;;AACD,SAASgrC,kBAAT,CAA4BtwC,GAA5B,EAAiC7J,MAAjC,EAAyC2Y,KAAzC,EAAgD+mB,QAAhD,EAA0D;AACxD,QAAM0a,iBAAiB,GAAGp6C,MAAM,CAAC4yC,WAAP,CAAmBj6B,KAAnB,EAA0B+mB,QAA1B,CAA1B;;AACA,MAAI0a,iBAAJ,EAAuB;AACrBvwC,IAAAA,GAAG,CAACq0B,MAAJ,CAAWkc,iBAAiB,CAAC/nD,CAA7B,EAAgC+nD,iBAAiB,CAAC7nD,CAAlD;AACD;AACF;;AACD,SAAS8nD,KAAT,CAAexwC,GAAf,EAAoB9J,GAApB,EAAyB;AACvB,QAAM;AAACse,IAAAA,IAAD;AAAOre,IAAAA,MAAP;AAAe0/B,IAAAA,QAAf;AAAyBpwC,IAAAA,KAAzB;AAAgCkV,IAAAA;AAAhC,MAAyCzE,GAA/C;;AACA,QAAMsyC,QAAQ,GAAGK,SAAS,CAACr0B,IAAD,EAAOre,MAAP,EAAe0/B,QAAf,CAA1B;;AACA,OAAK,MAAM;AAACtI,IAAAA,MAAM,EAAEkjB,GAAT;AAAct6C,IAAAA,MAAM,EAAE85C,GAAtB;AAA2Bp9C,IAAAA,KAA3B;AAAkCkI,IAAAA;AAAlC,GAAX,IAAqDytC,QAArD,EAA+D;AAC7D,UAAM;AAAC/0B,MAAAA,KAAK,EAAE;AAACG,QAAAA,eAAe,GAAGnuB;AAAnB,UAA4B;AAApC,QAA0CgrD,GAAhD;AACA,UAAMC,QAAQ,GAAGv6C,MAAM,KAAK,IAA5B;AACA6J,IAAAA,GAAG,CAACyzB,IAAJ;AACAzzB,IAAAA,GAAG,CAAC2T,SAAJ,GAAgBC,eAAhB;AACAy8B,IAAAA,UAAU,CAACrwC,GAAD,EAAMrF,KAAN,EAAa+1C,QAAQ,IAAIb,SAAS,CAACha,QAAD,EAAWhjC,KAAX,EAAkBkI,GAAlB,CAAlC,CAAV;AACAiF,IAAAA,GAAG,CAACm0B,SAAJ;AACA,UAAMwc,QAAQ,GAAG,CAAC,CAACn8B,IAAI,CAAC8yB,WAAL,CAAiBtnC,GAAjB,EAAsBywC,GAAtB,CAAnB;AACA,QAAI35C,IAAJ;;AACA,QAAI45C,QAAJ,EAAc;AACZ,UAAIC,QAAJ,EAAc;AACZ3wC,QAAAA,GAAG,CAACojC,SAAJ;AACD,OAFD,MAEO;AACLkN,QAAAA,kBAAkB,CAACtwC,GAAD,EAAM7J,MAAN,EAAc4E,GAAd,EAAmB86B,QAAnB,CAAlB;AACD;;AACD,YAAM+a,UAAU,GAAG,CAAC,CAACz6C,MAAM,CAACmxC,WAAP,CAAmBtnC,GAAnB,EAAwBiwC,GAAxB,EAA6B;AAACloC,QAAAA,IAAI,EAAE4oC,QAAP;AAAiB71C,QAAAA,OAAO,EAAE;AAA1B,OAA7B,CAArB;AACAhE,MAAAA,IAAI,GAAG65C,QAAQ,IAAIC,UAAnB;;AACA,UAAI,CAAC95C,IAAL,EAAW;AACTw5C,QAAAA,kBAAkB,CAACtwC,GAAD,EAAM7J,MAAN,EAActD,KAAd,EAAqBgjC,QAArB,CAAlB;AACD;AACF;;AACD71B,IAAAA,GAAG,CAACojC,SAAJ;AACApjC,IAAAA,GAAG,CAAC2X,IAAJ,CAAS7gB,IAAI,GAAG,SAAH,GAAe,SAA5B;AACAkJ,IAAAA,GAAG,CAAC2zB,OAAJ;AACD;AACF;;AACD,SAASkd,MAAT,CAAgB7wC,GAAhB,EAAqB9J,GAArB,EAA0B;AACxB,QAAM;AAACse,IAAAA,IAAD;AAAOre,IAAAA,MAAP;AAAe26C,IAAAA,KAAf;AAAsB/B,IAAAA,KAAtB;AAA6BvpC,IAAAA,IAA7B;AAAmC7K,IAAAA;AAAnC,MAA4CzE,GAAlD;AACA,QAAM2/B,QAAQ,GAAGrhB,IAAI,CAAC3d,KAAL,GAAa,OAAb,GAAuBX,GAAG,CAACqI,IAA5C;AACAyB,EAAAA,GAAG,CAACyzB,IAAJ;;AACA,MAAIoC,QAAQ,KAAK,GAAb,IAAoBkZ,KAAK,KAAK+B,KAAlC,EAAyC;AACvCzrC,IAAAA,KAAK,CAACrF,GAAD,EAAM7J,MAAN,EAAcqP,IAAI,CAACrK,GAAnB,CAAL;;AACAq1C,IAAAA,KAAK,CAACxwC,GAAD,EAAM;AAACwU,MAAAA,IAAD;AAAOre,MAAAA,MAAP;AAAe1Q,MAAAA,KAAK,EAAEqrD,KAAtB;AAA6Bn2C,MAAAA,KAA7B;AAAoCk7B,MAAAA;AAApC,KAAN,CAAL;;AACA71B,IAAAA,GAAG,CAAC2zB,OAAJ;AACA3zB,IAAAA,GAAG,CAACyzB,IAAJ;;AACApuB,IAAAA,KAAK,CAACrF,GAAD,EAAM7J,MAAN,EAAcqP,IAAI,CAACnK,MAAnB,CAAL;AACD;;AACDm1C,EAAAA,KAAK,CAACxwC,GAAD,EAAM;AAACwU,IAAAA,IAAD;AAAOre,IAAAA,MAAP;AAAe1Q,IAAAA,KAAK,EAAEspD,KAAtB;AAA6Bp0C,IAAAA,KAA7B;AAAoCk7B,IAAAA;AAApC,GAAN,CAAL;;AACA71B,EAAAA,GAAG,CAAC2zB,OAAJ;AACD;;AACD,SAASod,QAAT,CAAkB/wC,GAAlB,EAAuButB,MAAvB,EAA+B/nB,IAA/B,EAAqC;AACnC,QAAMrP,MAAM,GAAGo5C,SAAS,CAAChiB,MAAD,CAAxB;AACA,QAAM;AAAC/Y,IAAAA,IAAD;AAAO7Z,IAAAA,KAAP;AAAc4D,IAAAA;AAAd,MAAsBgvB,MAA5B;AACA,QAAMyjB,QAAQ,GAAGx8B,IAAI,CAAC5a,OAAtB;AACA,QAAMi0C,UAAU,GAAGmD,QAAQ,CAACr5B,IAA5B;AACA,QAAMlyB,KAAK,GAAGurD,QAAQ,CAACp9B,eAAvB;AACA,QAAM;AAACk9B,IAAAA,KAAK,GAAGrrD,KAAT;AAAgBspD,IAAAA,KAAK,GAAGtpD;AAAxB,MAAiCooD,UAAU,IAAI,EAArD;;AACA,MAAI13C,MAAM,IAAIqe,IAAI,CAAC3F,MAAL,CAAYrb,MAA1B,EAAkC;AAChCvI,IAAAA,QAAQ,CAAC+U,GAAD,EAAMwF,IAAN,CAAR;AACAqrC,IAAAA,MAAM,CAAC7wC,GAAD,EAAM;AAACwU,MAAAA,IAAD;AAAOre,MAAAA,MAAP;AAAe26C,MAAAA,KAAf;AAAsB/B,MAAAA,KAAtB;AAA6BvpC,MAAAA,IAA7B;AAAmC7K,MAAAA,KAAnC;AAA0C4D,MAAAA;AAA1C,KAAN,CAAN;AACAlT,IAAAA,UAAU,CAAC2U,GAAD,CAAV;AACD;AACF;;AACD,IAAIixC,aAAa,GAAG;AAClBj0C,EAAAA,EAAE,EAAE,QADc;;AAElBk0C,EAAAA,mBAAmB,CAACn/C,KAAD,EAAQo/C,KAAR,EAAev3C,OAAf,EAAwB;AACzC,UAAM2J,KAAK,GAAG,CAACxR,KAAK,CAACwK,IAAN,CAAW0F,QAAX,IAAuB,EAAxB,EAA4BzO,MAA1C;AACA,UAAMi8C,OAAO,GAAG,EAAhB;AACA,QAAI9yC,IAAJ,EAAU/W,CAAV,EAAa4uB,IAAb,EAAmB+Y,MAAnB;;AACA,SAAK3nC,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAG2d,KAAhB,EAAuB,EAAE3d,CAAzB,EAA4B;AAC1B+W,MAAAA,IAAI,GAAG5K,KAAK,CAACmQ,cAAN,CAAqBtc,CAArB,CAAP;AACA4uB,MAAAA,IAAI,GAAG7X,IAAI,CAACwC,OAAZ;AACAouB,MAAAA,MAAM,GAAG,IAAT;;AACA,UAAI/Y,IAAI,IAAIA,IAAI,CAAC5a,OAAb,IAAwB4a,IAAI,YAAYm0B,WAA5C,EAAyD;AACvDpb,QAAAA,MAAM,GAAG;AACPz0B,UAAAA,OAAO,EAAE/G,KAAK,CAACqf,gBAAN,CAAuBxrB,CAAvB,CADF;AAEPkW,UAAAA,KAAK,EAAElW,CAFA;AAGP+xB,UAAAA,IAAI,EAAEm2B,UAAU,CAACt5B,IAAD,EAAO5uB,CAAP,EAAU2d,KAAV,CAHT;AAIPxR,UAAAA,KAJO;AAKPwM,UAAAA,IAAI,EAAE5B,IAAI,CAACsB,UAAL,CAAgBrE,OAAhB,CAAwB8H,SALvB;AAMP/G,UAAAA,KAAK,EAAEgC,IAAI,CAACkB,MANL;AAOP2W,UAAAA;AAPO,SAAT;AASD;;AACD7X,MAAAA,IAAI,CAACy0C,OAAL,GAAe7jB,MAAf;AACAkiB,MAAAA,OAAO,CAACj7C,IAAR,CAAa+4B,MAAb;AACD;;AACD,SAAK3nC,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAG2d,KAAhB,EAAuB,EAAE3d,CAAzB,EAA4B;AAC1B2nC,MAAAA,MAAM,GAAGkiB,OAAO,CAAC7pD,CAAD,CAAhB;;AACA,UAAI,CAAC2nC,MAAD,IAAWA,MAAM,CAAC5V,IAAP,KAAgB,KAA/B,EAAsC;AACpC;AACD;;AACD4V,MAAAA,MAAM,CAAC5V,IAAP,GAAc63B,aAAa,CAACC,OAAD,EAAU7pD,CAAV,EAAagU,OAAO,CAAC81C,SAArB,CAA3B;AACD;AACF,GA/BiB;;AAgClB2B,EAAAA,UAAU,CAACt/C,KAAD,EAAQo/C,KAAR,EAAev3C,OAAf,EAAwB;AAChC,UAAMnG,IAAI,GAAGmG,OAAO,CAAC03C,QAAR,KAAqB,YAAlC;AACA,UAAM31C,QAAQ,GAAG5J,KAAK,CAACmnB,4BAAN,EAAjB;AACA,UAAM1T,IAAI,GAAGzT,KAAK,CAAC0T,SAAnB;;AACA,SAAK,IAAI7f,CAAC,GAAG+V,QAAQ,CAACnI,MAAT,GAAkB,CAA/B,EAAkC5N,CAAC,IAAI,CAAvC,EAA0C,EAAEA,CAA5C,EAA+C;AAC7C,YAAM2nC,MAAM,GAAG5xB,QAAQ,CAAC/V,CAAD,CAAR,CAAYwrD,OAA3B;;AACA,UAAI,CAAC7jB,MAAL,EAAa;AACX;AACD;;AACDA,MAAAA,MAAM,CAAC/Y,IAAP,CAAYkB,mBAAZ,CAAgClQ,IAAhC,EAAsC+nB,MAAM,CAAChvB,IAA7C;;AACA,UAAI9K,IAAJ,EAAU;AACRs9C,QAAAA,QAAQ,CAACh/C,KAAK,CAACiO,GAAP,EAAYutB,MAAZ,EAAoB/nB,IAApB,CAAR;AACD;AACF;AACF,GA9CiB;;AA+ClB+rC,EAAAA,kBAAkB,CAACx/C,KAAD,EAAQo/C,KAAR,EAAev3C,OAAf,EAAwB;AACxC,QAAIA,OAAO,CAAC03C,QAAR,KAAqB,oBAAzB,EAA+C;AAC7C;AACD;;AACD,UAAM31C,QAAQ,GAAG5J,KAAK,CAACmnB,4BAAN,EAAjB;;AACA,SAAK,IAAItzB,CAAC,GAAG+V,QAAQ,CAACnI,MAAT,GAAkB,CAA/B,EAAkC5N,CAAC,IAAI,CAAvC,EAA0C,EAAEA,CAA5C,EAA+C;AAC7C,YAAM2nC,MAAM,GAAG5xB,QAAQ,CAAC/V,CAAD,CAAR,CAAYwrD,OAA3B;;AACA,UAAI7jB,MAAJ,EAAY;AACVwjB,QAAAA,QAAQ,CAACh/C,KAAK,CAACiO,GAAP,EAAYutB,MAAZ,EAAoBx7B,KAAK,CAAC0T,SAA1B,CAAR;AACD;AACF;AACF,GA1DiB;;AA2DlB+rC,EAAAA,iBAAiB,CAACz/C,KAAD,EAAQ6xB,IAAR,EAAchqB,OAAd,EAAuB;AACtC,UAAM2zB,MAAM,GAAG3J,IAAI,CAACjnB,IAAL,CAAUy0C,OAAzB;;AACA,QAAI,CAAC7jB,MAAD,IAAWA,MAAM,CAAC5V,IAAP,KAAgB,KAA3B,IAAoC/d,OAAO,CAAC03C,QAAR,KAAqB,mBAA7D,EAAkF;AAChF;AACD;;AACDP,IAAAA,QAAQ,CAACh/C,KAAK,CAACiO,GAAP,EAAYutB,MAAZ,EAAoBx7B,KAAK,CAAC0T,SAA1B,CAAR;AACD,GAjEiB;;AAkElB9f,EAAAA,QAAQ,EAAE;AACR+pD,IAAAA,SAAS,EAAE,IADH;AAER4B,IAAAA,QAAQ,EAAE;AAFF;AAlEQ,CAApB;;AAwEA,MAAMG,UAAU,GAAG,CAACC,SAAD,EAAY5c,QAAZ,KAAyB;AAC1C,MAAI;AAAC6c,IAAAA,SAAS,GAAG7c,QAAb;AAAuB8c,IAAAA,QAAQ,GAAG9c;AAAlC,MAA8C4c,SAAlD;;AACA,MAAIA,SAAS,CAACG,aAAd,EAA6B;AAC3BF,IAAAA,SAAS,GAAGh/C,IAAI,CAACC,GAAL,CAAS++C,SAAT,EAAoB7c,QAApB,CAAZ;AACA8c,IAAAA,QAAQ,GAAGj/C,IAAI,CAACC,GAAL,CAASg/C,QAAT,EAAmB9c,QAAnB,CAAX;AACD;;AACD,SAAO;AACL8c,IAAAA,QADK;AAELD,IAAAA,SAFK;AAGLG,IAAAA,UAAU,EAAEn/C,IAAI,CAACmC,GAAL,CAASggC,QAAT,EAAmB6c,SAAnB;AAHP,GAAP;AAKD,CAXD;;AAYA,MAAMI,UAAU,GAAG,CAAC3sD,CAAD,EAAIU,CAAJ,KAAUV,CAAC,KAAK,IAAN,IAAcU,CAAC,KAAK,IAApB,IAA4BV,CAAC,CAACgX,YAAF,KAAmBtW,CAAC,CAACsW,YAAjD,IAAiEhX,CAAC,CAAC0W,KAAF,KAAYhW,CAAC,CAACgW,KAA5G;;AACA,MAAMk2C,MAAN,SAAqBxtB,OAArB,CAA6B;AAC3BjzB,EAAAA,WAAW,CAAC0H,MAAD,EAAS;AAClB;AACA,SAAKg5C,MAAL,GAAc,KAAd;AACA,SAAKC,cAAL,GAAsB,EAAtB;AACA,SAAKC,YAAL,GAAoB,IAApB;AACA,SAAKC,YAAL,GAAoB,KAApB;AACA,SAAKrgD,KAAL,GAAakH,MAAM,CAAClH,KAApB;AACA,SAAK6H,OAAL,GAAeX,MAAM,CAACW,OAAtB;AACA,SAAKoG,GAAL,GAAW/G,MAAM,CAAC+G,GAAlB;AACA,SAAKqyC,WAAL,GAAmBxgD,SAAnB;AACA,SAAKygD,WAAL,GAAmBzgD,SAAnB;AACA,SAAK0gD,UAAL,GAAkB1gD,SAAlB;AACA,SAAKggB,SAAL,GAAiBhgB,SAAjB;AACA,SAAK+f,QAAL,GAAgB/f,SAAhB;AACA,SAAKsJ,GAAL,GAAWtJ,SAAX;AACA,SAAKwJ,MAAL,GAAcxJ,SAAd;AACA,SAAKyJ,IAAL,GAAYzJ,SAAZ;AACA,SAAKuJ,KAAL,GAAavJ,SAAb;AACA,SAAKkb,MAAL,GAAclb,SAAd;AACA,SAAKmb,KAAL,GAAanb,SAAb;AACA,SAAKg5B,QAAL,GAAgBh5B,SAAhB;AACA,SAAK+nB,QAAL,GAAgB/nB,SAAhB;AACA,SAAKshB,MAAL,GAActhB,SAAd;AACA,SAAKgrB,QAAL,GAAgBhrB,SAAhB;AACD;;AACDwF,EAAAA,MAAM,CAACua,QAAD,EAAWC,SAAX,EAAsB0a,OAAtB,EAA+B;AACnC,UAAMx5B,EAAE,GAAG,IAAX;AACAA,IAAAA,EAAE,CAAC6e,QAAH,GAAcA,QAAd;AACA7e,IAAAA,EAAE,CAAC8e,SAAH,GAAeA,SAAf;AACA9e,IAAAA,EAAE,CAAC83B,QAAH,GAAc0B,OAAd;AACAx5B,IAAAA,EAAE,CAAC25B,aAAH;AACA35B,IAAAA,EAAE,CAACy/C,WAAH;AACAz/C,IAAAA,EAAE,CAAC06B,GAAH;AACD;;AACDf,EAAAA,aAAa,GAAG;AACd,UAAM35B,EAAE,GAAG,IAAX;;AACA,QAAIA,EAAE,CAACoY,YAAH,EAAJ,EAAuB;AACrBpY,MAAAA,EAAE,CAACia,KAAH,GAAWja,EAAE,CAAC6e,QAAd;AACA7e,MAAAA,EAAE,CAACuI,IAAH,GAAUvI,EAAE,CAAC83B,QAAH,CAAYvvB,IAAtB;AACAvI,MAAAA,EAAE,CAACqI,KAAH,GAAWrI,EAAE,CAACia,KAAd;AACD,KAJD,MAIO;AACLja,MAAAA,EAAE,CAACga,MAAH,GAAYha,EAAE,CAAC8e,SAAf;AACA9e,MAAAA,EAAE,CAACoI,GAAH,GAASpI,EAAE,CAAC83B,QAAH,CAAY1vB,GAArB;AACApI,MAAAA,EAAE,CAACsI,MAAH,GAAYtI,EAAE,CAACga,MAAf;AACD;AACF;;AACDylC,EAAAA,WAAW,GAAG;AACZ,UAAMz/C,EAAE,GAAG,IAAX;AACA,UAAM2+C,SAAS,GAAG3+C,EAAE,CAAC6G,OAAH,CAAWmK,MAAX,IAAqB,EAAvC;AACA,QAAIsuC,WAAW,GAAGhoD,QAAQ,CAACqnD,SAAS,CAACp+B,cAAX,EAA2B,CAACvgB,EAAE,CAAChB,KAAJ,CAA3B,EAAuCgB,EAAvC,CAAR,IAAsD,EAAxE;;AACA,QAAI2+C,SAAS,CAAC5yC,MAAd,EAAsB;AACpBuzC,MAAAA,WAAW,GAAGA,WAAW,CAACvzC,MAAZ,CAAoBpL,IAAD,IAAUg+C,SAAS,CAAC5yC,MAAV,CAAiBpL,IAAjB,EAAuBX,EAAE,CAAChB,KAAH,CAASwK,IAAhC,CAA7B,CAAd;AACD;;AACD,QAAIm1C,SAAS,CAAC1oC,IAAd,EAAoB;AAClBqpC,MAAAA,WAAW,GAAGA,WAAW,CAACrpC,IAAZ,CAAiB,CAAC5jB,CAAD,EAAIU,CAAJ,KAAU4rD,SAAS,CAAC1oC,IAAV,CAAe5jB,CAAf,EAAkBU,CAAlB,EAAqBiN,EAAE,CAAChB,KAAH,CAASwK,IAA9B,CAA3B,CAAd;AACD;;AACD,QAAIxJ,EAAE,CAAC6G,OAAH,CAAWkB,OAAf,EAAwB;AACtBu3C,MAAAA,WAAW,CAACv3C,OAAZ;AACD;;AACD/H,IAAAA,EAAE,CAACs/C,WAAH,GAAiBA,WAAjB;AACD;;AACD5kB,EAAAA,GAAG,GAAG;AACJ,UAAM16B,EAAE,GAAG,IAAX;AACA,UAAM;AAAC6G,MAAAA,OAAD;AAAUoG,MAAAA;AAAV,QAAiBjN,EAAvB;;AACA,QAAI,CAAC6G,OAAO,CAACud,OAAb,EAAsB;AACpBpkB,MAAAA,EAAE,CAACia,KAAH,GAAWja,EAAE,CAACga,MAAH,GAAY,CAAvB;AACA;AACD;;AACD,UAAM2kC,SAAS,GAAG93C,OAAO,CAACmK,MAA1B;AACA,UAAM0uC,SAAS,GAAGlnD,MAAM,CAACmmD,SAAS,CAACxnB,IAAX,CAAxB;AACA,UAAM4K,QAAQ,GAAG2d,SAAS,CAACn4C,IAA3B;;AACA,UAAM40B,WAAW,GAAGn8B,EAAE,CAAC2/C,mBAAH,EAApB;;AACA,UAAM;AAACd,MAAAA,QAAD;AAAWE,MAAAA;AAAX,QAAyBL,UAAU,CAACC,SAAD,EAAY5c,QAAZ,CAAzC;AACA,QAAI9nB,KAAJ,EAAWD,MAAX;AACA/M,IAAAA,GAAG,CAACkqB,IAAJ,GAAWuoB,SAAS,CAACliB,MAArB;;AACA,QAAIx9B,EAAE,CAACoY,YAAH,EAAJ,EAAuB;AACrB6B,MAAAA,KAAK,GAAGja,EAAE,CAAC6e,QAAX;AACA7E,MAAAA,MAAM,GAAGha,EAAE,CAAC4/C,QAAH,CAAYzjB,WAAZ,EAAyB4F,QAAzB,EAAmC8c,QAAnC,EAA6CE,UAA7C,IAA2D,EAApE;AACD,KAHD,MAGO;AACL/kC,MAAAA,MAAM,GAAGha,EAAE,CAAC8e,SAAZ;AACA7E,MAAAA,KAAK,GAAGja,EAAE,CAAC6/C,QAAH,CAAY1jB,WAAZ,EAAyB4F,QAAzB,EAAmC8c,QAAnC,EAA6CE,UAA7C,IAA2D,EAAnE;AACD;;AACD/+C,IAAAA,EAAE,CAACia,KAAH,GAAWra,IAAI,CAACC,GAAL,CAASoa,KAAT,EAAgBpT,OAAO,CAACgY,QAAR,IAAoB7e,EAAE,CAAC6e,QAAvC,CAAX;AACA7e,IAAAA,EAAE,CAACga,MAAH,GAAYpa,IAAI,CAACC,GAAL,CAASma,MAAT,EAAiBnT,OAAO,CAACiY,SAAR,IAAqB9e,EAAE,CAAC8e,SAAzC,CAAZ;AACD;;AACD8gC,EAAAA,QAAQ,CAACzjB,WAAD,EAAc4F,QAAd,EAAwB8c,QAAxB,EAAkCE,UAAlC,EAA8C;AACpD,UAAM/+C,EAAE,GAAG,IAAX;AACA,UAAM;AAACiN,MAAAA,GAAD;AAAM4R,MAAAA,QAAN;AAAgBhY,MAAAA,OAAO,EAAE;AAACmK,QAAAA,MAAM,EAAE;AAACkb,UAAAA;AAAD;AAAT;AAAzB,QAAgDlsB,EAAtD;AACA,UAAM8/C,QAAQ,GAAG9/C,EAAE,CAACm/C,cAAH,GAAoB,EAArC;AACA,UAAMK,UAAU,GAAGx/C,EAAE,CAACw/C,UAAH,GAAgB,CAAC,CAAD,CAAnC;AACA,UAAMnoB,UAAU,GAAG0nB,UAAU,GAAG7yB,OAAhC;AACA,QAAI6zB,WAAW,GAAG5jB,WAAlB;AACAlvB,IAAAA,GAAG,CAAC2yB,SAAJ,GAAgB,MAAhB;AACA3yB,IAAAA,GAAG,CAAC8yB,YAAJ,GAAmB,QAAnB;AACA,QAAIigB,GAAG,GAAG,CAAC,CAAX;AACA,QAAI53C,GAAG,GAAG,CAACivB,UAAX;AACAr3B,IAAAA,EAAE,CAACs/C,WAAH,CAAe9/C,OAAf,CAAuB,CAAC0hB,UAAD,EAAaruB,CAAb,KAAmB;AACxC,YAAMotD,SAAS,GAAGpB,QAAQ,GAAI9c,QAAQ,GAAG,CAAvB,GAA4B90B,GAAG,CAACizC,WAAJ,CAAgBh/B,UAAU,CAACP,IAA3B,EAAiC1G,KAA/E;;AACA,UAAIpnB,CAAC,KAAK,CAAN,IAAW2sD,UAAU,CAACA,UAAU,CAAC/+C,MAAX,GAAoB,CAArB,CAAV,GAAoCw/C,SAApC,GAAgD,IAAI/zB,OAApD,GAA8DrN,QAA7E,EAAuF;AACrFkhC,QAAAA,WAAW,IAAI1oB,UAAf;AACAmoB,QAAAA,UAAU,CAACA,UAAU,CAAC/+C,MAAX,IAAqB5N,CAAC,GAAG,CAAJ,GAAQ,CAAR,GAAY,CAAjC,CAAD,CAAV,GAAkD,CAAlD;AACAuV,QAAAA,GAAG,IAAIivB,UAAP;AACA2oB,QAAAA,GAAG;AACJ;;AACDF,MAAAA,QAAQ,CAACjtD,CAAD,CAAR,GAAc;AAAC0V,QAAAA,IAAI,EAAE,CAAP;AAAUH,QAAAA,GAAV;AAAe43C,QAAAA,GAAf;AAAoB/lC,QAAAA,KAAK,EAAEgmC,SAA3B;AAAsCjmC,QAAAA,MAAM,EAAE+kC;AAA9C,OAAd;AACAS,MAAAA,UAAU,CAACA,UAAU,CAAC/+C,MAAX,GAAoB,CAArB,CAAV,IAAqCw/C,SAAS,GAAG/zB,OAAjD;AACD,KAVD;AAWA,WAAO6zB,WAAP;AACD;;AACDF,EAAAA,QAAQ,CAAC1jB,WAAD,EAAc4F,QAAd,EAAwB8c,QAAxB,EAAkCE,UAAlC,EAA8C;AACpD,UAAM/+C,EAAE,GAAG,IAAX;AACA,UAAM;AAACiN,MAAAA,GAAD;AAAM6R,MAAAA,SAAN;AAAiBjY,MAAAA,OAAO,EAAE;AAACmK,QAAAA,MAAM,EAAE;AAACkb,UAAAA;AAAD;AAAT;AAA1B,QAAiDlsB,EAAvD;AACA,UAAM8/C,QAAQ,GAAG9/C,EAAE,CAACm/C,cAAH,GAAoB,EAArC;AACA,UAAMI,WAAW,GAAGv/C,EAAE,CAACu/C,WAAH,GAAiB,EAArC;AACA,UAAMY,WAAW,GAAGrhC,SAAS,GAAGqd,WAAhC;AACA,QAAIikB,UAAU,GAAGl0B,OAAjB;AACA,QAAIm0B,eAAe,GAAG,CAAtB;AACA,QAAIC,gBAAgB,GAAG,CAAvB;AACA,QAAI/3C,IAAI,GAAG,CAAX;AACA,QAAIg4C,GAAG,GAAG,CAAV;AACAvgD,IAAAA,EAAE,CAACs/C,WAAH,CAAe9/C,OAAf,CAAuB,CAAC0hB,UAAD,EAAaruB,CAAb,KAAmB;AACxC,YAAMotD,SAAS,GAAGpB,QAAQ,GAAI9c,QAAQ,GAAG,CAAvB,GAA4B90B,GAAG,CAACizC,WAAJ,CAAgBh/B,UAAU,CAACP,IAA3B,EAAiC1G,KAA/E;;AACA,UAAIpnB,CAAC,GAAG,CAAJ,IAASytD,gBAAgB,GAAGvB,UAAnB,GAAgC,IAAI7yB,OAApC,GAA8Ci0B,WAA3D,EAAwE;AACtEC,QAAAA,UAAU,IAAIC,eAAe,GAAGn0B,OAAhC;AACAqzB,QAAAA,WAAW,CAAC99C,IAAZ,CAAiB;AAACwY,UAAAA,KAAK,EAAEomC,eAAR;AAAyBrmC,UAAAA,MAAM,EAAEsmC;AAAjC,SAAjB;AACA/3C,QAAAA,IAAI,IAAI83C,eAAe,GAAGn0B,OAA1B;AACAq0B,QAAAA,GAAG;AACHF,QAAAA,eAAe,GAAGC,gBAAgB,GAAG,CAArC;AACD;;AACDR,MAAAA,QAAQ,CAACjtD,CAAD,CAAR,GAAc;AAAC0V,QAAAA,IAAD;AAAOH,QAAAA,GAAG,EAAEk4C,gBAAZ;AAA8BC,QAAAA,GAA9B;AAAmCtmC,QAAAA,KAAK,EAAEgmC,SAA1C;AAAqDjmC,QAAAA,MAAM,EAAE+kC;AAA7D,OAAd;AACAsB,MAAAA,eAAe,GAAGzgD,IAAI,CAACmC,GAAL,CAASs+C,eAAT,EAA0BJ,SAA1B,CAAlB;AACAK,MAAAA,gBAAgB,IAAIvB,UAAU,GAAG7yB,OAAjC;AACD,KAZD;AAaAk0B,IAAAA,UAAU,IAAIC,eAAd;AACAd,IAAAA,WAAW,CAAC99C,IAAZ,CAAiB;AAACwY,MAAAA,KAAK,EAAEomC,eAAR;AAAyBrmC,MAAAA,MAAM,EAAEsmC;AAAjC,KAAjB;AACA,WAAOF,UAAP;AACD;;AACDI,EAAAA,cAAc,GAAG;AACf,UAAMxgD,EAAE,GAAG,IAAX;;AACA,QAAI,CAACA,EAAE,CAAC6G,OAAH,CAAWud,OAAhB,EAAyB;AACvB;AACD;;AACD,UAAM+X,WAAW,GAAGn8B,EAAE,CAAC2/C,mBAAH,EAApB;;AACA,UAAM;AAACR,MAAAA,cAAc,EAAEW,QAAjB;AAA2Bj5C,MAAAA,OAAO,EAAE;AAACotB,QAAAA,KAAD;AAAQjjB,QAAAA,MAAM,EAAE;AAACkb,UAAAA;AAAD,SAAhB;AAA2Bu0B,QAAAA;AAA3B;AAApC,QAAuEzgD,EAA7E;AACA,UAAM0gD,SAAS,GAAG9jD,aAAa,CAAC6jD,GAAD,EAAMzgD,EAAE,CAACuI,IAAT,EAAevI,EAAE,CAACia,KAAlB,CAA/B;;AACA,QAAI,KAAK7B,YAAL,EAAJ,EAAyB;AACvB,UAAI4nC,GAAG,GAAG,CAAV;;AACA,UAAIz3C,IAAI,GAAG3P,cAAc,CAACq7B,KAAD,EAAQj0B,EAAE,CAACuI,IAAH,GAAU2jB,OAAlB,EAA2BlsB,EAAE,CAACqI,KAAH,GAAWrI,EAAE,CAACw/C,UAAH,CAAcQ,GAAd,CAAtC,CAAzB;;AACA,WAAK,MAAMW,MAAX,IAAqBb,QAArB,EAA+B;AAC7B,YAAIE,GAAG,KAAKW,MAAM,CAACX,GAAnB,EAAwB;AACtBA,UAAAA,GAAG,GAAGW,MAAM,CAACX,GAAb;AACAz3C,UAAAA,IAAI,GAAG3P,cAAc,CAACq7B,KAAD,EAAQj0B,EAAE,CAACuI,IAAH,GAAU2jB,OAAlB,EAA2BlsB,EAAE,CAACqI,KAAH,GAAWrI,EAAE,CAACw/C,UAAH,CAAcQ,GAAd,CAAtC,CAArB;AACD;;AACDW,QAAAA,MAAM,CAACv4C,GAAP,IAAcpI,EAAE,CAACoI,GAAH,GAAS+zB,WAAT,GAAuBjQ,OAArC;AACAy0B,QAAAA,MAAM,CAACp4C,IAAP,GAAcm4C,SAAS,CAACE,UAAV,CAAqBF,SAAS,CAACjrD,CAAV,CAAY8S,IAAZ,CAArB,EAAwCo4C,MAAM,CAAC1mC,KAA/C,CAAd;AACA1R,QAAAA,IAAI,IAAIo4C,MAAM,CAAC1mC,KAAP,GAAeiS,OAAvB;AACD;AACF,KAZD,MAYO;AACL,UAAIq0B,GAAG,GAAG,CAAV;;AACA,UAAIn4C,GAAG,GAAGxP,cAAc,CAACq7B,KAAD,EAAQj0B,EAAE,CAACoI,GAAH,GAAS+zB,WAAT,GAAuBjQ,OAA/B,EAAwClsB,EAAE,CAACsI,MAAH,GAAYtI,EAAE,CAACu/C,WAAH,CAAegB,GAAf,EAAoBvmC,MAAxE,CAAxB;;AACA,WAAK,MAAM2mC,MAAX,IAAqBb,QAArB,EAA+B;AAC7B,YAAIa,MAAM,CAACJ,GAAP,KAAeA,GAAnB,EAAwB;AACtBA,UAAAA,GAAG,GAAGI,MAAM,CAACJ,GAAb;AACAn4C,UAAAA,GAAG,GAAGxP,cAAc,CAACq7B,KAAD,EAAQj0B,EAAE,CAACoI,GAAH,GAAS+zB,WAAT,GAAuBjQ,OAA/B,EAAwClsB,EAAE,CAACsI,MAAH,GAAYtI,EAAE,CAACu/C,WAAH,CAAegB,GAAf,EAAoBvmC,MAAxE,CAApB;AACD;;AACD2mC,QAAAA,MAAM,CAACv4C,GAAP,GAAaA,GAAb;AACAu4C,QAAAA,MAAM,CAACp4C,IAAP,IAAevI,EAAE,CAACuI,IAAH,GAAU2jB,OAAzB;AACAy0B,QAAAA,MAAM,CAACp4C,IAAP,GAAcm4C,SAAS,CAACE,UAAV,CAAqBF,SAAS,CAACjrD,CAAV,CAAYkrD,MAAM,CAACp4C,IAAnB,CAArB,EAA+Co4C,MAAM,CAAC1mC,KAAtD,CAAd;AACA7R,QAAAA,GAAG,IAAIu4C,MAAM,CAAC3mC,MAAP,GAAgBkS,OAAvB;AACD;AACF;AACF;;AACD9T,EAAAA,YAAY,GAAG;AACb,WAAO,KAAKvR,OAAL,CAAaggB,QAAb,KAA0B,KAA1B,IAAmC,KAAKhgB,OAAL,CAAaggB,QAAb,KAA0B,QAApE;AACD;;AACDnmB,EAAAA,IAAI,GAAG;AACL,UAAMV,EAAE,GAAG,IAAX;;AACA,QAAIA,EAAE,CAAC6G,OAAH,CAAWud,OAAf,EAAwB;AACtB,YAAMnX,GAAG,GAAGjN,EAAE,CAACiN,GAAf;AACA/U,MAAAA,QAAQ,CAAC+U,GAAD,EAAMjN,EAAN,CAAR;;AACAA,MAAAA,EAAE,CAAC6gD,KAAH;;AACAvoD,MAAAA,UAAU,CAAC2U,GAAD,CAAV;AACD;AACF;;AACD4zC,EAAAA,KAAK,GAAG;AACN,UAAM7gD,EAAE,GAAG,IAAX;AACA,UAAM;AAAC6G,MAAAA,OAAO,EAAEiB,IAAV;AAAgBy3C,MAAAA,WAAhB;AAA6BC,MAAAA,UAA7B;AAAyCvyC,MAAAA;AAAzC,QAAgDjN,EAAtD;AACA,UAAM;AAACi0B,MAAAA,KAAD;AAAQjjB,MAAAA,MAAM,EAAE2tC;AAAhB,QAA6B72C,IAAnC;AACA,UAAMg5C,YAAY,GAAGluD,QAAQ,CAACF,KAA9B;AACA,UAAMguD,SAAS,GAAG9jD,aAAa,CAACkL,IAAI,CAAC24C,GAAN,EAAWzgD,EAAE,CAACuI,IAAd,EAAoBvI,EAAE,CAACia,KAAvB,CAA/B;AACA,UAAMylC,SAAS,GAAGlnD,MAAM,CAACmmD,SAAS,CAACxnB,IAAX,CAAxB;AACA,UAAM;AAACzkC,MAAAA,KAAK,EAAEquD,SAAR;AAAmB70B,MAAAA;AAAnB,QAA8ByyB,SAApC;AACA,UAAM5c,QAAQ,GAAG2d,SAAS,CAACn4C,IAA3B;AACA,UAAMy5C,YAAY,GAAGjf,QAAQ,GAAG,CAAhC;AACA,QAAIkf,MAAJ;AACAjhD,IAAAA,EAAE,CAAC0hC,SAAH;AACAz0B,IAAAA,GAAG,CAAC2yB,SAAJ,GAAgB8gB,SAAS,CAAC9gB,SAAV,CAAoB,MAApB,CAAhB;AACA3yB,IAAAA,GAAG,CAAC8yB,YAAJ,GAAmB,QAAnB;AACA9yB,IAAAA,GAAG,CAAC+T,SAAJ,GAAgB,GAAhB;AACA/T,IAAAA,GAAG,CAACkqB,IAAJ,GAAWuoB,SAAS,CAACliB,MAArB;AACA,UAAM;AAACqhB,MAAAA,QAAD;AAAWD,MAAAA,SAAX;AAAsBG,MAAAA;AAAtB,QAAoCL,UAAU,CAACC,SAAD,EAAY5c,QAAZ,CAApD;;AACA,UAAMmf,aAAa,GAAG,UAASzrD,CAAT,EAAYE,CAAZ,EAAeurB,UAAf,EAA2B;AAC/C,UAAI5G,KAAK,CAACukC,QAAD,CAAL,IAAmBA,QAAQ,IAAI,CAA/B,IAAoCvkC,KAAK,CAACskC,SAAD,CAAzC,IAAwDA,SAAS,GAAG,CAAxE,EAA2E;AACzE;AACD;;AACD3xC,MAAAA,GAAG,CAACyzB,IAAJ;AACA,YAAM1f,SAAS,GAAG9tB,cAAc,CAACguB,UAAU,CAACF,SAAZ,EAAuB,CAAvB,CAAhC;AACA/T,MAAAA,GAAG,CAAC2T,SAAJ,GAAgB1tB,cAAc,CAACguB,UAAU,CAACN,SAAZ,EAAuBkgC,YAAvB,CAA9B;AACA7zC,MAAAA,GAAG,CAACwmC,OAAJ,GAAcvgD,cAAc,CAACguB,UAAU,CAACuyB,OAAZ,EAAqB,MAArB,CAA5B;AACAxmC,MAAAA,GAAG,CAACk0B,cAAJ,GAAqBjuC,cAAc,CAACguB,UAAU,CAACigB,cAAZ,EAA4B,CAA5B,CAAnC;AACAl0B,MAAAA,GAAG,CAAC4lC,QAAJ,GAAe3/C,cAAc,CAACguB,UAAU,CAAC2xB,QAAZ,EAAsB,OAAtB,CAA7B;AACA5lC,MAAAA,GAAG,CAAC+T,SAAJ,GAAgBA,SAAhB;AACA/T,MAAAA,GAAG,CAAC6T,WAAJ,GAAkB5tB,cAAc,CAACguB,UAAU,CAACJ,WAAZ,EAAyBggC,YAAzB,CAAhC;AACA7zC,MAAAA,GAAG,CAACi0B,WAAJ,CAAgBhuC,cAAc,CAACguB,UAAU,CAACigC,QAAZ,EAAsB,EAAtB,CAA9B;;AACA,UAAIxC,SAAS,CAACG,aAAd,EAA6B;AAC3B,cAAMsC,WAAW,GAAG;AAClBhlC,UAAAA,MAAM,EAAEyiC,QAAQ,GAAGj/C,IAAI,CAACyhD,KAAhB,GAAwB,CADd;AAElB7gC,UAAAA,UAAU,EAAEU,UAAU,CAACV,UAFL;AAGlB/D,UAAAA,QAAQ,EAAEyE,UAAU,CAACzE,QAHH;AAIlBuD,UAAAA,WAAW,EAAEgB;AAJK,SAApB;AAMA,cAAMvB,OAAO,GAAGihC,SAAS,CAACY,KAAV,CAAgB7rD,CAAhB,EAAmBopD,QAAQ,GAAG,CAA9B,CAAhB;AACA,cAAMn/B,OAAO,GAAG/pB,CAAC,GAAGqrD,YAApB;AACAhlD,QAAAA,SAAS,CAACiR,GAAD,EAAMm0C,WAAN,EAAmB3hC,OAAnB,EAA4BC,OAA5B,CAAT;AACD,OAVD,MAUO;AACL,cAAM6hC,OAAO,GAAG5rD,CAAC,GAAGiK,IAAI,CAACmC,GAAL,CAAS,CAACggC,QAAQ,GAAG6c,SAAZ,IAAyB,CAAlC,EAAqC,CAArC,CAApB;AACA,cAAM4C,QAAQ,GAAGd,SAAS,CAACE,UAAV,CAAqBnrD,CAArB,EAAwBopD,QAAxB,CAAjB;AACA,cAAMpO,YAAY,GAAGn0C,aAAa,CAAC4kB,UAAU,CAACuvB,YAAZ,CAAlC;AACAxjC,QAAAA,GAAG,CAACm0B,SAAJ;;AACA,YAAIj8B,MAAM,CAACwB,MAAP,CAAc8pC,YAAd,EAA4B5K,IAA5B,CAAiC5yC,CAAC,IAAIA,CAAC,KAAK,CAA5C,CAAJ,EAAoD;AAClDiJ,UAAAA,kBAAkB,CAAC+Q,GAAD,EAAM;AACtBxX,YAAAA,CAAC,EAAE+rD,QADmB;AAEtB7rD,YAAAA,CAAC,EAAE4rD,OAFmB;AAGtBhsD,YAAAA,CAAC,EAAEspD,QAHmB;AAItBlrD,YAAAA,CAAC,EAAEirD,SAJmB;AAKtBxiC,YAAAA,MAAM,EAAEq0B;AALc,WAAN,CAAlB;AAOD,SARD,MAQO;AACLxjC,UAAAA,GAAG,CAACgrC,IAAJ,CAASuJ,QAAT,EAAmBD,OAAnB,EAA4B1C,QAA5B,EAAsCD,SAAtC;AACD;;AACD3xC,QAAAA,GAAG,CAAC2X,IAAJ;;AACA,YAAI5D,SAAS,KAAK,CAAlB,EAAqB;AACnB/T,UAAAA,GAAG,CAACs0B,MAAJ;AACD;AACF;;AACDt0B,MAAAA,GAAG,CAAC2zB,OAAJ;AACD,KA7CD;;AA8CA,UAAM6gB,QAAQ,GAAG,UAAShsD,CAAT,EAAYE,CAAZ,EAAeurB,UAAf,EAA2B;AAC1C9oB,MAAAA,UAAU,CAAC6U,GAAD,EAAMiU,UAAU,CAACP,IAAjB,EAAuBlrB,CAAvB,EAA0BE,CAAC,GAAIopD,UAAU,GAAG,CAA5C,EAAgDW,SAAhD,EAA2D;AACnEgC,QAAAA,aAAa,EAAExgC,UAAU,CAACvO,MADyC;AAEnEitB,QAAAA,SAAS,EAAE8gB,SAAS,CAAC9gB,SAAV,CAAoB1e,UAAU,CAAC0e,SAA/B;AAFwD,OAA3D,CAAV;AAID,KALD;;AAMA,UAAMxnB,YAAY,GAAGpY,EAAE,CAACoY,YAAH,EAArB;;AACA,UAAM+jB,WAAW,GAAG,KAAKwjB,mBAAL,EAApB;;AACA,QAAIvnC,YAAJ,EAAkB;AAChB6oC,MAAAA,MAAM,GAAG;AACPxrD,QAAAA,CAAC,EAAEmD,cAAc,CAACq7B,KAAD,EAAQj0B,EAAE,CAACuI,IAAH,GAAU2jB,OAAlB,EAA2BlsB,EAAE,CAACqI,KAAH,GAAWm3C,UAAU,CAAC,CAAD,CAAhD,CADV;AAEP7pD,QAAAA,CAAC,EAAEqK,EAAE,CAACoI,GAAH,GAAS8jB,OAAT,GAAmBiQ,WAFf;AAGP1a,QAAAA,IAAI,EAAE;AAHC,OAAT;AAKD,KAND,MAMO;AACLw/B,MAAAA,MAAM,GAAG;AACPxrD,QAAAA,CAAC,EAAEuK,EAAE,CAACuI,IAAH,GAAU2jB,OADN;AAEPv2B,QAAAA,CAAC,EAAEiD,cAAc,CAACq7B,KAAD,EAAQj0B,EAAE,CAACoI,GAAH,GAAS+zB,WAAT,GAAuBjQ,OAA/B,EAAwClsB,EAAE,CAACsI,MAAH,GAAYi3C,WAAW,CAAC,CAAD,CAAX,CAAevlC,MAAnE,CAFV;AAGPyH,QAAAA,IAAI,EAAE;AAHC,OAAT;AAKD;;AACD3kB,IAAAA,qBAAqB,CAACkD,EAAE,CAACiN,GAAJ,EAASnF,IAAI,CAAC65C,aAAd,CAArB;AACA,UAAMtqB,UAAU,GAAG0nB,UAAU,GAAG7yB,OAAhC;AACAlsB,IAAAA,EAAE,CAACs/C,WAAH,CAAe9/C,OAAf,CAAuB,CAAC0hB,UAAD,EAAaruB,CAAb,KAAmB;AACxCoa,MAAAA,GAAG,CAAC6T,WAAJ,GAAkBI,UAAU,CAAC6/B,SAAX,IAAwBA,SAA1C;AACA9zC,MAAAA,GAAG,CAAC2T,SAAJ,GAAgBM,UAAU,CAAC6/B,SAAX,IAAwBA,SAAxC;AACA,YAAMa,SAAS,GAAG30C,GAAG,CAACizC,WAAJ,CAAgBh/B,UAAU,CAACP,IAA3B,EAAiC1G,KAAnD;AACA,YAAM2lB,SAAS,GAAG8gB,SAAS,CAAC9gB,SAAV,CAAoB1e,UAAU,CAAC0e,SAAX,KAAyB1e,UAAU,CAAC0e,SAAX,GAAuB+e,SAAS,CAAC/e,SAA1D,CAApB,CAAlB;AACA,YAAM3lB,KAAK,GAAG4kC,QAAQ,GAAGmC,YAAX,GAA0BY,SAAxC;AACA,UAAInsD,CAAC,GAAGwrD,MAAM,CAACxrD,CAAf;AACA,UAAIE,CAAC,GAAGsrD,MAAM,CAACtrD,CAAf;AACA+qD,MAAAA,SAAS,CAACmB,QAAV,CAAmB7hD,EAAE,CAACia,KAAtB;;AACA,UAAI7B,YAAJ,EAAkB;AAChB,YAAIvlB,CAAC,GAAG,CAAJ,IAAS4C,CAAC,GAAGwkB,KAAJ,GAAYiS,OAAZ,GAAsBlsB,EAAE,CAACqI,KAAtC,EAA6C;AAC3C1S,UAAAA,CAAC,GAAGsrD,MAAM,CAACtrD,CAAP,IAAY0hC,UAAhB;AACA4pB,UAAAA,MAAM,CAACx/B,IAAP;AACAhsB,UAAAA,CAAC,GAAGwrD,MAAM,CAACxrD,CAAP,GAAWmD,cAAc,CAACq7B,KAAD,EAAQj0B,EAAE,CAACuI,IAAH,GAAU2jB,OAAlB,EAA2BlsB,EAAE,CAACqI,KAAH,GAAWm3C,UAAU,CAACyB,MAAM,CAACx/B,IAAR,CAAhD,CAA7B;AACD;AACF,OAND,MAMO,IAAI5uB,CAAC,GAAG,CAAJ,IAAS8C,CAAC,GAAG0hC,UAAJ,GAAiBr3B,EAAE,CAACsI,MAAjC,EAAyC;AAC9C7S,QAAAA,CAAC,GAAGwrD,MAAM,CAACxrD,CAAP,GAAWA,CAAC,GAAG8pD,WAAW,CAAC0B,MAAM,CAACx/B,IAAR,CAAX,CAAyBxH,KAA7B,GAAqCiS,OAApD;AACA+0B,QAAAA,MAAM,CAACx/B,IAAP;AACA9rB,QAAAA,CAAC,GAAGsrD,MAAM,CAACtrD,CAAP,GAAWiD,cAAc,CAACq7B,KAAD,EAAQj0B,EAAE,CAACoI,GAAH,GAAS+zB,WAAT,GAAuBjQ,OAA/B,EAAwClsB,EAAE,CAACsI,MAAH,GAAYi3C,WAAW,CAAC0B,MAAM,CAACx/B,IAAR,CAAX,CAAyBzH,MAA7E,CAA7B;AACD;;AACD,YAAM8nC,KAAK,GAAGpB,SAAS,CAACjrD,CAAV,CAAYA,CAAZ,CAAd;AACAyrD,MAAAA,aAAa,CAACY,KAAD,EAAQnsD,CAAR,EAAWurB,UAAX,CAAb;AACAzrB,MAAAA,CAAC,GAAGuH,MAAM,CAAC4iC,SAAD,EAAYnqC,CAAC,GAAGopD,QAAJ,GAAemC,YAA3B,EAAyC5oC,YAAY,GAAG3iB,CAAC,GAAGwkB,KAAP,GAAeja,EAAE,CAACqI,KAAvE,EAA8EP,IAAI,CAAC24C,GAAnF,CAAV;AACAgB,MAAAA,QAAQ,CAACf,SAAS,CAACjrD,CAAV,CAAYA,CAAZ,CAAD,EAAiBE,CAAjB,EAAoBurB,UAApB,CAAR;;AACA,UAAI9I,YAAJ,EAAkB;AAChB6oC,QAAAA,MAAM,CAACxrD,CAAP,IAAYwkB,KAAK,GAAGiS,OAApB;AACD,OAFD,MAEO;AACL+0B,QAAAA,MAAM,CAACtrD,CAAP,IAAY0hC,UAAZ;AACD;AACF,KA7BD;AA8BAn6B,IAAAA,oBAAoB,CAAC8C,EAAE,CAACiN,GAAJ,EAASnF,IAAI,CAAC65C,aAAd,CAApB;AACD;;AACDjgB,EAAAA,SAAS,GAAG;AACV,UAAM1hC,EAAE,GAAG,IAAX;AACA,UAAM8H,IAAI,GAAG9H,EAAE,CAAC6G,OAAhB;AACA,UAAMo1B,SAAS,GAAGn0B,IAAI,CAACyU,KAAvB;AACA,UAAMwlC,SAAS,GAAGvpD,MAAM,CAACyjC,SAAS,CAAC9E,IAAX,CAAxB;AACA,UAAM6qB,YAAY,GAAGhsD,SAAS,CAACimC,SAAS,CAAC/P,OAAX,CAA9B;;AACA,QAAI,CAAC+P,SAAS,CAAC7X,OAAf,EAAwB;AACtB;AACD;;AACD,UAAMs8B,SAAS,GAAG9jD,aAAa,CAACkL,IAAI,CAAC24C,GAAN,EAAWzgD,EAAE,CAACuI,IAAd,EAAoBvI,EAAE,CAACia,KAAvB,CAA/B;AACA,UAAMhN,GAAG,GAAGjN,EAAE,CAACiN,GAAf;AACA,UAAM4Z,QAAQ,GAAGoV,SAAS,CAACpV,QAA3B;AACA,UAAMm6B,YAAY,GAAGe,SAAS,CAACx6C,IAAV,GAAiB,CAAtC;AACA,UAAM06C,0BAA0B,GAAGD,YAAY,CAAC55C,GAAb,GAAmB44C,YAAtD;AACA,QAAIrrD,CAAJ;AACA,QAAI4S,IAAI,GAAGvI,EAAE,CAACuI,IAAd;AACA,QAAIsW,QAAQ,GAAG7e,EAAE,CAACia,KAAlB;;AACA,QAAI,KAAK7B,YAAL,EAAJ,EAAyB;AACvByG,MAAAA,QAAQ,GAAGjf,IAAI,CAACmC,GAAL,CAAS,GAAG/B,EAAE,CAACw/C,UAAf,CAAX;AACA7pD,MAAAA,CAAC,GAAGqK,EAAE,CAACoI,GAAH,GAAS65C,0BAAb;AACA15C,MAAAA,IAAI,GAAG3P,cAAc,CAACkP,IAAI,CAACmsB,KAAN,EAAa1rB,IAAb,EAAmBvI,EAAE,CAACqI,KAAH,GAAWwW,QAA9B,CAArB;AACD,KAJD,MAIO;AACL,YAAMC,SAAS,GAAG9e,EAAE,CAACu/C,WAAH,CAAe39C,MAAf,CAAsB,CAACC,GAAD,EAAM0F,IAAN,KAAe3H,IAAI,CAACmC,GAAL,CAASF,GAAT,EAAc0F,IAAI,CAACyS,MAAnB,CAArC,EAAiE,CAAjE,CAAlB;AACArkB,MAAAA,CAAC,GAAGssD,0BAA0B,GAAGrpD,cAAc,CAACkP,IAAI,CAACmsB,KAAN,EAAaj0B,EAAE,CAACoI,GAAhB,EAAqBpI,EAAE,CAACsI,MAAH,GAAYwW,SAAZ,GAAwBhX,IAAI,CAACkJ,MAAL,CAAYkb,OAApC,GAA8ClsB,EAAE,CAAC2/C,mBAAH,EAAnE,CAA/C;AACD;;AACD,UAAMlqD,CAAC,GAAGmD,cAAc,CAACiuB,QAAD,EAAWte,IAAX,EAAiBA,IAAI,GAAGsW,QAAxB,CAAxB;;AACA5R,IAAAA,GAAG,CAAC2yB,SAAJ,GAAgB8gB,SAAS,CAAC9gB,SAAV,CAAoBlnC,kBAAkB,CAACmuB,QAAD,CAAtC,CAAhB;AACA5Z,IAAAA,GAAG,CAAC8yB,YAAJ,GAAmB,QAAnB;AACA9yB,IAAAA,GAAG,CAAC6T,WAAJ,GAAkBmb,SAAS,CAACvpC,KAA5B;AACAua,IAAAA,GAAG,CAAC2T,SAAJ,GAAgBqb,SAAS,CAACvpC,KAA1B;AACAua,IAAAA,GAAG,CAACkqB,IAAJ,GAAW4qB,SAAS,CAACvkB,MAArB;AACAplC,IAAAA,UAAU,CAAC6U,GAAD,EAAMgvB,SAAS,CAACtb,IAAhB,EAAsBlrB,CAAtB,EAAyBE,CAAzB,EAA4BosD,SAA5B,CAAV;AACD;;AACDpC,EAAAA,mBAAmB,GAAG;AACpB,UAAM1jB,SAAS,GAAG,KAAKp1B,OAAL,CAAa0V,KAA/B;AACA,UAAMwlC,SAAS,GAAGvpD,MAAM,CAACyjC,SAAS,CAAC9E,IAAX,CAAxB;AACA,UAAM6qB,YAAY,GAAGhsD,SAAS,CAACimC,SAAS,CAAC/P,OAAX,CAA9B;AACA,WAAO+P,SAAS,CAAC7X,OAAV,GAAoB29B,SAAS,CAAC1qB,UAAV,GAAuB2qB,YAAY,CAAChoC,MAAxD,GAAiE,CAAxE;AACD;;AACDkoC,EAAAA,gBAAgB,CAACzsD,CAAD,EAAIE,CAAJ,EAAO;AACrB,UAAMqK,EAAE,GAAG,IAAX;AACA,QAAInN,CAAJ,EAAOsvD,MAAP,EAAeC,EAAf;;AACA,QAAI3sD,CAAC,IAAIuK,EAAE,CAACuI,IAAR,IAAgB9S,CAAC,IAAIuK,EAAE,CAACqI,KAAxB,IAAiC1S,CAAC,IAAIqK,EAAE,CAACoI,GAAzC,IAAgDzS,CAAC,IAAIqK,EAAE,CAACsI,MAA5D,EAAoE;AAClE85C,MAAAA,EAAE,GAAGpiD,EAAE,CAACm/C,cAAR;;AACA,WAAKtsD,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGuvD,EAAE,CAAC3hD,MAAnB,EAA2B,EAAE5N,CAA7B,EAAgC;AAC9BsvD,QAAAA,MAAM,GAAGC,EAAE,CAACvvD,CAAD,CAAX;;AACA,YAAI4C,CAAC,IAAI0sD,MAAM,CAAC55C,IAAZ,IAAoB9S,CAAC,IAAI0sD,MAAM,CAAC55C,IAAP,GAAc45C,MAAM,CAACloC,KAA9C,IAAuDtkB,CAAC,IAAIwsD,MAAM,CAAC/5C,GAAnE,IAA0EzS,CAAC,IAAIwsD,MAAM,CAAC/5C,GAAP,GAAa+5C,MAAM,CAACnoC,MAAvG,EAA+G;AAC7G,iBAAOha,EAAE,CAACs/C,WAAH,CAAezsD,CAAf,CAAP;AACD;AACF;AACF;;AACD,WAAO,IAAP;AACD;;AACDwvD,EAAAA,WAAW,CAAC9vD,CAAD,EAAI;AACb,UAAMyN,EAAE,GAAG,IAAX;AACA,UAAM8H,IAAI,GAAG9H,EAAE,CAAC6G,OAAhB;;AACA,QAAI,CAACy7C,UAAU,CAAC/vD,CAAC,CAAC4M,IAAH,EAAS2I,IAAT,CAAf,EAA+B;AAC7B;AACD;;AACD,UAAMy6C,WAAW,GAAGviD,EAAE,CAACkiD,gBAAH,CAAoB3vD,CAAC,CAACkD,CAAtB,EAAyBlD,CAAC,CAACoD,CAA3B,CAApB;;AACA,QAAIpD,CAAC,CAAC4M,IAAF,KAAW,WAAf,EAA4B;AAC1B,YAAMy0C,QAAQ,GAAG5zC,EAAE,CAACo/C,YAApB;AACA,YAAMoD,QAAQ,GAAGxD,UAAU,CAACpL,QAAD,EAAW2O,WAAX,CAA3B;;AACA,UAAI3O,QAAQ,IAAI,CAAC4O,QAAjB,EAA2B;AACzBlrD,QAAAA,QAAQ,CAACwQ,IAAI,CAAC26C,OAAN,EAAe,CAAClwD,CAAD,EAAIqhD,QAAJ,EAAc5zC,EAAd,CAAf,EAAkCA,EAAlC,CAAR;AACD;;AACDA,MAAAA,EAAE,CAACo/C,YAAH,GAAkBmD,WAAlB;;AACA,UAAIA,WAAW,IAAI,CAACC,QAApB,EAA8B;AAC5BlrD,QAAAA,QAAQ,CAACwQ,IAAI,CAACgoC,OAAN,EAAe,CAACv9C,CAAD,EAAIgwD,WAAJ,EAAiBviD,EAAjB,CAAf,EAAqCA,EAArC,CAAR;AACD;AACF,KAVD,MAUO,IAAIuiD,WAAJ,EAAiB;AACtBjrD,MAAAA,QAAQ,CAACwQ,IAAI,CAACmZ,OAAN,EAAe,CAAC1uB,CAAD,EAAIgwD,WAAJ,EAAiBviD,EAAjB,CAAf,EAAqCA,EAArC,CAAR;AACD;AACF;;AAxX0B;;AA0X7B,SAASsiD,UAAT,CAAoBnjD,IAApB,EAA0B2I,IAA1B,EAAgC;AAC9B,MAAI3I,IAAI,KAAK,WAAT,KAAyB2I,IAAI,CAACgoC,OAAL,IAAgBhoC,IAAI,CAAC26C,OAA9C,CAAJ,EAA4D;AAC1D,WAAO,IAAP;AACD;;AACD,MAAI36C,IAAI,CAACmZ,OAAL,KAAiB9hB,IAAI,KAAK,OAAT,IAAoBA,IAAI,KAAK,SAA9C,CAAJ,EAA8D;AAC5D,WAAO,IAAP;AACD;;AACD,SAAO,KAAP;AACD;;AACD,IAAIujD,aAAa,GAAG;AAClBz4C,EAAAA,EAAE,EAAE,QADc;AAElB04C,EAAAA,QAAQ,EAAE1D,MAFQ;;AAGlBn/C,EAAAA,KAAK,CAACd,KAAD,EAAQo/C,KAAR,EAAev3C,OAAf,EAAwB;AAC3B,UAAMyZ,MAAM,GAAGthB,KAAK,CAACshB,MAAN,GAAe,IAAI2+B,MAAJ,CAAW;AAAChyC,MAAAA,GAAG,EAAEjO,KAAK,CAACiO,GAAZ;AAAiBpG,MAAAA,OAAjB;AAA0B7H,MAAAA;AAA1B,KAAX,CAA9B;AACAoqB,IAAAA,OAAO,CAAC/iB,SAAR,CAAkBrH,KAAlB,EAAyBshB,MAAzB,EAAiCzZ,OAAjC;AACAuiB,IAAAA,OAAO,CAAC+C,MAAR,CAAentB,KAAf,EAAsBshB,MAAtB;AACD,GAPiB;;AAQlBre,EAAAA,IAAI,CAACjD,KAAD,EAAQ;AACVoqB,IAAAA,OAAO,CAACiD,SAAR,CAAkBrtB,KAAlB,EAAyBA,KAAK,CAACshB,MAA/B;AACA,WAAOthB,KAAK,CAACshB,MAAb;AACD,GAXiB;;AAYlBiZ,EAAAA,YAAY,CAACv6B,KAAD,EAAQo/C,KAAR,EAAev3C,OAAf,EAAwB;AAClC,UAAMyZ,MAAM,GAAGthB,KAAK,CAACshB,MAArB;AACA8I,IAAAA,OAAO,CAAC/iB,SAAR,CAAkBrH,KAAlB,EAAyBshB,MAAzB,EAAiCzZ,OAAjC;AACAyZ,IAAAA,MAAM,CAACzZ,OAAP,GAAiBA,OAAjB;AACD,GAhBiB;;AAiBlB+zB,EAAAA,WAAW,CAAC57B,KAAD,EAAQ;AACjB,UAAMshB,MAAM,GAAGthB,KAAK,CAACshB,MAArB;AACAA,IAAAA,MAAM,CAACm/B,WAAP;AACAn/B,IAAAA,MAAM,CAACkgC,cAAP;AACD,GArBiB;;AAsBlBoC,EAAAA,UAAU,CAAC5jD,KAAD,EAAQ6xB,IAAR,EAAc;AACtB,QAAI,CAACA,IAAI,CAACye,MAAV,EAAkB;AAChBtwC,MAAAA,KAAK,CAACshB,MAAN,CAAa+hC,WAAb,CAAyBxxB,IAAI,CAACtvB,KAA9B;AACD;AACF,GA1BiB;;AA2BlB3O,EAAAA,QAAQ,EAAE;AACRwxB,IAAAA,OAAO,EAAE,IADD;AAERyC,IAAAA,QAAQ,EAAE,KAFF;AAGRoN,IAAAA,KAAK,EAAE,QAHC;AAIRnK,IAAAA,QAAQ,EAAE,IAJF;AAKR/hB,IAAAA,OAAO,EAAE,KALD;AAMRqY,IAAAA,MAAM,EAAE,IANA;;AAORa,IAAAA,OAAO,CAAC1uB,CAAD,EAAI2uB,UAAJ,EAAgBZ,MAAhB,EAAwB;AAC7B,YAAMvX,KAAK,GAAGmY,UAAU,CAAC7X,YAAzB;AACA,YAAMw5C,EAAE,GAAGviC,MAAM,CAACthB,KAAlB;;AACA,UAAI6jD,EAAE,CAACxkC,gBAAH,CAAoBtV,KAApB,CAAJ,EAAgC;AAC9B85C,QAAAA,EAAE,CAAC78C,IAAH,CAAQ+C,KAAR;AACAmY,QAAAA,UAAU,CAACvO,MAAX,GAAoB,IAApB;AACD,OAHD,MAGO;AACLkwC,QAAAA,EAAE,CAACh9C,IAAH,CAAQkD,KAAR;AACAmY,QAAAA,UAAU,CAACvO,MAAX,GAAoB,KAApB;AACD;AACF,KAjBO;;AAkBRm9B,IAAAA,OAAO,EAAE,IAlBD;AAmBR2S,IAAAA,OAAO,EAAE,IAnBD;AAoBRzxC,IAAAA,MAAM,EAAE;AACNte,MAAAA,KAAK,EAAGua,GAAD,IAASA,GAAG,CAACjO,KAAJ,CAAU6H,OAAV,CAAkBnU,KAD5B;AAENmsD,MAAAA,QAAQ,EAAE,EAFJ;AAGN3yB,MAAAA,OAAO,EAAE,EAHH;;AAIN3L,MAAAA,cAAc,CAACvhB,KAAD,EAAQ;AACpB,cAAMkQ,QAAQ,GAAGlQ,KAAK,CAACwK,IAAN,CAAW0F,QAA5B;AACA,cAAM;AAAC8B,UAAAA,MAAM,EAAE;AAAC8tC,YAAAA,aAAD;AAAgBt+B,YAAAA,UAAhB;AAA4Bof,YAAAA,SAA5B;AAAuCltC,YAAAA;AAAvC;AAAT,YAA0DsM,KAAK,CAACshB,MAAN,CAAazZ,OAA7E;AACA,eAAO7H,KAAK,CAAC6J,sBAAN,GAA+B4X,GAA/B,CAAoC7W,IAAD,IAAU;AAClD,gBAAM8W,KAAK,GAAG9W,IAAI,CAACsB,UAAL,CAAgB0H,QAAhB,CAAyBksC,aAAa,GAAG,CAAH,GAAOhgD,SAA7C,CAAd;AACA,gBAAMkhB,WAAW,GAAGhqB,SAAS,CAAC0qB,KAAK,CAACV,WAAP,CAA7B;AACA,iBAAO;AACLW,YAAAA,IAAI,EAAEzR,QAAQ,CAACtF,IAAI,CAACb,KAAN,CAAR,CAAqBqJ,KADtB;AAELwO,YAAAA,SAAS,EAAEF,KAAK,CAACG,eAFZ;AAGLkgC,YAAAA,SAAS,EAAEruD,KAHN;AAILigB,YAAAA,MAAM,EAAE,CAAC/I,IAAI,CAAC7D,OAJT;AAKL0tC,YAAAA,OAAO,EAAE/yB,KAAK,CAACgzB,cALV;AAMLyN,YAAAA,QAAQ,EAAEzgC,KAAK,CAAC2S,UANX;AAOL8N,YAAAA,cAAc,EAAEzgB,KAAK,CAAC4S,gBAPjB;AAQLuf,YAAAA,QAAQ,EAAEnyB,KAAK,CAACizB,eARX;AASL3yB,YAAAA,SAAS,EAAE,CAAChB,WAAW,CAAC/F,KAAZ,GAAoB+F,WAAW,CAAChG,MAAjC,IAA2C,CATjD;AAUL8G,YAAAA,WAAW,EAAEJ,KAAK,CAACK,WAVd;AAWLP,YAAAA,UAAU,EAAEA,UAAU,IAAIE,KAAK,CAACF,UAX3B;AAYL/D,YAAAA,QAAQ,EAAEiE,KAAK,CAACjE,QAZX;AAaLmjB,YAAAA,SAAS,EAAEA,SAAS,IAAIlf,KAAK,CAACkf,SAbzB;AAcL6Q,YAAAA,YAAY,EAAE,CAdT;AAeLpnC,YAAAA,YAAY,EAAEO,IAAI,CAACb;AAfd,WAAP;AAiBD,SApBM,EAoBJ,IApBI,CAAP;AAqBD;;AA5BK,KApBA;AAkDRwT,IAAAA,KAAK,EAAE;AACL7pB,MAAAA,KAAK,EAAGua,GAAD,IAASA,GAAG,CAACjO,KAAJ,CAAU6H,OAAV,CAAkBnU,KAD7B;AAEL0xB,MAAAA,OAAO,EAAE,KAFJ;AAGLyC,MAAAA,QAAQ,EAAE,QAHL;AAILlG,MAAAA,IAAI,EAAE;AAJD;AAlDC,GA3BQ;AAoFlBvnB,EAAAA,WAAW,EAAE;AACXqM,IAAAA,WAAW,EAAGC,IAAD,IAAU,CAACA,IAAI,CAAC6uB,UAAL,CAAgB,IAAhB,CADb;AAEXvjB,IAAAA,MAAM,EAAE;AACNvL,MAAAA,WAAW,EAAGC,IAAD,IAAU,CAAC,CAAC,gBAAD,EAAmB,QAAnB,EAA6B,MAA7B,EAAqC4jB,QAArC,CAA8C5jB,IAA9C;AADlB;AAFG;AApFK,CAApB;;AA4FA,MAAMo9C,KAAN,SAAoBrxB,OAApB,CAA4B;AAC1BjzB,EAAAA,WAAW,CAAC0H,MAAD,EAAS;AAClB;AACA,SAAKlH,KAAL,GAAakH,MAAM,CAAClH,KAApB;AACA,SAAK6H,OAAL,GAAeX,MAAM,CAACW,OAAtB;AACA,SAAKoG,GAAL,GAAW/G,MAAM,CAAC+G,GAAlB;AACA,SAAK81C,QAAL,GAAgBjkD,SAAhB;AACA,SAAKsJ,GAAL,GAAWtJ,SAAX;AACA,SAAKwJ,MAAL,GAAcxJ,SAAd;AACA,SAAKyJ,IAAL,GAAYzJ,SAAZ;AACA,SAAKuJ,KAAL,GAAavJ,SAAb;AACA,SAAKmb,KAAL,GAAanb,SAAb;AACA,SAAKkb,MAAL,GAAclb,SAAd;AACA,SAAK+nB,QAAL,GAAgB/nB,SAAhB;AACA,SAAKshB,MAAL,GAActhB,SAAd;AACA,SAAKgrB,QAAL,GAAgBhrB,SAAhB;AACD;;AACDwF,EAAAA,MAAM,CAACua,QAAD,EAAWC,SAAX,EAAsB;AAC1B,UAAM9e,EAAE,GAAG,IAAX;AACA,UAAM8H,IAAI,GAAG9H,EAAE,CAAC6G,OAAhB;AACA7G,IAAAA,EAAE,CAACuI,IAAH,GAAU,CAAV;AACAvI,IAAAA,EAAE,CAACoI,GAAH,GAAS,CAAT;;AACA,QAAI,CAACN,IAAI,CAACsc,OAAV,EAAmB;AACjBpkB,MAAAA,EAAE,CAACia,KAAH,GAAWja,EAAE,CAACga,MAAH,GAAYha,EAAE,CAACqI,KAAH,GAAWrI,EAAE,CAACsI,MAAH,GAAY,CAA9C;AACA;AACD;;AACDtI,IAAAA,EAAE,CAACia,KAAH,GAAWja,EAAE,CAACqI,KAAH,GAAWwW,QAAtB;AACA7e,IAAAA,EAAE,CAACga,MAAH,GAAYha,EAAE,CAACsI,MAAH,GAAYwW,SAAxB;AACA,UAAM+gB,SAAS,GAAG7sC,OAAO,CAAC8U,IAAI,CAAC6Y,IAAN,CAAP,GAAqB7Y,IAAI,CAAC6Y,IAAL,CAAUlgB,MAA/B,GAAwC,CAA1D;AACAT,IAAAA,EAAE,CAAC+iD,QAAH,GAAc/sD,SAAS,CAAC8R,IAAI,CAACokB,OAAN,CAAvB;;AACA,UAAM82B,QAAQ,GAAGnjB,SAAS,GAAGrnC,MAAM,CAACsP,IAAI,CAACqvB,IAAN,CAAN,CAAkBE,UAA9B,GAA2Cr3B,EAAE,CAAC+iD,QAAH,CAAY/oC,MAAxE;;AACA,QAAIha,EAAE,CAACoY,YAAH,EAAJ,EAAuB;AACrBpY,MAAAA,EAAE,CAACga,MAAH,GAAYgpC,QAAZ;AACD,KAFD,MAEO;AACLhjD,MAAAA,EAAE,CAACia,KAAH,GAAW+oC,QAAX;AACD;AACF;;AACD5qC,EAAAA,YAAY,GAAG;AACb,UAAMsQ,GAAG,GAAG,KAAK7hB,OAAL,CAAaggB,QAAzB;AACA,WAAO6B,GAAG,KAAK,KAAR,IAAiBA,GAAG,KAAK,QAAhC;AACD;;AACDu6B,EAAAA,SAAS,CAACxnC,MAAD,EAAS;AAChB,UAAM;AAACrT,MAAAA,GAAD;AAAMG,MAAAA,IAAN;AAAYD,MAAAA,MAAZ;AAAoBD,MAAAA,KAApB;AAA2BxB,MAAAA;AAA3B,QAAsC,IAA5C;AACA,UAAMotB,KAAK,GAAGptB,OAAO,CAACotB,KAAtB;AACA,QAAIxX,QAAQ,GAAG,CAAf;AACA,QAAIoC,QAAJ,EAAc6Y,MAAd,EAAsBC,MAAtB;;AACA,QAAI,KAAKvf,YAAL,EAAJ,EAAyB;AACvBsf,MAAAA,MAAM,GAAG9+B,cAAc,CAACq7B,KAAD,EAAQ1rB,IAAR,EAAcF,KAAd,CAAvB;AACAsvB,MAAAA,MAAM,GAAGvvB,GAAG,GAAGqT,MAAf;AACAoD,MAAAA,QAAQ,GAAGxW,KAAK,GAAGE,IAAnB;AACD,KAJD,MAIO;AACL,UAAI1B,OAAO,CAACggB,QAAR,KAAqB,MAAzB,EAAiC;AAC/B6Q,QAAAA,MAAM,GAAGnvB,IAAI,GAAGkT,MAAhB;AACAkc,QAAAA,MAAM,GAAG/+B,cAAc,CAACq7B,KAAD,EAAQ3rB,MAAR,EAAgBF,GAAhB,CAAvB;AACAqU,QAAAA,QAAQ,GAAGvnB,EAAE,GAAG,CAAC,GAAjB;AACD,OAJD,MAIO;AACLwiC,QAAAA,MAAM,GAAGrvB,KAAK,GAAGoT,MAAjB;AACAkc,QAAAA,MAAM,GAAG/+B,cAAc,CAACq7B,KAAD,EAAQ7rB,GAAR,EAAaE,MAAb,CAAvB;AACAmU,QAAAA,QAAQ,GAAGvnB,EAAE,GAAG,GAAhB;AACD;;AACD2pB,MAAAA,QAAQ,GAAGvW,MAAM,GAAGF,GAApB;AACD;;AACD,WAAO;AAACsvB,MAAAA,MAAD;AAASC,MAAAA,MAAT;AAAiB9Y,MAAAA,QAAjB;AAA2BpC,MAAAA;AAA3B,KAAP;AACD;;AACD/b,EAAAA,IAAI,GAAG;AACL,UAAMV,EAAE,GAAG,IAAX;AACA,UAAMiN,GAAG,GAAGjN,EAAE,CAACiN,GAAf;AACA,UAAMnF,IAAI,GAAG9H,EAAE,CAAC6G,OAAhB;;AACA,QAAI,CAACiB,IAAI,CAACsc,OAAV,EAAmB;AACjB;AACD;;AACD,UAAM8+B,QAAQ,GAAG1qD,MAAM,CAACsP,IAAI,CAACqvB,IAAN,CAAvB;AACA,UAAME,UAAU,GAAG6rB,QAAQ,CAAC7rB,UAA5B;AACA,UAAM5b,MAAM,GAAG4b,UAAU,GAAG,CAAb,GAAiBr3B,EAAE,CAAC+iD,QAAH,CAAY36C,GAA5C;;AACA,UAAM;AAACsvB,MAAAA,MAAD;AAASC,MAAAA,MAAT;AAAiB9Y,MAAAA,QAAjB;AAA2BpC,MAAAA;AAA3B,QAAuCzc,EAAE,CAACijD,SAAH,CAAaxnC,MAAb,CAA7C;;AACArjB,IAAAA,UAAU,CAAC6U,GAAD,EAAMnF,IAAI,CAAC6Y,IAAX,EAAiB,CAAjB,EAAoB,CAApB,EAAuBuiC,QAAvB,EAAiC;AACzCxwD,MAAAA,KAAK,EAAEoV,IAAI,CAACpV,KAD6B;AAEzCmsB,MAAAA,QAFyC;AAGzCpC,MAAAA,QAHyC;AAIzCmjB,MAAAA,SAAS,EAAElnC,kBAAkB,CAACoP,IAAI,CAACmsB,KAAN,CAJY;AAKzC8L,MAAAA,YAAY,EAAE,QAL2B;AAMzCQ,MAAAA,WAAW,EAAE,CAAC7I,MAAD,EAASC,MAAT;AAN4B,KAAjC,CAAV;AAQD;;AAnFyB;;AAqF5B,SAASwrB,WAAT,CAAqBnkD,KAArB,EAA4Bi9B,SAA5B,EAAuC;AACrC,QAAM1f,KAAK,GAAG,IAAIumC,KAAJ,CAAU;AACtB71C,IAAAA,GAAG,EAAEjO,KAAK,CAACiO,GADW;AAEtBpG,IAAAA,OAAO,EAAEo1B,SAFa;AAGtBj9B,IAAAA;AAHsB,GAAV,CAAd;AAKAoqB,EAAAA,OAAO,CAAC/iB,SAAR,CAAkBrH,KAAlB,EAAyBud,KAAzB,EAAgC0f,SAAhC;AACA7S,EAAAA,OAAO,CAAC+C,MAAR,CAAentB,KAAf,EAAsBud,KAAtB;AACAvd,EAAAA,KAAK,CAACokD,UAAN,GAAmB7mC,KAAnB;AACD;;AACD,IAAI8mC,YAAY,GAAG;AACjBp5C,EAAAA,EAAE,EAAE,OADa;AAEjB04C,EAAAA,QAAQ,EAAEG,KAFO;;AAGjBhjD,EAAAA,KAAK,CAACd,KAAD,EAAQo/C,KAAR,EAAev3C,OAAf,EAAwB;AAC3Bs8C,IAAAA,WAAW,CAACnkD,KAAD,EAAQ6H,OAAR,CAAX;AACD,GALgB;;AAMjB5E,EAAAA,IAAI,CAACjD,KAAD,EAAQ;AACV,UAAMokD,UAAU,GAAGpkD,KAAK,CAACokD,UAAzB;AACAh6B,IAAAA,OAAO,CAACiD,SAAR,CAAkBrtB,KAAlB,EAAyBokD,UAAzB;AACA,WAAOpkD,KAAK,CAACokD,UAAb;AACD,GAVgB;;AAWjB7pB,EAAAA,YAAY,CAACv6B,KAAD,EAAQo/C,KAAR,EAAev3C,OAAf,EAAwB;AAClC,UAAM0V,KAAK,GAAGvd,KAAK,CAACokD,UAApB;AACAh6B,IAAAA,OAAO,CAAC/iB,SAAR,CAAkBrH,KAAlB,EAAyBud,KAAzB,EAAgC1V,OAAhC;AACA0V,IAAAA,KAAK,CAAC1V,OAAN,GAAgBA,OAAhB;AACD,GAfgB;;AAgBjBjU,EAAAA,QAAQ,EAAE;AACRqhC,IAAAA,KAAK,EAAE,QADC;AAER7P,IAAAA,OAAO,EAAE,KAFD;AAGR+S,IAAAA,IAAI,EAAE;AACJ/W,MAAAA,MAAM,EAAE;AADJ,KAHE;AAMR0J,IAAAA,QAAQ,EAAE,IANF;AAORoC,IAAAA,OAAO,EAAE,EAPD;AAQRrF,IAAAA,QAAQ,EAAE,KARF;AASRlG,IAAAA,IAAI,EAAE,EATE;AAURP,IAAAA,MAAM,EAAE;AAVA,GAhBO;AA4BjB2R,EAAAA,aAAa,EAAE;AACbr/B,IAAAA,KAAK,EAAE;AADM,GA5BE;AA+BjB0G,EAAAA,WAAW,EAAE;AACXqM,IAAAA,WAAW,EAAE,IADF;AAEXD,IAAAA,UAAU,EAAE;AAFD;AA/BI,CAAnB;AAqCA,MAAMib,GAAG,GAAG,IAAI6iC,OAAJ,EAAZ;AACA,IAAIC,eAAe,GAAG;AACpBt5C,EAAAA,EAAE,EAAE,UADgB;;AAEpBnK,EAAAA,KAAK,CAACd,KAAD,EAAQo/C,KAAR,EAAev3C,OAAf,EAAwB;AAC3B,UAAM0V,KAAK,GAAG,IAAIumC,KAAJ,CAAU;AACtB71C,MAAAA,GAAG,EAAEjO,KAAK,CAACiO,GADW;AAEtBpG,MAAAA,OAFsB;AAGtB7H,MAAAA;AAHsB,KAAV,CAAd;AAKAoqB,IAAAA,OAAO,CAAC/iB,SAAR,CAAkBrH,KAAlB,EAAyBud,KAAzB,EAAgC1V,OAAhC;AACAuiB,IAAAA,OAAO,CAAC+C,MAAR,CAAentB,KAAf,EAAsBud,KAAtB;AACAkE,IAAAA,GAAG,CAACpf,GAAJ,CAAQrC,KAAR,EAAeud,KAAf;AACD,GAXmB;;AAYpBta,EAAAA,IAAI,CAACjD,KAAD,EAAQ;AACVoqB,IAAAA,OAAO,CAACiD,SAAR,CAAkBrtB,KAAlB,EAAyByhB,GAAG,CAACvf,GAAJ,CAAQlC,KAAR,CAAzB;AACAyhB,IAAAA,GAAG,CAACre,MAAJ,CAAWpD,KAAX;AACD,GAfmB;;AAgBpBu6B,EAAAA,YAAY,CAACv6B,KAAD,EAAQo/C,KAAR,EAAev3C,OAAf,EAAwB;AAClC,UAAM0V,KAAK,GAAGkE,GAAG,CAACvf,GAAJ,CAAQlC,KAAR,CAAd;AACAoqB,IAAAA,OAAO,CAAC/iB,SAAR,CAAkBrH,KAAlB,EAAyBud,KAAzB,EAAgC1V,OAAhC;AACA0V,IAAAA,KAAK,CAAC1V,OAAN,GAAgBA,OAAhB;AACD,GApBmB;;AAqBpBjU,EAAAA,QAAQ,EAAE;AACRqhC,IAAAA,KAAK,EAAE,QADC;AAER7P,IAAAA,OAAO,EAAE,KAFD;AAGR+S,IAAAA,IAAI,EAAE;AACJ/W,MAAAA,MAAM,EAAE;AADJ,KAHE;AAMR0J,IAAAA,QAAQ,EAAE,IANF;AAORoC,IAAAA,OAAO,EAAE,CAPD;AAQRrF,IAAAA,QAAQ,EAAE,KARF;AASRlG,IAAAA,IAAI,EAAE,EATE;AAURP,IAAAA,MAAM,EAAE;AAVA,GArBU;AAiCpB2R,EAAAA,aAAa,EAAE;AACbr/B,IAAAA,KAAK,EAAE;AADM,GAjCK;AAoCpB0G,EAAAA,WAAW,EAAE;AACXqM,IAAAA,WAAW,EAAE,IADF;AAEXD,IAAAA,UAAU,EAAE;AAFD;AApCO,CAAtB;AA0CA,MAAMg+C,WAAW,GAAG;AAClBC,EAAAA,OAAO,CAACjjD,KAAD,EAAQ;AACb,QAAI,CAACA,KAAK,CAACC,MAAX,EAAmB;AACjB,aAAO,KAAP;AACD;;AACD,QAAI5N,CAAJ,EAAOojC,GAAP;AACA,QAAIxgC,CAAC,GAAG,CAAR;AACA,QAAIE,CAAC,GAAG,CAAR;AACA,QAAI6a,KAAK,GAAG,CAAZ;;AACA,SAAK3d,CAAC,GAAG,CAAJ,EAAOojC,GAAG,GAAGz1B,KAAK,CAACC,MAAxB,EAAgC5N,CAAC,GAAGojC,GAApC,EAAyC,EAAEpjC,CAA3C,EAA8C;AAC5C,YAAM6zB,EAAE,GAAGlmB,KAAK,CAAC3N,CAAD,CAAL,CAASyZ,OAApB;;AACA,UAAIoa,EAAE,IAAIA,EAAE,CAACkL,QAAH,EAAV,EAAyB;AACvB,cAAMlJ,GAAG,GAAGhC,EAAE,CAACgL,eAAH,EAAZ;AACAj8B,QAAAA,CAAC,IAAIizB,GAAG,CAACjzB,CAAT;AACAE,QAAAA,CAAC,IAAI+yB,GAAG,CAAC/yB,CAAT;AACA,UAAE6a,KAAF;AACD;AACF;;AACD,WAAO;AACL/a,MAAAA,CAAC,EAAEA,CAAC,GAAG+a,KADF;AAEL7a,MAAAA,CAAC,EAAEA,CAAC,GAAG6a;AAFF,KAAP;AAID,GAtBiB;;AAuBlB8X,EAAAA,OAAO,CAAC9nB,KAAD,EAAQkjD,aAAR,EAAuB;AAC5B,QAAI,CAACljD,KAAK,CAACC,MAAX,EAAmB;AACjB,aAAO,KAAP;AACD;;AACD,QAAIhL,CAAC,GAAGiuD,aAAa,CAACjuD,CAAtB;AACA,QAAIE,CAAC,GAAG+tD,aAAa,CAAC/tD,CAAtB;AACA,QAAImyB,WAAW,GAAGzd,MAAM,CAACE,iBAAzB;AACA,QAAI1X,CAAJ,EAAOojC,GAAP,EAAY0tB,cAAZ;;AACA,SAAK9wD,CAAC,GAAG,CAAJ,EAAOojC,GAAG,GAAGz1B,KAAK,CAACC,MAAxB,EAAgC5N,CAAC,GAAGojC,GAApC,EAAyC,EAAEpjC,CAA3C,EAA8C;AAC5C,YAAM6zB,EAAE,GAAGlmB,KAAK,CAAC3N,CAAD,CAAL,CAASyZ,OAApB;;AACA,UAAIoa,EAAE,IAAIA,EAAE,CAACkL,QAAH,EAAV,EAAyB;AACvB,cAAM7X,MAAM,GAAG2M,EAAE,CAACqB,cAAH,EAAf;AACA,cAAMp1B,CAAC,GAAG2K,qBAAqB,CAAComD,aAAD,EAAgB3pC,MAAhB,CAA/B;;AACA,YAAIpnB,CAAC,GAAGm1B,WAAR,EAAqB;AACnBA,UAAAA,WAAW,GAAGn1B,CAAd;AACAgxD,UAAAA,cAAc,GAAGj9B,EAAjB;AACD;AACF;AACF;;AACD,QAAIi9B,cAAJ,EAAoB;AAClB,YAAMC,EAAE,GAAGD,cAAc,CAACjyB,eAAf,EAAX;AACAj8B,MAAAA,CAAC,GAAGmuD,EAAE,CAACnuD,CAAP;AACAE,MAAAA,CAAC,GAAGiuD,EAAE,CAACjuD,CAAP;AACD;;AACD,WAAO;AACLF,MAAAA,CADK;AAELE,MAAAA;AAFK,KAAP;AAID;;AAnDiB,CAApB;;AAqDA,SAASkuD,YAAT,CAAsBtrC,IAAtB,EAA4BurC,MAA5B,EAAoC;AAClC,MAAIA,MAAJ,EAAY;AACV,QAAI9wD,OAAO,CAAC8wD,MAAD,CAAX,EAAqB;AACnBp6C,MAAAA,KAAK,CAACiM,SAAN,CAAgBlU,IAAhB,CAAqBsiD,KAArB,CAA2BxrC,IAA3B,EAAiCurC,MAAjC;AACD,KAFD,MAEO;AACLvrC,MAAAA,IAAI,CAAC9W,IAAL,CAAUqiD,MAAV;AACD;AACF;;AACD,SAAOvrC,IAAP;AACD;;AACD,SAASyrC,aAAT,CAAuBC,GAAvB,EAA4B;AAC1B,MAAI,CAAC,OAAOA,GAAP,KAAe,QAAf,IAA2BA,GAAG,YAAYC,MAA3C,KAAsDD,GAAG,CAAC1pC,OAAJ,CAAY,IAAZ,IAAoB,CAAC,CAA/E,EAAkF;AAChF,WAAO0pC,GAAG,CAACjhB,KAAJ,CAAU,IAAV,CAAP;AACD;;AACD,SAAOihB,GAAP;AACD;;AACD,SAASE,iBAAT,CAA2BnlD,KAA3B,EAAkC2B,IAAlC,EAAwC;AACtC,QAAM;AAAC2L,IAAAA,OAAD;AAAUjD,IAAAA,YAAV;AAAwBN,IAAAA;AAAxB,MAAiCpI,IAAvC;AACA,QAAMuK,UAAU,GAAGlM,KAAK,CAACmQ,cAAN,CAAqB9F,YAArB,EAAmC6B,UAAtD;AACA,QAAM;AAACkH,IAAAA,KAAD;AAAQ9K,IAAAA;AAAR,MAAiB4D,UAAU,CAACiH,gBAAX,CAA4BpJ,KAA5B,CAAvB;AACA,SAAO;AACL/J,IAAAA,KADK;AAELoT,IAAAA,KAFK;AAGLjH,IAAAA,MAAM,EAAED,UAAU,CAACmG,SAAX,CAAqBtI,KAArB,CAHH;AAILyD,IAAAA,GAAG,EAAExN,KAAK,CAACwK,IAAN,CAAW0F,QAAX,CAAoB7F,YAApB,EAAkCG,IAAlC,CAAuCT,KAAvC,CAJA;AAKLuY,IAAAA,cAAc,EAAEha,KALX;AAML8E,IAAAA,OAAO,EAAElB,UAAU,CAACiD,UAAX,EANJ;AAOL5B,IAAAA,SAAS,EAAExD,KAPN;AAQLM,IAAAA,YARK;AASLiD,IAAAA;AATK,GAAP;AAWD;;AACD,SAAS83C,cAAT,CAAwB9nC,OAAxB,EAAiCzV,OAAjC,EAA0C;AACxC,QAAMoG,GAAG,GAAGqP,OAAO,CAACnW,MAAR,CAAe8G,GAA3B;AACA,QAAM;AAACo3C,IAAAA,IAAD;AAAOC,IAAAA,MAAP;AAAe/nC,IAAAA;AAAf,MAAwBD,OAA9B;AACA,QAAM;AAACuiC,IAAAA,QAAD;AAAWD,IAAAA;AAAX,MAAwB/3C,OAA9B;AACA,QAAM09C,QAAQ,GAAG/rD,MAAM,CAACqO,OAAO,CAAC09C,QAAT,CAAvB;AACA,QAAMxC,SAAS,GAAGvpD,MAAM,CAACqO,OAAO,CAACk7C,SAAT,CAAxB;AACA,QAAMyC,UAAU,GAAGhsD,MAAM,CAACqO,OAAO,CAAC29C,UAAT,CAAzB;AACA,QAAMC,cAAc,GAAGloC,KAAK,CAAC9b,MAA7B;AACA,QAAMikD,eAAe,GAAGJ,MAAM,CAAC7jD,MAA/B;AACA,QAAMkkD,iBAAiB,GAAGN,IAAI,CAAC5jD,MAA/B;AACA,QAAMyrB,OAAO,GAAGl2B,SAAS,CAAC6Q,OAAO,CAACqlB,OAAT,CAAzB;AACA,MAAIlS,MAAM,GAAGkS,OAAO,CAAClS,MAArB;AACA,MAAIC,KAAK,GAAG,CAAZ;AACA,MAAI2qC,kBAAkB,GAAGP,IAAI,CAACziD,MAAL,CAAY,CAAC4O,KAAD,EAAQq0C,QAAR,KAAqBr0C,KAAK,GAAGq0C,QAAQ,CAACC,MAAT,CAAgBrkD,MAAxB,GAAiCokD,QAAQ,CAACztB,KAAT,CAAe32B,MAAhD,GAAyDokD,QAAQ,CAACE,KAAT,CAAetkD,MAAzG,EAAiH,CAAjH,CAAzB;AACAmkD,EAAAA,kBAAkB,IAAItoC,OAAO,CAAC0oC,UAAR,CAAmBvkD,MAAnB,GAA4B6b,OAAO,CAAC2oC,SAAR,CAAkBxkD,MAApE;;AACA,MAAIgkD,cAAJ,EAAoB;AAClBzqC,IAAAA,MAAM,IAAIyqC,cAAc,GAAG1C,SAAS,CAAC1qB,UAA3B,GACT,CAACotB,cAAc,GAAG,CAAlB,IAAuB59C,OAAO,CAACq+C,YADtB,GAETr+C,OAAO,CAACs+C,iBAFT;AAGD;;AACD,MAAIP,kBAAJ,EAAwB;AACtB,UAAMQ,cAAc,GAAGv+C,OAAO,CAACw+C,aAAR,GAAwBzlD,IAAI,CAACmC,GAAL,CAAS68C,SAAT,EAAoB2F,QAAQ,CAACltB,UAA7B,CAAxB,GAAmEktB,QAAQ,CAACltB,UAAnG;AACArd,IAAAA,MAAM,IAAI2qC,iBAAiB,GAAGS,cAApB,GACT,CAACR,kBAAkB,GAAGD,iBAAtB,IAA2CJ,QAAQ,CAACltB,UAD3C,GAET,CAACutB,kBAAkB,GAAG,CAAtB,IAA2B/9C,OAAO,CAACy+C,WAFpC;AAGD;;AACD,MAAIZ,eAAJ,EAAqB;AACnB1qC,IAAAA,MAAM,IAAInT,OAAO,CAAC0+C,eAAR,GACTb,eAAe,GAAGF,UAAU,CAACntB,UADpB,GAET,CAACqtB,eAAe,GAAG,CAAnB,IAAwB79C,OAAO,CAAC2+C,aAFjC;AAGD;;AACD,MAAIC,YAAY,GAAG,CAAnB;;AACA,QAAMC,YAAY,GAAG,UAASjkC,IAAT,EAAe;AAClCxH,IAAAA,KAAK,GAAGra,IAAI,CAACmC,GAAL,CAASkY,KAAT,EAAgBhN,GAAG,CAACizC,WAAJ,CAAgBz+B,IAAhB,EAAsBxH,KAAtB,GAA8BwrC,YAA9C,CAAR;AACD,GAFD;;AAGAx4C,EAAAA,GAAG,CAACyzB,IAAJ;AACAzzB,EAAAA,GAAG,CAACkqB,IAAJ,GAAW4qB,SAAS,CAACvkB,MAArB;AACAtnC,EAAAA,IAAI,CAAComB,OAAO,CAACC,KAAT,EAAgBmpC,YAAhB,CAAJ;AACAz4C,EAAAA,GAAG,CAACkqB,IAAJ,GAAWotB,QAAQ,CAAC/mB,MAApB;AACAtnC,EAAAA,IAAI,CAAComB,OAAO,CAAC0oC,UAAR,CAAmBhvC,MAAnB,CAA0BsG,OAAO,CAAC2oC,SAAlC,CAAD,EAA+CS,YAA/C,CAAJ;AACAD,EAAAA,YAAY,GAAG5+C,OAAO,CAACw+C,aAAR,GAAyBxG,QAAQ,GAAG,CAApC,GAAyC,CAAxD;AACA3oD,EAAAA,IAAI,CAACmuD,IAAD,EAAQQ,QAAD,IAAc;AACvB3uD,IAAAA,IAAI,CAAC2uD,QAAQ,CAACC,MAAV,EAAkBY,YAAlB,CAAJ;AACAxvD,IAAAA,IAAI,CAAC2uD,QAAQ,CAACztB,KAAV,EAAiBsuB,YAAjB,CAAJ;AACAxvD,IAAAA,IAAI,CAAC2uD,QAAQ,CAACE,KAAV,EAAiBW,YAAjB,CAAJ;AACD,GAJG,CAAJ;AAKAD,EAAAA,YAAY,GAAG,CAAf;AACAx4C,EAAAA,GAAG,CAACkqB,IAAJ,GAAWqtB,UAAU,CAAChnB,MAAtB;AACAtnC,EAAAA,IAAI,CAAComB,OAAO,CAACgoC,MAAT,EAAiBoB,YAAjB,CAAJ;AACAz4C,EAAAA,GAAG,CAAC2zB,OAAJ;AACA3mB,EAAAA,KAAK,IAAIiS,OAAO,CAACjS,KAAjB;AACA,SAAO;AAACA,IAAAA,KAAD;AAAQD,IAAAA;AAAR,GAAP;AACD;;AACD,SAAS2rC,eAAT,CAAyB3mD,KAAzB,EAAgCuI,IAAhC,EAAsC;AACpC,QAAM;AAAC5R,IAAAA,CAAD;AAAIqkB,IAAAA;AAAJ,MAAczS,IAApB;;AACA,MAAI5R,CAAC,GAAGqkB,MAAM,GAAG,CAAjB,EAAoB;AAClB,WAAO,KAAP;AACD,GAFD,MAEO,IAAIrkB,CAAC,GAAIqJ,KAAK,CAACgb,MAAN,GAAeA,MAAM,GAAG,CAAjC,EAAqC;AAC1C,WAAO,QAAP;AACD;;AACD,SAAO,QAAP;AACD;;AACD,SAAS4rC,mBAAT,CAA6BC,MAA7B,EAAqC7mD,KAArC,EAA4C6H,OAA5C,EAAqDU,IAArD,EAA2D;AACzD,QAAM;AAAC9R,IAAAA,CAAD;AAAIwkB,IAAAA;AAAJ,MAAa1S,IAAnB;AACA,QAAMu+C,KAAK,GAAGj/C,OAAO,CAACk/C,SAAR,GAAoBl/C,OAAO,CAACm/C,YAA1C;;AACA,MAAIH,MAAM,KAAK,MAAX,IAAqBpwD,CAAC,GAAGwkB,KAAJ,GAAY6rC,KAAZ,GAAoB9mD,KAAK,CAACib,KAAnD,EAA0D;AACxD,WAAO,IAAP;AACD;;AACD,MAAI4rC,MAAM,KAAK,OAAX,IAAsBpwD,CAAC,GAAGwkB,KAAJ,GAAY6rC,KAAZ,GAAoB,CAA9C,EAAiD;AAC/C,WAAO,IAAP;AACD;AACF;;AACD,SAASG,eAAT,CAAyBjnD,KAAzB,EAAgC6H,OAAhC,EAAyCU,IAAzC,EAA+C2+C,MAA/C,EAAuD;AACrD,QAAM;AAACzwD,IAAAA,CAAD;AAAIwkB,IAAAA;AAAJ,MAAa1S,IAAnB;AACA,QAAM;AAAC0S,IAAAA,KAAK,EAAEksC,UAAR;AAAoBzzC,IAAAA,SAAS,EAAE;AAACnK,MAAAA,IAAD;AAAOF,MAAAA;AAAP;AAA/B,MAAgDrJ,KAAtD;AACA,MAAI6mD,MAAM,GAAG,QAAb;;AACA,MAAIK,MAAM,KAAK,QAAf,EAAyB;AACvBL,IAAAA,MAAM,GAAGpwD,CAAC,IAAI,CAAC8S,IAAI,GAAGF,KAAR,IAAiB,CAAtB,GAA0B,MAA1B,GAAmC,OAA5C;AACD,GAFD,MAEO,IAAI5S,CAAC,IAAIwkB,KAAK,GAAG,CAAjB,EAAoB;AACzB4rC,IAAAA,MAAM,GAAG,MAAT;AACD,GAFM,MAEA,IAAIpwD,CAAC,IAAI0wD,UAAU,GAAGlsC,KAAK,GAAG,CAA9B,EAAiC;AACtC4rC,IAAAA,MAAM,GAAG,OAAT;AACD;;AACD,MAAID,mBAAmB,CAACC,MAAD,EAAS7mD,KAAT,EAAgB6H,OAAhB,EAAyBU,IAAzB,CAAvB,EAAuD;AACrDs+C,IAAAA,MAAM,GAAG,QAAT;AACD;;AACD,SAAOA,MAAP;AACD;;AACD,SAASO,kBAAT,CAA4BpnD,KAA5B,EAAmC6H,OAAnC,EAA4CU,IAA5C,EAAkD;AAChD,QAAM2+C,MAAM,GAAGr/C,OAAO,CAACq/C,MAAR,IAAkBP,eAAe,CAAC3mD,KAAD,EAAQuI,IAAR,CAAhD;AACA,SAAO;AACLs+C,IAAAA,MAAM,EAAEh/C,OAAO,CAACg/C,MAAR,IAAkBI,eAAe,CAACjnD,KAAD,EAAQ6H,OAAR,EAAiBU,IAAjB,EAAuB2+C,MAAvB,CADpC;AAELA,IAAAA;AAFK,GAAP;AAID;;AACD,SAASG,MAAT,CAAgB9+C,IAAhB,EAAsBs+C,MAAtB,EAA8B;AAC5B,MAAI;AAACpwD,IAAAA,CAAD;AAAIwkB,IAAAA;AAAJ,MAAa1S,IAAjB;;AACA,MAAIs+C,MAAM,KAAK,OAAf,EAAwB;AACtBpwD,IAAAA,CAAC,IAAIwkB,KAAL;AACD,GAFD,MAEO,IAAI4rC,MAAM,KAAK,QAAf,EAAyB;AAC9BpwD,IAAAA,CAAC,IAAKwkB,KAAK,GAAG,CAAd;AACD;;AACD,SAAOxkB,CAAP;AACD;;AACD,SAAS6wD,MAAT,CAAgB/+C,IAAhB,EAAsB2+C,MAAtB,EAA8BK,cAA9B,EAA8C;AAC5C,MAAI;AAAC5wD,IAAAA,CAAD;AAAIqkB,IAAAA;AAAJ,MAAczS,IAAlB;;AACA,MAAI2+C,MAAM,KAAK,KAAf,EAAsB;AACpBvwD,IAAAA,CAAC,IAAI4wD,cAAL;AACD,GAFD,MAEO,IAAIL,MAAM,KAAK,QAAf,EAAyB;AAC9BvwD,IAAAA,CAAC,IAAIqkB,MAAM,GAAGusC,cAAd;AACD,GAFM,MAEA;AACL5wD,IAAAA,CAAC,IAAKqkB,MAAM,GAAG,CAAf;AACD;;AACD,SAAOrkB,CAAP;AACD;;AACD,SAAS6wD,kBAAT,CAA4B3/C,OAA5B,EAAqCU,IAArC,EAA2Ck/C,SAA3C,EAAsDznD,KAAtD,EAA6D;AAC3D,QAAM;AAAC+mD,IAAAA,SAAD;AAAYC,IAAAA,YAAZ;AAA0BU,IAAAA;AAA1B,MAA0C7/C,OAAhD;AACA,QAAM;AAACg/C,IAAAA,MAAD;AAASK,IAAAA;AAAT,MAAmBO,SAAzB;AACA,QAAMF,cAAc,GAAGR,SAAS,GAAGC,YAAnC;AACA,QAAMW,gBAAgB,GAAGD,YAAY,GAAGV,YAAxC;AACA,MAAIvwD,CAAC,GAAG4wD,MAAM,CAAC9+C,IAAD,EAAOs+C,MAAP,CAAd;AACA,QAAMlwD,CAAC,GAAG2wD,MAAM,CAAC/+C,IAAD,EAAO2+C,MAAP,EAAeK,cAAf,CAAhB;;AACA,MAAIL,MAAM,KAAK,QAAf,EAAyB;AACvB,QAAIL,MAAM,KAAK,MAAf,EAAuB;AACrBpwD,MAAAA,CAAC,IAAI8wD,cAAL;AACD,KAFD,MAEO,IAAIV,MAAM,KAAK,OAAf,EAAwB;AAC7BpwD,MAAAA,CAAC,IAAI8wD,cAAL;AACD;AACF,GAND,MAMO,IAAIV,MAAM,KAAK,MAAf,EAAuB;AAC5BpwD,IAAAA,CAAC,IAAIkxD,gBAAL;AACD,GAFM,MAEA,IAAId,MAAM,KAAK,OAAf,EAAwB;AAC7BpwD,IAAAA,CAAC,IAAIkxD,gBAAL;AACD;;AACD,SAAO;AACLlxD,IAAAA,CAAC,EAAEH,WAAW,CAACG,CAAD,EAAI,CAAJ,EAAOuJ,KAAK,CAACib,KAAN,GAAc1S,IAAI,CAAC0S,KAA1B,CADT;AAELtkB,IAAAA,CAAC,EAAEL,WAAW,CAACK,CAAD,EAAI,CAAJ,EAAOqJ,KAAK,CAACgb,MAAN,GAAezS,IAAI,CAACyS,MAA3B;AAFT,GAAP;AAID;;AACD,SAAS4sC,WAAT,CAAqBtqC,OAArB,EAA8B2X,KAA9B,EAAqCptB,OAArC,EAA8C;AAC5C,QAAMqlB,OAAO,GAAGl2B,SAAS,CAAC6Q,OAAO,CAACqlB,OAAT,CAAzB;AACA,SAAO+H,KAAK,KAAK,QAAV,GACH3X,OAAO,CAAC7mB,CAAR,GAAY6mB,OAAO,CAACrC,KAAR,GAAgB,CADzB,GAEHga,KAAK,KAAK,OAAV,GACE3X,OAAO,CAAC7mB,CAAR,GAAY6mB,OAAO,CAACrC,KAApB,GAA4BiS,OAAO,CAAC7jB,KADtC,GAEEiU,OAAO,CAAC7mB,CAAR,GAAYy2B,OAAO,CAAC3jB,IAJ1B;AAKD;;AACD,SAASs+C,uBAAT,CAAiCvvD,QAAjC,EAA2C;AACzC,SAAOusD,YAAY,CAAC,EAAD,EAAKG,aAAa,CAAC1sD,QAAD,CAAlB,CAAnB;AACD;;AACD,SAASwvD,oBAAT,CAA8B56C,MAA9B,EAAsCoQ,OAAtC,EAA+CyqC,YAA/C,EAA6D;AAC3D,SAAO5hD,MAAM,CAACqC,MAAP,CAAcrC,MAAM,CAACgH,MAAP,CAAcD,MAAd,CAAd,EAAqC;AAC1CoQ,IAAAA,OAD0C;AAE1CyqC,IAAAA,YAF0C;AAG1C5nD,IAAAA,IAAI,EAAE;AAHoC,GAArC,CAAP;AAKD;;AACD,SAAS6nD,iBAAT,CAA2B5nD,SAA3B,EAAsC2T,OAAtC,EAA+C;AAC7C,QAAM6S,QAAQ,GAAG7S,OAAO,IAAIA,OAAO,CAAC3G,OAAnB,IAA8B2G,OAAO,CAAC3G,OAAR,CAAgBkQ,OAA9C,IAAyDvJ,OAAO,CAAC3G,OAAR,CAAgBkQ,OAAhB,CAAwBld,SAAlG;AACA,SAAOwmB,QAAQ,GAAGxmB,SAAS,CAACwmB,QAAV,CAAmBA,QAAnB,CAAH,GAAkCxmB,SAAjD;AACD;;AACD,MAAM6nD,OAAN,SAAsBx1B,OAAtB,CAA8B;AAC5BjzB,EAAAA,WAAW,CAAC0H,MAAD,EAAS;AAClB;AACA,SAAKghD,OAAL,GAAe,CAAf;AACA,SAAKtmD,OAAL,GAAe,EAAf;AACA,SAAKuF,MAAL,GAAcD,MAAM,CAACC,MAArB;AACA,SAAKghD,cAAL,GAAsBroD,SAAtB;AACA,SAAKsoD,KAAL,GAAatoD,SAAb;AACA,SAAKuoD,iBAAL,GAAyBvoD,SAAzB;AACA,SAAKwoD,aAAL,GAAqB,EAArB;AACA,SAAKpgD,WAAL,GAAmBpI,SAAnB;AACA,SAAK8O,QAAL,GAAgB9O,SAAhB;AACA,SAAK+H,OAAL,GAAeX,MAAM,CAACW,OAAtB;AACA,SAAK0gD,UAAL,GAAkBzoD,SAAlB;AACA,SAAKyd,KAAL,GAAazd,SAAb;AACA,SAAKkmD,UAAL,GAAkBlmD,SAAlB;AACA,SAAKulD,IAAL,GAAYvlD,SAAZ;AACA,SAAKmmD,SAAL,GAAiBnmD,SAAjB;AACA,SAAKwlD,MAAL,GAAcxlD,SAAd;AACA,SAAK+mD,MAAL,GAAc/mD,SAAd;AACA,SAAKonD,MAAL,GAAcpnD,SAAd;AACA,SAAKrJ,CAAL,GAASqJ,SAAT;AACA,SAAKnJ,CAAL,GAASmJ,SAAT;AACA,SAAKkb,MAAL,GAAclb,SAAd;AACA,SAAKmb,KAAL,GAAanb,SAAb;AACA,SAAK0oD,MAAL,GAAc1oD,SAAd;AACA,SAAK2oD,MAAL,GAAc3oD,SAAd;AACA,SAAK4oD,WAAL,GAAmB5oD,SAAnB;AACA,SAAK6oD,gBAAL,GAAwB7oD,SAAxB;AACA,SAAK8oD,eAAL,GAAuB9oD,SAAvB;AACD;;AACDgP,EAAAA,UAAU,CAACjH,OAAD,EAAU;AAClB,SAAKA,OAAL,GAAeA,OAAf;AACA,SAAKwgD,iBAAL,GAAyBvoD,SAAzB;AACA,SAAK8O,QAAL,GAAgB9O,SAAhB;AACD;;AACD6U,EAAAA,kBAAkB,GAAG;AACnB,UAAM3T,EAAE,GAAG,IAAX;AACA,UAAM6M,MAAM,GAAG7M,EAAE,CAACqnD,iBAAlB;;AACA,QAAIx6C,MAAJ,EAAY;AACV,aAAOA,MAAP;AACD;;AACD,UAAM7N,KAAK,GAAGgB,EAAE,CAACmG,MAAjB;AACA,UAAMU,OAAO,GAAG7G,EAAE,CAAC6G,OAAH,CAAWoyB,UAAX,CAAsBj5B,EAAE,CAACqQ,UAAH,EAAtB,CAAhB;AACA,UAAMvI,IAAI,GAAGjB,OAAO,CAACguB,OAAR,IAAmB71B,KAAK,CAAC6H,OAAN,CAAcxB,SAAjC,IAA8CwB,OAAO,CAACf,UAAnE;AACA,UAAMA,UAAU,GAAG,IAAIG,UAAJ,CAAejG,EAAE,CAACmG,MAAlB,EAA0B2B,IAA1B,CAAnB;;AACA,QAAIA,IAAI,CAACgM,UAAT,EAAqB;AACnB9T,MAAAA,EAAE,CAACqnD,iBAAH,GAAuBliD,MAAM,CAACuO,MAAP,CAAc5N,UAAd,CAAvB;AACD;;AACD,WAAOA,UAAP;AACD;;AACDuK,EAAAA,UAAU,GAAG;AACX,UAAMrQ,EAAE,GAAG,IAAX;AACA,WAAOA,EAAE,CAAC4N,QAAH,KACP5N,EAAE,CAAC4N,QAAH,GAAck5C,oBAAoB,CAAC9mD,EAAE,CAACmG,MAAH,CAAUkK,UAAV,EAAD,EAAyBrQ,EAAzB,EAA6BA,EAAE,CAACsnD,aAAhC,CAD3B,CAAP;AAED;;AACDO,EAAAA,QAAQ,CAAC90C,OAAD,EAAUlM,OAAV,EAAmB;AACzB,UAAM7G,EAAE,GAAG,IAAX;AACA,UAAM;AAACZ,MAAAA;AAAD,QAAcyH,OAApB;AACA,UAAMihD,WAAW,GAAG1oD,SAAS,CAAC0oD,WAAV,CAAsB/D,KAAtB,CAA4B/jD,EAA5B,EAAgC,CAAC+S,OAAD,CAAhC,CAApB;AACA,UAAMwJ,KAAK,GAAGnd,SAAS,CAACmd,KAAV,CAAgBwnC,KAAhB,CAAsB/jD,EAAtB,EAA0B,CAAC+S,OAAD,CAA1B,CAAd;AACA,UAAMg1C,UAAU,GAAG3oD,SAAS,CAAC2oD,UAAV,CAAqBhE,KAArB,CAA2B/jD,EAA3B,EAA+B,CAAC+S,OAAD,CAA/B,CAAnB;AACA,QAAIqkB,KAAK,GAAG,EAAZ;AACAA,IAAAA,KAAK,GAAGysB,YAAY,CAACzsB,KAAD,EAAQ4sB,aAAa,CAAC8D,WAAD,CAArB,CAApB;AACA1wB,IAAAA,KAAK,GAAGysB,YAAY,CAACzsB,KAAD,EAAQ4sB,aAAa,CAACznC,KAAD,CAArB,CAApB;AACA6a,IAAAA,KAAK,GAAGysB,YAAY,CAACzsB,KAAD,EAAQ4sB,aAAa,CAAC+D,UAAD,CAArB,CAApB;AACA,WAAO3wB,KAAP;AACD;;AACD4wB,EAAAA,aAAa,CAACjB,YAAD,EAAelgD,OAAf,EAAwB;AACnC,WAAOggD,uBAAuB,CAAChgD,OAAO,CAACzH,SAAR,CAAkB4lD,UAAlB,CAA6BjB,KAA7B,CAAmC,IAAnC,EAAyC,CAACgD,YAAD,CAAzC,CAAD,CAA9B;AACD;;AACDkB,EAAAA,OAAO,CAAClB,YAAD,EAAelgD,OAAf,EAAwB;AAC7B,UAAM7G,EAAE,GAAG,IAAX;AACA,UAAM;AAACZ,MAAAA;AAAD,QAAcyH,OAApB;AACA,UAAMqhD,SAAS,GAAG,EAAlB;AACAhyD,IAAAA,IAAI,CAAC6wD,YAAD,EAAgBh0C,OAAD,IAAa;AAC9B,YAAM8xC,QAAQ,GAAG;AACfC,QAAAA,MAAM,EAAE,EADO;AAEf1tB,QAAAA,KAAK,EAAE,EAFQ;AAGf2tB,QAAAA,KAAK,EAAE;AAHQ,OAAjB;AAKA,YAAMoD,MAAM,GAAGnB,iBAAiB,CAAC5nD,SAAD,EAAY2T,OAAZ,CAAhC;AACA8wC,MAAAA,YAAY,CAACgB,QAAQ,CAACC,MAAV,EAAkBd,aAAa,CAACmE,MAAM,CAACC,WAAP,CAAmBnoD,IAAnB,CAAwBD,EAAxB,EAA4B+S,OAA5B,CAAD,CAA/B,CAAZ;AACA8wC,MAAAA,YAAY,CAACgB,QAAQ,CAACztB,KAAV,EAAiB+wB,MAAM,CAAC/1C,KAAP,CAAanS,IAAb,CAAkBD,EAAlB,EAAsB+S,OAAtB,CAAjB,CAAZ;AACA8wC,MAAAA,YAAY,CAACgB,QAAQ,CAACE,KAAV,EAAiBf,aAAa,CAACmE,MAAM,CAACE,UAAP,CAAkBpoD,IAAlB,CAAuBD,EAAvB,EAA2B+S,OAA3B,CAAD,CAA9B,CAAZ;AACAm1C,MAAAA,SAAS,CAACzmD,IAAV,CAAeojD,QAAf;AACD,KAXG,CAAJ;AAYA,WAAOqD,SAAP;AACD;;AACDI,EAAAA,YAAY,CAACvB,YAAD,EAAelgD,OAAf,EAAwB;AAClC,WAAOggD,uBAAuB,CAAChgD,OAAO,CAACzH,SAAR,CAAkB6lD,SAAlB,CAA4BlB,KAA5B,CAAkC,IAAlC,EAAwC,CAACgD,YAAD,CAAxC,CAAD,CAA9B;AACD;;AACDwB,EAAAA,SAAS,CAACxB,YAAD,EAAelgD,OAAf,EAAwB;AAC/B,UAAM7G,EAAE,GAAG,IAAX;AACA,UAAM;AAACZ,MAAAA;AAAD,QAAcyH,OAApB;AACA,UAAM2hD,YAAY,GAAGppD,SAAS,CAACopD,YAAV,CAAuBzE,KAAvB,CAA6B/jD,EAA7B,EAAiC,CAAC+mD,YAAD,CAAjC,CAArB;AACA,UAAMzC,MAAM,GAAGllD,SAAS,CAACklD,MAAV,CAAiBP,KAAjB,CAAuB/jD,EAAvB,EAA2B,CAAC+mD,YAAD,CAA3B,CAAf;AACA,UAAM0B,WAAW,GAAGrpD,SAAS,CAACqpD,WAAV,CAAsB1E,KAAtB,CAA4B/jD,EAA5B,EAAgC,CAAC+mD,YAAD,CAAhC,CAApB;AACA,QAAI3vB,KAAK,GAAG,EAAZ;AACAA,IAAAA,KAAK,GAAGysB,YAAY,CAACzsB,KAAD,EAAQ4sB,aAAa,CAACwE,YAAD,CAArB,CAApB;AACApxB,IAAAA,KAAK,GAAGysB,YAAY,CAACzsB,KAAD,EAAQ4sB,aAAa,CAACM,MAAD,CAArB,CAApB;AACAltB,IAAAA,KAAK,GAAGysB,YAAY,CAACzsB,KAAD,EAAQ4sB,aAAa,CAACyE,WAAD,CAArB,CAApB;AACA,WAAOrxB,KAAP;AACD;;AACDsxB,EAAAA,YAAY,CAAC7hD,OAAD,EAAU;AACpB,UAAM7G,EAAE,GAAG,IAAX;AACA,UAAMqE,MAAM,GAAGrE,EAAE,CAACY,OAAlB;AACA,UAAM4I,IAAI,GAAGxJ,EAAE,CAACmG,MAAH,CAAUqD,IAAvB;AACA,UAAMk+C,WAAW,GAAG,EAApB;AACA,UAAMC,gBAAgB,GAAG,EAAzB;AACA,UAAMC,eAAe,GAAG,EAAxB;AACA,QAAIb,YAAY,GAAG,EAAnB;AACA,QAAIl0D,CAAJ,EAAOojC,GAAP;;AACA,SAAKpjC,CAAC,GAAG,CAAJ,EAAOojC,GAAG,GAAG5xB,MAAM,CAAC5D,MAAzB,EAAiC5N,CAAC,GAAGojC,GAArC,EAA0C,EAAEpjC,CAA5C,EAA+C;AAC7Ck0D,MAAAA,YAAY,CAACtlD,IAAb,CAAkB0iD,iBAAiB,CAACnkD,EAAE,CAACmG,MAAJ,EAAY9B,MAAM,CAACxR,CAAD,CAAlB,CAAnC;AACD;;AACD,QAAIgU,OAAO,CAACkF,MAAZ,EAAoB;AAClBg7C,MAAAA,YAAY,GAAGA,YAAY,CAACh7C,MAAb,CAAoB,CAACO,OAAD,EAAUvD,KAAV,EAAiB0f,KAAjB,KAA2B5hB,OAAO,CAACkF,MAAR,CAAeO,OAAf,EAAwBvD,KAAxB,EAA+B0f,KAA/B,EAAsCjf,IAAtC,CAA/C,CAAf;AACD;;AACD,QAAI3C,OAAO,CAAC8hD,QAAZ,EAAsB;AACpB5B,MAAAA,YAAY,GAAGA,YAAY,CAAC9wC,IAAb,CAAkB,CAAC5jB,CAAD,EAAIU,CAAJ,KAAU8T,OAAO,CAAC8hD,QAAR,CAAiBt2D,CAAjB,EAAoBU,CAApB,EAAuByW,IAAvB,CAA5B,CAAf;AACD;;AACDtT,IAAAA,IAAI,CAAC6wD,YAAD,EAAgBh0C,OAAD,IAAa;AAC9B,YAAMo1C,MAAM,GAAGnB,iBAAiB,CAACngD,OAAO,CAACzH,SAAT,EAAoB2T,OAApB,CAAhC;AACA20C,MAAAA,WAAW,CAACjmD,IAAZ,CAAiB0mD,MAAM,CAACS,UAAP,CAAkB3oD,IAAlB,CAAuBD,EAAvB,EAA2B+S,OAA3B,CAAjB;AACA40C,MAAAA,gBAAgB,CAAClmD,IAAjB,CAAsB0mD,MAAM,CAACU,eAAP,CAAuB5oD,IAAvB,CAA4BD,EAA5B,EAAgC+S,OAAhC,CAAtB;AACA60C,MAAAA,eAAe,CAACnmD,IAAhB,CAAqB0mD,MAAM,CAACW,cAAP,CAAsB7oD,IAAtB,CAA2BD,EAA3B,EAA+B+S,OAA/B,CAArB;AACD,KALG,CAAJ;AAMA/S,IAAAA,EAAE,CAAC0nD,WAAH,GAAiBA,WAAjB;AACA1nD,IAAAA,EAAE,CAAC2nD,gBAAH,GAAsBA,gBAAtB;AACA3nD,IAAAA,EAAE,CAAC4nD,eAAH,GAAqBA,eAArB;AACA5nD,IAAAA,EAAE,CAACunD,UAAH,GAAgBR,YAAhB;AACA,WAAOA,YAAP;AACD;;AACDziD,EAAAA,MAAM,CAAC+e,OAAD,EAAUisB,MAAV,EAAkB;AACtB,UAAMtvC,EAAE,GAAG,IAAX;AACA,UAAM6G,OAAO,GAAG7G,EAAE,CAAC6G,OAAH,CAAWoyB,UAAX,CAAsBj5B,EAAE,CAACqQ,UAAH,EAAtB,CAAhB;AACA,UAAMhM,MAAM,GAAGrE,EAAE,CAACY,OAAlB;AACA,QAAI+E,UAAJ;AACA,QAAIohD,YAAY,GAAG,EAAnB;;AACA,QAAI,CAAC1iD,MAAM,CAAC5D,MAAZ,EAAoB;AAClB,UAAIT,EAAE,CAACknD,OAAH,KAAe,CAAnB,EAAsB;AACpBvhD,QAAAA,UAAU,GAAG;AACXuhD,UAAAA,OAAO,EAAE;AADE,SAAb;AAGD;AACF,KAND,MAMO;AACL,YAAMrgC,QAAQ,GAAG28B,WAAW,CAAC38C,OAAO,CAACggB,QAAT,CAAX,CAA8B5mB,IAA9B,CAAmCD,EAAnC,EAAuCqE,MAAvC,EAA+CrE,EAAE,CAACmnD,cAAlD,CAAjB;AACAJ,MAAAA,YAAY,GAAG/mD,EAAE,CAAC0oD,YAAH,CAAgB7hD,OAAhB,CAAf;AACA7G,MAAAA,EAAE,CAACuc,KAAH,GAAWvc,EAAE,CAAC6nD,QAAH,CAAYd,YAAZ,EAA0BlgD,OAA1B,CAAX;AACA7G,MAAAA,EAAE,CAACglD,UAAH,GAAgBhlD,EAAE,CAACgoD,aAAH,CAAiBjB,YAAjB,EAA+BlgD,OAA/B,CAAhB;AACA7G,MAAAA,EAAE,CAACqkD,IAAH,GAAUrkD,EAAE,CAACioD,OAAH,CAAWlB,YAAX,EAAyBlgD,OAAzB,CAAV;AACA7G,MAAAA,EAAE,CAACilD,SAAH,GAAejlD,EAAE,CAACsoD,YAAH,CAAgBvB,YAAhB,EAA8BlgD,OAA9B,CAAf;AACA7G,MAAAA,EAAE,CAACskD,MAAH,GAAYtkD,EAAE,CAACuoD,SAAH,CAAaxB,YAAb,EAA2BlgD,OAA3B,CAAZ;AACA,YAAMU,IAAI,GAAGvH,EAAE,CAAConD,KAAH,GAAWhD,cAAc,CAACpkD,EAAD,EAAK6G,OAAL,CAAtC;AACA,YAAMkiD,eAAe,GAAG5jD,MAAM,CAACqC,MAAP,CAAc,EAAd,EAAkBqf,QAAlB,EAA4Btf,IAA5B,CAAxB;AACA,YAAMk/C,SAAS,GAAGL,kBAAkB,CAACpmD,EAAE,CAACmG,MAAJ,EAAYU,OAAZ,EAAqBkiD,eAArB,CAApC;AACA,YAAMC,eAAe,GAAGxC,kBAAkB,CAAC3/C,OAAD,EAAUkiD,eAAV,EAA2BtC,SAA3B,EAAsCzmD,EAAE,CAACmG,MAAzC,CAA1C;AACAnG,MAAAA,EAAE,CAAC6lD,MAAH,GAAYY,SAAS,CAACZ,MAAtB;AACA7lD,MAAAA,EAAE,CAACkmD,MAAH,GAAYO,SAAS,CAACP,MAAtB;AACAvgD,MAAAA,UAAU,GAAG;AACXuhD,QAAAA,OAAO,EAAE,CADE;AAEXzxD,QAAAA,CAAC,EAAEuzD,eAAe,CAACvzD,CAFR;AAGXE,QAAAA,CAAC,EAAEqzD,eAAe,CAACrzD,CAHR;AAIXskB,QAAAA,KAAK,EAAE1S,IAAI,CAAC0S,KAJD;AAKXD,QAAAA,MAAM,EAAEzS,IAAI,CAACyS,MALF;AAMXwtC,QAAAA,MAAM,EAAE3gC,QAAQ,CAACpxB,CANN;AAOXgyD,QAAAA,MAAM,EAAE5gC,QAAQ,CAAClxB;AAPN,OAAb;AASD;;AACDqK,IAAAA,EAAE,CAACsnD,aAAH,GAAmBP,YAAnB;AACA/mD,IAAAA,EAAE,CAAC4N,QAAH,GAAc9O,SAAd;;AACA,QAAI6G,UAAJ,EAAgB;AACd3F,MAAAA,EAAE,CAAC2T,kBAAH,GAAwBrP,MAAxB,CAA+BtE,EAA/B,EAAmC2F,UAAnC;AACD;;AACD,QAAI0d,OAAO,IAAIxc,OAAO,CAACoiD,QAAvB,EAAiC;AAC/BpiD,MAAAA,OAAO,CAACoiD,QAAR,CAAiBhpD,IAAjB,CAAsBD,EAAtB,EAA0B;AAAChB,QAAAA,KAAK,EAAEgB,EAAE,CAACmG,MAAX;AAAmBmW,QAAAA,OAAO,EAAEtc,EAA5B;AAAgCsvC,QAAAA;AAAhC,OAA1B;AACD;AACF;;AACD4Z,EAAAA,SAAS,CAACC,YAAD,EAAel8C,GAAf,EAAoB1F,IAApB,EAA0BV,OAA1B,EAAmC;AAC1C,UAAMuiD,aAAa,GAAG,KAAKC,gBAAL,CAAsBF,YAAtB,EAAoC5hD,IAApC,EAA0CV,OAA1C,CAAtB;AACAoG,IAAAA,GAAG,CAACq0B,MAAJ,CAAW8nB,aAAa,CAACrqB,EAAzB,EAA6BqqB,aAAa,CAACpqB,EAA3C;AACA/xB,IAAAA,GAAG,CAACq0B,MAAJ,CAAW8nB,aAAa,CAACnqB,EAAzB,EAA6BmqB,aAAa,CAAClqB,EAA3C;AACAjyB,IAAAA,GAAG,CAACq0B,MAAJ,CAAW8nB,aAAa,CAACE,EAAzB,EAA6BF,aAAa,CAACG,EAA3C;AACD;;AACDF,EAAAA,gBAAgB,CAACF,YAAD,EAAe5hD,IAAf,EAAqBV,OAArB,EAA8B;AAC5C,UAAM;AAACg/C,MAAAA,MAAD;AAASK,MAAAA;AAAT,QAAmB,IAAzB;AACA,UAAM;AAACQ,MAAAA,YAAD;AAAeX,MAAAA;AAAf,QAA4Bl/C,OAAlC;AACA,UAAM;AAACpR,MAAAA,CAAC,EAAE+zD,GAAJ;AAAS7zD,MAAAA,CAAC,EAAE8zD;AAAZ,QAAmBN,YAAzB;AACA,UAAM;AAAClvC,MAAAA,KAAD;AAAQD,MAAAA;AAAR,QAAkBzS,IAAxB;AACA,QAAIw3B,EAAJ,EAAQE,EAAR,EAAYqqB,EAAZ,EAAgBtqB,EAAhB,EAAoBE,EAApB,EAAwBqqB,EAAxB;;AACA,QAAIrD,MAAM,KAAK,QAAf,EAAyB;AACvBhnB,MAAAA,EAAE,GAAGuqB,GAAG,GAAIzvC,MAAM,GAAG,CAArB;;AACA,UAAI6rC,MAAM,KAAK,MAAf,EAAuB;AACrB9mB,QAAAA,EAAE,GAAGyqB,GAAL;AACAvqB,QAAAA,EAAE,GAAGF,EAAE,GAAGgnB,SAAV;AACA/mB,QAAAA,EAAE,GAAGE,EAAE,GAAG6mB,SAAV;AACAwD,QAAAA,EAAE,GAAGrqB,EAAE,GAAG6mB,SAAV;AACD,OALD,MAKO;AACLhnB,QAAAA,EAAE,GAAGyqB,GAAG,GAAGvvC,KAAX;AACAglB,QAAAA,EAAE,GAAGF,EAAE,GAAGgnB,SAAV;AACA/mB,QAAAA,EAAE,GAAGE,EAAE,GAAG6mB,SAAV;AACAwD,QAAAA,EAAE,GAAGrqB,EAAE,GAAG6mB,SAAV;AACD;;AACDuD,MAAAA,EAAE,GAAGvqB,EAAL;AACD,KAdD,MAcO;AACL,UAAI8mB,MAAM,KAAK,MAAf,EAAuB;AACrB5mB,QAAAA,EAAE,GAAGuqB,GAAG,GAAG9C,YAAN,GAAsBX,SAA3B;AACD,OAFD,MAEO,IAAIF,MAAM,KAAK,OAAf,EAAwB;AAC7B5mB,QAAAA,EAAE,GAAGuqB,GAAG,GAAGvvC,KAAN,GAAcysC,YAAd,GAA6BX,SAAlC;AACD,OAFM,MAEA;AACL9mB,QAAAA,EAAE,GAAG,KAAKuoB,MAAV;AACD;;AACD,UAAItB,MAAM,KAAK,KAAf,EAAsB;AACpBlnB,QAAAA,EAAE,GAAGyqB,GAAL;AACAvqB,QAAAA,EAAE,GAAGF,EAAE,GAAG+mB,SAAV;AACAhnB,QAAAA,EAAE,GAAGE,EAAE,GAAG8mB,SAAV;AACAuD,QAAAA,EAAE,GAAGrqB,EAAE,GAAG8mB,SAAV;AACD,OALD,MAKO;AACL/mB,QAAAA,EAAE,GAAGyqB,GAAG,GAAGzvC,MAAX;AACAklB,QAAAA,EAAE,GAAGF,EAAE,GAAG+mB,SAAV;AACAhnB,QAAAA,EAAE,GAAGE,EAAE,GAAG8mB,SAAV;AACAuD,QAAAA,EAAE,GAAGrqB,EAAE,GAAG8mB,SAAV;AACD;;AACDwD,MAAAA,EAAE,GAAGvqB,EAAL;AACD;;AACD,WAAO;AAACD,MAAAA,EAAD;AAAKE,MAAAA,EAAL;AAASqqB,MAAAA,EAAT;AAAatqB,MAAAA,EAAb;AAAiBE,MAAAA,EAAjB;AAAqBqqB,MAAAA;AAArB,KAAP;AACD;;AACD7nB,EAAAA,SAAS,CAACgoB,EAAD,EAAKz8C,GAAL,EAAUpG,OAAV,EAAmB;AAC1B,UAAM7G,EAAE,GAAG,IAAX;AACA,UAAMuc,KAAK,GAAGvc,EAAE,CAACuc,KAAjB;AACA,UAAM9b,MAAM,GAAG8b,KAAK,CAAC9b,MAArB;AACA,QAAIshD,SAAJ,EAAemD,YAAf,EAA6BryD,CAA7B;;AACA,QAAI4N,MAAJ,EAAY;AACV,YAAMigD,SAAS,GAAG9jD,aAAa,CAACiK,OAAO,CAAC45C,GAAT,EAAczgD,EAAE,CAACvK,CAAjB,EAAoBuK,EAAE,CAACia,KAAvB,CAA/B;AACAyvC,MAAAA,EAAE,CAACj0D,CAAH,GAAOmxD,WAAW,CAAC5mD,EAAD,EAAK6G,OAAO,CAAC2wB,UAAb,EAAyB3wB,OAAzB,CAAlB;AACAoG,MAAAA,GAAG,CAAC2yB,SAAJ,GAAgB8gB,SAAS,CAAC9gB,SAAV,CAAoB/4B,OAAO,CAAC2wB,UAA5B,CAAhB;AACAvqB,MAAAA,GAAG,CAAC8yB,YAAJ,GAAmB,QAAnB;AACAgiB,MAAAA,SAAS,GAAGvpD,MAAM,CAACqO,OAAO,CAACk7C,SAAT,CAAlB;AACAmD,MAAAA,YAAY,GAAGr+C,OAAO,CAACq+C,YAAvB;AACAj4C,MAAAA,GAAG,CAAC2T,SAAJ,GAAgB/Z,OAAO,CAAC8iD,UAAxB;AACA18C,MAAAA,GAAG,CAACkqB,IAAJ,GAAW4qB,SAAS,CAACvkB,MAArB;;AACA,WAAK3qC,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAG4N,MAAhB,EAAwB,EAAE5N,CAA1B,EAA6B;AAC3Boa,QAAAA,GAAG,CAACw0C,QAAJ,CAAallC,KAAK,CAAC1pB,CAAD,CAAlB,EAAuB6tD,SAAS,CAACjrD,CAAV,CAAYi0D,EAAE,CAACj0D,CAAf,CAAvB,EAA0Ci0D,EAAE,CAAC/zD,CAAH,GAAOosD,SAAS,CAAC1qB,UAAV,GAAuB,CAAxE;AACAqyB,QAAAA,EAAE,CAAC/zD,CAAH,IAAQosD,SAAS,CAAC1qB,UAAV,GAAuB6tB,YAA/B;;AACA,YAAIryD,CAAC,GAAG,CAAJ,KAAU4N,MAAd,EAAsB;AACpBipD,UAAAA,EAAE,CAAC/zD,CAAH,IAAQkR,OAAO,CAACs+C,iBAAR,GAA4BD,YAApC;AACD;AACF;AACF;AACF;;AACD0E,EAAAA,aAAa,CAAC38C,GAAD,EAAMy8C,EAAN,EAAU72D,CAAV,EAAa6tD,SAAb,EAAwB75C,OAAxB,EAAiC;AAC5C,UAAM7G,EAAE,GAAG,IAAX;AACA,UAAM0nD,WAAW,GAAG1nD,EAAE,CAAC0nD,WAAH,CAAe70D,CAAf,CAApB;AACA,UAAMg2D,eAAe,GAAG7oD,EAAE,CAAC2nD,gBAAH,CAAoB90D,CAApB,CAAxB;AACA,UAAM;AAAC+rD,MAAAA,SAAD;AAAYC,MAAAA;AAAZ,QAAwBh4C,OAA9B;AACA,UAAM09C,QAAQ,GAAG/rD,MAAM,CAACqO,OAAO,CAAC09C,QAAT,CAAvB;AACA,UAAMsF,MAAM,GAAGjD,WAAW,CAAC5mD,EAAD,EAAK,MAAL,EAAa6G,OAAb,CAA1B;AACA,UAAMijD,SAAS,GAAGpJ,SAAS,CAACjrD,CAAV,CAAYo0D,MAAZ,CAAlB;AACA,UAAME,OAAO,GAAGnL,SAAS,GAAG2F,QAAQ,CAACltB,UAArB,GAAkC,CAACktB,QAAQ,CAACltB,UAAT,GAAsBunB,SAAvB,IAAoC,CAAtE,GAA0E,CAA1F;AACA,UAAMoL,MAAM,GAAGN,EAAE,CAAC/zD,CAAH,GAAOo0D,OAAtB;;AACA,QAAIljD,OAAO,CAACi4C,aAAZ,EAA2B;AACzB,YAAMsC,WAAW,GAAG;AAClBhlC,QAAAA,MAAM,EAAExc,IAAI,CAACC,GAAL,CAASg/C,QAAT,EAAmBD,SAAnB,IAAgC,CADtB;AAElBp+B,QAAAA,UAAU,EAAEqoC,eAAe,CAACroC,UAFV;AAGlB/D,QAAAA,QAAQ,EAAEosC,eAAe,CAACpsC,QAHR;AAIlBuD,QAAAA,WAAW,EAAE;AAJK,OAApB;AAMA,YAAMP,OAAO,GAAGihC,SAAS,CAACE,UAAV,CAAqBkJ,SAArB,EAAgCjL,QAAhC,IAA4CA,QAAQ,GAAG,CAAvE;AACA,YAAMn/B,OAAO,GAAGsqC,MAAM,GAAGpL,SAAS,GAAG,CAArC;AACA3xC,MAAAA,GAAG,CAAC6T,WAAJ,GAAkBja,OAAO,CAACojD,kBAA1B;AACAh9C,MAAAA,GAAG,CAAC2T,SAAJ,GAAgB/Z,OAAO,CAACojD,kBAAxB;AACAjuD,MAAAA,SAAS,CAACiR,GAAD,EAAMm0C,WAAN,EAAmB3hC,OAAnB,EAA4BC,OAA5B,CAAT;AACAzS,MAAAA,GAAG,CAAC6T,WAAJ,GAAkB4mC,WAAW,CAAC3mC,WAA9B;AACA9T,MAAAA,GAAG,CAAC2T,SAAJ,GAAgB8mC,WAAW,CAAC7mC,eAA5B;AACA7kB,MAAAA,SAAS,CAACiR,GAAD,EAAMm0C,WAAN,EAAmB3hC,OAAnB,EAA4BC,OAA5B,CAAT;AACD,KAfD,MAeO;AACLzS,MAAAA,GAAG,CAAC+T,SAAJ,GAAgB0mC,WAAW,CAAC1nC,WAAZ,IAA2B,CAA3C;AACA/S,MAAAA,GAAG,CAAC6T,WAAJ,GAAkB4mC,WAAW,CAAC3mC,WAA9B;AACA9T,MAAAA,GAAG,CAACi0B,WAAJ,CAAgBwmB,WAAW,CAACr0B,UAAZ,IAA0B,EAA1C;AACApmB,MAAAA,GAAG,CAACk0B,cAAJ,GAAqBumB,WAAW,CAACp0B,gBAAZ,IAAgC,CAArD;AACA,YAAM42B,MAAM,GAAGxJ,SAAS,CAACE,UAAV,CAAqBkJ,SAArB,EAAgCjL,QAAhC,CAAf;AACA,YAAMsL,MAAM,GAAGzJ,SAAS,CAACE,UAAV,CAAqBF,SAAS,CAACY,KAAV,CAAgBwI,SAAhB,EAA2B,CAA3B,CAArB,EAAoDjL,QAAQ,GAAG,CAA/D,CAAf;AACA,YAAMpO,YAAY,GAAGn0C,aAAa,CAACorD,WAAW,CAACjX,YAAb,CAAlC;;AACA,UAAItrC,MAAM,CAACwB,MAAP,CAAc8pC,YAAd,EAA4B5K,IAA5B,CAAiC5yC,CAAC,IAAIA,CAAC,KAAK,CAA5C,CAAJ,EAAoD;AAClDga,QAAAA,GAAG,CAACm0B,SAAJ;AACAn0B,QAAAA,GAAG,CAAC2T,SAAJ,GAAgB/Z,OAAO,CAACojD,kBAAxB;AACA/tD,QAAAA,kBAAkB,CAAC+Q,GAAD,EAAM;AACtBxX,UAAAA,CAAC,EAAEy0D,MADmB;AAEtBv0D,UAAAA,CAAC,EAAEq0D,MAFmB;AAGtBz0D,UAAAA,CAAC,EAAEspD,QAHmB;AAItBlrD,UAAAA,CAAC,EAAEirD,SAJmB;AAKtBxiC,UAAAA,MAAM,EAAEq0B;AALc,SAAN,CAAlB;AAOAxjC,QAAAA,GAAG,CAAC2X,IAAJ;AACA3X,QAAAA,GAAG,CAACs0B,MAAJ;AACAt0B,QAAAA,GAAG,CAAC2T,SAAJ,GAAgB8mC,WAAW,CAAC7mC,eAA5B;AACA5T,QAAAA,GAAG,CAACm0B,SAAJ;AACAllC,QAAAA,kBAAkB,CAAC+Q,GAAD,EAAM;AACtBxX,UAAAA,CAAC,EAAE00D,MADmB;AAEtBx0D,UAAAA,CAAC,EAAEq0D,MAAM,GAAG,CAFU;AAGtBz0D,UAAAA,CAAC,EAAEspD,QAAQ,GAAG,CAHQ;AAItBlrD,UAAAA,CAAC,EAAEirD,SAAS,GAAG,CAJO;AAKtBxiC,UAAAA,MAAM,EAAEq0B;AALc,SAAN,CAAlB;AAOAxjC,QAAAA,GAAG,CAAC2X,IAAJ;AACD,OAtBD,MAsBO;AACL3X,QAAAA,GAAG,CAAC2T,SAAJ,GAAgB/Z,OAAO,CAACojD,kBAAxB;AACAh9C,QAAAA,GAAG,CAAC0zB,QAAJ,CAAaupB,MAAb,EAAqBF,MAArB,EAA6BnL,QAA7B,EAAuCD,SAAvC;AACA3xC,QAAAA,GAAG,CAACm9C,UAAJ,CAAeF,MAAf,EAAuBF,MAAvB,EAA+BnL,QAA/B,EAAyCD,SAAzC;AACA3xC,QAAAA,GAAG,CAAC2T,SAAJ,GAAgB8mC,WAAW,CAAC7mC,eAA5B;AACA5T,QAAAA,GAAG,CAAC0zB,QAAJ,CAAawpB,MAAb,EAAqBH,MAAM,GAAG,CAA9B,EAAiCnL,QAAQ,GAAG,CAA5C,EAA+CD,SAAS,GAAG,CAA3D;AACD;AACF;;AACD3xC,IAAAA,GAAG,CAAC2T,SAAJ,GAAgB5gB,EAAE,CAAC4nD,eAAH,CAAmB/0D,CAAnB,CAAhB;AACD;;AACDw3D,EAAAA,QAAQ,CAACX,EAAD,EAAKz8C,GAAL,EAAUpG,OAAV,EAAmB;AACzB,UAAM7G,EAAE,GAAG,IAAX;AACA,UAAM;AAACqkD,MAAAA;AAAD,QAASrkD,EAAf;AACA,UAAM;AAACslD,MAAAA,WAAD;AAAcgF,MAAAA,SAAd;AAAyBjF,MAAAA,aAAzB;AAAwCzG,MAAAA,SAAxC;AAAmDC,MAAAA;AAAnD,QAA+Dh4C,OAArE;AACA,UAAM09C,QAAQ,GAAG/rD,MAAM,CAACqO,OAAO,CAAC09C,QAAT,CAAvB;AACA,QAAIa,cAAc,GAAGb,QAAQ,CAACltB,UAA9B;AACA,QAAIkzB,YAAY,GAAG,CAAnB;AACA,UAAM7J,SAAS,GAAG9jD,aAAa,CAACiK,OAAO,CAAC45C,GAAT,EAAczgD,EAAE,CAACvK,CAAjB,EAAoBuK,EAAE,CAACia,KAAvB,CAA/B;;AACA,UAAMuwC,cAAc,GAAG,UAAS/oC,IAAT,EAAe;AACpCxU,MAAAA,GAAG,CAACw0C,QAAJ,CAAahgC,IAAb,EAAmBi/B,SAAS,CAACjrD,CAAV,CAAYi0D,EAAE,CAACj0D,CAAH,GAAO80D,YAAnB,CAAnB,EAAqDb,EAAE,CAAC/zD,CAAH,GAAOyvD,cAAc,GAAG,CAA7E;AACAsE,MAAAA,EAAE,CAAC/zD,CAAH,IAAQyvD,cAAc,GAAGE,WAAzB;AACD,KAHD;;AAIA,UAAMmF,uBAAuB,GAAG/J,SAAS,CAAC9gB,SAAV,CAAoB0qB,SAApB,CAAhC;AACA,QAAIzF,QAAJ,EAAc6F,SAAd,EAAyBtzB,KAAzB,EAAgCvkC,CAAhC,EAAmCkB,CAAnC,EAAsC+U,IAAtC,EAA4Csd,IAA5C;AACAnZ,IAAAA,GAAG,CAAC2yB,SAAJ,GAAgB0qB,SAAhB;AACAr9C,IAAAA,GAAG,CAAC8yB,YAAJ,GAAmB,QAAnB;AACA9yB,IAAAA,GAAG,CAACkqB,IAAJ,GAAWotB,QAAQ,CAAC/mB,MAApB;AACAksB,IAAAA,EAAE,CAACj0D,CAAH,GAAOmxD,WAAW,CAAC5mD,EAAD,EAAKyqD,uBAAL,EAA8B5jD,OAA9B,CAAlB;AACAoG,IAAAA,GAAG,CAAC2T,SAAJ,GAAgB/Z,OAAO,CAAC8jD,SAAxB;AACAz0D,IAAAA,IAAI,CAAC8J,EAAE,CAACglD,UAAJ,EAAgBwF,cAAhB,CAAJ;AACAD,IAAAA,YAAY,GAAGlF,aAAa,IAAIoF,uBAAuB,KAAK,OAA7C,GACXH,SAAS,KAAK,QAAd,GAA0BzL,QAAQ,GAAG,CAAX,GAAe,CAAzC,GAA+CA,QAAQ,GAAG,CAD/C,GAEX,CAFJ;;AAGA,SAAKhsD,CAAC,GAAG,CAAJ,EAAOiW,IAAI,GAAGu7C,IAAI,CAAC5jD,MAAxB,EAAgC5N,CAAC,GAAGiW,IAApC,EAA0C,EAAEjW,CAA5C,EAA+C;AAC7CgyD,MAAAA,QAAQ,GAAGR,IAAI,CAACxxD,CAAD,CAAf;AACA63D,MAAAA,SAAS,GAAG1qD,EAAE,CAAC4nD,eAAH,CAAmB/0D,CAAnB,CAAZ;AACAoa,MAAAA,GAAG,CAAC2T,SAAJ,GAAgB8pC,SAAhB;AACAx0D,MAAAA,IAAI,CAAC2uD,QAAQ,CAACC,MAAV,EAAkB0F,cAAlB,CAAJ;AACApzB,MAAAA,KAAK,GAAGytB,QAAQ,CAACztB,KAAjB;;AACA,UAAIiuB,aAAa,IAAIjuB,KAAK,CAAC32B,MAA3B,EAAmC;AACjCT,QAAAA,EAAE,CAAC4pD,aAAH,CAAiB38C,GAAjB,EAAsBy8C,EAAtB,EAA0B72D,CAA1B,EAA6B6tD,SAA7B,EAAwC75C,OAAxC;;AACAu+C,QAAAA,cAAc,GAAGxlD,IAAI,CAACmC,GAAL,CAASwiD,QAAQ,CAACltB,UAAlB,EAA8BunB,SAA9B,CAAjB;AACD;;AACD,WAAK7qD,CAAC,GAAG,CAAJ,EAAOqyB,IAAI,GAAGgR,KAAK,CAAC32B,MAAzB,EAAiC1M,CAAC,GAAGqyB,IAArC,EAA2C,EAAEryB,CAA7C,EAAgD;AAC9Cy2D,QAAAA,cAAc,CAACpzB,KAAK,CAACrjC,CAAD,CAAN,CAAd;AACAqxD,QAAAA,cAAc,GAAGb,QAAQ,CAACltB,UAA1B;AACD;;AACDnhC,MAAAA,IAAI,CAAC2uD,QAAQ,CAACE,KAAV,EAAiByF,cAAjB,CAAJ;AACD;;AACDD,IAAAA,YAAY,GAAG,CAAf;AACAnF,IAAAA,cAAc,GAAGb,QAAQ,CAACltB,UAA1B;AACAnhC,IAAAA,IAAI,CAAC8J,EAAE,CAACilD,SAAJ,EAAeuF,cAAf,CAAJ;AACAd,IAAAA,EAAE,CAAC/zD,CAAH,IAAQ2vD,WAAR;AACD;;AACDsF,EAAAA,UAAU,CAAClB,EAAD,EAAKz8C,GAAL,EAAUpG,OAAV,EAAmB;AAC3B,UAAM7G,EAAE,GAAG,IAAX;AACA,UAAMskD,MAAM,GAAGtkD,EAAE,CAACskD,MAAlB;AACA,UAAM7jD,MAAM,GAAG6jD,MAAM,CAAC7jD,MAAtB;AACA,QAAI+jD,UAAJ,EAAgB3xD,CAAhB;;AACA,QAAI4N,MAAJ,EAAY;AACV,YAAMigD,SAAS,GAAG9jD,aAAa,CAACiK,OAAO,CAAC45C,GAAT,EAAczgD,EAAE,CAACvK,CAAjB,EAAoBuK,EAAE,CAACia,KAAvB,CAA/B;AACAyvC,MAAAA,EAAE,CAACj0D,CAAH,GAAOmxD,WAAW,CAAC5mD,EAAD,EAAK6G,OAAO,CAACgkD,WAAb,EAA0BhkD,OAA1B,CAAlB;AACA6iD,MAAAA,EAAE,CAAC/zD,CAAH,IAAQkR,OAAO,CAAC0+C,eAAhB;AACAt4C,MAAAA,GAAG,CAAC2yB,SAAJ,GAAgB8gB,SAAS,CAAC9gB,SAAV,CAAoB/4B,OAAO,CAACgkD,WAA5B,CAAhB;AACA59C,MAAAA,GAAG,CAAC8yB,YAAJ,GAAmB,QAAnB;AACAykB,MAAAA,UAAU,GAAGhsD,MAAM,CAACqO,OAAO,CAAC29C,UAAT,CAAnB;AACAv3C,MAAAA,GAAG,CAAC2T,SAAJ,GAAgB/Z,OAAO,CAACikD,WAAxB;AACA79C,MAAAA,GAAG,CAACkqB,IAAJ,GAAWqtB,UAAU,CAAChnB,MAAtB;;AACA,WAAK3qC,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAG4N,MAAhB,EAAwB,EAAE5N,CAA1B,EAA6B;AAC3Boa,QAAAA,GAAG,CAACw0C,QAAJ,CAAa6C,MAAM,CAACzxD,CAAD,CAAnB,EAAwB6tD,SAAS,CAACjrD,CAAV,CAAYi0D,EAAE,CAACj0D,CAAf,CAAxB,EAA2Ci0D,EAAE,CAAC/zD,CAAH,GAAO6uD,UAAU,CAACntB,UAAX,GAAwB,CAA1E;AACAqyB,QAAAA,EAAE,CAAC/zD,CAAH,IAAQ6uD,UAAU,CAACntB,UAAX,GAAwBxwB,OAAO,CAAC2+C,aAAxC;AACD;AACF;AACF;;AACD/kB,EAAAA,cAAc,CAACipB,EAAD,EAAKz8C,GAAL,EAAU89C,WAAV,EAAuBlkD,OAAvB,EAAgC;AAC5C,UAAM;AAACg/C,MAAAA,MAAD;AAASK,MAAAA;AAAT,QAAmB,IAAzB;AACA,UAAM;AAACzwD,MAAAA,CAAD;AAAIE,MAAAA;AAAJ,QAAS+zD,EAAf;AACA,UAAM;AAACzvC,MAAAA,KAAD;AAAQD,MAAAA;AAAR,QAAkB+wC,WAAxB;AACA,UAAM3uC,MAAM,GAAGvV,OAAO,CAAC6/C,YAAvB;AACAz5C,IAAAA,GAAG,CAAC2T,SAAJ,GAAgB/Z,OAAO,CAACga,eAAxB;AACA5T,IAAAA,GAAG,CAAC6T,WAAJ,GAAkBja,OAAO,CAACka,WAA1B;AACA9T,IAAAA,GAAG,CAAC+T,SAAJ,GAAgBna,OAAO,CAACmZ,WAAxB;AACA/S,IAAAA,GAAG,CAACm0B,SAAJ;AACAn0B,IAAAA,GAAG,CAACo0B,MAAJ,CAAW5rC,CAAC,GAAG2mB,MAAf,EAAuBzmB,CAAvB;;AACA,QAAIuwD,MAAM,KAAK,KAAf,EAAsB;AACpB,WAAKgD,SAAL,CAAeQ,EAAf,EAAmBz8C,GAAnB,EAAwB89C,WAAxB,EAAqClkD,OAArC;AACD;;AACDoG,IAAAA,GAAG,CAACq0B,MAAJ,CAAW7rC,CAAC,GAAGwkB,KAAJ,GAAYmC,MAAvB,EAA+BzmB,CAA/B;AACAsX,IAAAA,GAAG,CAAC+9C,gBAAJ,CAAqBv1D,CAAC,GAAGwkB,KAAzB,EAAgCtkB,CAAhC,EAAmCF,CAAC,GAAGwkB,KAAvC,EAA8CtkB,CAAC,GAAGymB,MAAlD;;AACA,QAAI8pC,MAAM,KAAK,QAAX,IAAuBL,MAAM,KAAK,OAAtC,EAA+C;AAC7C,WAAKqD,SAAL,CAAeQ,EAAf,EAAmBz8C,GAAnB,EAAwB89C,WAAxB,EAAqClkD,OAArC;AACD;;AACDoG,IAAAA,GAAG,CAACq0B,MAAJ,CAAW7rC,CAAC,GAAGwkB,KAAf,EAAsBtkB,CAAC,GAAGqkB,MAAJ,GAAaoC,MAAnC;AACAnP,IAAAA,GAAG,CAAC+9C,gBAAJ,CAAqBv1D,CAAC,GAAGwkB,KAAzB,EAAgCtkB,CAAC,GAAGqkB,MAApC,EAA4CvkB,CAAC,GAAGwkB,KAAJ,GAAYmC,MAAxD,EAAgEzmB,CAAC,GAAGqkB,MAApE;;AACA,QAAIksC,MAAM,KAAK,QAAf,EAAyB;AACvB,WAAKgD,SAAL,CAAeQ,EAAf,EAAmBz8C,GAAnB,EAAwB89C,WAAxB,EAAqClkD,OAArC;AACD;;AACDoG,IAAAA,GAAG,CAACq0B,MAAJ,CAAW7rC,CAAC,GAAG2mB,MAAf,EAAuBzmB,CAAC,GAAGqkB,MAA3B;AACA/M,IAAAA,GAAG,CAAC+9C,gBAAJ,CAAqBv1D,CAArB,EAAwBE,CAAC,GAAGqkB,MAA5B,EAAoCvkB,CAApC,EAAuCE,CAAC,GAAGqkB,MAAJ,GAAaoC,MAApD;;AACA,QAAI8pC,MAAM,KAAK,QAAX,IAAuBL,MAAM,KAAK,MAAtC,EAA8C;AAC5C,WAAKqD,SAAL,CAAeQ,EAAf,EAAmBz8C,GAAnB,EAAwB89C,WAAxB,EAAqClkD,OAArC;AACD;;AACDoG,IAAAA,GAAG,CAACq0B,MAAJ,CAAW7rC,CAAX,EAAcE,CAAC,GAAGymB,MAAlB;AACAnP,IAAAA,GAAG,CAAC+9C,gBAAJ,CAAqBv1D,CAArB,EAAwBE,CAAxB,EAA2BF,CAAC,GAAG2mB,MAA/B,EAAuCzmB,CAAvC;AACAsX,IAAAA,GAAG,CAACojC,SAAJ;AACApjC,IAAAA,GAAG,CAAC2X,IAAJ;;AACA,QAAI/d,OAAO,CAACmZ,WAAR,GAAsB,CAA1B,EAA6B;AAC3B/S,MAAAA,GAAG,CAACs0B,MAAJ;AACD;AACF;;AACD0pB,EAAAA,sBAAsB,CAACpkD,OAAD,EAAU;AAC9B,UAAM7G,EAAE,GAAG,IAAX;AACA,UAAMhB,KAAK,GAAGgB,EAAE,CAACmG,MAAjB;AACA,UAAMlH,KAAK,GAAGe,EAAE,CAACkH,WAAjB;AACA,UAAMgkD,KAAK,GAAGjsD,KAAK,IAAIA,KAAK,CAACxJ,CAA7B;AACA,UAAM01D,KAAK,GAAGlsD,KAAK,IAAIA,KAAK,CAACtJ,CAA7B;;AACA,QAAIu1D,KAAK,IAAIC,KAAb,EAAoB;AAClB,YAAMtkC,QAAQ,GAAG28B,WAAW,CAAC38C,OAAO,CAACggB,QAAT,CAAX,CAA8B5mB,IAA9B,CAAmCD,EAAnC,EAAuCA,EAAE,CAACY,OAA1C,EAAmDZ,EAAE,CAACmnD,cAAtD,CAAjB;;AACA,UAAI,CAACtgC,QAAL,EAAe;AACb;AACD;;AACD,YAAMtf,IAAI,GAAGvH,EAAE,CAAConD,KAAH,GAAWhD,cAAc,CAACpkD,EAAD,EAAK6G,OAAL,CAAtC;AACA,YAAMkiD,eAAe,GAAG5jD,MAAM,CAACqC,MAAP,CAAc,EAAd,EAAkBqf,QAAlB,EAA4B7mB,EAAE,CAAConD,KAA/B,CAAxB;AACA,YAAMX,SAAS,GAAGL,kBAAkB,CAACpnD,KAAD,EAAQ6H,OAAR,EAAiBkiD,eAAjB,CAApC;AACA,YAAMhtC,KAAK,GAAGyqC,kBAAkB,CAAC3/C,OAAD,EAAUkiD,eAAV,EAA2BtC,SAA3B,EAAsCznD,KAAtC,CAAhC;;AACA,UAAIksD,KAAK,CAAC/mD,GAAN,KAAc4X,KAAK,CAACtmB,CAApB,IAAyB01D,KAAK,CAAChnD,GAAN,KAAc4X,KAAK,CAACpmB,CAAjD,EAAoD;AAClDqK,QAAAA,EAAE,CAAC6lD,MAAH,GAAYY,SAAS,CAACZ,MAAtB;AACA7lD,QAAAA,EAAE,CAACkmD,MAAH,GAAYO,SAAS,CAACP,MAAtB;AACAlmD,QAAAA,EAAE,CAACia,KAAH,GAAW1S,IAAI,CAAC0S,KAAhB;AACAja,QAAAA,EAAE,CAACga,MAAH,GAAYzS,IAAI,CAACyS,MAAjB;AACAha,QAAAA,EAAE,CAACwnD,MAAH,GAAY3gC,QAAQ,CAACpxB,CAArB;AACAuK,QAAAA,EAAE,CAACynD,MAAH,GAAY5gC,QAAQ,CAAClxB,CAArB;;AACAqK,QAAAA,EAAE,CAAC2T,kBAAH,GAAwBrP,MAAxB,CAA+BtE,EAA/B,EAAmC+b,KAAnC;AACD;AACF;AACF;;AACDrb,EAAAA,IAAI,CAACuM,GAAD,EAAM;AACR,UAAMjN,EAAE,GAAG,IAAX;AACA,UAAM6G,OAAO,GAAG7G,EAAE,CAAC6G,OAAH,CAAWoyB,UAAX,CAAsBj5B,EAAE,CAACqQ,UAAH,EAAtB,CAAhB;AACA,QAAI62C,OAAO,GAAGlnD,EAAE,CAACknD,OAAjB;;AACA,QAAI,CAACA,OAAL,EAAc;AACZ;AACD;;AACDlnD,IAAAA,EAAE,CAACirD,sBAAH,CAA0BpkD,OAA1B;;AACA,UAAMkkD,WAAW,GAAG;AAClB9wC,MAAAA,KAAK,EAAEja,EAAE,CAACia,KADQ;AAElBD,MAAAA,MAAM,EAAEha,EAAE,CAACga;AAFO,KAApB;AAIA,UAAM0vC,EAAE,GAAG;AACTj0D,MAAAA,CAAC,EAAEuK,EAAE,CAACvK,CADG;AAETE,MAAAA,CAAC,EAAEqK,EAAE,CAACrK;AAFG,KAAX;AAIAuxD,IAAAA,OAAO,GAAGtnD,IAAI,CAAC0W,GAAL,CAAS4wC,OAAT,IAAoB,IAApB,GAA2B,CAA3B,GAA+BA,OAAzC;AACA,UAAMh7B,OAAO,GAAGl2B,SAAS,CAAC6Q,OAAO,CAACqlB,OAAT,CAAzB;AACA,UAAMk/B,iBAAiB,GAAGprD,EAAE,CAACuc,KAAH,CAAS9b,MAAT,IAAmBT,EAAE,CAACglD,UAAH,CAAcvkD,MAAjC,IAA2CT,EAAE,CAACqkD,IAAH,CAAQ5jD,MAAnD,IAA6DT,EAAE,CAACilD,SAAH,CAAaxkD,MAA1E,IAAoFT,EAAE,CAACskD,MAAH,CAAU7jD,MAAxH;;AACA,QAAIoG,OAAO,CAACguB,OAAR,IAAmBu2B,iBAAvB,EAA0C;AACxCn+C,MAAAA,GAAG,CAACyzB,IAAJ;AACAzzB,MAAAA,GAAG,CAACo+C,WAAJ,GAAkBnE,OAAlB;AACAlnD,MAAAA,EAAE,CAACygC,cAAH,CAAkBipB,EAAlB,EAAsBz8C,GAAtB,EAA2B89C,WAA3B,EAAwClkD,OAAxC;AACA/J,MAAAA,qBAAqB,CAACmQ,GAAD,EAAMpG,OAAO,CAAC86C,aAAd,CAArB;AACA+H,MAAAA,EAAE,CAAC/zD,CAAH,IAAQu2B,OAAO,CAAC9jB,GAAhB;AACApI,MAAAA,EAAE,CAAC0hC,SAAH,CAAagoB,EAAb,EAAiBz8C,GAAjB,EAAsBpG,OAAtB;AACA7G,MAAAA,EAAE,CAACqqD,QAAH,CAAYX,EAAZ,EAAgBz8C,GAAhB,EAAqBpG,OAArB;AACA7G,MAAAA,EAAE,CAAC4qD,UAAH,CAAclB,EAAd,EAAkBz8C,GAAlB,EAAuBpG,OAAvB;AACA3J,MAAAA,oBAAoB,CAAC+P,GAAD,EAAMpG,OAAO,CAAC86C,aAAd,CAApB;AACA10C,MAAAA,GAAG,CAAC2zB,OAAJ;AACD;AACF;;AACDqO,EAAAA,iBAAiB,GAAG;AAClB,WAAO,KAAKruC,OAAL,IAAgB,EAAvB;AACD;;AACDsuC,EAAAA,iBAAiB,CAACC,cAAD,EAAiBuU,aAAjB,EAAgC;AAC/C,UAAM1jD,EAAE,GAAG,IAAX;AACA,UAAMovC,UAAU,GAAGpvC,EAAE,CAACY,OAAtB;AACA,UAAMyD,MAAM,GAAG8qC,cAAc,CAAC1uB,GAAf,CAAmB,CAAC;AAACpX,MAAAA,YAAD;AAAeN,MAAAA;AAAf,KAAD,KAA2B;AAC3D,YAAMa,IAAI,GAAG5J,EAAE,CAACmG,MAAH,CAAUgJ,cAAV,CAAyB9F,YAAzB,CAAb;;AACA,UAAI,CAACO,IAAL,EAAW;AACT,cAAM,IAAIqb,KAAJ,CAAU,oCAAoC5b,YAA9C,CAAN;AACD;;AACD,aAAO;AACLA,QAAAA,YADK;AAELiD,QAAAA,OAAO,EAAE1C,IAAI,CAACJ,IAAL,CAAUT,KAAV,CAFJ;AAGLA,QAAAA;AAHK,OAAP;AAKD,KAVc,CAAf;AAWA,UAAMsa,OAAO,GAAG,CAAC3oB,cAAc,CAAC00C,UAAD,EAAa/qC,MAAb,CAA/B;;AACA,UAAMinD,eAAe,GAAGtrD,EAAE,CAACurD,gBAAH,CAAoBlnD,MAApB,EAA4Bq/C,aAA5B,CAAxB;;AACA,QAAIrgC,OAAO,IAAIioC,eAAf,EAAgC;AAC9BtrD,MAAAA,EAAE,CAACY,OAAH,GAAayD,MAAb;AACArE,MAAAA,EAAE,CAACmnD,cAAH,GAAoBzD,aAApB;AACA1jD,MAAAA,EAAE,CAACsE,MAAH,CAAU,IAAV;AACD;AACF;;AACD+9C,EAAAA,WAAW,CAAC9vD,CAAD,EAAI+8C,MAAJ,EAAY;AACrB,UAAMtvC,EAAE,GAAG,IAAX;AACA,UAAM6G,OAAO,GAAG7G,EAAE,CAAC6G,OAAnB;AACA,UAAMuoC,UAAU,GAAGpvC,EAAE,CAACY,OAAH,IAAc,EAAjC;AACA,QAAIyiB,OAAO,GAAG,KAAd;AACA,QAAIhf,MAAM,GAAG,EAAb;;AACA,QAAI9R,CAAC,CAAC4M,IAAF,KAAW,UAAf,EAA2B;AACzBkF,MAAAA,MAAM,GAAGrE,EAAE,CAACmG,MAAH,CAAUioC,yBAAV,CAAoC77C,CAApC,EAAuCsU,OAAO,CAACuC,IAA/C,EAAqDvC,OAArD,EAA8DyoC,MAA9D,CAAT;;AACA,UAAIzoC,OAAO,CAACkB,OAAZ,EAAqB;AACnB1D,QAAAA,MAAM,CAAC0D,OAAP;AACD;AACF;;AACD,UAAMujD,eAAe,GAAGtrD,EAAE,CAACurD,gBAAH,CAAoBlnD,MAApB,EAA4B9R,CAA5B,CAAxB;;AACA8wB,IAAAA,OAAO,GAAGisB,MAAM,IAAI,CAAC50C,cAAc,CAAC2J,MAAD,EAAS+qC,UAAT,CAAzB,IAAiDkc,eAA3D;;AACA,QAAIjoC,OAAJ,EAAa;AACXrjB,MAAAA,EAAE,CAACY,OAAH,GAAayD,MAAb;;AACA,UAAIwC,OAAO,CAACguB,OAAR,IAAmBhuB,OAAO,CAACoiD,QAA/B,EAAyC;AACvCjpD,QAAAA,EAAE,CAACmnD,cAAH,GAAoB;AAClB1xD,UAAAA,CAAC,EAAElD,CAAC,CAACkD,CADa;AAElBE,UAAAA,CAAC,EAAEpD,CAAC,CAACoD;AAFa,SAApB;AAIAqK,QAAAA,EAAE,CAACsE,MAAH,CAAU,IAAV,EAAgBgrC,MAAhB;AACD;AACF;;AACD,WAAOjsB,OAAP;AACD;;AACDkoC,EAAAA,gBAAgB,CAAClnD,MAAD,EAAS9R,CAAT,EAAY;AAC1B,UAAM;AAACi1D,MAAAA,MAAD;AAASC,MAAAA,MAAT;AAAiB5gD,MAAAA;AAAjB,QAA4B,IAAlC;AACA,UAAMggB,QAAQ,GAAG28B,WAAW,CAAC38C,OAAO,CAACggB,QAAT,CAAX,CAA8B5mB,IAA9B,CAAmC,IAAnC,EAAyCoE,MAAzC,EAAiD9R,CAAjD,CAAjB;AACA,WAAOs0B,QAAQ,KAAK,KAAb,KAAuB2gC,MAAM,KAAK3gC,QAAQ,CAACpxB,CAApB,IAAyBgyD,MAAM,KAAK5gC,QAAQ,CAAClxB,CAApE,CAAP;AACD;;AAjhB2B;;AAmhB9BsxD,OAAO,CAACzD,WAAR,GAAsBA,WAAtB;AACA,IAAIgI,cAAc,GAAG;AACnBvhD,EAAAA,EAAE,EAAE,SADe;AAEnB04C,EAAAA,QAAQ,EAAEsE,OAFS;AAGnBzD,EAAAA,WAHmB;;AAInBiI,EAAAA,SAAS,CAACzsD,KAAD,EAAQo/C,KAAR,EAAev3C,OAAf,EAAwB;AAC/B,QAAIA,OAAJ,EAAa;AACX7H,MAAAA,KAAK,CAACsd,OAAN,GAAgB,IAAI2qC,OAAJ,CAAY;AAAC9gD,QAAAA,MAAM,EAAEnH,KAAT;AAAgB6H,QAAAA;AAAhB,OAAZ,CAAhB;AACD;AACF,GARkB;;AASnB0yB,EAAAA,YAAY,CAACv6B,KAAD,EAAQo/C,KAAR,EAAev3C,OAAf,EAAwB;AAClC,QAAI7H,KAAK,CAACsd,OAAV,EAAmB;AACjBtd,MAAAA,KAAK,CAACsd,OAAN,CAAcxO,UAAd,CAAyBjH,OAAzB;AACD;AACF,GAbkB;;AAcnByI,EAAAA,KAAK,CAACtQ,KAAD,EAAQo/C,KAAR,EAAev3C,OAAf,EAAwB;AAC3B,QAAI7H,KAAK,CAACsd,OAAV,EAAmB;AACjBtd,MAAAA,KAAK,CAACsd,OAAN,CAAcxO,UAAd,CAAyBjH,OAAzB;AACD;AACF,GAlBkB;;AAmBnB6kD,EAAAA,SAAS,CAAC1sD,KAAD,EAAQ;AACf,UAAMsd,OAAO,GAAGtd,KAAK,CAACsd,OAAtB;AACA,UAAMuU,IAAI,GAAG;AACXvU,MAAAA;AADW,KAAb;;AAGA,QAAItd,KAAK,CAACm8B,aAAN,CAAoB,mBAApB,EAAyCtK,IAAzC,MAAmD,KAAvD,EAA8D;AAC5D;AACD;;AACD,QAAIvU,OAAJ,EAAa;AACXA,MAAAA,OAAO,CAAC5b,IAAR,CAAa1B,KAAK,CAACiO,GAAnB;AACD;;AACDjO,IAAAA,KAAK,CAACm8B,aAAN,CAAoB,kBAApB,EAAwCtK,IAAxC;AACD,GA/BkB;;AAgCnB+xB,EAAAA,UAAU,CAAC5jD,KAAD,EAAQ6xB,IAAR,EAAc;AACtB,QAAI7xB,KAAK,CAACsd,OAAV,EAAmB;AACjB,YAAMkL,gBAAgB,GAAGqJ,IAAI,CAACye,MAA9B;;AACA,UAAItwC,KAAK,CAACsd,OAAN,CAAc+lC,WAAd,CAA0BxxB,IAAI,CAACtvB,KAA/B,EAAsCimB,gBAAtC,CAAJ,EAA6D;AAC3DqJ,QAAAA,IAAI,CAACxN,OAAL,GAAe,IAAf;AACD;AACF;AACF,GAvCkB;;AAwCnBzwB,EAAAA,QAAQ,EAAE;AACRiiC,IAAAA,OAAO,EAAE,IADD;AAERo0B,IAAAA,QAAQ,EAAE,IAFF;AAGRpiC,IAAAA,QAAQ,EAAE,SAHF;AAIRhG,IAAAA,eAAe,EAAE,iBAJT;AAKR8oC,IAAAA,UAAU,EAAE,MALJ;AAMR5H,IAAAA,SAAS,EAAE;AACT3hC,MAAAA,MAAM,EAAE;AADC,KANH;AASR8kC,IAAAA,YAAY,EAAE,CATN;AAURC,IAAAA,iBAAiB,EAAE,CAVX;AAWR3tB,IAAAA,UAAU,EAAE,MAXJ;AAYRmzB,IAAAA,SAAS,EAAE,MAZH;AAaRrF,IAAAA,WAAW,EAAE,CAbL;AAcRf,IAAAA,QAAQ,EAAE,EAdF;AAgBR+F,IAAAA,SAAS,EAAE,MAhBH;AAiBRQ,IAAAA,WAAW,EAAE,MAjBL;AAkBRtF,IAAAA,aAAa,EAAE,CAlBP;AAmBRD,IAAAA,eAAe,EAAE,CAnBT;AAoBRf,IAAAA,UAAU,EAAE;AACVpkC,MAAAA,MAAM,EAAE;AADE,KApBJ;AAuBRyqC,IAAAA,WAAW,EAAE,MAvBL;AAwBR3+B,IAAAA,OAAO,EAAE,CAxBD;AAyBR85B,IAAAA,YAAY,EAAE,CAzBN;AA0BRD,IAAAA,SAAS,EAAE,CA1BH;AA2BRW,IAAAA,YAAY,EAAE,CA3BN;AA4BR9H,IAAAA,SAAS,EAAE,CAAC3xC,GAAD,EAAMnF,IAAN,KAAeA,IAAI,CAACy8C,QAAL,CAAch9C,IA5BhC;AA6BRs3C,IAAAA,QAAQ,EAAE,CAAC5xC,GAAD,EAAMnF,IAAN,KAAeA,IAAI,CAACy8C,QAAL,CAAch9C,IA7B/B;AA8BR0iD,IAAAA,kBAAkB,EAAE,MA9BZ;AA+BR5E,IAAAA,aAAa,EAAE,IA/BP;AAgCRtkC,IAAAA,WAAW,EAAE,eAhCL;AAiCRf,IAAAA,WAAW,EAAE,CAjCL;AAkCR3a,IAAAA,SAAS,EAAE;AACT9F,MAAAA,QAAQ,EAAE,GADD;AAETkE,MAAAA,MAAM,EAAE;AAFC,KAlCH;AAsCRqC,IAAAA,UAAU,EAAE;AACVd,MAAAA,OAAO,EAAE;AACP7F,QAAAA,IAAI,EAAE,QADC;AAEPwG,QAAAA,UAAU,EAAE,CAAC,GAAD,EAAM,GAAN,EAAW,OAAX,EAAoB,QAApB,EAA8B,QAA9B,EAAwC,QAAxC;AAFL,OADC;AAKVuhD,MAAAA,OAAO,EAAE;AACPzjD,QAAAA,MAAM,EAAE,QADD;AAEPlE,QAAAA,QAAQ,EAAE;AAFH;AALC,KAtCJ;AAgDRH,IAAAA,SAAS,EAAE;AACT0oD,MAAAA,WAAW,EAAE1qD,IADJ;;AAETmf,MAAAA,KAAK,CAACwqC,YAAD,EAAe;AAClB,YAAIA,YAAY,CAACtmD,MAAb,GAAsB,CAA1B,EAA6B;AAC3B,gBAAME,IAAI,GAAGomD,YAAY,CAAC,CAAD,CAAzB;AACA,gBAAM/1C,MAAM,GAAGrQ,IAAI,CAAC3B,KAAL,CAAWwK,IAAX,CAAgBwH,MAA/B;AACA,gBAAM26C,UAAU,GAAG36C,MAAM,GAAGA,MAAM,CAACvQ,MAAV,GAAmB,CAA5C;;AACA,cAAI,QAAQ,KAAKoG,OAAb,IAAwB,KAAKA,OAAL,CAAauC,IAAb,KAAsB,SAAlD,EAA6D;AAC3D,mBAAOzI,IAAI,CAACyL,OAAL,CAAagG,KAAb,IAAsB,EAA7B;AACD,WAFD,MAEO,IAAIzR,IAAI,CAACyR,KAAT,EAAgB;AACrB,mBAAOzR,IAAI,CAACyR,KAAZ;AACD,WAFM,MAEA,IAAIu5C,UAAU,GAAG,CAAb,IAAkBhrD,IAAI,CAAC4L,SAAL,GAAiBo/C,UAAvC,EAAmD;AACxD,mBAAO36C,MAAM,CAACrQ,IAAI,CAAC4L,SAAN,CAAb;AACD;AACF;;AACD,eAAO,EAAP;AACD,OAhBQ;;AAiBTw7C,MAAAA,UAAU,EAAE3qD,IAjBH;AAkBT4nD,MAAAA,UAAU,EAAE5nD,IAlBH;AAmBTgrD,MAAAA,WAAW,EAAEhrD,IAnBJ;;AAoBTgV,MAAAA,KAAK,CAACgP,WAAD,EAAc;AACjB,YAAI,QAAQ,KAAKva,OAAb,IAAwB,KAAKA,OAAL,CAAauC,IAAb,KAAsB,SAAlD,EAA6D;AAC3D,iBAAOgY,WAAW,CAAChP,KAAZ,GAAoB,IAApB,GAA2BgP,WAAW,CAACE,cAAvC,IAAyDF,WAAW,CAACE,cAA5E;AACD;;AACD,YAAIlP,KAAK,GAAGgP,WAAW,CAAChV,OAAZ,CAAoBgG,KAApB,IAA6B,EAAzC;;AACA,YAAIA,KAAJ,EAAW;AACTA,UAAAA,KAAK,IAAI,IAAT;AACD;;AACD,cAAM9K,KAAK,GAAG8Z,WAAW,CAACE,cAA1B;;AACA,YAAI,CAACttB,aAAa,CAACsT,KAAD,CAAlB,EAA2B;AACzB8K,UAAAA,KAAK,IAAI9K,KAAT;AACD;;AACD,eAAO8K,KAAP;AACD,OAjCQ;;AAkCTw2C,MAAAA,UAAU,CAACxnC,WAAD,EAAc;AACtB,cAAMxX,IAAI,GAAGwX,WAAW,CAACpiB,KAAZ,CAAkBmQ,cAAlB,CAAiCiS,WAAW,CAAC/X,YAA7C,CAAb;AACA,cAAMxC,OAAO,GAAG+C,IAAI,CAACsB,UAAL,CAAgB0H,QAAhB,CAAyBwO,WAAW,CAAC7U,SAArC,CAAhB;AACA,eAAO;AACLwU,UAAAA,WAAW,EAAEla,OAAO,CAACka,WADhB;AAELF,UAAAA,eAAe,EAAEha,OAAO,CAACga,eAFpB;AAGLb,UAAAA,WAAW,EAAEnZ,OAAO,CAACmZ,WAHhB;AAILqT,UAAAA,UAAU,EAAExsB,OAAO,CAACwsB,UAJf;AAKLC,UAAAA,gBAAgB,EAAEzsB,OAAO,CAACysB,gBALrB;AAMLmd,UAAAA,YAAY,EAAE;AANT,SAAP;AAQD,OA7CQ;;AA8CTqY,MAAAA,cAAc,GAAG;AACf,eAAO,KAAKjiD,OAAL,CAAa8jD,SAApB;AACD,OAhDQ;;AAiDT9B,MAAAA,eAAe,CAACznC,WAAD,EAAc;AAC3B,cAAMxX,IAAI,GAAGwX,WAAW,CAACpiB,KAAZ,CAAkBmQ,cAAlB,CAAiCiS,WAAW,CAAC/X,YAA7C,CAAb;AACA,cAAMxC,OAAO,GAAG+C,IAAI,CAACsB,UAAL,CAAgB0H,QAAhB,CAAyBwO,WAAW,CAAC7U,SAArC,CAAhB;AACA,eAAO;AACLiU,UAAAA,UAAU,EAAE3Z,OAAO,CAAC2Z,UADf;AAEL/D,UAAAA,QAAQ,EAAE5V,OAAO,CAAC4V;AAFb,SAAP;AAID,OAxDQ;;AAyDT4rC,MAAAA,UAAU,EAAEjrD,IAzDH;AA0DT6nD,MAAAA,SAAS,EAAE7nD,IA1DF;AA2DTorD,MAAAA,YAAY,EAAEprD,IA3DL;AA4DTknD,MAAAA,MAAM,EAAElnD,IA5DC;AA6DTqrD,MAAAA,WAAW,EAAErrD;AA7DJ;AAhDH,GAxCS;AAwJnB20B,EAAAA,aAAa,EAAE;AACbwyB,IAAAA,QAAQ,EAAE,MADG;AAEbC,IAAAA,UAAU,EAAE,MAFC;AAGbzC,IAAAA,SAAS,EAAE;AAHE,GAxJI;AA6JnB3oD,EAAAA,WAAW,EAAE;AACXqM,IAAAA,WAAW,EAAGC,IAAD,IAAUA,IAAI,KAAK,QAAT,IAAqBA,IAAI,KAAK,UAA9B,IAA4CA,IAAI,KAAK,UADjE;AAEXF,IAAAA,UAAU,EAAE,KAFD;AAGXpG,IAAAA,SAAS,EAAE;AACTqG,MAAAA,WAAW,EAAE,KADJ;AAETD,MAAAA,UAAU,EAAE;AAFH,KAHA;AAOXH,IAAAA,SAAS,EAAE;AACTE,MAAAA,SAAS,EAAE;AADF,KAPA;AAUXO,IAAAA,UAAU,EAAE;AACVP,MAAAA,SAAS,EAAE;AADD;AAVD,GA7JM;AA2KnBijC,EAAAA,sBAAsB,EAAE,CAAC,aAAD;AA3KL,CAArB;AA8KA,IAAInsB,OAAO,GAAG,aAAalX,MAAM,CAACuO,MAAP,CAAc;AACzCqR,EAAAA,SAAS,EAAE,IAD8B;AAEzC6mC,EAAAA,UAAU,EAAEtR,iBAF6B;AAGzCuR,EAAAA,MAAM,EAAE3N,aAHiC;AAIzCe,EAAAA,MAAM,EAAEyD,aAJiC;AAKzCoJ,EAAAA,QAAQ,EAAEvI,eAL+B;AAMzCT,EAAAA,KAAK,EAAEO,YANkC;AAOzC4D,EAAAA,OAAO,EAAEuE;AAPgC,CAAd,CAA3B;;AAUA,MAAMO,WAAW,GAAG,CAAC/6C,MAAD,EAASxE,GAAT,EAAczD,KAAd,KAAwB,OAAOyD,GAAP,KAAe,QAAf,GACxCwE,MAAM,CAACvP,IAAP,CAAY+K,GAAZ,IAAmB,CADqB,GAExC8N,KAAK,CAAC9N,GAAD,CAAL,GAAa,IAAb,GAAoBzD,KAFxB;;AAGA,SAASijD,cAAT,CAAwBh7C,MAAxB,EAAgCxE,GAAhC,EAAqCzD,KAArC,EAA4C;AAC1C,QAAMisB,KAAK,GAAGhkB,MAAM,CAACuJ,OAAP,CAAe/N,GAAf,CAAd;;AACA,MAAIwoB,KAAK,KAAK,CAAC,CAAf,EAAkB;AAChB,WAAO+2B,WAAW,CAAC/6C,MAAD,EAASxE,GAAT,EAAczD,KAAd,CAAlB;AACD;;AACD,QAAMoR,IAAI,GAAGnJ,MAAM,CAACi7C,WAAP,CAAmBz/C,GAAnB,CAAb;AACA,SAAOwoB,KAAK,KAAK7a,IAAV,GAAiBpR,KAAjB,GAAyBisB,KAAhC;AACD;;AACD,MAAMyB,UAAU,GAAG,CAAC1tB,KAAD,EAAQhH,GAAR,KAAgBgH,KAAK,KAAK,IAAV,GAAiB,IAAjB,GAAwBzT,WAAW,CAACsK,IAAI,CAACy1B,KAAL,CAAWtsB,KAAX,CAAD,EAAoB,CAApB,EAAuBhH,GAAvB,CAAtE;;AACA,MAAMmqD,aAAN,SAA4Br0B,KAA5B,CAAkC;AAChCr5B,EAAAA,WAAW,CAAC2E,GAAD,EAAM;AACf,UAAMA,GAAN;AACA,SAAKgpD,WAAL,GAAmBrtD,SAAnB;AACA,SAAKstD,WAAL,GAAmB,CAAnB;AACD;;AACD77C,EAAAA,KAAK,CAAC/D,GAAD,EAAMzD,KAAN,EAAa;AAChB,QAAI/U,aAAa,CAACwY,GAAD,CAAjB,EAAwB;AACtB,aAAO,IAAP;AACD;;AACD,UAAMwE,MAAM,GAAG,KAAKC,SAAL,EAAf;AACAlI,IAAAA,KAAK,GAAGsjD,QAAQ,CAACtjD,KAAD,CAAR,IAAmBiI,MAAM,CAACjI,KAAD,CAAN,KAAkByD,GAArC,GAA2CzD,KAA3C,GACJijD,cAAc,CAACh7C,MAAD,EAASxE,GAAT,EAActZ,cAAc,CAAC6V,KAAD,EAAQyD,GAAR,CAA5B,CADlB;AAEA,WAAOiqB,UAAU,CAAC1tB,KAAD,EAAQiI,MAAM,CAACvQ,MAAP,GAAgB,CAAxB,CAAjB;AACD;;AACDq5B,EAAAA,mBAAmB,GAAG;AACpB,UAAM95B,EAAE,GAAG,IAAX;AACA,UAAM;AAACmK,MAAAA,UAAD;AAAaC,MAAAA;AAAb,QAA2BpK,EAAE,CAACkK,aAAH,EAAjC;AACA,QAAI;AAACrK,MAAAA,GAAD;AAAMkC,MAAAA;AAAN,QAAa/B,EAAE,CAAC2R,SAAH,CAAa,IAAb,CAAjB;;AACA,QAAI3R,EAAE,CAAC6G,OAAH,CAAWgsB,MAAX,KAAsB,OAA1B,EAAmC;AACjC,UAAI,CAAC1oB,UAAL,EAAiB;AACftK,QAAAA,GAAG,GAAG,CAAN;AACD;;AACD,UAAI,CAACuK,UAAL,EAAiB;AACfrI,QAAAA,GAAG,GAAG/B,EAAE,CAACiR,SAAH,GAAexQ,MAAf,GAAwB,CAA9B;AACD;AACF;;AACDT,IAAAA,EAAE,CAACH,GAAH,GAASA,GAAT;AACAG,IAAAA,EAAE,CAAC+B,GAAH,GAASA,GAAT;AACD;;AACDk4B,EAAAA,UAAU,GAAG;AACX,UAAMj6B,EAAE,GAAG,IAAX;AACA,UAAMH,GAAG,GAAGG,EAAE,CAACH,GAAf;AACA,UAAMkC,GAAG,GAAG/B,EAAE,CAAC+B,GAAf;AACA,UAAM0Z,MAAM,GAAGzb,EAAE,CAAC6G,OAAH,CAAW4U,MAA1B;AACA,UAAMjF,KAAK,GAAG,EAAd;AACA,QAAIxF,MAAM,GAAGhR,EAAE,CAACiR,SAAH,EAAb;AACAD,IAAAA,MAAM,GAAInR,GAAG,KAAK,CAAR,IAAakC,GAAG,KAAKiP,MAAM,CAACvQ,MAAP,GAAgB,CAAtC,GAA2CuQ,MAA3C,GAAoDA,MAAM,CAACuQ,KAAP,CAAa1hB,GAAb,EAAkBkC,GAAG,GAAG,CAAxB,CAA7D;AACA/B,IAAAA,EAAE,CAACosD,WAAH,GAAiBxsD,IAAI,CAACmC,GAAL,CAASiP,MAAM,CAACvQ,MAAP,IAAiBgb,MAAM,GAAG,CAAH,GAAO,CAA9B,CAAT,EAA2C,CAA3C,CAAjB;AACAzb,IAAAA,EAAE,CAACmsD,WAAH,GAAiBnsD,EAAE,CAACH,GAAH,IAAU4b,MAAM,GAAG,GAAH,GAAS,CAAzB,CAAjB;;AACA,SAAK,IAAInU,KAAK,GAAGzH,GAAjB,EAAsByH,KAAK,IAAIvF,GAA/B,EAAoCuF,KAAK,EAAzC,EAA6C;AAC3CkP,MAAAA,KAAK,CAAC/U,IAAN,CAAW;AAAC6F,QAAAA;AAAD,OAAX;AACD;;AACD,WAAOkP,KAAP;AACD;;AACDnE,EAAAA,gBAAgB,CAAC/K,KAAD,EAAQ;AACtB,UAAMtH,EAAE,GAAG,IAAX;AACA,UAAMgR,MAAM,GAAGhR,EAAE,CAACiR,SAAH,EAAf;;AACA,QAAI3J,KAAK,IAAI,CAAT,IAAcA,KAAK,GAAG0J,MAAM,CAACvQ,MAAjC,EAAyC;AACvC,aAAOuQ,MAAM,CAAC1J,KAAD,CAAb;AACD;;AACD,WAAOA,KAAP;AACD;;AACDjB,EAAAA,SAAS,GAAG;AACV,UAAMrG,EAAE,GAAG,IAAX;AACA,UAAMqG,SAAN;;AACA,QAAI,CAACrG,EAAE,CAACoY,YAAH,EAAL,EAAwB;AACtBpY,MAAAA,EAAE,CAACymB,cAAH,GAAoB,CAACzmB,EAAE,CAACymB,cAAxB;AACD;AACF;;AACDlQ,EAAAA,gBAAgB,CAACjP,KAAD,EAAQ;AACtB,UAAMtH,EAAE,GAAG,IAAX;;AACA,QAAI,OAAOsH,KAAP,KAAiB,QAArB,EAA+B;AAC7BA,MAAAA,KAAK,GAAGtH,EAAE,CAACuQ,KAAH,CAASjJ,KAAT,CAAR;AACD;;AACD,WAAOA,KAAK,KAAK,IAAV,GAAiBoK,GAAjB,GAAuB1R,EAAE,CAACic,kBAAH,CAAsB,CAAC3U,KAAK,GAAGtH,EAAE,CAACmsD,WAAZ,IAA2BnsD,EAAE,CAACosD,WAApD,CAA9B;AACD;;AACD31C,EAAAA,eAAe,CAAC1N,KAAD,EAAQ;AACrB,UAAM/I,EAAE,GAAG,IAAX;AACA,UAAMwW,KAAK,GAAGxW,EAAE,CAACwW,KAAjB;;AACA,QAAIzN,KAAK,GAAG,CAAR,IAAaA,KAAK,GAAGyN,KAAK,CAAC/V,MAAN,GAAe,CAAxC,EAA2C;AACzC,aAAO,IAAP;AACD;;AACD,WAAOT,EAAE,CAACuW,gBAAH,CAAoBC,KAAK,CAACzN,KAAD,CAAL,CAAazB,KAAjC,CAAP;AACD;;AACDq2B,EAAAA,gBAAgB,CAACC,KAAD,EAAQ;AACtB,UAAM59B,EAAE,GAAG,IAAX;AACA,WAAOJ,IAAI,CAACy1B,KAAL,CAAWr1B,EAAE,CAACmsD,WAAH,GAAiBnsD,EAAE,CAAC89B,kBAAH,CAAsBF,KAAtB,IAA+B59B,EAAE,CAACosD,WAA9D,CAAP;AACD;;AACD7yC,EAAAA,YAAY,GAAG;AACb,WAAO,KAAKjR,MAAZ;AACD;;AAjF+B;;AAmFlC4jD,aAAa,CAACjiD,EAAd,GAAmB,UAAnB;AACAiiD,aAAa,CAACt5D,QAAd,GAAyB;AACvB4jB,EAAAA,KAAK,EAAE;AACLlf,IAAAA,QAAQ,EAAE40D,aAAa,CAACv2C,SAAd,CAAwBtD;AAD7B;AADgB,CAAzB;;AAMA,SAASi6C,eAAT,CAAyBC,iBAAzB,EAA4CC,SAA5C,EAAuD;AACrD,QAAMh2C,KAAK,GAAG,EAAd;AACA,QAAMi2C,WAAW,GAAG,KAApB;AACA,QAAM;AAAC55B,IAAAA,MAAD;AAASuM,IAAAA,IAAT;AAAev/B,IAAAA,GAAf;AAAoBkC,IAAAA,GAApB;AAAyB2qD,IAAAA,SAAzB;AAAoCl8C,IAAAA,KAApC;AAA2Cm8C,IAAAA,QAA3C;AAAqDC,IAAAA,SAArD;AAAgEC,IAAAA;AAAhE,MAAiFN,iBAAvF;AACA,QAAMhnC,IAAI,GAAG6Z,IAAI,IAAI,CAArB;AACA,QAAM0tB,SAAS,GAAGH,QAAQ,GAAG,CAA7B;AACA,QAAM;AAAC9sD,IAAAA,GAAG,EAAEktD,IAAN;AAAYhrD,IAAAA,GAAG,EAAEirD;AAAjB,MAAyBR,SAA/B;AACA,QAAMriD,UAAU,GAAG,CAACnW,aAAa,CAAC6L,GAAD,CAAjC;AACA,QAAMuK,UAAU,GAAG,CAACpW,aAAa,CAAC+N,GAAD,CAAjC;AACA,QAAMkrD,YAAY,GAAG,CAACj5D,aAAa,CAACwc,KAAD,CAAnC;AACA,QAAM08C,UAAU,GAAG,CAACF,IAAI,GAAGD,IAAR,KAAiBH,SAAS,GAAG,CAA7B,CAAnB;AACA,MAAIruC,OAAO,GAAG7gB,OAAO,CAAC,CAACsvD,IAAI,GAAGD,IAAR,IAAgBD,SAAhB,GAA4BvnC,IAA7B,CAAP,GAA4CA,IAA1D;AACA,MAAI5iB,MAAJ,EAAYwqD,OAAZ,EAAqBC,OAArB,EAA8BC,SAA9B;;AACA,MAAI9uC,OAAO,GAAGkuC,WAAV,IAAyB,CAACtiD,UAA1B,IAAwC,CAACC,UAA7C,EAAyD;AACvD,WAAO,CAAC;AAAC9C,MAAAA,KAAK,EAAEylD;AAAR,KAAD,EAAgB;AAACzlD,MAAAA,KAAK,EAAE0lD;AAAR,KAAhB,CAAP;AACD;;AACDK,EAAAA,SAAS,GAAGztD,IAAI,CAACk2B,IAAL,CAAUk3B,IAAI,GAAGzuC,OAAjB,IAA4B3e,IAAI,CAACgE,KAAL,CAAWmpD,IAAI,GAAGxuC,OAAlB,CAAxC;;AACA,MAAI8uC,SAAS,GAAGP,SAAhB,EAA2B;AACzBvuC,IAAAA,OAAO,GAAG7gB,OAAO,CAAC2vD,SAAS,GAAG9uC,OAAZ,GAAsBuuC,SAAtB,GAAkCvnC,IAAnC,CAAP,GAAkDA,IAA5D;AACD;;AACD,MAAI,CAACvxB,aAAa,CAAC04D,SAAD,CAAlB,EAA+B;AAC7B/pD,IAAAA,MAAM,GAAG/C,IAAI,CAAC0nB,GAAL,CAAS,EAAT,EAAaolC,SAAb,CAAT;AACAnuC,IAAAA,OAAO,GAAG3e,IAAI,CAACk2B,IAAL,CAAUvX,OAAO,GAAG5b,MAApB,IAA8BA,MAAxC;AACD;;AACD,MAAIkwB,MAAM,KAAK,OAAf,EAAwB;AACtBs6B,IAAAA,OAAO,GAAGvtD,IAAI,CAACgE,KAAL,CAAWmpD,IAAI,GAAGxuC,OAAlB,IAA6BA,OAAvC;AACA6uC,IAAAA,OAAO,GAAGxtD,IAAI,CAACk2B,IAAL,CAAUk3B,IAAI,GAAGzuC,OAAjB,IAA4BA,OAAtC;AACD,GAHD,MAGO;AACL4uC,IAAAA,OAAO,GAAGJ,IAAV;AACAK,IAAAA,OAAO,GAAGJ,IAAV;AACD;;AACD,MAAI7iD,UAAU,IAAIC,UAAd,IAA4Bg1B,IAA5B,IAAoCxhC,WAAW,CAAC,CAACmE,GAAG,GAAGlC,GAAP,IAAcu/B,IAAf,EAAqB7gB,OAAO,GAAG,IAA/B,CAAnD,EAAyF;AACvF8uC,IAAAA,SAAS,GAAGztD,IAAI,CAACy1B,KAAL,CAAWz1B,IAAI,CAACC,GAAL,CAAS,CAACkC,GAAG,GAAGlC,GAAP,IAAc0e,OAAvB,EAAgCouC,QAAhC,CAAX,CAAZ;AACApuC,IAAAA,OAAO,GAAG,CAACxc,GAAG,GAAGlC,GAAP,IAAcwtD,SAAxB;AACAF,IAAAA,OAAO,GAAGttD,GAAV;AACAutD,IAAAA,OAAO,GAAGrrD,GAAV;AACD,GALD,MAKO,IAAIkrD,YAAJ,EAAkB;AACvBE,IAAAA,OAAO,GAAGhjD,UAAU,GAAGtK,GAAH,GAASstD,OAA7B;AACAC,IAAAA,OAAO,GAAGhjD,UAAU,GAAGrI,GAAH,GAASqrD,OAA7B;AACAC,IAAAA,SAAS,GAAG78C,KAAK,GAAG,CAApB;AACA+N,IAAAA,OAAO,GAAG,CAAC6uC,OAAO,GAAGD,OAAX,IAAsBE,SAAhC;AACD,GALM,MAKA;AACLA,IAAAA,SAAS,GAAG,CAACD,OAAO,GAAGD,OAAX,IAAsB5uC,OAAlC;;AACA,QAAIzgB,YAAY,CAACuvD,SAAD,EAAYztD,IAAI,CAACy1B,KAAL,CAAWg4B,SAAX,CAAZ,EAAmC9uC,OAAO,GAAG,IAA7C,CAAhB,EAAoE;AAClE8uC,MAAAA,SAAS,GAAGztD,IAAI,CAACy1B,KAAL,CAAWg4B,SAAX,CAAZ;AACD,KAFD,MAEO;AACLA,MAAAA,SAAS,GAAGztD,IAAI,CAACk2B,IAAL,CAAUu3B,SAAV,CAAZ;AACD;AACF;;AACD,QAAMC,aAAa,GAAG1tD,IAAI,CAACmC,GAAL,CACpB/D,cAAc,CAACugB,OAAD,CADM,EAEpBvgB,cAAc,CAACmvD,OAAD,CAFM,CAAtB;AAIAxqD,EAAAA,MAAM,GAAG/C,IAAI,CAAC0nB,GAAL,CAAS,EAAT,EAAatzB,aAAa,CAAC04D,SAAD,CAAb,GAA2BY,aAA3B,GAA2CZ,SAAxD,CAAT;AACAS,EAAAA,OAAO,GAAGvtD,IAAI,CAACy1B,KAAL,CAAW83B,OAAO,GAAGxqD,MAArB,IAA+BA,MAAzC;AACAyqD,EAAAA,OAAO,GAAGxtD,IAAI,CAACy1B,KAAL,CAAW+3B,OAAO,GAAGzqD,MAArB,IAA+BA,MAAzC;AACA,MAAI5O,CAAC,GAAG,CAAR;;AACA,MAAIoW,UAAJ,EAAgB;AACd,QAAI0iD,aAAa,IAAIM,OAAO,KAAKttD,GAAjC,EAAsC;AACpC2W,MAAAA,KAAK,CAAC/U,IAAN,CAAW;AAAC6F,QAAAA,KAAK,EAAEzH;AAAR,OAAX;;AACA,UAAIstD,OAAO,GAAGttD,GAAd,EAAmB;AACjB9L,QAAAA,CAAC;AACF;;AACD,UAAI+J,YAAY,CAAC8B,IAAI,CAACy1B,KAAL,CAAW,CAAC83B,OAAO,GAAGp5D,CAAC,GAAGwqB,OAAf,IAA0B5b,MAArC,IAA+CA,MAAhD,EAAwD9C,GAAxD,EAA6D0tD,iBAAiB,CAAC1tD,GAAD,EAAMqtD,UAAN,EAAkBX,iBAAlB,CAA9E,CAAhB,EAAqI;AACnIx4D,QAAAA,CAAC;AACF;AACF,KARD,MAQO,IAAIo5D,OAAO,GAAGttD,GAAd,EAAmB;AACxB9L,MAAAA,CAAC;AACF;AACF;;AACD,SAAOA,CAAC,GAAGs5D,SAAX,EAAsB,EAAEt5D,CAAxB,EAA2B;AACzByiB,IAAAA,KAAK,CAAC/U,IAAN,CAAW;AAAC6F,MAAAA,KAAK,EAAE1H,IAAI,CAACy1B,KAAL,CAAW,CAAC83B,OAAO,GAAGp5D,CAAC,GAAGwqB,OAAf,IAA0B5b,MAArC,IAA+CA;AAAvD,KAAX;AACD;;AACD,MAAIyH,UAAU,IAAIyiD,aAAd,IAA+BO,OAAO,KAAKrrD,GAA/C,EAAoD;AAClD,QAAIjE,YAAY,CAAC0Y,KAAK,CAACA,KAAK,CAAC/V,MAAN,GAAe,CAAhB,CAAL,CAAwB6G,KAAzB,EAAgCvF,GAAhC,EAAqCwrD,iBAAiB,CAACxrD,GAAD,EAAMmrD,UAAN,EAAkBX,iBAAlB,CAAtD,CAAhB,EAA6G;AAC3G/1C,MAAAA,KAAK,CAACA,KAAK,CAAC/V,MAAN,GAAe,CAAhB,CAAL,CAAwB6G,KAAxB,GAAgCvF,GAAhC;AACD,KAFD,MAEO;AACLyU,MAAAA,KAAK,CAAC/U,IAAN,CAAW;AAAC6F,QAAAA,KAAK,EAAEvF;AAAR,OAAX;AACD;AACF,GAND,MAMO,IAAI,CAACqI,UAAD,IAAegjD,OAAO,KAAKrrD,GAA/B,EAAoC;AACzCyU,IAAAA,KAAK,CAAC/U,IAAN,CAAW;AAAC6F,MAAAA,KAAK,EAAE8lD;AAAR,KAAX;AACD;;AACD,SAAO52C,KAAP;AACD;;AACD,SAAS+2C,iBAAT,CAA2BjmD,KAA3B,EAAkC4lD,UAAlC,EAA8C;AAAC50C,EAAAA,UAAD;AAAaib,EAAAA;AAAb,CAA9C,EAAyE;AACvE,QAAMi6B,GAAG,GAAGp5D,SAAS,CAACm/B,WAAD,CAArB;AACA,QAAMxc,KAAK,GAAG,CAACuB,UAAU,GAAG1Y,IAAI,CAACyd,GAAL,CAASmwC,GAAT,CAAH,GAAmB5tD,IAAI,CAACud,GAAL,CAASqwC,GAAT,CAA9B,KAAgD,KAA9D;AACA,QAAM/sD,MAAM,GAAG,OAAOysD,UAAP,GAAoB,CAAC,KAAK5lD,KAAN,EAAa7G,MAAhD;AACA,SAAOb,IAAI,CAACC,GAAL,CAASqtD,UAAU,GAAGn2C,KAAtB,EAA6BtW,MAA7B,CAAP;AACD;;AACD,MAAMgtD,eAAN,SAA8B51B,KAA9B,CAAoC;AAClCr5B,EAAAA,WAAW,CAAC2E,GAAD,EAAM;AACf,UAAMA,GAAN;AACA,SAAKrD,KAAL,GAAahB,SAAb;AACA,SAAKkJ,GAAL,GAAWlJ,SAAX;AACA,SAAKqtD,WAAL,GAAmBrtD,SAAnB;AACA,SAAK4uD,SAAL,GAAiB5uD,SAAjB;AACA,SAAKstD,WAAL,GAAmB,CAAnB;AACD;;AACD77C,EAAAA,KAAK,CAAC/D,GAAD,EAAMzD,KAAN,EAAa;AAChB,QAAI/U,aAAa,CAACwY,GAAD,CAAjB,EAAwB;AACtB,aAAO,IAAP;AACD;;AACD,QAAI,CAAC,OAAOA,GAAP,KAAe,QAAf,IAA2BA,GAAG,YAAYnC,MAA3C,KAAsD,CAACgiD,QAAQ,CAAC,CAAC7/C,GAAF,CAAnE,EAA2E;AACzE,aAAO,IAAP;AACD;;AACD,WAAO,CAACA,GAAR;AACD;;AACDmhD,EAAAA,sBAAsB,GAAG;AACvB,UAAM3tD,EAAE,GAAG,IAAX;AACA,UAAM;AAAC4b,MAAAA;AAAD,QAAgB5b,EAAE,CAAC6G,OAAzB;AACA,UAAM;AAACsD,MAAAA,UAAD;AAAaC,MAAAA;AAAb,QAA2BpK,EAAE,CAACkK,aAAH,EAAjC;AACA,QAAI;AAACrK,MAAAA,GAAD;AAAMkC,MAAAA;AAAN,QAAa/B,EAAjB;;AACA,UAAM4tD,MAAM,GAAG36D,CAAC,IAAK4M,GAAG,GAAGsK,UAAU,GAAGtK,GAAH,GAAS5M,CAA9C;;AACA,UAAM46D,MAAM,GAAG56D,CAAC,IAAK8O,GAAG,GAAGqI,UAAU,GAAGrI,GAAH,GAAS9O,CAA9C;;AACA,QAAI2oB,WAAJ,EAAiB;AACf,YAAMkyC,OAAO,GAAGh6D,IAAI,CAAC+L,GAAD,CAApB;AACA,YAAMkuD,OAAO,GAAGj6D,IAAI,CAACiO,GAAD,CAApB;;AACA,UAAI+rD,OAAO,GAAG,CAAV,IAAeC,OAAO,GAAG,CAA7B,EAAgC;AAC9BF,QAAAA,MAAM,CAAC,CAAD,CAAN;AACD,OAFD,MAEO,IAAIC,OAAO,GAAG,CAAV,IAAeC,OAAO,GAAG,CAA7B,EAAgC;AACrCH,QAAAA,MAAM,CAAC,CAAD,CAAN;AACD;AACF;;AACD,QAAI/tD,GAAG,KAAKkC,GAAZ,EAAiB;AACf,UAAI0Z,MAAM,GAAG,CAAb;;AACA,UAAI1Z,GAAG,IAAIsI,MAAM,CAAC2jD,gBAAd,IAAkCnuD,GAAG,IAAIwK,MAAM,CAAC4jD,gBAApD,EAAsE;AACpExyC,QAAAA,MAAM,GAAG7b,IAAI,CAAC0W,GAAL,CAASvU,GAAG,GAAG,IAAf,CAAT;AACD;;AACD8rD,MAAAA,MAAM,CAAC9rD,GAAG,GAAG0Z,MAAP,CAAN;;AACA,UAAI,CAACG,WAAL,EAAkB;AAChBgyC,QAAAA,MAAM,CAAC/tD,GAAG,GAAG4b,MAAP,CAAN;AACD;AACF;;AACDzb,IAAAA,EAAE,CAACH,GAAH,GAASA,GAAT;AACAG,IAAAA,EAAE,CAAC+B,GAAH,GAASA,GAAT;AACD;;AACDmsD,EAAAA,YAAY,GAAG;AACb,UAAMluD,EAAE,GAAG,IAAX;AACA,UAAMw0B,QAAQ,GAAGx0B,EAAE,CAAC6G,OAAH,CAAW2P,KAA5B;AACA,QAAI;AAACke,MAAAA,aAAD;AAAgBy5B,MAAAA;AAAhB,QAA4B35B,QAAhC;AACA,QAAIm4B,QAAJ;;AACA,QAAIwB,QAAJ,EAAc;AACZxB,MAAAA,QAAQ,GAAG/sD,IAAI,CAACk2B,IAAL,CAAU91B,EAAE,CAAC+B,GAAH,GAASosD,QAAnB,IAA+BvuD,IAAI,CAACgE,KAAL,CAAW5D,EAAE,CAACH,GAAH,GAASsuD,QAApB,CAA/B,GAA+D,CAA1E;AACD,KAFD,MAEO;AACLxB,MAAAA,QAAQ,GAAG3sD,EAAE,CAACouD,gBAAH,EAAX;AACA15B,MAAAA,aAAa,GAAGA,aAAa,IAAI,EAAjC;AACD;;AACD,QAAIA,aAAJ,EAAmB;AACjBi4B,MAAAA,QAAQ,GAAG/sD,IAAI,CAACC,GAAL,CAAS60B,aAAT,EAAwBi4B,QAAxB,CAAX;AACD;;AACD,WAAOA,QAAP;AACD;;AACDyB,EAAAA,gBAAgB,GAAG;AACjB,WAAO/jD,MAAM,CAACE,iBAAd;AACD;;AACD0vB,EAAAA,UAAU,GAAG;AACX,UAAMj6B,EAAE,GAAG,IAAX;AACA,UAAM8H,IAAI,GAAG9H,EAAE,CAAC6G,OAAhB;AACA,UAAM2tB,QAAQ,GAAG1sB,IAAI,CAAC0O,KAAtB;AACA,QAAIm2C,QAAQ,GAAG3sD,EAAE,CAACkuD,YAAH,EAAf;AACAvB,IAAAA,QAAQ,GAAG/sD,IAAI,CAACmC,GAAL,CAAS,CAAT,EAAY4qD,QAAZ,CAAX;AACA,UAAM0B,uBAAuB,GAAG;AAC9B1B,MAAAA,QAD8B;AAE9B95B,MAAAA,MAAM,EAAE/qB,IAAI,CAAC+qB,MAFiB;AAG9BhzB,MAAAA,GAAG,EAAEiI,IAAI,CAACjI,GAHoB;AAI9BkC,MAAAA,GAAG,EAAE+F,IAAI,CAAC/F,GAJoB;AAK9B2qD,MAAAA,SAAS,EAAEl4B,QAAQ,CAACk4B,SALU;AAM9BttB,MAAAA,IAAI,EAAE5K,QAAQ,CAAC25B,QANe;AAO9B39C,MAAAA,KAAK,EAAEgkB,QAAQ,CAAChkB,KAPc;AAQ9Bo8C,MAAAA,SAAS,EAAE5sD,EAAE,CAAC8hC,UAAH,EARmB;AAS9BxpB,MAAAA,UAAU,EAAEtY,EAAE,CAACoY,YAAH,EATkB;AAU9Bmb,MAAAA,WAAW,EAAEiB,QAAQ,CAACjB,WAAT,IAAwB,CAVP;AAW9Bs5B,MAAAA,aAAa,EAAEr4B,QAAQ,CAACq4B,aAAT,KAA2B;AAXZ,KAAhC;AAaA,UAAML,SAAS,GAAGxsD,EAAE,CAACo4B,MAAH,IAAap4B,EAA/B;AACA,UAAMwW,KAAK,GAAG81C,eAAe,CAAC+B,uBAAD,EAA0B7B,SAA1B,CAA7B;;AACA,QAAI1kD,IAAI,CAAC+qB,MAAL,KAAgB,OAApB,EAA6B;AAC3Br1B,MAAAA,kBAAkB,CAACgZ,KAAD,EAAQxW,EAAR,EAAY,OAAZ,CAAlB;AACD;;AACD,QAAI8H,IAAI,CAACC,OAAT,EAAkB;AAChByO,MAAAA,KAAK,CAACzO,OAAN;AACA/H,MAAAA,EAAE,CAACF,KAAH,GAAWE,EAAE,CAAC+B,GAAd;AACA/B,MAAAA,EAAE,CAACgI,GAAH,GAAShI,EAAE,CAACH,GAAZ;AACD,KAJD,MAIO;AACLG,MAAAA,EAAE,CAACF,KAAH,GAAWE,EAAE,CAACH,GAAd;AACAG,MAAAA,EAAE,CAACgI,GAAH,GAAShI,EAAE,CAAC+B,GAAZ;AACD;;AACD,WAAOyU,KAAP;AACD;;AACDnQ,EAAAA,SAAS,GAAG;AACV,UAAMrG,EAAE,GAAG,IAAX;AACA,UAAMwW,KAAK,GAAGxW,EAAE,CAACwW,KAAjB;AACA,QAAI1W,KAAK,GAAGE,EAAE,CAACH,GAAf;AACA,QAAImI,GAAG,GAAGhI,EAAE,CAAC+B,GAAb;AACA,UAAMsE,SAAN;;AACA,QAAIrG,EAAE,CAAC6G,OAAH,CAAW4U,MAAX,IAAqBjF,KAAK,CAAC/V,MAA/B,EAAuC;AACrC,YAAMgb,MAAM,GAAG,CAACzT,GAAG,GAAGlI,KAAP,IAAgBF,IAAI,CAACmC,GAAL,CAASyU,KAAK,CAAC/V,MAAN,GAAe,CAAxB,EAA2B,CAA3B,CAAhB,GAAgD,CAA/D;AACAX,MAAAA,KAAK,IAAI2b,MAAT;AACAzT,MAAAA,GAAG,IAAIyT,MAAP;AACD;;AACDzb,IAAAA,EAAE,CAACmsD,WAAH,GAAiBrsD,KAAjB;AACAE,IAAAA,EAAE,CAAC0tD,SAAH,GAAe1lD,GAAf;AACAhI,IAAAA,EAAE,CAACosD,WAAH,GAAiBpkD,GAAG,GAAGlI,KAAvB;AACD;;AACDuS,EAAAA,gBAAgB,CAAC/K,KAAD,EAAQ;AACtB,WAAO1S,YAAY,CAAC0S,KAAD,EAAQ,KAAKtI,KAAL,CAAW6H,OAAX,CAAmBiZ,MAA3B,CAAnB;AACD;;AArHiC;;AAwHpC,MAAMwuC,WAAN,SAA0Bb,eAA1B,CAA0C;AACxC3zB,EAAAA,mBAAmB,GAAG;AACpB,UAAM95B,EAAE,GAAG,IAAX;AACA,UAAM;AAACH,MAAAA,GAAD;AAAMkC,MAAAA;AAAN,QAAa/B,EAAE,CAAC2R,SAAH,CAAa,IAAb,CAAnB;AACA3R,IAAAA,EAAE,CAACH,GAAH,GAASnM,cAAc,CAACmM,GAAD,CAAd,GAAsBA,GAAtB,GAA4B,CAArC;AACAG,IAAAA,EAAE,CAAC+B,GAAH,GAASrO,cAAc,CAACqO,GAAD,CAAd,GAAsBA,GAAtB,GAA4B,CAArC;AACA/B,IAAAA,EAAE,CAAC2tD,sBAAH;AACD;;AACDS,EAAAA,gBAAgB,GAAG;AACjB,UAAMpuD,EAAE,GAAG,IAAX;AACA,UAAMsY,UAAU,GAAGtY,EAAE,CAACoY,YAAH,EAAnB;AACA,UAAM3X,MAAM,GAAG6X,UAAU,GAAGtY,EAAE,CAACia,KAAN,GAAcja,EAAE,CAACga,MAA1C;AACA,UAAMuZ,WAAW,GAAGn/B,SAAS,CAAC4L,EAAE,CAAC6G,OAAH,CAAW2P,KAAX,CAAiB+c,WAAlB,CAA7B;AACA,UAAMxc,KAAK,GAAG,CAACuB,UAAU,GAAG1Y,IAAI,CAACyd,GAAL,CAASkW,WAAT,CAAH,GAA2B3zB,IAAI,CAACud,GAAL,CAASoW,WAAT,CAAtC,KAAgE,KAA9E;;AACA,UAAM6J,QAAQ,GAAGp9B,EAAE,CAACu9B,uBAAH,CAA2B,CAA3B,CAAjB;;AACA,WAAO39B,IAAI,CAACk2B,IAAL,CAAUr1B,MAAM,GAAGb,IAAI,CAACC,GAAL,CAAS,EAAT,EAAau9B,QAAQ,CAAC/F,UAAT,GAAsBtgB,KAAnC,CAAnB,CAAP;AACD;;AACDR,EAAAA,gBAAgB,CAACjP,KAAD,EAAQ;AACtB,WAAOA,KAAK,KAAK,IAAV,GAAiBoK,GAAjB,GAAuB,KAAKuK,kBAAL,CAAwB,CAAC3U,KAAK,GAAG,KAAK6kD,WAAd,IAA6B,KAAKC,WAA1D,CAA9B;AACD;;AACDzuB,EAAAA,gBAAgB,CAACC,KAAD,EAAQ;AACtB,WAAO,KAAKuuB,WAAL,GAAmB,KAAKruB,kBAAL,CAAwBF,KAAxB,IAAiC,KAAKwuB,WAAhE;AACD;;AAtBuC;;AAwB1CkC,WAAW,CAACrkD,EAAZ,GAAiB,QAAjB;AACAqkD,WAAW,CAAC17D,QAAZ,GAAuB;AACrB4jB,EAAAA,KAAK,EAAE;AACLlf,IAAAA,QAAQ,EAAEs7B,KAAK,CAACZ,UAAN,CAAiBC;AADtB;AADc,CAAvB;;AAMA,SAASs8B,OAAT,CAAiBC,OAAjB,EAA0B;AACxB,QAAMhqD,MAAM,GAAGgqD,OAAO,GAAI5uD,IAAI,CAAC0nB,GAAL,CAAS,EAAT,EAAa1nB,IAAI,CAACgE,KAAL,CAAW5M,KAAK,CAACw3D,OAAD,CAAhB,CAAb,CAA1B;AACA,SAAOhqD,MAAM,KAAK,CAAlB;AACD;;AACD,SAASiqD,aAAT,CAAuBlC,iBAAvB,EAA0CC,SAA1C,EAAqD;AACnD,QAAMkC,MAAM,GAAG9uD,IAAI,CAACgE,KAAL,CAAW5M,KAAK,CAACw1D,SAAS,CAACzqD,GAAX,CAAhB,CAAf;AACA,QAAM4sD,cAAc,GAAG/uD,IAAI,CAACk2B,IAAL,CAAU02B,SAAS,CAACzqD,GAAV,GAAgBnC,IAAI,CAAC0nB,GAAL,CAAS,EAAT,EAAaonC,MAAb,CAA1B,CAAvB;AACA,QAAMl4C,KAAK,GAAG,EAAd;AACA,MAAIg4C,OAAO,GAAGp3D,eAAe,CAACm1D,iBAAiB,CAAC1sD,GAAnB,EAAwBD,IAAI,CAAC0nB,GAAL,CAAS,EAAT,EAAa1nB,IAAI,CAACgE,KAAL,CAAW5M,KAAK,CAACw1D,SAAS,CAAC3sD,GAAX,CAAhB,CAAb,CAAxB,CAA7B;AACA,MAAI+uD,GAAG,GAAGhvD,IAAI,CAACgE,KAAL,CAAW5M,KAAK,CAACw3D,OAAD,CAAhB,CAAV;AACA,MAAIK,WAAW,GAAGjvD,IAAI,CAACgE,KAAL,CAAW4qD,OAAO,GAAG5uD,IAAI,CAAC0nB,GAAL,CAAS,EAAT,EAAasnC,GAAb,CAArB,CAAlB;AACA,MAAIlC,SAAS,GAAGkC,GAAG,GAAG,CAAN,GAAUhvD,IAAI,CAAC0nB,GAAL,CAAS,EAAT,EAAa1nB,IAAI,CAAC0W,GAAL,CAASs4C,GAAT,CAAb,CAAV,GAAwC,CAAxD;;AACA,KAAG;AACDp4C,IAAAA,KAAK,CAAC/U,IAAN,CAAW;AAAC6F,MAAAA,KAAK,EAAEknD,OAAR;AAAiBx6B,MAAAA,KAAK,EAAEu6B,OAAO,CAACC,OAAD;AAA/B,KAAX;AACA,MAAEK,WAAF;;AACA,QAAIA,WAAW,KAAK,EAApB,EAAwB;AACtBA,MAAAA,WAAW,GAAG,CAAd;AACA,QAAED,GAAF;AACAlC,MAAAA,SAAS,GAAGkC,GAAG,IAAI,CAAP,GAAW,CAAX,GAAelC,SAA3B;AACD;;AACD8B,IAAAA,OAAO,GAAG5uD,IAAI,CAACy1B,KAAL,CAAWw5B,WAAW,GAAGjvD,IAAI,CAAC0nB,GAAL,CAAS,EAAT,EAAasnC,GAAb,CAAd,GAAkClC,SAA7C,IAA0DA,SAApE;AACD,GATD,QASSkC,GAAG,GAAGF,MAAN,IAAiBE,GAAG,KAAKF,MAAR,IAAkBG,WAAW,GAAGF,cAT1D;;AAUA,QAAMG,QAAQ,GAAG13D,eAAe,CAACm1D,iBAAiB,CAACxqD,GAAnB,EAAwBysD,OAAxB,CAAhC;AACAh4C,EAAAA,KAAK,CAAC/U,IAAN,CAAW;AAAC6F,IAAAA,KAAK,EAAEwnD,QAAR;AAAkB96B,IAAAA,KAAK,EAAEu6B,OAAO,CAACC,OAAD;AAAhC,GAAX;AACA,SAAOh4C,KAAP;AACD;;AACD,MAAMu4C,gBAAN,SAA+Bl3B,KAA/B,CAAqC;AACnCr5B,EAAAA,WAAW,CAAC2E,GAAD,EAAM;AACf,UAAMA,GAAN;AACA,SAAKrD,KAAL,GAAahB,SAAb;AACA,SAAKkJ,GAAL,GAAWlJ,SAAX;AACA,SAAKqtD,WAAL,GAAmBrtD,SAAnB;AACA,SAAKstD,WAAL,GAAmB,CAAnB;AACD;;AACD77C,EAAAA,KAAK,CAAC/D,GAAD,EAAMzD,KAAN,EAAa;AAChB,UAAMzB,KAAK,GAAGmmD,eAAe,CAAC93C,SAAhB,CAA0BpF,KAA1B,CAAgCwzC,KAAhC,CAAsC,IAAtC,EAA4C,CAACv3C,GAAD,EAAMzD,KAAN,CAA5C,CAAd;;AACA,QAAIzB,KAAK,KAAK,CAAd,EAAiB;AACf,WAAK0nD,KAAL,GAAa,IAAb;AACA,aAAOlwD,SAAP;AACD;;AACD,WAAOpL,cAAc,CAAC4T,KAAD,CAAd,IAAyBA,KAAK,GAAG,CAAjC,GAAqCA,KAArC,GAA6C,IAApD;AACD;;AACDwyB,EAAAA,mBAAmB,GAAG;AACpB,UAAM95B,EAAE,GAAG,IAAX;AACA,UAAM;AAACH,MAAAA,GAAD;AAAMkC,MAAAA;AAAN,QAAa/B,EAAE,CAAC2R,SAAH,CAAa,IAAb,CAAnB;AACA3R,IAAAA,EAAE,CAACH,GAAH,GAASnM,cAAc,CAACmM,GAAD,CAAd,GAAsBD,IAAI,CAACmC,GAAL,CAAS,CAAT,EAAYlC,GAAZ,CAAtB,GAAyC,IAAlD;AACAG,IAAAA,EAAE,CAAC+B,GAAH,GAASrO,cAAc,CAACqO,GAAD,CAAd,GAAsBnC,IAAI,CAACmC,GAAL,CAAS,CAAT,EAAYA,GAAZ,CAAtB,GAAyC,IAAlD;;AACA,QAAI/B,EAAE,CAAC6G,OAAH,CAAW+U,WAAf,EAA4B;AAC1B5b,MAAAA,EAAE,CAACgvD,KAAH,GAAW,IAAX;AACD;;AACDhvD,IAAAA,EAAE,CAAC2tD,sBAAH;AACD;;AACDA,EAAAA,sBAAsB,GAAG;AACvB,UAAM3tD,EAAE,GAAG,IAAX;AACA,UAAM;AAACmK,MAAAA,UAAD;AAAaC,MAAAA;AAAb,QAA2BpK,EAAE,CAACkK,aAAH,EAAjC;AACA,QAAIrK,GAAG,GAAGG,EAAE,CAACH,GAAb;AACA,QAAIkC,GAAG,GAAG/B,EAAE,CAAC+B,GAAb;;AACA,UAAM6rD,MAAM,GAAG36D,CAAC,IAAK4M,GAAG,GAAGsK,UAAU,GAAGtK,GAAH,GAAS5M,CAA9C;;AACA,UAAM46D,MAAM,GAAG56D,CAAC,IAAK8O,GAAG,GAAGqI,UAAU,GAAGrI,GAAH,GAAS9O,CAA9C;;AACA,UAAM27D,GAAG,GAAG,CAAC37D,CAAD,EAAIsB,CAAJ,KAAUqL,IAAI,CAAC0nB,GAAL,CAAS,EAAT,EAAa1nB,IAAI,CAACgE,KAAL,CAAW5M,KAAK,CAAC/D,CAAD,CAAhB,IAAuBsB,CAApC,CAAtB;;AACA,QAAIsL,GAAG,KAAKkC,GAAZ,EAAiB;AACf,UAAIlC,GAAG,IAAI,CAAX,EAAc;AACZ+tD,QAAAA,MAAM,CAAC,CAAD,CAAN;AACAC,QAAAA,MAAM,CAAC,EAAD,CAAN;AACD,OAHD,MAGO;AACLD,QAAAA,MAAM,CAACgB,GAAG,CAAC/uD,GAAD,EAAM,CAAC,CAAP,CAAJ,CAAN;AACAguD,QAAAA,MAAM,CAACe,GAAG,CAAC7sD,GAAD,EAAM,CAAC,CAAP,CAAJ,CAAN;AACD;AACF;;AACD,QAAIlC,GAAG,IAAI,CAAX,EAAc;AACZ+tD,MAAAA,MAAM,CAACgB,GAAG,CAAC7sD,GAAD,EAAM,CAAC,CAAP,CAAJ,CAAN;AACD;;AACD,QAAIA,GAAG,IAAI,CAAX,EAAc;AACZ8rD,MAAAA,MAAM,CAACe,GAAG,CAAC/uD,GAAD,EAAM,CAAC,CAAP,CAAJ,CAAN;AACD;;AACD,QAAIG,EAAE,CAACgvD,KAAH,IAAYhvD,EAAE,CAACH,GAAH,KAAWG,EAAE,CAAC44B,aAA1B,IAA2C/4B,GAAG,KAAK+uD,GAAG,CAAC5uD,EAAE,CAACH,GAAJ,EAAS,CAAT,CAA1D,EAAuE;AACrE+tD,MAAAA,MAAM,CAACgB,GAAG,CAAC/uD,GAAD,EAAM,CAAC,CAAP,CAAJ,CAAN;AACD;;AACDG,IAAAA,EAAE,CAACH,GAAH,GAASA,GAAT;AACAG,IAAAA,EAAE,CAAC+B,GAAH,GAASA,GAAT;AACD;;AACDk4B,EAAAA,UAAU,GAAG;AACX,UAAMj6B,EAAE,GAAG,IAAX;AACA,UAAM8H,IAAI,GAAG9H,EAAE,CAAC6G,OAAhB;AACA,UAAM0lD,iBAAiB,GAAG;AACxB1sD,MAAAA,GAAG,EAAEG,EAAE,CAAC04B,QADgB;AAExB32B,MAAAA,GAAG,EAAE/B,EAAE,CAACy4B;AAFgB,KAA1B;AAIA,UAAMjiB,KAAK,GAAGi4C,aAAa,CAAClC,iBAAD,EAAoBvsD,EAApB,CAA3B;;AACA,QAAI8H,IAAI,CAAC+qB,MAAL,KAAgB,OAApB,EAA6B;AAC3Br1B,MAAAA,kBAAkB,CAACgZ,KAAD,EAAQxW,EAAR,EAAY,OAAZ,CAAlB;AACD;;AACD,QAAI8H,IAAI,CAACC,OAAT,EAAkB;AAChByO,MAAAA,KAAK,CAACzO,OAAN;AACA/H,MAAAA,EAAE,CAACF,KAAH,GAAWE,EAAE,CAAC+B,GAAd;AACA/B,MAAAA,EAAE,CAACgI,GAAH,GAAShI,EAAE,CAACH,GAAZ;AACD,KAJD,MAIO;AACLG,MAAAA,EAAE,CAACF,KAAH,GAAWE,EAAE,CAACH,GAAd;AACAG,MAAAA,EAAE,CAACgI,GAAH,GAAShI,EAAE,CAAC+B,GAAZ;AACD;;AACD,WAAOyU,KAAP;AACD;;AACDnE,EAAAA,gBAAgB,CAAC/K,KAAD,EAAQ;AACtB,WAAOA,KAAK,KAAKxI,SAAV,GAAsB,GAAtB,GAA4BlK,YAAY,CAAC0S,KAAD,EAAQ,KAAKtI,KAAL,CAAW6H,OAAX,CAAmBiZ,MAA3B,CAA/C;AACD;;AACDzZ,EAAAA,SAAS,GAAG;AACV,UAAMrG,EAAE,GAAG,IAAX;AACA,UAAMF,KAAK,GAAGE,EAAE,CAACH,GAAjB;AACA,UAAMwG,SAAN;AACArG,IAAAA,EAAE,CAACmsD,WAAH,GAAiBn1D,KAAK,CAAC8I,KAAD,CAAtB;AACAE,IAAAA,EAAE,CAACosD,WAAH,GAAiBp1D,KAAK,CAACgJ,EAAE,CAAC+B,GAAJ,CAAL,GAAgB/K,KAAK,CAAC8I,KAAD,CAAtC;AACD;;AACDyW,EAAAA,gBAAgB,CAACjP,KAAD,EAAQ;AACtB,UAAMtH,EAAE,GAAG,IAAX;;AACA,QAAIsH,KAAK,KAAKxI,SAAV,IAAuBwI,KAAK,KAAK,CAArC,EAAwC;AACtCA,MAAAA,KAAK,GAAGtH,EAAE,CAACH,GAAX;AACD;;AACD,QAAIyH,KAAK,KAAK,IAAV,IAAkBgT,KAAK,CAAChT,KAAD,CAA3B,EAAoC;AAClC,aAAOoK,GAAP;AACD;;AACD,WAAO1R,EAAE,CAACic,kBAAH,CAAsB3U,KAAK,KAAKtH,EAAE,CAACH,GAAb,GACzB,CADyB,GAEzB,CAAC7I,KAAK,CAACsQ,KAAD,CAAL,GAAetH,EAAE,CAACmsD,WAAnB,IAAkCnsD,EAAE,CAACosD,WAFlC,CAAP;AAGD;;AACDzuB,EAAAA,gBAAgB,CAACC,KAAD,EAAQ;AACtB,UAAM59B,EAAE,GAAG,IAAX;AACA,UAAM69B,OAAO,GAAG79B,EAAE,CAAC89B,kBAAH,CAAsBF,KAAtB,CAAhB;AACA,WAAOh+B,IAAI,CAAC0nB,GAAL,CAAS,EAAT,EAAatnB,EAAE,CAACmsD,WAAH,GAAiBtuB,OAAO,GAAG79B,EAAE,CAACosD,WAA3C,CAAP;AACD;;AAtGkC;;AAwGrC2C,gBAAgB,CAAC9kD,EAAjB,GAAsB,aAAtB;AACA8kD,gBAAgB,CAACn8D,QAAjB,GAA4B;AAC1B4jB,EAAAA,KAAK,EAAE;AACLlf,IAAAA,QAAQ,EAAEs7B,KAAK,CAACZ,UAAN,CAAiBW,WADtB;AAELqB,IAAAA,KAAK,EAAE;AACLa,MAAAA,OAAO,EAAE;AADJ;AAFF;AADmB,CAA5B;;AASA,SAASo6B,qBAAT,CAA+BnnD,IAA/B,EAAqC;AACnC,QAAM0sB,QAAQ,GAAG1sB,IAAI,CAAC0O,KAAtB;;AACA,MAAIge,QAAQ,CAACpQ,OAAT,IAAoBtc,IAAI,CAACsc,OAA7B,EAAsC;AACpC,UAAM8H,OAAO,GAAGl2B,SAAS,CAACw+B,QAAQ,CAACH,eAAV,CAAzB;AACA,WAAOnhC,cAAc,CAACshC,QAAQ,CAAC2C,IAAT,IAAiB3C,QAAQ,CAAC2C,IAAT,CAAc5vB,IAAhC,EAAsC3U,QAAQ,CAACukC,IAAT,CAAc5vB,IAApD,CAAd,GAA0E2kB,OAAO,CAAClS,MAAzF;AACD;;AACD,SAAO,CAAP;AACD;;AACD,SAASk1C,gBAAT,CAA0BjiD,GAA1B,EAA+BkqB,IAA/B,EAAqC/kB,KAArC,EAA4C;AAC1CA,EAAAA,KAAK,GAAGpf,OAAO,CAACof,KAAD,CAAP,GAAiBA,KAAjB,GAAyB,CAACA,KAAD,CAAjC;AACA,SAAO;AACL7c,IAAAA,CAAC,EAAE2I,YAAY,CAAC+O,GAAD,EAAMkqB,IAAI,CAACqG,MAAX,EAAmBprB,KAAnB,CADV;AAELze,IAAAA,CAAC,EAAEye,KAAK,CAAC3R,MAAN,GAAe02B,IAAI,CAACE;AAFlB,GAAP;AAID;;AACD,SAAS83B,eAAT,CAAyB1xC,KAAzB,EAAgCiL,GAAhC,EAAqCnhB,IAArC,EAA2C1H,GAA3C,EAAgDkC,GAAhD,EAAqD;AACnD,MAAI0b,KAAK,KAAK5d,GAAV,IAAiB4d,KAAK,KAAK1b,GAA/B,EAAoC;AAClC,WAAO;AACLjC,MAAAA,KAAK,EAAE4oB,GAAG,GAAInhB,IAAI,GAAG,CADhB;AAELS,MAAAA,GAAG,EAAE0gB,GAAG,GAAInhB,IAAI,GAAG;AAFd,KAAP;AAID,GALD,MAKO,IAAIkW,KAAK,GAAG5d,GAAR,IAAe4d,KAAK,GAAG1b,GAA3B,EAAgC;AACrC,WAAO;AACLjC,MAAAA,KAAK,EAAE4oB,GAAG,GAAGnhB,IADR;AAELS,MAAAA,GAAG,EAAE0gB;AAFA,KAAP;AAID;;AACD,SAAO;AACL5oB,IAAAA,KAAK,EAAE4oB,GADF;AAEL1gB,IAAAA,GAAG,EAAE0gB,GAAG,GAAGnhB;AAFN,GAAP;AAID;;AACD,SAAS6nD,kBAAT,CAA4BxnD,KAA5B,EAAmC;AACjC,QAAMynD,cAAc,GAAG;AACrBh8D,IAAAA,CAAC,EAAE,CADkB;AAErBlB,IAAAA,CAAC,EAAEyV,KAAK,CAACqS,KAFY;AAGrB9lB,IAAAA,CAAC,EAAE,CAHkB;AAIrBpB,IAAAA,CAAC,EAAE6U,KAAK,CAACoS,MAAN,GAAepS,KAAK,CAACmwB;AAJH,GAAvB;AAMA,QAAMu3B,cAAc,GAAG,EAAvB;AACA,QAAM5zB,UAAU,GAAG,EAAnB;AACA,QAAMxP,OAAO,GAAG,EAAhB;AACA,QAAMqjC,UAAU,GAAG3nD,KAAK,CAACqJ,SAAN,GAAkBxQ,MAArC;;AACA,OAAK,IAAI5N,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG08D,UAApB,EAAgC18D,CAAC,EAAjC,EAAqC;AACnC,UAAMiV,IAAI,GAAGF,KAAK,CAACf,OAAN,CAAcyd,WAAd,CAA0B2U,UAA1B,CAAqCrxB,KAAK,CAAC4nD,oBAAN,CAA2B38D,CAA3B,CAArC,CAAb;AACAq5B,IAAAA,OAAO,CAACr5B,CAAD,CAAP,GAAaiV,IAAI,CAACokB,OAAlB;AACA,UAAMxH,aAAa,GAAG9c,KAAK,CAAC6nD,gBAAN,CAAuB58D,CAAvB,EAA0B+U,KAAK,CAAC8nD,WAAN,GAAoBxjC,OAAO,CAACr5B,CAAD,CAArD,CAAtB;AACA,UAAM88D,MAAM,GAAGn3D,MAAM,CAACsP,IAAI,CAACqvB,IAAN,CAArB;AACA,UAAM6rB,QAAQ,GAAGkM,gBAAgB,CAACtnD,KAAK,CAACqF,GAAP,EAAY0iD,MAAZ,EAAoB/nD,KAAK,CAACgoD,YAAN,CAAmB/8D,CAAnB,CAApB,CAAjC;AACA6oC,IAAAA,UAAU,CAAC7oC,CAAD,CAAV,GAAgBmwD,QAAhB;AACA,UAAM3mB,YAAY,GAAGz0B,KAAK,CAACkc,aAAN,CAAoBjxB,CAApB,CAArB;AACA,UAAM4qB,KAAK,GAAG/lB,SAAS,CAAC2kC,YAAD,CAAvB;AACA,UAAMwzB,OAAO,GAAGV,eAAe,CAAC1xC,KAAD,EAAQiH,aAAa,CAACjvB,CAAtB,EAAyButD,QAAQ,CAACztD,CAAlC,EAAqC,CAArC,EAAwC,GAAxC,CAA/B;AACA,UAAMu6D,OAAO,GAAGX,eAAe,CAAC1xC,KAAD,EAAQiH,aAAa,CAAC/uB,CAAtB,EAAyBqtD,QAAQ,CAACrvD,CAAlC,EAAqC,EAArC,EAAyC,GAAzC,CAA/B;;AACA,QAAIk8D,OAAO,CAAC/vD,KAAR,GAAgBuvD,cAAc,CAACh8D,CAAnC,EAAsC;AACpCg8D,MAAAA,cAAc,CAACh8D,CAAf,GAAmBw8D,OAAO,CAAC/vD,KAA3B;AACAwvD,MAAAA,cAAc,CAACj8D,CAAf,GAAmBgpC,YAAnB;AACD;;AACD,QAAIwzB,OAAO,CAAC7nD,GAAR,GAAcqnD,cAAc,CAACl9D,CAAjC,EAAoC;AAClCk9D,MAAAA,cAAc,CAACl9D,CAAf,GAAmB09D,OAAO,CAAC7nD,GAA3B;AACAsnD,MAAAA,cAAc,CAACn9D,CAAf,GAAmBkqC,YAAnB;AACD;;AACD,QAAIyzB,OAAO,CAAChwD,KAAR,GAAgBuvD,cAAc,CAACl7D,CAAnC,EAAsC;AACpCk7D,MAAAA,cAAc,CAACl7D,CAAf,GAAmB27D,OAAO,CAAChwD,KAA3B;AACAwvD,MAAAA,cAAc,CAACn7D,CAAf,GAAmBkoC,YAAnB;AACD;;AACD,QAAIyzB,OAAO,CAAC9nD,GAAR,GAAcqnD,cAAc,CAACt8D,CAAjC,EAAoC;AAClCs8D,MAAAA,cAAc,CAACt8D,CAAf,GAAmB+8D,OAAO,CAAC9nD,GAA3B;AACAsnD,MAAAA,cAAc,CAACv8D,CAAf,GAAmBspC,YAAnB;AACD;AACF;;AACDz0B,EAAAA,KAAK,CAACmoD,cAAN,CAAqBnoD,KAAK,CAAC8nD,WAA3B,EAAwCL,cAAxC,EAAwDC,cAAxD;;AACA1nD,EAAAA,KAAK,CAACooD,gBAAN,GAAyBC,oBAAoB,CAACroD,KAAD,EAAQ8zB,UAAR,EAAoBxP,OAApB,CAA7C;AACD;;AACD,SAAS+jC,oBAAT,CAA8BroD,KAA9B,EAAqC8zB,UAArC,EAAiDxP,OAAjD,EAA0D;AACxD,QAAM1rB,KAAK,GAAG,EAAd;AACA,QAAM+uD,UAAU,GAAG3nD,KAAK,CAACqJ,SAAN,GAAkBxQ,MAArC;AACA,QAAMqH,IAAI,GAAGF,KAAK,CAACf,OAAnB;AACA,QAAMqpD,kBAAkB,GAAGjB,qBAAqB,CAACnnD,IAAD,CAAhD;AACA,QAAMqoD,aAAa,GAAGvoD,KAAK,CAACsc,6BAAN,CAAoCpc,IAAI,CAAC0O,KAAL,CAAWzO,OAAX,GAAqBH,KAAK,CAAC/H,GAA3B,GAAiC+H,KAAK,CAAC7F,GAA3E,CAAtB;;AACA,OAAK,IAAIlP,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG08D,UAApB,EAAgC18D,CAAC,EAAjC,EAAqC;AACnC,UAAMu9D,KAAK,GAAIv9D,CAAC,KAAK,CAAN,GAAUq9D,kBAAkB,GAAG,CAA/B,GAAmC,CAAlD;AACA,UAAMG,kBAAkB,GAAGzoD,KAAK,CAAC6nD,gBAAN,CAAuB58D,CAAvB,EAA0Bs9D,aAAa,GAAGC,KAAhB,GAAwBlkC,OAAO,CAACr5B,CAAD,CAAzD,CAA3B;AACA,UAAM4qB,KAAK,GAAG/lB,SAAS,CAACkQ,KAAK,CAACkc,aAAN,CAAoBjxB,CAApB,CAAD,CAAvB;AACA,UAAM0U,IAAI,GAAGm0B,UAAU,CAAC7oC,CAAD,CAAvB;AACA,UAAM8C,CAAC,GAAG26D,SAAS,CAACD,kBAAkB,CAAC16D,CAApB,EAAuB4R,IAAI,CAAC5T,CAA5B,EAA+B8pB,KAA/B,CAAnB;AACA,UAAMmiB,SAAS,GAAG2wB,oBAAoB,CAAC9yC,KAAD,CAAtC;AACA,UAAMlV,IAAI,GAAGioD,gBAAgB,CAACH,kBAAkB,CAAC56D,CAApB,EAAuB8R,IAAI,CAAChS,CAA5B,EAA+BqqC,SAA/B,CAA7B;AACAp/B,IAAAA,KAAK,CAACiB,IAAN,CAAW;AACThM,MAAAA,CAAC,EAAE46D,kBAAkB,CAAC56D,CADb;AAETE,MAAAA,CAFS;AAGTiqC,MAAAA,SAHS;AAITr3B,MAAAA,IAJS;AAKTH,MAAAA,GAAG,EAAEzS,CALI;AAMT0S,MAAAA,KAAK,EAAEE,IAAI,GAAGhB,IAAI,CAAChS,CANV;AAOT+S,MAAAA,MAAM,EAAE3S,CAAC,GAAG4R,IAAI,CAAC5T;AAPR,KAAX;AASD;;AACD,SAAO6M,KAAP;AACD;;AACD,SAAS+vD,oBAAT,CAA8B9yC,KAA9B,EAAqC;AACnC,MAAIA,KAAK,KAAK,CAAV,IAAeA,KAAK,KAAK,GAA7B,EAAkC;AAChC,WAAO,QAAP;AACD,GAFD,MAEO,IAAIA,KAAK,GAAG,GAAZ,EAAiB;AACtB,WAAO,MAAP;AACD;;AACD,SAAO,OAAP;AACD;;AACD,SAAS+yC,gBAAT,CAA0B/6D,CAA1B,EAA6BF,CAA7B,EAAgC0+B,KAAhC,EAAuC;AACrC,MAAIA,KAAK,KAAK,OAAd,EAAuB;AACrBx+B,IAAAA,CAAC,IAAIF,CAAL;AACD,GAFD,MAEO,IAAI0+B,KAAK,KAAK,QAAd,EAAwB;AAC7Bx+B,IAAAA,CAAC,IAAKF,CAAC,GAAG,CAAV;AACD;;AACD,SAAOE,CAAP;AACD;;AACD,SAAS66D,SAAT,CAAmB36D,CAAnB,EAAsBhC,CAAtB,EAAyB8pB,KAAzB,EAAgC;AAC9B,MAAIA,KAAK,KAAK,EAAV,IAAgBA,KAAK,KAAK,GAA9B,EAAmC;AACjC9nB,IAAAA,CAAC,IAAKhC,CAAC,GAAG,CAAV;AACD,GAFD,MAEO,IAAI8pB,KAAK,GAAG,GAAR,IAAeA,KAAK,GAAG,EAA3B,EAA+B;AACpC9nB,IAAAA,CAAC,IAAIhC,CAAL;AACD;;AACD,SAAOgC,CAAP;AACD;;AACD,SAAS86D,eAAT,CAAyB7oD,KAAzB,EAAgC+jD,UAAhC,EAA4C;AAC1C,QAAM;AAAC1+C,IAAAA,GAAD;AAAMpG,IAAAA,OAAO,EAAE;AAACyd,MAAAA;AAAD;AAAf,MAAgC1c,KAAtC;;AACA,OAAK,IAAI/U,CAAC,GAAG84D,UAAU,GAAG,CAA1B,EAA6B94D,CAAC,IAAI,CAAlC,EAAqCA,CAAC,EAAtC,EAA0C;AACxC,UAAMwsC,WAAW,GAAG/a,WAAW,CAAC2U,UAAZ,CAAuBrxB,KAAK,CAAC4nD,oBAAN,CAA2B38D,CAA3B,CAAvB,CAApB;AACA,UAAM88D,MAAM,GAAGn3D,MAAM,CAAC6mC,WAAW,CAAClI,IAAb,CAArB;AACA,UAAM;AAAC1hC,MAAAA,CAAD;AAAIE,MAAAA,CAAJ;AAAOiqC,MAAAA,SAAP;AAAkBr3B,MAAAA,IAAlB;AAAwBH,MAAAA,GAAxB;AAA6BC,MAAAA,KAA7B;AAAoCC,MAAAA;AAApC,QAA8CV,KAAK,CAACooD,gBAAN,CAAuBn9D,CAAvB,CAApD;AACA,UAAM;AAACuhC,MAAAA;AAAD,QAAkBiL,WAAxB;;AACA,QAAI,CAACrrC,aAAa,CAACogC,aAAD,CAAlB,EAAmC;AACjC,YAAMlI,OAAO,GAAGl2B,SAAS,CAACqpC,WAAW,CAAChL,eAAb,CAAzB;AACApnB,MAAAA,GAAG,CAAC2T,SAAJ,GAAgBwT,aAAhB;AACAnnB,MAAAA,GAAG,CAAC0zB,QAAJ,CAAap4B,IAAI,GAAG2jB,OAAO,CAAC3jB,IAA5B,EAAkCH,GAAG,GAAG8jB,OAAO,CAAC9jB,GAAhD,EAAqDC,KAAK,GAAGE,IAAR,GAAe2jB,OAAO,CAACjS,KAA5E,EAAmF3R,MAAM,GAAGF,GAAT,GAAe8jB,OAAO,CAAClS,MAA1G;AACD;;AACD5hB,IAAAA,UAAU,CACR6U,GADQ,EAERrF,KAAK,CAACgoD,YAAN,CAAmB/8D,CAAnB,CAFQ,EAGR4C,CAHQ,EAIRE,CAAC,GAAIg6D,MAAM,CAACt4B,UAAP,GAAoB,CAJjB,EAKRs4B,MALQ,EAMR;AACEj9D,MAAAA,KAAK,EAAE2sC,WAAW,CAAC3sC,KADrB;AAEEktC,MAAAA,SAAS,EAAEA,SAFb;AAGEG,MAAAA,YAAY,EAAE;AAHhB,KANQ,CAAV;AAYD;AACF;;AACD,SAAS2wB,cAAT,CAAwB9oD,KAAxB,EAA+BwU,MAA/B,EAAuCiI,QAAvC,EAAiDsnC,UAAjD,EAA6D;AAC3D,QAAM;AAAC1+C,IAAAA;AAAD,MAAQrF,KAAd;;AACA,MAAIyc,QAAJ,EAAc;AACZpX,IAAAA,GAAG,CAAC2S,GAAJ,CAAQhY,KAAK,CAAC+b,OAAd,EAAuB/b,KAAK,CAACgc,OAA7B,EAAsCxH,MAAtC,EAA8C,CAA9C,EAAiD1nB,GAAjD;AACD,GAFD,MAEO;AACL,QAAIgwB,aAAa,GAAG9c,KAAK,CAAC6nD,gBAAN,CAAuB,CAAvB,EAA0BrzC,MAA1B,CAApB;AACAnP,IAAAA,GAAG,CAACo0B,MAAJ,CAAW3c,aAAa,CAACjvB,CAAzB,EAA4BivB,aAAa,CAAC/uB,CAA1C;;AACA,SAAK,IAAI9C,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG84D,UAApB,EAAgC94D,CAAC,EAAjC,EAAqC;AACnC6xB,MAAAA,aAAa,GAAG9c,KAAK,CAAC6nD,gBAAN,CAAuB58D,CAAvB,EAA0BupB,MAA1B,CAAhB;AACAnP,MAAAA,GAAG,CAACq0B,MAAJ,CAAW5c,aAAa,CAACjvB,CAAzB,EAA4BivB,aAAa,CAAC/uB,CAA1C;AACD;AACF;AACF;;AACD,SAASg7D,cAAT,CAAwB/oD,KAAxB,EAA+BgpD,YAA/B,EAA6Cx0C,MAA7C,EAAqDuvC,UAArD,EAAiE;AAC/D,QAAM1+C,GAAG,GAAGrF,KAAK,CAACqF,GAAlB;AACA,QAAMoX,QAAQ,GAAGusC,YAAY,CAACvsC,QAA9B;AACA,QAAM;AAAC3xB,IAAAA,KAAD;AAAQsuB,IAAAA;AAAR,MAAqB4vC,YAA3B;;AACA,MAAK,CAACvsC,QAAD,IAAa,CAACsnC,UAAf,IAA8B,CAACj5D,KAA/B,IAAwC,CAACsuB,SAAzC,IAAsD5E,MAAM,GAAG,CAAnE,EAAsE;AACpE;AACD;;AACDnP,EAAAA,GAAG,CAACyzB,IAAJ;AACAzzB,EAAAA,GAAG,CAAC6T,WAAJ,GAAkBpuB,KAAlB;AACAua,EAAAA,GAAG,CAAC+T,SAAJ,GAAgBA,SAAhB;AACA/T,EAAAA,GAAG,CAACi0B,WAAJ,CAAgB0vB,YAAY,CAACv9B,UAA7B;AACApmB,EAAAA,GAAG,CAACk0B,cAAJ,GAAqByvB,YAAY,CAACt9B,gBAAlC;AACArmB,EAAAA,GAAG,CAACm0B,SAAJ;AACAsvB,EAAAA,cAAc,CAAC9oD,KAAD,EAAQwU,MAAR,EAAgBiI,QAAhB,EAA0BsnC,UAA1B,CAAd;AACA1+C,EAAAA,GAAG,CAACojC,SAAJ;AACApjC,EAAAA,GAAG,CAACs0B,MAAJ;AACAt0B,EAAAA,GAAG,CAAC2zB,OAAJ;AACD;;AACD,SAASiwB,YAAT,CAAsBC,KAAtB,EAA6B;AAC3B,SAAO17D,QAAQ,CAAC07D,KAAD,CAAR,GAAkBA,KAAlB,GAA0B,CAAjC;AACD;;AACD,SAASC,uBAAT,CAAiC7kD,MAAjC,EAAyCnD,KAAzC,EAAgDqJ,KAAhD,EAAuD;AACrD,SAAOjN,MAAM,CAACqC,MAAP,CAAcrC,MAAM,CAACgH,MAAP,CAAcD,MAAd,CAAd,EAAqC;AAC1CkG,IAAAA,KAD0C;AAE1CrJ,IAAAA,KAF0C;AAG1C5J,IAAAA,IAAI,EAAE;AAHoC,GAArC,CAAP;AAKD;;AACD,MAAM6xD,iBAAN,SAAgCvD,eAAhC,CAAgD;AAC9CjvD,EAAAA,WAAW,CAAC2E,GAAD,EAAM;AACf,UAAMA,GAAN;AACA,SAAKwgB,OAAL,GAAe7kB,SAAf;AACA,SAAK8kB,OAAL,GAAe9kB,SAAf;AACA,SAAK4wD,WAAL,GAAmB5wD,SAAnB;AACA,SAAK8wD,YAAL,GAAoB,EAApB;AACA,SAAKI,gBAAL,GAAwB,EAAxB;AACD;;AACDr2B,EAAAA,aAAa,GAAG;AACd,UAAM35B,EAAE,GAAG,IAAX;AACAA,IAAAA,EAAE,CAACia,KAAH,GAAWja,EAAE,CAAC6e,QAAd;AACA7e,IAAAA,EAAE,CAACga,MAAH,GAAYha,EAAE,CAAC8e,SAAf;AACA9e,IAAAA,EAAE,CAAC+3B,UAAH,GAAgBk3B,qBAAqB,CAACjvD,EAAE,CAAC6G,OAAJ,CAArB,GAAoC,CAApD;AACA7G,IAAAA,EAAE,CAAC2jB,OAAH,GAAa/jB,IAAI,CAACgE,KAAL,CAAW5D,EAAE,CAACia,KAAH,GAAW,CAAtB,CAAb;AACAja,IAAAA,EAAE,CAAC4jB,OAAH,GAAahkB,IAAI,CAACgE,KAAL,CAAW,CAAC5D,EAAE,CAACga,MAAH,GAAYha,EAAE,CAAC+3B,UAAhB,IAA8B,CAAzC,CAAb;AACA/3B,IAAAA,EAAE,CAAC0vD,WAAH,GAAiB9vD,IAAI,CAACC,GAAL,CAASG,EAAE,CAACga,MAAH,GAAYha,EAAE,CAAC+3B,UAAxB,EAAoC/3B,EAAE,CAACia,KAAvC,IAAgD,CAAjE;AACD;;AACD6f,EAAAA,mBAAmB,GAAG;AACpB,UAAM95B,EAAE,GAAG,IAAX;AACA,UAAM;AAACH,MAAAA,GAAD;AAAMkC,MAAAA;AAAN,QAAa/B,EAAE,CAAC2R,SAAH,CAAa,KAAb,CAAnB;AACA3R,IAAAA,EAAE,CAACH,GAAH,GAASnM,cAAc,CAACmM,GAAD,CAAd,IAAuB,CAACya,KAAK,CAACza,GAAD,CAA7B,GAAqCA,GAArC,GAA2C,CAApD;AACAG,IAAAA,EAAE,CAAC+B,GAAH,GAASrO,cAAc,CAACqO,GAAD,CAAd,IAAuB,CAACuY,KAAK,CAACvY,GAAD,CAA7B,GAAqCA,GAArC,GAA2C,CAApD;AACA/B,IAAAA,EAAE,CAAC2tD,sBAAH;AACD;;AACDS,EAAAA,gBAAgB,GAAG;AACjB,WAAOxuD,IAAI,CAACk2B,IAAL,CAAU,KAAK45B,WAAL,GAAmBT,qBAAqB,CAAC,KAAKpoD,OAAN,CAAlD,CAAP;AACD;;AACDw0B,EAAAA,kBAAkB,CAAC7kB,KAAD,EAAQ;AACxB,UAAMxW,EAAE,GAAG,IAAX;AACAytD,IAAAA,eAAe,CAAC93C,SAAhB,CAA0B0lB,kBAA1B,CAA6Cp7B,IAA7C,CAAkDD,EAAlD,EAAsDwW,KAAtD;AACAxW,IAAAA,EAAE,CAAC4vD,YAAH,GAAkB5vD,EAAE,CAACiR,SAAH,GAAewP,GAAf,CAAmB,CAACnZ,KAAD,EAAQyB,KAAR,KAAkB;AACrD,YAAMqJ,KAAK,GAAG9a,QAAQ,CAAC0I,EAAE,CAAC6G,OAAH,CAAWyd,WAAX,CAAuBhtB,QAAxB,EAAkC,CAACgQ,KAAD,EAAQyB,KAAR,CAAlC,EAAkD/I,EAAlD,CAAtB;AACA,aAAOoS,KAAK,IAAIA,KAAK,KAAK,CAAnB,GAAuBA,KAAvB,GAA+B,EAAtC;AACD,KAHiB,CAAlB;AAID;;AACDsoB,EAAAA,GAAG,GAAG;AACJ,UAAM16B,EAAE,GAAG,IAAX;AACA,UAAM8H,IAAI,GAAG9H,EAAE,CAAC6G,OAAhB;;AACA,QAAIiB,IAAI,CAACsc,OAAL,IAAgBtc,IAAI,CAACwc,WAAL,CAAiBF,OAArC,EAA8C;AAC5CgrC,MAAAA,kBAAkB,CAACpvD,EAAD,CAAlB;AACD,KAFD,MAEO;AACLA,MAAAA,EAAE,CAACixD,cAAH,CAAkB,CAAlB,EAAqB,CAArB,EAAwB,CAAxB,EAA2B,CAA3B;AACD;AACF;;AACDlB,EAAAA,cAAc,CAACmB,qBAAD,EAAwB7B,cAAxB,EAAwCC,cAAxC,EAAwD;AACpE,UAAMtvD,EAAE,GAAG,IAAX;AACA,QAAImxD,mBAAmB,GAAG9B,cAAc,CAACh8D,CAAf,GAAmBuM,IAAI,CAACyd,GAAL,CAASiyC,cAAc,CAACj8D,CAAxB,CAA7C;AACA,QAAI+9D,oBAAoB,GAAGxxD,IAAI,CAACmC,GAAL,CAASstD,cAAc,CAACl9D,CAAf,GAAmB6N,EAAE,CAACia,KAA/B,EAAsC,CAAtC,IAA2Cra,IAAI,CAACyd,GAAL,CAASiyC,cAAc,CAACn9D,CAAxB,CAAtE;AACA,QAAIk/D,kBAAkB,GAAG,CAAChC,cAAc,CAACl7D,CAAhB,GAAoByL,IAAI,CAACud,GAAL,CAASmyC,cAAc,CAACn7D,CAAxB,CAA7C;AACA,QAAIm9D,qBAAqB,GAAG,CAAC1xD,IAAI,CAACmC,GAAL,CAASstD,cAAc,CAACt8D,CAAf,IAAoBiN,EAAE,CAACga,MAAH,GAAYha,EAAE,CAAC+3B,UAAnC,CAAT,EAAyD,CAAzD,CAAD,GAA+Dn4B,IAAI,CAACud,GAAL,CAASmyC,cAAc,CAACv8D,CAAxB,CAA3F;AACAo+D,IAAAA,mBAAmB,GAAGN,YAAY,CAACM,mBAAD,CAAlC;AACAC,IAAAA,oBAAoB,GAAGP,YAAY,CAACO,oBAAD,CAAnC;AACAC,IAAAA,kBAAkB,GAAGR,YAAY,CAACQ,kBAAD,CAAjC;AACAC,IAAAA,qBAAqB,GAAGT,YAAY,CAACS,qBAAD,CAApC;AACAtxD,IAAAA,EAAE,CAAC0vD,WAAH,GAAiB9vD,IAAI,CAACmC,GAAL,CAASmvD,qBAAqB,GAAG,CAAjC,EAAoCtxD,IAAI,CAACC,GAAL,CACnDD,IAAI,CAACgE,KAAL,CAAWstD,qBAAqB,GAAG,CAACC,mBAAmB,GAAGC,oBAAvB,IAA+C,CAAlF,CADmD,EAEnDxxD,IAAI,CAACgE,KAAL,CAAWstD,qBAAqB,GAAG,CAACG,kBAAkB,GAAGC,qBAAtB,IAA+C,CAAlF,CAFmD,CAApC,CAAjB;AAGAtxD,IAAAA,EAAE,CAACixD,cAAH,CAAkBE,mBAAlB,EAAuCC,oBAAvC,EAA6DC,kBAA7D,EAAiFC,qBAAjF;AACD;;AACDL,EAAAA,cAAc,CAACM,YAAD,EAAeC,aAAf,EAA8BC,WAA9B,EAA2CC,cAA3C,EAA2D;AACvE,UAAM1xD,EAAE,GAAG,IAAX;AACA,UAAM2xD,QAAQ,GAAG3xD,EAAE,CAACia,KAAH,GAAWu3C,aAAX,GAA2BxxD,EAAE,CAAC0vD,WAA/C;AACA,UAAMkC,OAAO,GAAGL,YAAY,GAAGvxD,EAAE,CAAC0vD,WAAlC;AACA,UAAMmC,MAAM,GAAGJ,WAAW,GAAGzxD,EAAE,CAAC0vD,WAAhC;AACA,UAAMoC,SAAS,GAAI9xD,EAAE,CAACga,MAAH,GAAYha,EAAE,CAAC+3B,UAAhB,GAA8B25B,cAA9B,GAA+C1xD,EAAE,CAAC0vD,WAApE;AACA1vD,IAAAA,EAAE,CAAC2jB,OAAH,GAAa/jB,IAAI,CAACgE,KAAL,CAAY,CAACguD,OAAO,GAAGD,QAAX,IAAuB,CAAxB,GAA6B3xD,EAAE,CAACuI,IAA3C,CAAb;AACAvI,IAAAA,EAAE,CAAC4jB,OAAH,GAAahkB,IAAI,CAACgE,KAAL,CAAY,CAACiuD,MAAM,GAAGC,SAAV,IAAuB,CAAxB,GAA6B9xD,EAAE,CAACoI,GAAhC,GAAsCpI,EAAE,CAAC+3B,UAApD,CAAb;AACD;;AACDjU,EAAAA,aAAa,CAAC/a,KAAD,EAAQ;AACnB,UAAMgpD,eAAe,GAAGr9D,GAAG,GAAG,KAAKuc,SAAL,GAAiBxQ,MAA/C;AACA,UAAMuc,UAAU,GAAG,KAAKnW,OAAL,CAAamW,UAAb,IAA2B,CAA9C;AACA,WAAOtgB,eAAe,CAACqM,KAAK,GAAGgpD,eAAR,GAA0B39D,SAAS,CAAC4oB,UAAD,CAApC,CAAtB;AACD;;AACDkH,EAAAA,6BAA6B,CAAC5c,KAAD,EAAQ;AACnC,UAAMtH,EAAE,GAAG,IAAX;;AACA,QAAIhM,aAAa,CAACsT,KAAD,CAAjB,EAA0B;AACxB,aAAOoK,GAAP;AACD;;AACD,UAAMsgD,aAAa,GAAGhyD,EAAE,CAAC0vD,WAAH,IAAkB1vD,EAAE,CAAC+B,GAAH,GAAS/B,EAAE,CAACH,GAA9B,CAAtB;;AACA,QAAIG,EAAE,CAAC6G,OAAH,CAAWkB,OAAf,EAAwB;AACtB,aAAO,CAAC/H,EAAE,CAAC+B,GAAH,GAASuF,KAAV,IAAmB0qD,aAA1B;AACD;;AACD,WAAO,CAAC1qD,KAAK,GAAGtH,EAAE,CAACH,GAAZ,IAAmBmyD,aAA1B;AACD;;AACDC,EAAAA,6BAA6B,CAACjqC,QAAD,EAAW;AACtC,QAAIh0B,aAAa,CAACg0B,QAAD,CAAjB,EAA6B;AAC3B,aAAOtW,GAAP;AACD;;AACD,UAAM1R,EAAE,GAAG,IAAX;AACA,UAAMkyD,cAAc,GAAGlqC,QAAQ,IAAIhoB,EAAE,CAAC0vD,WAAH,IAAkB1vD,EAAE,CAAC+B,GAAH,GAAS/B,EAAE,CAACH,GAA9B,CAAJ,CAA/B;AACA,WAAOG,EAAE,CAAC6G,OAAH,CAAWkB,OAAX,GAAqB/H,EAAE,CAAC+B,GAAH,GAASmwD,cAA9B,GAA+ClyD,EAAE,CAACH,GAAH,GAASqyD,cAA/D;AACD;;AACD1C,EAAAA,oBAAoB,CAACzmD,KAAD,EAAQ;AAC1B,UAAM/I,EAAE,GAAG,IAAX;AACA,UAAMskB,WAAW,GAAGtkB,EAAE,CAAC4vD,YAAH,IAAmB,EAAvC;;AACA,QAAI7mD,KAAK,IAAI,CAAT,IAAcA,KAAK,GAAGub,WAAW,CAAC7jB,MAAtC,EAA8C;AAC5C,YAAM0xD,UAAU,GAAG7tC,WAAW,CAACvb,KAAD,CAA9B;AACA,aAAOgoD,uBAAuB,CAAC/wD,EAAE,CAACqQ,UAAH,EAAD,EAAkBtH,KAAlB,EAAyBopD,UAAzB,CAA9B;AACD;AACF;;AACD1C,EAAAA,gBAAgB,CAAC1mD,KAAD,EAAQqpD,kBAAR,EAA4B;AAC1C,UAAMpyD,EAAE,GAAG,IAAX;AACA,UAAMyd,KAAK,GAAGzd,EAAE,CAAC8jB,aAAH,CAAiB/a,KAAjB,IAA0B/T,OAAxC;AACA,WAAO;AACLS,MAAAA,CAAC,EAAEmK,IAAI,CAACud,GAAL,CAASM,KAAT,IAAkB20C,kBAAlB,GAAuCpyD,EAAE,CAAC2jB,OADxC;AAELhuB,MAAAA,CAAC,EAAEiK,IAAI,CAACyd,GAAL,CAASI,KAAT,IAAkB20C,kBAAlB,GAAuCpyD,EAAE,CAAC4jB,OAFxC;AAGLnG,MAAAA;AAHK,KAAP;AAKD;;AACDkH,EAAAA,wBAAwB,CAAC5b,KAAD,EAAQzB,KAAR,EAAe;AACrC,WAAO,KAAKmoD,gBAAL,CAAsB1mD,KAAtB,EAA6B,KAAKmb,6BAAL,CAAmC5c,KAAnC,CAA7B,CAAP;AACD;;AACD+qD,EAAAA,eAAe,CAACtpD,KAAD,EAAQ;AACrB,WAAO,KAAK4b,wBAAL,CAA8B5b,KAAK,IAAI,CAAvC,EAA0C,KAAKg1B,YAAL,EAA1C,CAAP;AACD;;AACDu0B,EAAAA,qBAAqB,CAACvpD,KAAD,EAAQ;AAC3B,UAAM;AAACR,MAAAA,IAAD;AAAOH,MAAAA,GAAP;AAAYC,MAAAA,KAAZ;AAAmBC,MAAAA;AAAnB,QAA6B,KAAK0nD,gBAAL,CAAsBjnD,KAAtB,CAAnC;AACA,WAAO;AACLR,MAAAA,IADK;AAELH,MAAAA,GAFK;AAGLC,MAAAA,KAHK;AAILC,MAAAA;AAJK,KAAP;AAMD;;AACDm4B,EAAAA,cAAc,GAAG;AACf,UAAMzgC,EAAE,GAAG,IAAX;AACA,UAAM;AAAC6gB,MAAAA,eAAD;AAAkBnF,MAAAA,IAAI,EAAE;AAAC2I,QAAAA;AAAD;AAAxB,QAAsCrkB,EAAE,CAAC6G,OAA/C;;AACA,QAAIga,eAAJ,EAAqB;AACnB,YAAM5T,GAAG,GAAGjN,EAAE,CAACiN,GAAf;AACAA,MAAAA,GAAG,CAACyzB,IAAJ;AACAzzB,MAAAA,GAAG,CAACm0B,SAAJ;AACAsvB,MAAAA,cAAc,CAAC1wD,EAAD,EAAKA,EAAE,CAACkkB,6BAAH,CAAiClkB,EAAE,CAAC0tD,SAApC,CAAL,EAAqDrpC,QAArD,EAA+DrkB,EAAE,CAACiR,SAAH,GAAexQ,MAA9E,CAAd;AACAwM,MAAAA,GAAG,CAACojC,SAAJ;AACApjC,MAAAA,GAAG,CAAC2T,SAAJ,GAAgBC,eAAhB;AACA5T,MAAAA,GAAG,CAAC2X,IAAJ;AACA3X,MAAAA,GAAG,CAAC2zB,OAAJ;AACD;AACF;;AACDE,EAAAA,QAAQ,GAAG;AACT,UAAM9gC,EAAE,GAAG,IAAX;AACA,UAAMiN,GAAG,GAAGjN,EAAE,CAACiN,GAAf;AACA,UAAMnF,IAAI,GAAG9H,EAAE,CAAC6G,OAAhB;AACA,UAAM;AAACsd,MAAAA,UAAD;AAAazI,MAAAA;AAAb,QAAqB5T,IAA3B;AACA,UAAM6jD,UAAU,GAAG3rD,EAAE,CAACiR,SAAH,GAAexQ,MAAlC;AACA,QAAI5N,CAAJ,EAAO4oB,MAAP,EAAeoL,QAAf;;AACA,QAAI/e,IAAI,CAACwc,WAAL,CAAiBF,OAArB,EAA8B;AAC5BqsC,MAAAA,eAAe,CAACzwD,EAAD,EAAK2rD,UAAL,CAAf;AACD;;AACD,QAAIjwC,IAAI,CAAC0I,OAAT,EAAkB;AAChBpkB,MAAAA,EAAE,CAACwW,KAAH,CAAShX,OAAT,CAAiB,CAACsB,IAAD,EAAOiI,KAAP,KAAiB;AAChC,YAAIA,KAAK,KAAK,CAAd,EAAiB;AACf0S,UAAAA,MAAM,GAAGzb,EAAE,CAACkkB,6BAAH,CAAiCpjB,IAAI,CAACwG,KAAtC,CAAT;AACA,gBAAM+3B,WAAW,GAAG3jB,IAAI,CAACud,UAAL,CAAgBj5B,EAAE,CAACqQ,UAAH,CAActH,KAAK,GAAG,CAAtB,CAAhB,CAApB;AACA4nD,UAAAA,cAAc,CAAC3wD,EAAD,EAAKq/B,WAAL,EAAkB5jB,MAAlB,EAA0BkwC,UAA1B,CAAd;AACD;AACF,OAND;AAOD;;AACD,QAAIxnC,UAAU,CAACC,OAAf,EAAwB;AACtBnX,MAAAA,GAAG,CAACyzB,IAAJ;;AACA,WAAK7tC,CAAC,GAAGmN,EAAE,CAACiR,SAAH,GAAexQ,MAAf,GAAwB,CAAjC,EAAoC5N,CAAC,IAAI,CAAzC,EAA4CA,CAAC,EAA7C,EAAiD;AAC/C,cAAMwsC,WAAW,GAAGlb,UAAU,CAAC8U,UAAX,CAAsBj5B,EAAE,CAACwvD,oBAAH,CAAwB38D,CAAxB,CAAtB,CAApB;AACA,cAAM;AAACH,UAAAA,KAAD;AAAQsuB,UAAAA;AAAR,YAAqBqe,WAA3B;;AACA,YAAI,CAACre,SAAD,IAAc,CAACtuB,KAAnB,EAA0B;AACxB;AACD;;AACDua,QAAAA,GAAG,CAAC+T,SAAJ,GAAgBA,SAAhB;AACA/T,QAAAA,GAAG,CAAC6T,WAAJ,GAAkBpuB,KAAlB;AACAua,QAAAA,GAAG,CAACi0B,WAAJ,CAAgB7B,WAAW,CAAChM,UAA5B;AACApmB,QAAAA,GAAG,CAACk0B,cAAJ,GAAqB9B,WAAW,CAAC/L,gBAAjC;AACA7X,QAAAA,MAAM,GAAGzb,EAAE,CAACkkB,6BAAH,CAAiCpc,IAAI,CAAC0O,KAAL,CAAWzO,OAAX,GAAqB/H,EAAE,CAACH,GAAxB,GAA8BG,EAAE,CAAC+B,GAAlE,CAAT;AACA8kB,QAAAA,QAAQ,GAAG7mB,EAAE,CAACyvD,gBAAH,CAAoB58D,CAApB,EAAuB4oB,MAAvB,CAAX;AACAxO,QAAAA,GAAG,CAACm0B,SAAJ;AACAn0B,QAAAA,GAAG,CAACo0B,MAAJ,CAAWrhC,EAAE,CAAC2jB,OAAd,EAAuB3jB,EAAE,CAAC4jB,OAA1B;AACA3W,QAAAA,GAAG,CAACq0B,MAAJ,CAAWza,QAAQ,CAACpxB,CAApB,EAAuBoxB,QAAQ,CAAClxB,CAAhC;AACAsX,QAAAA,GAAG,CAACs0B,MAAJ;AACD;;AACDt0B,MAAAA,GAAG,CAAC2zB,OAAJ;AACD;AACF;;AACD7N,EAAAA,UAAU,GAAG,CAAE;;AACf0O,EAAAA,UAAU,GAAG;AACX,UAAMzhC,EAAE,GAAG,IAAX;AACA,UAAMiN,GAAG,GAAGjN,EAAE,CAACiN,GAAf;AACA,UAAMnF,IAAI,GAAG9H,EAAE,CAAC6G,OAAhB;AACA,UAAM2tB,QAAQ,GAAG1sB,IAAI,CAAC0O,KAAtB;;AACA,QAAI,CAACge,QAAQ,CAACpQ,OAAd,EAAuB;AACrB;AACD;;AACD,UAAMpH,UAAU,GAAGhd,EAAE,CAAC8jB,aAAH,CAAiB,CAAjB,CAAnB;AACA,QAAIrI,MAAJ,EAAYxB,KAAZ;AACAhN,IAAAA,GAAG,CAACyzB,IAAJ;AACAzzB,IAAAA,GAAG,CAACsmC,SAAJ,CAAcvzC,EAAE,CAAC2jB,OAAjB,EAA0B3jB,EAAE,CAAC4jB,OAA7B;AACA3W,IAAAA,GAAG,CAACslD,MAAJ,CAAWv1C,UAAX;AACA/P,IAAAA,GAAG,CAAC2yB,SAAJ,GAAgB,QAAhB;AACA3yB,IAAAA,GAAG,CAAC8yB,YAAJ,GAAmB,QAAnB;AACA//B,IAAAA,EAAE,CAACwW,KAAH,CAAShX,OAAT,CAAiB,CAACsB,IAAD,EAAOiI,KAAP,KAAiB;AAChC,UAAIA,KAAK,KAAK,CAAV,IAAe,CAACjB,IAAI,CAACC,OAAzB,EAAkC;AAChC;AACD;;AACD,YAAMs3B,WAAW,GAAG7K,QAAQ,CAACyE,UAAT,CAAoBj5B,EAAE,CAACqQ,UAAH,CAActH,KAAd,CAApB,CAApB;AACA,YAAMq0B,QAAQ,GAAG5kC,MAAM,CAAC6mC,WAAW,CAAClI,IAAb,CAAvB;AACA1b,MAAAA,MAAM,GAAGzb,EAAE,CAACkkB,6BAAH,CAAiClkB,EAAE,CAACwW,KAAH,CAASzN,KAAT,EAAgBzB,KAAjD,CAAT;;AACA,UAAI+3B,WAAW,CAAClL,iBAAhB,EAAmC;AACjClnB,QAAAA,GAAG,CAACkqB,IAAJ,GAAWiG,QAAQ,CAACI,MAApB;AACAvjB,QAAAA,KAAK,GAAGhN,GAAG,CAACizC,WAAJ,CAAgBp/C,IAAI,CAACsR,KAArB,EAA4B6H,KAApC;AACAhN,QAAAA,GAAG,CAAC2T,SAAJ,GAAgBye,WAAW,CAACjL,aAA5B;AACA,cAAMlI,OAAO,GAAGl2B,SAAS,CAACqpC,WAAW,CAAChL,eAAb,CAAzB;AACApnB,QAAAA,GAAG,CAAC0zB,QAAJ,CACE,CAAC1mB,KAAD,GAAS,CAAT,GAAaiS,OAAO,CAAC3jB,IADvB,EAEE,CAACkT,MAAD,GAAU2hB,QAAQ,CAAC71B,IAAT,GAAgB,CAA1B,GAA8B2kB,OAAO,CAAC9jB,GAFxC,EAGE6R,KAAK,GAAGiS,OAAO,CAACjS,KAHlB,EAIEmjB,QAAQ,CAAC71B,IAAT,GAAgB2kB,OAAO,CAAClS,MAJ1B;AAMD;;AACD5hB,MAAAA,UAAU,CAAC6U,GAAD,EAAMnM,IAAI,CAACsR,KAAX,EAAkB,CAAlB,EAAqB,CAACqJ,MAAtB,EAA8B2hB,QAA9B,EAAwC;AAChD1qC,QAAAA,KAAK,EAAE2sC,WAAW,CAAC3sC;AAD6B,OAAxC,CAAV;AAGD,KAtBD;AAuBAua,IAAAA,GAAG,CAAC2zB,OAAJ;AACD;;AACDc,EAAAA,SAAS,GAAG,CAAE;;AA7NgC;;AA+NhDsvB,iBAAiB,CAAC/mD,EAAlB,GAAuB,cAAvB;AACA+mD,iBAAiB,CAACp+D,QAAlB,GAA6B;AAC3BwxB,EAAAA,OAAO,EAAE,IADkB;AAE3BouC,EAAAA,OAAO,EAAE,IAFkB;AAG3B3rC,EAAAA,QAAQ,EAAE,WAHiB;AAI3B1C,EAAAA,UAAU,EAAE;AACVC,IAAAA,OAAO,EAAE,IADC;AAEVpD,IAAAA,SAAS,EAAE,CAFD;AAGVqS,IAAAA,UAAU,EAAE,EAHF;AAIVC,IAAAA,gBAAgB,EAAE;AAJR,GAJe;AAU3B5X,EAAAA,IAAI,EAAE;AACJ2I,IAAAA,QAAQ,EAAE;AADN,GAVqB;AAa3BrH,EAAAA,UAAU,EAAE,CAbe;AAc3BxG,EAAAA,KAAK,EAAE;AACL2d,IAAAA,iBAAiB,EAAE,IADd;AAEL78B,IAAAA,QAAQ,EAAEs7B,KAAK,CAACZ,UAAN,CAAiBC;AAFtB,GAdoB;AAkB3B3N,EAAAA,WAAW,EAAE;AACX8P,IAAAA,aAAa,EAAEt1B,SADJ;AAEXu1B,IAAAA,eAAe,EAAE,CAFN;AAGXjQ,IAAAA,OAAO,EAAE,IAHE;AAIX+S,IAAAA,IAAI,EAAE;AACJ5vB,MAAAA,IAAI,EAAE;AADF,KAJK;;AAOXjQ,IAAAA,QAAQ,CAAC8a,KAAD,EAAQ;AACd,aAAOA,KAAP;AACD,KATU;;AAUX8Z,IAAAA,OAAO,EAAE;AAVE;AAlBc,CAA7B;AA+BA8kC,iBAAiB,CAACj/B,aAAlB,GAAkC;AAChC,sBAAoB,aADY;AAEhC,uBAAqB,OAFW;AAGhC,iBAAe;AAHiB,CAAlC;AAKAi/B,iBAAiB,CAAC53D,WAAlB,GAAgC;AAC9B+qB,EAAAA,UAAU,EAAE;AACV5e,IAAAA,SAAS,EAAE;AADD;AADkB,CAAhC;AAMA,MAAMktD,SAAS,GAAG;AAChBC,EAAAA,WAAW,EAAE;AAACC,IAAAA,MAAM,EAAE,IAAT;AAAeprD,IAAAA,IAAI,EAAE,CAArB;AAAwBqrD,IAAAA,KAAK,EAAE;AAA/B,GADG;AAEhBC,EAAAA,MAAM,EAAE;AAACF,IAAAA,MAAM,EAAE,IAAT;AAAeprD,IAAAA,IAAI,EAAE,IAArB;AAA2BqrD,IAAAA,KAAK,EAAE;AAAlC,GAFQ;AAGhBE,EAAAA,MAAM,EAAE;AAACH,IAAAA,MAAM,EAAE,IAAT;AAAeprD,IAAAA,IAAI,EAAE,KAArB;AAA4BqrD,IAAAA,KAAK,EAAE;AAAnC,GAHQ;AAIhBG,EAAAA,IAAI,EAAE;AAACJ,IAAAA,MAAM,EAAE,IAAT;AAAeprD,IAAAA,IAAI,EAAE,OAArB;AAA8BqrD,IAAAA,KAAK,EAAE;AAArC,GAJU;AAKhBI,EAAAA,GAAG,EAAE;AAACL,IAAAA,MAAM,EAAE,IAAT;AAAeprD,IAAAA,IAAI,EAAE,QAArB;AAA+BqrD,IAAAA,KAAK,EAAE;AAAtC,GALW;AAMhBK,EAAAA,IAAI,EAAE;AAACN,IAAAA,MAAM,EAAE,KAAT;AAAgBprD,IAAAA,IAAI,EAAE,SAAtB;AAAiCqrD,IAAAA,KAAK,EAAE;AAAxC,GANU;AAOhBM,EAAAA,KAAK,EAAE;AAACP,IAAAA,MAAM,EAAE,IAAT;AAAeprD,IAAAA,IAAI,EAAE,OAArB;AAA8BqrD,IAAAA,KAAK,EAAE;AAArC,GAPS;AAQhBO,EAAAA,OAAO,EAAE;AAACR,IAAAA,MAAM,EAAE,KAAT;AAAgBprD,IAAAA,IAAI,EAAE,OAAtB;AAA+BqrD,IAAAA,KAAK,EAAE;AAAtC,GARO;AAShBQ,EAAAA,IAAI,EAAE;AAACT,IAAAA,MAAM,EAAE,IAAT;AAAeprD,IAAAA,IAAI,EAAE;AAArB;AATU,CAAlB;AAWA,MAAM8rD,KAAK,GAAIluD,MAAM,CAACC,IAAP,CAAYqtD,SAAZ,CAAf;;AACA,SAASa,MAAT,CAAgBjhE,CAAhB,EAAmBU,CAAnB,EAAsB;AACpB,SAAOV,CAAC,GAAGU,CAAX;AACD;;AACD,SAASwd,KAAT,CAAe3I,KAAf,EAAsB2rD,KAAtB,EAA6B;AAC3B,MAAIv/D,aAAa,CAACu/D,KAAD,CAAjB,EAA0B;AACxB,WAAO,IAAP;AACD;;AACD,QAAMC,OAAO,GAAG5rD,KAAK,CAAC6rD,QAAtB;AACA,QAAM;AAACC,IAAAA,MAAD;AAASr+B,IAAAA,KAAT;AAAgBs+B,IAAAA;AAAhB,MAA8B/rD,KAAK,CAACgsD,UAA1C;AACA,MAAItsD,KAAK,GAAGisD,KAAZ;;AACA,MAAI,OAAOG,MAAP,KAAkB,UAAtB,EAAkC;AAChCpsD,IAAAA,KAAK,GAAGosD,MAAM,CAACpsD,KAAD,CAAd;AACD;;AACD,MAAI,CAAC5T,cAAc,CAAC4T,KAAD,CAAnB,EAA4B;AAC1BA,IAAAA,KAAK,GAAG,OAAOosD,MAAP,KAAkB,QAAlB,GACJF,OAAO,CAACjjD,KAAR,CAAcjJ,KAAd,EAAqBosD,MAArB,CADI,GAEJF,OAAO,CAACjjD,KAAR,CAAcjJ,KAAd,CAFJ;AAGD;;AACD,MAAIA,KAAK,KAAK,IAAd,EAAoB;AAClB,WAAO,IAAP;AACD;;AACD,MAAI+tB,KAAJ,EAAW;AACT/tB,IAAAA,KAAK,GAAG+tB,KAAK,KAAK,MAAV,KAAqBjgC,QAAQ,CAACu+D,UAAD,CAAR,IAAwBA,UAAU,KAAK,IAA5D,IACJH,OAAO,CAAC/tC,OAAR,CAAgBne,KAAhB,EAAuB,SAAvB,EAAkCqsD,UAAlC,CADI,GAEJH,OAAO,CAAC/tC,OAAR,CAAgBne,KAAhB,EAAuB+tB,KAAvB,CAFJ;AAGD;;AACD,SAAO,CAAC/tB,KAAR;AACD;;AACD,SAASusD,yBAAT,CAAmCC,OAAnC,EAA4Cj0D,GAA5C,EAAiDkC,GAAjD,EAAsDgyD,QAAtD,EAAgE;AAC9D,QAAMjrD,IAAI,GAAGuqD,KAAK,CAAC5yD,MAAnB;;AACA,OAAK,IAAI5N,CAAC,GAAGwgE,KAAK,CAAC94C,OAAN,CAAcu5C,OAAd,CAAb,EAAqCjhE,CAAC,GAAGiW,IAAI,GAAG,CAAhD,EAAmD,EAAEjW,CAArD,EAAwD;AACtD,UAAMmhE,QAAQ,GAAGvB,SAAS,CAACY,KAAK,CAACxgE,CAAD,CAAN,CAA1B;AACA,UAAM8P,MAAM,GAAGqxD,QAAQ,CAACpB,KAAT,GAAiBoB,QAAQ,CAACpB,KAA1B,GAAkCvoD,MAAM,CAAC2jD,gBAAxD;;AACA,QAAIgG,QAAQ,CAACrB,MAAT,IAAmB/yD,IAAI,CAACk2B,IAAL,CAAU,CAAC/zB,GAAG,GAAGlC,GAAP,KAAe8C,MAAM,GAAGqxD,QAAQ,CAACzsD,IAAjC,CAAV,KAAqDwsD,QAA5E,EAAsF;AACpF,aAAOV,KAAK,CAACxgE,CAAD,CAAZ;AACD;AACF;;AACD,SAAOwgE,KAAK,CAACvqD,IAAI,GAAG,CAAR,CAAZ;AACD;;AACD,SAASmrD,0BAAT,CAAoCrsD,KAApC,EAA2C2zB,QAA3C,EAAqDu4B,OAArD,EAA8Dj0D,GAA9D,EAAmEkC,GAAnE,EAAwE;AACtE,OAAK,IAAIlP,CAAC,GAAGwgE,KAAK,CAAC5yD,MAAN,GAAe,CAA5B,EAA+B5N,CAAC,IAAIwgE,KAAK,CAAC94C,OAAN,CAAcu5C,OAAd,CAApC,EAA4DjhE,CAAC,EAA7D,EAAiE;AAC/D,UAAM0yB,IAAI,GAAG8tC,KAAK,CAACxgE,CAAD,CAAlB;;AACA,QAAI4/D,SAAS,CAACltC,IAAD,CAAT,CAAgBotC,MAAhB,IAA0B/qD,KAAK,CAAC6rD,QAAN,CAAejuC,IAAf,CAAoBzjB,GAApB,EAAyBlC,GAAzB,EAA8B0lB,IAA9B,KAAuCgW,QAAQ,GAAG,CAAhF,EAAmF;AACjF,aAAOhW,IAAP;AACD;AACF;;AACD,SAAO8tC,KAAK,CAACS,OAAO,GAAGT,KAAK,CAAC94C,OAAN,CAAcu5C,OAAd,CAAH,GAA4B,CAApC,CAAZ;AACD;;AACD,SAASI,kBAAT,CAA4B3uC,IAA5B,EAAkC;AAChC,OAAK,IAAI1yB,CAAC,GAAGwgE,KAAK,CAAC94C,OAAN,CAAcgL,IAAd,IAAsB,CAA9B,EAAiCzc,IAAI,GAAGuqD,KAAK,CAAC5yD,MAAnD,EAA2D5N,CAAC,GAAGiW,IAA/D,EAAqE,EAAEjW,CAAvE,EAA0E;AACxE,QAAI4/D,SAAS,CAACY,KAAK,CAACxgE,CAAD,CAAN,CAAT,CAAoB8/D,MAAxB,EAAgC;AAC9B,aAAOU,KAAK,CAACxgE,CAAD,CAAZ;AACD;AACF;AACF;;AACD,SAASshE,OAAT,CAAiB39C,KAAjB,EAAwB49C,IAAxB,EAA8BC,UAA9B,EAA0C;AACxC,MAAI,CAACA,UAAL,EAAiB;AACf79C,IAAAA,KAAK,CAAC49C,IAAD,CAAL,GAAc,IAAd;AACD,GAFD,MAEO,IAAIC,UAAU,CAAC5zD,MAAf,EAAuB;AAC5B,UAAM;AAACoiB,MAAAA,EAAD;AAAKC,MAAAA;AAAL,QAAWxkB,OAAO,CAAC+1D,UAAD,EAAaD,IAAb,CAAxB;;AACA,UAAM/uC,SAAS,GAAGgvC,UAAU,CAACxxC,EAAD,CAAV,IAAkBuxC,IAAlB,GAAyBC,UAAU,CAACxxC,EAAD,CAAnC,GAA0CwxC,UAAU,CAACvxC,EAAD,CAAtE;AACAtM,IAAAA,KAAK,CAAC6O,SAAD,CAAL,GAAmB,IAAnB;AACD;AACF;;AACD,SAASivC,aAAT,CAAuB1sD,KAAvB,EAA8B4O,KAA9B,EAAqCiK,GAArC,EAA0C8zC,SAA1C,EAAqD;AACnD,QAAMf,OAAO,GAAG5rD,KAAK,CAAC6rD,QAAtB;AACA,QAAMz+B,KAAK,GAAG,CAACw+B,OAAO,CAAC/tC,OAAR,CAAgBjP,KAAK,CAAC,CAAD,CAAL,CAASlP,KAAzB,EAAgCitD,SAAhC,CAAf;AACA,QAAMp6C,IAAI,GAAG3D,KAAK,CAACA,KAAK,CAAC/V,MAAN,GAAe,CAAhB,CAAL,CAAwB6G,KAArC;AACA,MAAI0sB,KAAJ,EAAWjrB,KAAX;;AACA,OAAKirB,KAAK,GAAGgB,KAAb,EAAoBhB,KAAK,IAAI7Z,IAA7B,EAAmC6Z,KAAK,GAAG,CAACw/B,OAAO,CAAC9xD,GAAR,CAAYsyB,KAAZ,EAAmB,CAAnB,EAAsBugC,SAAtB,CAA5C,EAA8E;AAC5ExrD,IAAAA,KAAK,GAAG0X,GAAG,CAACuT,KAAD,CAAX;;AACA,QAAIjrB,KAAK,IAAI,CAAb,EAAgB;AACdyN,MAAAA,KAAK,CAACzN,KAAD,CAAL,CAAairB,KAAb,GAAqB,IAArB;AACD;AACF;;AACD,SAAOxd,KAAP;AACD;;AACD,SAASg+C,mBAAT,CAA6B5sD,KAA7B,EAAoCjB,MAApC,EAA4C4tD,SAA5C,EAAuD;AACrD,QAAM/9C,KAAK,GAAG,EAAd;AACA,QAAMiK,GAAG,GAAG,EAAZ;AACA,QAAM3X,IAAI,GAAGnC,MAAM,CAAClG,MAApB;AACA,MAAI5N,CAAJ,EAAOyU,KAAP;;AACA,OAAKzU,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGiW,IAAhB,EAAsB,EAAEjW,CAAxB,EAA2B;AACzByU,IAAAA,KAAK,GAAGX,MAAM,CAAC9T,CAAD,CAAd;AACA4tB,IAAAA,GAAG,CAACnZ,KAAD,CAAH,GAAazU,CAAb;AACA2jB,IAAAA,KAAK,CAAC/U,IAAN,CAAW;AACT6F,MAAAA,KADS;AAET0sB,MAAAA,KAAK,EAAE;AAFE,KAAX;AAID;;AACD,SAAQlrB,IAAI,KAAK,CAAT,IAAc,CAACyrD,SAAhB,GAA6B/9C,KAA7B,GAAqC89C,aAAa,CAAC1sD,KAAD,EAAQ4O,KAAR,EAAeiK,GAAf,EAAoB8zC,SAApB,CAAzD;AACD;;AACD,MAAME,SAAN,SAAwB58B,KAAxB,CAA8B;AAC5Br5B,EAAAA,WAAW,CAAC4I,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKyO,MAAL,GAAc;AACZrM,MAAAA,IAAI,EAAE,EADM;AAEZwH,MAAAA,MAAM,EAAE,EAFI;AAGZtJ,MAAAA,GAAG,EAAE;AAHO,KAAd;AAKA,SAAKgtD,KAAL,GAAa,KAAb;AACA,SAAKC,UAAL,GAAkB71D,SAAlB;AACA,SAAK81D,QAAL,GAAgB,EAAhB;AACA,SAAKC,WAAL,GAAmB,KAAnB;AACA,SAAKjB,UAAL,GAAkB90D,SAAlB;AACD;;AACDk6B,EAAAA,IAAI,CAACqT,SAAD,EAAYvkC,IAAZ,EAAkB;AACpB,UAAMssD,IAAI,GAAG/nB,SAAS,CAAC+nB,IAAV,KAAmB/nB,SAAS,CAAC+nB,IAAV,GAAiB,EAApC,CAAb;AACA,UAAMZ,OAAO,GAAG,KAAKC,QAAL,GAAgB,IAAI3tC,QAAQ,CAACC,KAAb,CAAmBsmB,SAAS,CAACvmB,QAAV,CAAmB5mB,IAAtC,CAAhC;AACApF,IAAAA,OAAO,CAACs6D,IAAI,CAACU,cAAN,EAAsBtB,OAAO,CAACruC,OAAR,EAAtB,CAAP;AACA,SAAKyuC,UAAL,GAAkB;AAChBF,MAAAA,MAAM,EAAEU,IAAI,CAACV,MADG;AAEhBr+B,MAAAA,KAAK,EAAE++B,IAAI,CAAC/+B,KAFI;AAGhBs+B,MAAAA,UAAU,EAAES,IAAI,CAACT;AAHD,KAAlB;AAKA,UAAM36B,IAAN,CAAWqT,SAAX;AACA,SAAKwoB,WAAL,GAAmB/sD,IAAI,CAACitD,UAAxB;AACD;;AACDxkD,EAAAA,KAAK,CAAC/D,GAAD,EAAMzD,KAAN,EAAa;AAChB,QAAIyD,GAAG,KAAK1N,SAAZ,EAAuB;AACrB,aAAO,IAAP;AACD;;AACD,WAAOyR,KAAK,CAAC,IAAD,EAAO/D,GAAP,CAAZ;AACD;;AACDkgB,EAAAA,YAAY,GAAG;AACb,UAAMA,YAAN;AACA,SAAK7W,MAAL,GAAc;AACZrM,MAAAA,IAAI,EAAE,EADM;AAEZwH,MAAAA,MAAM,EAAE,EAFI;AAGZtJ,MAAAA,GAAG,EAAE;AAHO,KAAd;AAKD;;AACDoyB,EAAAA,mBAAmB,GAAG;AACpB,UAAM95B,EAAE,GAAG,IAAX;AACA,UAAM6G,OAAO,GAAG7G,EAAE,CAAC6G,OAAnB;AACA,UAAM2sD,OAAO,GAAGxzD,EAAE,CAACyzD,QAAnB;AACA,UAAMluC,IAAI,GAAG1e,OAAO,CAACutD,IAAR,CAAa7uC,IAAb,IAAqB,KAAlC;AACA,QAAI;AAAC1lB,MAAAA,GAAD;AAAMkC,MAAAA,GAAN;AAAWoI,MAAAA,UAAX;AAAuBC,MAAAA;AAAvB,QAAqCpK,EAAE,CAACkK,aAAH,EAAzC;;AACA,aAAS8qD,YAAT,CAAsBniC,MAAtB,EAA8B;AAC5B,UAAI,CAAC1oB,UAAD,IAAe,CAACmQ,KAAK,CAACuY,MAAM,CAAChzB,GAAR,CAAzB,EAAuC;AACrCA,QAAAA,GAAG,GAAGD,IAAI,CAACC,GAAL,CAASA,GAAT,EAAcgzB,MAAM,CAAChzB,GAArB,CAAN;AACD;;AACD,UAAI,CAACuK,UAAD,IAAe,CAACkQ,KAAK,CAACuY,MAAM,CAAC9wB,GAAR,CAAzB,EAAuC;AACrCA,QAAAA,GAAG,GAAGnC,IAAI,CAACmC,GAAL,CAASA,GAAT,EAAc8wB,MAAM,CAAC9wB,GAArB,CAAN;AACD;AACF;;AACD,QAAI,CAACoI,UAAD,IAAe,CAACC,UAApB,EAAgC;AAC9B4qD,MAAAA,YAAY,CAACh1D,EAAE,CAACi1D,eAAH,EAAD,CAAZ;;AACA,UAAIpuD,OAAO,CAACgsB,MAAR,KAAmB,OAAnB,IAA8BhsB,OAAO,CAAC2P,KAAR,CAAcgkB,MAAd,KAAyB,QAA3D,EAAqE;AACnEw6B,QAAAA,YAAY,CAACh1D,EAAE,CAAC2R,SAAH,CAAa,KAAb,CAAD,CAAZ;AACD;AACF;;AACD9R,IAAAA,GAAG,GAAGnM,cAAc,CAACmM,GAAD,CAAd,IAAuB,CAACya,KAAK,CAACza,GAAD,CAA7B,GAAqCA,GAArC,GAA2C,CAAC2zD,OAAO,CAAC/tC,OAAR,CAAgBrlB,IAAI,CAACC,GAAL,EAAhB,EAA4BklB,IAA5B,CAAlD;AACAxjB,IAAAA,GAAG,GAAGrO,cAAc,CAACqO,GAAD,CAAd,IAAuB,CAACuY,KAAK,CAACvY,GAAD,CAA7B,GAAqCA,GAArC,GAA2C,CAACyxD,OAAO,CAAC7tC,KAAR,CAAcvlB,IAAI,CAACC,GAAL,EAAd,EAA0BklB,IAA1B,CAAD,GAAmC,CAApF;AACAvlB,IAAAA,EAAE,CAACH,GAAH,GAASD,IAAI,CAACC,GAAL,CAASA,GAAT,EAAckC,GAAG,GAAG,CAApB,CAAT;AACA/B,IAAAA,EAAE,CAAC+B,GAAH,GAASnC,IAAI,CAACmC,GAAL,CAASlC,GAAG,GAAG,CAAf,EAAkBkC,GAAlB,CAAT;AACD;;AACDkzD,EAAAA,eAAe,GAAG;AAChB,UAAMhgD,GAAG,GAAG,KAAKigD,kBAAL,EAAZ;AACA,QAAIr1D,GAAG,GAAGwK,MAAM,CAACE,iBAAjB;AACA,QAAIxI,GAAG,GAAGsI,MAAM,CAACC,iBAAjB;;AACA,QAAI2K,GAAG,CAACxU,MAAR,EAAgB;AACdZ,MAAAA,GAAG,GAAGoV,GAAG,CAAC,CAAD,CAAT;AACAlT,MAAAA,GAAG,GAAGkT,GAAG,CAACA,GAAG,CAACxU,MAAJ,GAAa,CAAd,CAAT;AACD;;AACD,WAAO;AAACZ,MAAAA,GAAD;AAAMkC,MAAAA;AAAN,KAAP;AACD;;AACDk4B,EAAAA,UAAU,GAAG;AACX,UAAMj6B,EAAE,GAAG,IAAX;AACA,UAAM6G,OAAO,GAAG7G,EAAE,CAAC6G,OAAnB;AACA,UAAMsuD,QAAQ,GAAGtuD,OAAO,CAACutD,IAAzB;AACA,UAAM5/B,QAAQ,GAAG3tB,OAAO,CAAC2P,KAAzB;AACA,UAAM69C,UAAU,GAAG7/B,QAAQ,CAACgG,MAAT,KAAoB,QAApB,GAA+Bx6B,EAAE,CAACk1D,kBAAH,EAA/B,GAAyDl1D,EAAE,CAACo1D,SAAH,EAA5E;;AACA,QAAIvuD,OAAO,CAACgsB,MAAR,KAAmB,OAAnB,IAA8BwhC,UAAU,CAAC5zD,MAA7C,EAAqD;AACnDT,MAAAA,EAAE,CAACH,GAAH,GAASG,EAAE,CAAC04B,QAAH,IAAe27B,UAAU,CAAC,CAAD,CAAlC;AACAr0D,MAAAA,EAAE,CAAC+B,GAAH,GAAS/B,EAAE,CAACy4B,QAAH,IAAe47B,UAAU,CAACA,UAAU,CAAC5zD,MAAX,GAAoB,CAArB,CAAlC;AACD;;AACD,UAAMZ,GAAG,GAAGG,EAAE,CAACH,GAAf;AACA,UAAMkC,GAAG,GAAG/B,EAAE,CAAC+B,GAAf;;AACA,UAAMyU,KAAK,GAAGpY,cAAc,CAACi2D,UAAD,EAAax0D,GAAb,EAAkBkC,GAAlB,CAA5B;;AACA/B,IAAAA,EAAE,CAAC00D,KAAH,GAAWS,QAAQ,CAAC5vC,IAAT,KAAkBiP,QAAQ,CAACZ,QAAT,GACzBigC,yBAAyB,CAACsB,QAAQ,CAACrB,OAAV,EAAmB9zD,EAAE,CAACH,GAAtB,EAA2BG,EAAE,CAAC+B,GAA9B,EAAmC/B,EAAE,CAACq1D,iBAAH,CAAqBx1D,GAArB,CAAnC,CADA,GAEzBo0D,0BAA0B,CAACj0D,EAAD,EAAKwW,KAAK,CAAC/V,MAAX,EAAmB00D,QAAQ,CAACrB,OAA5B,EAAqC9zD,EAAE,CAACH,GAAxC,EAA6CG,EAAE,CAAC+B,GAAhD,CAFnB,CAAX;AAGA/B,IAAAA,EAAE,CAAC20D,UAAH,GAAgB,CAACngC,QAAQ,CAACR,KAAT,CAAea,OAAhB,IAA2B70B,EAAE,CAAC00D,KAAH,KAAa,MAAxC,GAAiD51D,SAAjD,GACZo1D,kBAAkB,CAACl0D,EAAE,CAAC00D,KAAJ,CADtB;AAEA10D,IAAAA,EAAE,CAACs1D,WAAH,CAAejB,UAAf;;AACA,QAAIxtD,OAAO,CAACkB,OAAZ,EAAqB;AACnByO,MAAAA,KAAK,CAACzO,OAAN;AACD;;AACD,WAAOysD,mBAAmB,CAACx0D,EAAD,EAAKwW,KAAL,EAAYxW,EAAE,CAAC20D,UAAf,CAA1B;AACD;;AACDW,EAAAA,WAAW,CAACjB,UAAD,EAAa;AACtB,UAAMr0D,EAAE,GAAG,IAAX;AACA,QAAIF,KAAK,GAAG,CAAZ;AACA,QAAIkI,GAAG,GAAG,CAAV;AACA,QAAIgtB,KAAJ,EAAW7a,IAAX;;AACA,QAAIna,EAAE,CAAC6G,OAAH,CAAW4U,MAAX,IAAqB44C,UAAU,CAAC5zD,MAApC,EAA4C;AAC1Cu0B,MAAAA,KAAK,GAAGh1B,EAAE,CAACu1D,kBAAH,CAAsBlB,UAAU,CAAC,CAAD,CAAhC,CAAR;;AACA,UAAIA,UAAU,CAAC5zD,MAAX,KAAsB,CAA1B,EAA6B;AAC3BX,QAAAA,KAAK,GAAG,IAAIk1B,KAAZ;AACD,OAFD,MAEO;AACLl1B,QAAAA,KAAK,GAAG,CAACE,EAAE,CAACu1D,kBAAH,CAAsBlB,UAAU,CAAC,CAAD,CAAhC,IAAuCr/B,KAAxC,IAAiD,CAAzD;AACD;;AACD7a,MAAAA,IAAI,GAAGna,EAAE,CAACu1D,kBAAH,CAAsBlB,UAAU,CAACA,UAAU,CAAC5zD,MAAX,GAAoB,CAArB,CAAhC,CAAP;;AACA,UAAI4zD,UAAU,CAAC5zD,MAAX,KAAsB,CAA1B,EAA6B;AAC3BuH,QAAAA,GAAG,GAAGmS,IAAN;AACD,OAFD,MAEO;AACLnS,QAAAA,GAAG,GAAG,CAACmS,IAAI,GAAGna,EAAE,CAACu1D,kBAAH,CAAsBlB,UAAU,CAACA,UAAU,CAAC5zD,MAAX,GAAoB,CAArB,CAAhC,CAAR,IAAoE,CAA1E;AACD;AACF;;AACD,UAAM0+B,KAAK,GAAGk1B,UAAU,CAAC5zD,MAAX,GAAoB,CAApB,GAAwB,GAAxB,GAA8B,IAA5C;AACAX,IAAAA,KAAK,GAAGxK,WAAW,CAACwK,KAAD,EAAQ,CAAR,EAAWq/B,KAAX,CAAnB;AACAn3B,IAAAA,GAAG,GAAG1S,WAAW,CAAC0S,GAAD,EAAM,CAAN,EAASm3B,KAAT,CAAjB;AACAn/B,IAAAA,EAAE,CAAC40D,QAAH,GAAc;AAAC90D,MAAAA,KAAD;AAAQkI,MAAAA,GAAR;AAAarF,MAAAA,MAAM,EAAE,KAAK7C,KAAK,GAAG,CAAR,GAAYkI,GAAjB;AAArB,KAAd;AACD;;AACDotD,EAAAA,SAAS,GAAG;AACV,UAAMp1D,EAAE,GAAG,IAAX;AACA,UAAMwzD,OAAO,GAAGxzD,EAAE,CAACyzD,QAAnB;AACA,UAAM5zD,GAAG,GAAGG,EAAE,CAACH,GAAf;AACA,UAAMkC,GAAG,GAAG/B,EAAE,CAAC+B,GAAf;AACA,UAAM8E,OAAO,GAAG7G,EAAE,CAAC6G,OAAnB;AACA,UAAMsuD,QAAQ,GAAGtuD,OAAO,CAACutD,IAAzB;AACA,UAAMrgC,KAAK,GAAGohC,QAAQ,CAAC5vC,IAAT,IAAiBsuC,yBAAyB,CAACsB,QAAQ,CAACrB,OAAV,EAAmBj0D,GAAnB,EAAwBkC,GAAxB,EAA6B/B,EAAE,CAACq1D,iBAAH,CAAqBx1D,GAArB,CAA7B,CAAxD;AACA,UAAMsuD,QAAQ,GAAGj7D,cAAc,CAACiiE,QAAQ,CAAChH,QAAV,EAAoB,CAApB,CAA/B;AACA,UAAMzoC,OAAO,GAAGqO,KAAK,KAAK,MAAV,GAAmBohC,QAAQ,CAACxB,UAA5B,GAAyC,KAAzD;AACA,UAAM6B,UAAU,GAAGpgE,QAAQ,CAACswB,OAAD,CAAR,IAAqBA,OAAO,KAAK,IAApD;AACA,UAAMlP,KAAK,GAAG,EAAd;AACA,QAAIwe,KAAK,GAAGn1B,GAAZ;AACA,QAAIu0D,IAAJ,EAAU5jD,KAAV;;AACA,QAAIglD,UAAJ,EAAgB;AACdxgC,MAAAA,KAAK,GAAG,CAACw+B,OAAO,CAAC/tC,OAAR,CAAgBuP,KAAhB,EAAuB,SAAvB,EAAkCtP,OAAlC,CAAT;AACD;;AACDsP,IAAAA,KAAK,GAAG,CAACw+B,OAAO,CAAC/tC,OAAR,CAAgBuP,KAAhB,EAAuBwgC,UAAU,GAAG,KAAH,GAAWzhC,KAA5C,CAAT;;AACA,QAAIy/B,OAAO,CAAChuC,IAAR,CAAazjB,GAAb,EAAkBlC,GAAlB,EAAuBk0B,KAAvB,IAAgC,SAASo6B,QAA7C,EAAuD;AACrD,YAAM,IAAIlpC,KAAJ,CAAUplB,GAAG,GAAG,OAAN,GAAgBkC,GAAhB,GAAsB,sCAAtB,GAA+DosD,QAA/D,GAA0E,GAA1E,GAAgFp6B,KAA1F,CAAN;AACD;;AACD,UAAMsgC,UAAU,GAAGxtD,OAAO,CAAC2P,KAAR,CAAcgkB,MAAd,KAAyB,MAAzB,IAAmCx6B,EAAE,CAACy1D,iBAAH,EAAtD;;AACA,SAAKrB,IAAI,GAAGp/B,KAAP,EAAcxkB,KAAK,GAAG,CAA3B,EAA8B4jD,IAAI,GAAGryD,GAArC,EAA0CqyD,IAAI,GAAG,CAACZ,OAAO,CAAC9xD,GAAR,CAAY0yD,IAAZ,EAAkBjG,QAAlB,EAA4Bp6B,KAA5B,CAAR,EAA4CvjB,KAAK,EAA3F,EAA+F;AAC7F2jD,MAAAA,OAAO,CAAC39C,KAAD,EAAQ49C,IAAR,EAAcC,UAAd,CAAP;AACD;;AACD,QAAID,IAAI,KAAKryD,GAAT,IAAgB8E,OAAO,CAACgsB,MAAR,KAAmB,OAAnC,IAA8CriB,KAAK,KAAK,CAA5D,EAA+D;AAC7D2jD,MAAAA,OAAO,CAAC39C,KAAD,EAAQ49C,IAAR,EAAcC,UAAd,CAAP;AACD;;AACD,WAAOlvD,MAAM,CAACC,IAAP,CAAYoR,KAAZ,EAAmBP,IAAnB,CAAwB,CAAC5jB,CAAD,EAAIU,CAAJ,KAAUV,CAAC,GAAGU,CAAtC,EAAyC0tB,GAAzC,CAA6ChrB,CAAC,IAAI,CAACA,CAAnD,CAAP;AACD;;AACD4c,EAAAA,gBAAgB,CAAC/K,KAAD,EAAQ;AACtB,UAAMtH,EAAE,GAAG,IAAX;AACA,UAAMwzD,OAAO,GAAGxzD,EAAE,CAACyzD,QAAnB;AACA,UAAM0B,QAAQ,GAAGn1D,EAAE,CAAC6G,OAAH,CAAWutD,IAA5B;;AACA,QAAIe,QAAQ,CAACO,aAAb,EAA4B;AAC1B,aAAOlC,OAAO,CAACpuC,MAAR,CAAe9d,KAAf,EAAsB6tD,QAAQ,CAACO,aAA/B,CAAP;AACD;;AACD,WAAOlC,OAAO,CAACpuC,MAAR,CAAe9d,KAAf,EAAsB6tD,QAAQ,CAACL,cAAT,CAAwBa,QAA9C,CAAP;AACD;;AACDC,EAAAA,mBAAmB,CAACxB,IAAD,EAAOrrD,KAAP,EAAcyN,KAAd,EAAqB4O,MAArB,EAA6B;AAC9C,UAAMplB,EAAE,GAAG,IAAX;AACA,UAAM6G,OAAO,GAAG7G,EAAE,CAAC6G,OAAnB;AACA,UAAMse,OAAO,GAAGte,OAAO,CAACutD,IAAR,CAAaU,cAA7B;AACA,UAAMvvC,IAAI,GAAGvlB,EAAE,CAAC00D,KAAhB;AACA,UAAMH,SAAS,GAAGv0D,EAAE,CAAC20D,UAArB;AACA,UAAMkB,WAAW,GAAGtwC,IAAI,IAAIJ,OAAO,CAACI,IAAD,CAAnC;AACA,UAAMuwC,WAAW,GAAGvB,SAAS,IAAIpvC,OAAO,CAACovC,SAAD,CAAxC;AACA,UAAMzzD,IAAI,GAAG0V,KAAK,CAACzN,KAAD,CAAlB;AACA,UAAMirB,KAAK,GAAGugC,SAAS,IAAIuB,WAAb,IAA4Bh1D,IAA5B,IAAoCA,IAAI,CAACkzB,KAAvD;;AACA,UAAM5hB,KAAK,GAAGpS,EAAE,CAACyzD,QAAH,CAAYruC,MAAZ,CAAmBgvC,IAAnB,EAAyBhvC,MAAM,KAAK4O,KAAK,GAAG8hC,WAAH,GAAiBD,WAA3B,CAA/B,CAAd;;AACA,UAAME,SAAS,GAAGlvD,OAAO,CAAC2P,KAAR,CAAclf,QAAhC;AACA,WAAOy+D,SAAS,GAAGz+D,QAAQ,CAACy+D,SAAD,EAAY,CAAC3jD,KAAD,EAAQrJ,KAAR,EAAeyN,KAAf,CAAZ,EAAmCxW,EAAnC,CAAX,GAAoDoS,KAApE;AACD;;AACDipB,EAAAA,kBAAkB,CAAC7kB,KAAD,EAAQ;AACxB,QAAI3jB,CAAJ,EAAOiW,IAAP,EAAahI,IAAb;;AACA,SAAKjO,CAAC,GAAG,CAAJ,EAAOiW,IAAI,GAAG0N,KAAK,CAAC/V,MAAzB,EAAiC5N,CAAC,GAAGiW,IAArC,EAA2C,EAAEjW,CAA7C,EAAgD;AAC9CiO,MAAAA,IAAI,GAAG0V,KAAK,CAAC3jB,CAAD,CAAZ;AACAiO,MAAAA,IAAI,CAACsR,KAAL,GAAa,KAAKwjD,mBAAL,CAAyB90D,IAAI,CAACwG,KAA9B,EAAqCzU,CAArC,EAAwC2jB,KAAxC,CAAb;AACD;AACF;;AACD++C,EAAAA,kBAAkB,CAACjuD,KAAD,EAAQ;AACxB,UAAMtH,EAAE,GAAG,IAAX;AACA,WAAOsH,KAAK,KAAK,IAAV,GAAiBoK,GAAjB,GAAuB,CAACpK,KAAK,GAAGtH,EAAE,CAACH,GAAZ,KAAoBG,EAAE,CAAC+B,GAAH,GAAS/B,EAAE,CAACH,GAAhC,CAA9B;AACD;;AACD0W,EAAAA,gBAAgB,CAACjP,KAAD,EAAQ;AACtB,UAAMtH,EAAE,GAAG,IAAX;AACA,UAAMg2D,OAAO,GAAGh2D,EAAE,CAAC40D,QAAnB;AACA,UAAMlsC,GAAG,GAAG1oB,EAAE,CAACu1D,kBAAH,CAAsBjuD,KAAtB,CAAZ;AACA,WAAOtH,EAAE,CAACic,kBAAH,CAAsB,CAAC+5C,OAAO,CAACl2D,KAAR,GAAgB4oB,GAAjB,IAAwBstC,OAAO,CAACrzD,MAAtD,CAAP;AACD;;AACDg7B,EAAAA,gBAAgB,CAACC,KAAD,EAAQ;AACtB,UAAM59B,EAAE,GAAG,IAAX;AACA,UAAMg2D,OAAO,GAAGh2D,EAAE,CAAC40D,QAAnB;AACA,UAAMlsC,GAAG,GAAG1oB,EAAE,CAAC89B,kBAAH,CAAsBF,KAAtB,IAA+Bo4B,OAAO,CAACrzD,MAAvC,GAAgDqzD,OAAO,CAAChuD,GAApE;AACA,WAAOhI,EAAE,CAACH,GAAH,GAAS6oB,GAAG,IAAI1oB,EAAE,CAAC+B,GAAH,GAAS/B,EAAE,CAACH,GAAhB,CAAnB;AACD;;AACDo2D,EAAAA,aAAa,CAAC7jD,KAAD,EAAQ;AACnB,UAAMpS,EAAE,GAAG,IAAX;AACA,UAAMk2D,SAAS,GAAGl2D,EAAE,CAAC6G,OAAH,CAAW2P,KAA7B;AACA,UAAM2/C,cAAc,GAAGn2D,EAAE,CAACiN,GAAH,CAAOizC,WAAP,CAAmB9tC,KAAnB,EAA0B6H,KAAjD;AACA,UAAMwD,KAAK,GAAGrpB,SAAS,CAAC4L,EAAE,CAACoY,YAAH,KAAoB89C,SAAS,CAAC1iC,WAA9B,GAA4C0iC,SAAS,CAAC3iC,WAAvD,CAAvB;AACA,UAAM6iC,WAAW,GAAGx2D,IAAI,CAACud,GAAL,CAASM,KAAT,CAApB;AACA,UAAM44C,WAAW,GAAGz2D,IAAI,CAACyd,GAAL,CAASI,KAAT,CAApB;;AACA,UAAM64C,YAAY,GAAGt2D,EAAE,CAACu9B,uBAAH,CAA2B,CAA3B,EAA8Bh2B,IAAnD;;AACA,WAAO;AACLhS,MAAAA,CAAC,EAAG4gE,cAAc,GAAGC,WAAlB,GAAkCE,YAAY,GAAGD,WAD/C;AAEL1iE,MAAAA,CAAC,EAAGwiE,cAAc,GAAGE,WAAlB,GAAkCC,YAAY,GAAGF;AAF/C,KAAP;AAID;;AACDf,EAAAA,iBAAiB,CAACkB,WAAD,EAAc;AAC7B,UAAMv2D,EAAE,GAAG,IAAX;AACA,UAAMm1D,QAAQ,GAAGn1D,EAAE,CAAC6G,OAAH,CAAWutD,IAA5B;AACA,UAAMU,cAAc,GAAGK,QAAQ,CAACL,cAAhC;AACA,UAAM1vC,MAAM,GAAG0vC,cAAc,CAACK,QAAQ,CAAC5vC,IAAV,CAAd,IAAiCuvC,cAAc,CAACpC,WAA/D;;AACA,UAAM8D,YAAY,GAAGx2D,EAAE,CAAC41D,mBAAH,CAAuBW,WAAvB,EAAoC,CAApC,EAAuC/B,mBAAmB,CAACx0D,EAAD,EAAK,CAACu2D,WAAD,CAAL,EAAoBv2D,EAAE,CAAC20D,UAAvB,CAA1D,EAA8FvvC,MAA9F,CAArB;;AACA,UAAM7d,IAAI,GAAGvH,EAAE,CAACi2D,aAAH,CAAiBO,YAAjB,CAAb;;AACA,UAAMzC,QAAQ,GAAGn0D,IAAI,CAACgE,KAAL,CAAW5D,EAAE,CAACoY,YAAH,KAAoBpY,EAAE,CAACia,KAAH,GAAW1S,IAAI,CAAChS,CAApC,GAAwCyK,EAAE,CAACga,MAAH,GAAYzS,IAAI,CAAC5T,CAApE,IAAyE,CAA1F;AACA,WAAOogE,QAAQ,GAAG,CAAX,GAAeA,QAAf,GAA0B,CAAjC;AACD;;AACD0B,EAAAA,iBAAiB,GAAG;AAClB,UAAMz1D,EAAE,GAAG,IAAX;AACA,QAAIq0D,UAAU,GAAGr0D,EAAE,CAAC6V,MAAH,CAAUrM,IAAV,IAAkB,EAAnC;AACA,QAAI3W,CAAJ,EAAOiW,IAAP;;AACA,QAAIurD,UAAU,CAAC5zD,MAAf,EAAuB;AACrB,aAAO4zD,UAAP;AACD;;AACD,UAAMt+C,KAAK,GAAG/V,EAAE,CAACgL,uBAAH,EAAd;;AACA,QAAIhL,EAAE,CAAC60D,WAAH,IAAkB9+C,KAAK,CAACtV,MAA5B,EAAoC;AAClC,aAAQT,EAAE,CAAC6V,MAAH,CAAUrM,IAAV,GAAiBuM,KAAK,CAAC,CAAD,CAAL,CAAS7K,UAAT,CAAoB+G,kBAApB,CAAuCjS,EAAvC,CAAzB;AACD;;AACD,SAAKnN,CAAC,GAAG,CAAJ,EAAOiW,IAAI,GAAGiN,KAAK,CAACtV,MAAzB,EAAiC5N,CAAC,GAAGiW,IAArC,EAA2C,EAAEjW,CAA7C,EAAgD;AAC9CwhE,MAAAA,UAAU,GAAGA,UAAU,CAACr+C,MAAX,CAAkBD,KAAK,CAACljB,CAAD,CAAL,CAASqY,UAAT,CAAoB+G,kBAApB,CAAuCjS,EAAvC,CAAlB,CAAb;AACD;;AACD,WAAQA,EAAE,CAAC6V,MAAH,CAAUrM,IAAV,GAAiBxJ,EAAE,CAACy2D,SAAH,CAAapC,UAAb,CAAzB;AACD;;AACDa,EAAAA,kBAAkB,GAAG;AACnB,UAAMl1D,EAAE,GAAG,IAAX;AACA,UAAMq0D,UAAU,GAAGr0D,EAAE,CAAC6V,MAAH,CAAU7E,MAAV,IAAoB,EAAvC;AACA,QAAIne,CAAJ,EAAOiW,IAAP;;AACA,QAAIurD,UAAU,CAAC5zD,MAAf,EAAuB;AACrB,aAAO4zD,UAAP;AACD;;AACD,UAAMrjD,MAAM,GAAGhR,EAAE,CAACiR,SAAH,EAAf;;AACA,SAAKpe,CAAC,GAAG,CAAJ,EAAOiW,IAAI,GAAGkI,MAAM,CAACvQ,MAA1B,EAAkC5N,CAAC,GAAGiW,IAAtC,EAA4C,EAAEjW,CAA9C,EAAiD;AAC/CwhE,MAAAA,UAAU,CAAC5yD,IAAX,CAAgB8O,KAAK,CAACvQ,EAAD,EAAKgR,MAAM,CAACne,CAAD,CAAX,CAArB;AACD;;AACD,WAAQmN,EAAE,CAAC6V,MAAH,CAAU7E,MAAV,GAAmBhR,EAAE,CAAC60D,WAAH,GAAiBR,UAAjB,GAA8Br0D,EAAE,CAACy2D,SAAH,CAAapC,UAAb,CAAzD;AACD;;AACDoC,EAAAA,SAAS,CAAC9vD,MAAD,EAAS;AAChB,WAAOzS,YAAY,CAACyS,MAAM,CAACsP,IAAP,CAAYq9C,MAAZ,CAAD,CAAnB;AACD;;AA7P2B;;AA+P9BmB,SAAS,CAACxqD,EAAV,GAAe,MAAf;AACAwqD,SAAS,CAAC7hE,QAAV,GAAqB;AACnBigC,EAAAA,MAAM,EAAE,MADW;AAEnB/M,EAAAA,QAAQ,EAAE,EAFS;AAGnBsuC,EAAAA,IAAI,EAAE;AACJV,IAAAA,MAAM,EAAE,KADJ;AAEJnuC,IAAAA,IAAI,EAAE,KAFF;AAGJ8P,IAAAA,KAAK,EAAE,KAHH;AAIJs+B,IAAAA,UAAU,EAAE,KAJR;AAKJG,IAAAA,OAAO,EAAE,aALL;AAMJgB,IAAAA,cAAc,EAAE;AANZ,GAHa;AAWnBt+C,EAAAA,KAAK,EAAE;AACLgkB,IAAAA,MAAM,EAAE,MADH;AAELxG,IAAAA,KAAK,EAAE;AACLa,MAAAA,OAAO,EAAE;AADJ;AAFF;AAXY,CAArB;;AAmBA,SAASmhB,WAAT,CAAqB0gB,KAArB,EAA4Br8C,GAA5B,EAAiCtS,OAAjC,EAA0C;AACxC,MAAI8a,EAAE,GAAG,CAAT;AACA,MAAIC,EAAE,GAAG4zC,KAAK,CAACj2D,MAAN,GAAe,CAAxB;AACA,MAAIk2D,UAAJ,EAAgBC,UAAhB,EAA4BC,UAA5B,EAAwCC,UAAxC;;AACA,MAAI/uD,OAAJ,EAAa;AACX,QAAIsS,GAAG,IAAIq8C,KAAK,CAAC7zC,EAAD,CAAL,CAAU6F,GAAjB,IAAwBrO,GAAG,IAAIq8C,KAAK,CAAC5zC,EAAD,CAAL,CAAU4F,GAA7C,EAAkD;AAChD,OAAC;AAAC7F,QAAAA,EAAD;AAAKC,QAAAA;AAAL,UAAWttB,YAAY,CAACkhE,KAAD,EAAQ,KAAR,EAAer8C,GAAf,CAAxB;AACD;;AACD,KAAC;AAACqO,MAAAA,GAAG,EAAEiuC,UAAN;AAAkBvC,MAAAA,IAAI,EAAEyC;AAAxB,QAAsCH,KAAK,CAAC7zC,EAAD,CAA5C;AACA,KAAC;AAAC6F,MAAAA,GAAG,EAAEkuC,UAAN;AAAkBxC,MAAAA,IAAI,EAAE0C;AAAxB,QAAsCJ,KAAK,CAAC5zC,EAAD,CAA5C;AACD,GAND,MAMO;AACL,QAAIzI,GAAG,IAAIq8C,KAAK,CAAC7zC,EAAD,CAAL,CAAUuxC,IAAjB,IAAyB/5C,GAAG,IAAIq8C,KAAK,CAAC5zC,EAAD,CAAL,CAAUsxC,IAA9C,EAAoD;AAClD,OAAC;AAACvxC,QAAAA,EAAD;AAAKC,QAAAA;AAAL,UAAWttB,YAAY,CAACkhE,KAAD,EAAQ,MAAR,EAAgBr8C,GAAhB,CAAxB;AACD;;AACD,KAAC;AAAC+5C,MAAAA,IAAI,EAAEuC,UAAP;AAAmBjuC,MAAAA,GAAG,EAAEmuC;AAAxB,QAAsCH,KAAK,CAAC7zC,EAAD,CAA5C;AACA,KAAC;AAACuxC,MAAAA,IAAI,EAAEwC,UAAP;AAAmBluC,MAAAA,GAAG,EAAEouC;AAAxB,QAAsCJ,KAAK,CAAC5zC,EAAD,CAA5C;AACD;;AACD,QAAMi0C,IAAI,GAAGH,UAAU,GAAGD,UAA1B;AACA,SAAOI,IAAI,GAAGF,UAAU,GAAG,CAACC,UAAU,GAAGD,UAAd,KAA6Bx8C,GAAG,GAAGs8C,UAAnC,IAAiDI,IAAjE,GAAwEF,UAAnF;AACD;;AACD,MAAMG,eAAN,SAA8BvC,SAA9B,CAAwC;AACtCj2D,EAAAA,WAAW,CAAC4I,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAK6vD,MAAL,GAAc,EAAd;AACA,SAAKC,OAAL,GAAep4D,SAAf;AACA,SAAKq4D,WAAL,GAAmBr4D,SAAnB;AACD;;AACDw2D,EAAAA,WAAW,GAAG;AACZ,UAAMt1D,EAAE,GAAG,IAAX;;AACA,UAAMq0D,UAAU,GAAGr0D,EAAE,CAACo3D,sBAAH,EAAnB;;AACA,UAAMV,KAAK,GAAG12D,EAAE,CAACi3D,MAAH,GAAYj3D,EAAE,CAACq3D,gBAAH,CAAoBhD,UAApB,CAA1B;AACAr0D,IAAAA,EAAE,CAACk3D,OAAH,GAAalhB,WAAW,CAAC0gB,KAAD,EAAQ12D,EAAE,CAACH,GAAX,CAAxB;AACAG,IAAAA,EAAE,CAACm3D,WAAH,GAAiBnhB,WAAW,CAAC0gB,KAAD,EAAQ12D,EAAE,CAAC+B,GAAX,CAAX,GAA6B/B,EAAE,CAACk3D,OAAjD;AACA,UAAM5B,WAAN,CAAkBjB,UAAlB;AACD;;AACDgD,EAAAA,gBAAgB,CAAChD,UAAD,EAAa;AAC3B,UAAM;AAACx0D,MAAAA,GAAD;AAAMkC,MAAAA;AAAN,QAAa,IAAnB;AACA,UAAMvB,KAAK,GAAG,EAAd;AACA,UAAMk2D,KAAK,GAAG,EAAd;AACA,QAAI7jE,CAAJ,EAAOiW,IAAP,EAAa6H,IAAb,EAAmByF,IAAnB,EAAyBiB,IAAzB;;AACA,SAAKxkB,CAAC,GAAG,CAAJ,EAAOiW,IAAI,GAAGurD,UAAU,CAAC5zD,MAA9B,EAAsC5N,CAAC,GAAGiW,IAA1C,EAAgD,EAAEjW,CAAlD,EAAqD;AACnDujB,MAAAA,IAAI,GAAGi+C,UAAU,CAACxhE,CAAD,CAAjB;;AACA,UAAIujB,IAAI,IAAIvW,GAAR,IAAeuW,IAAI,IAAIrU,GAA3B,EAAgC;AAC9BvB,QAAAA,KAAK,CAACiB,IAAN,CAAW2U,IAAX;AACD;AACF;;AACD,QAAI5V,KAAK,CAACC,MAAN,GAAe,CAAnB,EAAsB;AACpB,aAAO,CACL;AAAC2zD,QAAAA,IAAI,EAAEv0D,GAAP;AAAY6oB,QAAAA,GAAG,EAAE;AAAjB,OADK,EAEL;AAAC0rC,QAAAA,IAAI,EAAEryD,GAAP;AAAY2mB,QAAAA,GAAG,EAAE;AAAjB,OAFK,CAAP;AAID;;AACD,SAAK71B,CAAC,GAAG,CAAJ,EAAOiW,IAAI,GAAGtI,KAAK,CAACC,MAAzB,EAAiC5N,CAAC,GAAGiW,IAArC,EAA2C,EAAEjW,CAA7C,EAAgD;AAC9CwkB,MAAAA,IAAI,GAAG7W,KAAK,CAAC3N,CAAC,GAAG,CAAL,CAAZ;AACA8d,MAAAA,IAAI,GAAGnQ,KAAK,CAAC3N,CAAC,GAAG,CAAL,CAAZ;AACAujB,MAAAA,IAAI,GAAG5V,KAAK,CAAC3N,CAAD,CAAZ;;AACA,UAAI+M,IAAI,CAACy1B,KAAL,CAAW,CAAChe,IAAI,GAAG1G,IAAR,IAAgB,CAA3B,MAAkCyF,IAAtC,EAA4C;AAC1CsgD,QAAAA,KAAK,CAACj1D,IAAN,CAAW;AAAC2yD,UAAAA,IAAI,EAAEh+C,IAAP;AAAasS,UAAAA,GAAG,EAAE71B,CAAC,IAAIiW,IAAI,GAAG,CAAX;AAAnB,SAAX;AACD;AACF;;AACD,WAAO4tD,KAAP;AACD;;AACDU,EAAAA,sBAAsB,GAAG;AACvB,UAAMp3D,EAAE,GAAG,IAAX;AACA,QAAIq0D,UAAU,GAAGr0D,EAAE,CAAC6V,MAAH,CAAUnO,GAAV,IAAiB,EAAlC;;AACA,QAAI2sD,UAAU,CAAC5zD,MAAf,EAAuB;AACrB,aAAO4zD,UAAP;AACD;;AACD,UAAM7qD,IAAI,GAAGxJ,EAAE,CAACy1D,iBAAH,EAAb;AACA,UAAMrjD,KAAK,GAAGpS,EAAE,CAACk1D,kBAAH,EAAd;;AACA,QAAI1rD,IAAI,CAAC/I,MAAL,IAAe2R,KAAK,CAAC3R,MAAzB,EAAiC;AAC/B4zD,MAAAA,UAAU,GAAGr0D,EAAE,CAACy2D,SAAH,CAAajtD,IAAI,CAACwM,MAAL,CAAY5D,KAAZ,CAAb,CAAb;AACD,KAFD,MAEO;AACLiiD,MAAAA,UAAU,GAAG7qD,IAAI,CAAC/I,MAAL,GAAc+I,IAAd,GAAqB4I,KAAlC;AACD;;AACDiiD,IAAAA,UAAU,GAAGr0D,EAAE,CAAC6V,MAAH,CAAUnO,GAAV,GAAgB2sD,UAA7B;AACA,WAAOA,UAAP;AACD;;AACDkB,EAAAA,kBAAkB,CAACjuD,KAAD,EAAQ;AACxB,WAAO,CAAC0uC,WAAW,CAAC,KAAKihB,MAAN,EAAc3vD,KAAd,CAAX,GAAkC,KAAK4vD,OAAxC,IAAmD,KAAKC,WAA/D;AACD;;AACDx5B,EAAAA,gBAAgB,CAACC,KAAD,EAAQ;AACtB,UAAM59B,EAAE,GAAG,IAAX;AACA,UAAMg2D,OAAO,GAAGh2D,EAAE,CAAC40D,QAAnB;AACA,UAAM/2B,OAAO,GAAG79B,EAAE,CAAC89B,kBAAH,CAAsBF,KAAtB,IAA+Bo4B,OAAO,CAACrzD,MAAvC,GAAgDqzD,OAAO,CAAChuD,GAAxE;AACA,WAAOguC,WAAW,CAACh2C,EAAE,CAACi3D,MAAJ,EAAYp5B,OAAO,GAAG79B,EAAE,CAACm3D,WAAb,GAA2Bn3D,EAAE,CAACk3D,OAA1C,EAAmD,IAAnD,CAAlB;AACD;;AAlEqC;;AAoExCF,eAAe,CAAC/sD,EAAhB,GAAqB,YAArB;AACA+sD,eAAe,CAACpkE,QAAhB,GAA2B6hE,SAAS,CAAC7hE,QAArC;AAEA,IAAIkZ,MAAM,GAAG,aAAa3G,MAAM,CAACuO,MAAP,CAAc;AACxCqR,EAAAA,SAAS,EAAE,IAD6B;AAExCmnC,EAAAA,aAAa,EAAEA,aAFyB;AAGxCoC,EAAAA,WAAW,EAAEA,WAH2B;AAIxCS,EAAAA,gBAAgB,EAAEA,gBAJsB;AAKxCiC,EAAAA,iBAAiB,EAAEA,iBALqB;AAMxCyD,EAAAA,SAAS,EAAEA,SAN6B;AAOxCuC,EAAAA,eAAe,EAAEA;AAPuB,CAAd,CAA1B;AAUA,MAAMM,aAAa,GAAG,CACpBxyC,WADoB,EAEpBtS,QAFoB,EAGpB6J,OAHoB,EAIpBvQ,MAJoB,CAAtB;AAOA,SAAS5I,SAAT,EAAoB+C,UAApB,EAAgC6sC,UAAhC,EAA4C55B,aAA5C,EAA2Dk/B,UAA3D,EAAuExrB,YAAvE,EAAqFS,aAArF,EAAoGxR,gBAApG,EAAsHqwC,aAAtH,EAAqI7hB,KAArI,EAA4It9B,iBAA5I,EAA+JutC,iBAAiB,IAAIsR,UAApL,EAAgM96B,WAAhM,EAA6M/S,kBAA7M,EAAiO0T,OAAjO,EAA0OysB,aAAa,IAAI2N,MAA3P,EAAmQzjC,WAAnQ,EAAgRs6B,aAAa,IAAIzD,MAAjS,EAAySz9B,cAAzS,EAAyTo0B,WAAzT,EAAsU0Y,WAAtU,EAAmVS,gBAAnV,EAAqWxqC,aAArW,EAAoX+xB,YAApX,EAAkYhzB,mBAAlY,EAAuZkB,eAAvZ,EAAwawsC,iBAAxa,EAA2bn5B,KAA3b,EAAkchT,iBAAlc,EAAqd0+B,eAAe,IAAIuI,QAAxe,EAAkfl5B,KAAlf,EAAyf6hC,SAAzf,EAAogBuC,eAApgB,EAAqhB3T,YAAY,IAAIP,KAAriB,EAA4iB0I,cAAc,IAAIvE,OAA9jB,EAAukBnhC,QAAQ,IAAIyxC,SAAnlB,EAA8lBhmC,eAA9lB,EAA+mBlvB,QAA/mB,EAAynByiB,WAAznB,EAAsoBtS,QAAtoB,EAAgpB4W,OAAhpB,EAAypB/M,OAAzpB,EAAkqBi7C,aAAlqB,EAAirB1yB,QAAjrB,EAA2rB94B,MAA3rB","sourcesContent":["/*!\n * Chart.js v3.5.0\n * https://www.chartjs.org\n * (c) 2021 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, d as defaults, i as isObject, b as isArray, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as defined, s as sign, j as isNullOrUndef, _ as _arrayUnique, t as toRadians, k as toPercentage, m as toDimension, T as TAU, n as formatNumber, o as _angleBetween, H as HALF_PI, P as PI, p as isNumber, q as _limitValue, w as _lookupByKey, x as getRelativePosition$1, y as _isPointInArea, z as _rlookupByKey, A as toPadding, B as each, C as getMaximumSize, D as _getParentNode, E as readUsedSize, F as throttled, G as supportsEventListenerOptions, I as _isDomSupported, J as log10, K as _factorize, L as finiteOrDefault, M as callback, N as _addGrace, O as toDegrees, Q as _measureText, R as _int16Range, S as _alignPixel, U as clipArea, V as renderText, W as unclipArea, X as toFont, Y as _toLeftRightCenter, Z as _alignStartEnd, $ as overrides, a0 as merge, a1 as _capitalize, a2 as descriptors, a3 as isFunction, a4 as _attachContext, a5 as _createResolver, a6 as _descriptors, a7 as mergeIf, a8 as uid, a9 as debounce, aa as retinaScale, ab as clearCanvas, ac as setsEqual, ad as _elementsEqual, ae as getAngleFromPoint, af as _readValueToProps, ag as _updateBezierControlPoints, ah as _computeSegments, ai as _boundSegments, aj as _steppedInterpolation, ak as _bezierInterpolation, al as _pointInLine, am as _steppedLineTo, an as _bezierCurveTo, ao as drawPoint, ap as addRoundedRectPath, aq as toTRBL, ar as toTRBLCorners, as as _boundSegment, at as _normalizeAngle, au as getRtlAdapter, av as overrideTextDirection, aw as _textX, ax as restoreTextDirection, ay as noop, az as distanceBetweenPoints, aA as _setMinAndMaxByKey, aB as niceNum, aC as almostWhole, aD as almostEquals, aE as _decimalPlaces, aF as _longestText, aG as _filterBetween, aH as _lookup } from './chunks/helpers.segment.js';\nexport { d as defaults } from './chunks/helpers.segment.js';\n\nclass Animator {\n  constructor() {\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n  _notify(chart, anims, date, type) {\n    const callbacks = anims.listeners[type];\n    const numSteps = anims.duration;\n    callbacks.forEach(fn => fn({\n      chart,\n      initial: anims.initial,\n      numSteps,\n      currentStep: Math.min(date - anims.start, numSteps)\n    }));\n  }\n  _refresh() {\n    const me = this;\n    if (me._request) {\n      return;\n    }\n    me._running = true;\n    me._request = requestAnimFrame.call(window, () => {\n      me._update();\n      me._request = null;\n      if (me._running) {\n        me._refresh();\n      }\n    });\n  }\n  _update(date = Date.now()) {\n    const me = this;\n    let remaining = 0;\n    me._charts.forEach((anims, chart) => {\n      if (!anims.running || !anims.items.length) {\n        return;\n      }\n      const items = anims.items;\n      let i = items.length - 1;\n      let draw = false;\n      let item;\n      for (; i >= 0; --i) {\n        item = items[i];\n        if (item._active) {\n          if (item._total > anims.duration) {\n            anims.duration = item._total;\n          }\n          item.tick(date);\n          draw = true;\n        } else {\n          items[i] = items[items.length - 1];\n          items.pop();\n        }\n      }\n      if (draw) {\n        chart.draw();\n        me._notify(chart, anims, date, 'progress');\n      }\n      if (!items.length) {\n        anims.running = false;\n        me._notify(chart, anims, date, 'complete');\n        anims.initial = false;\n      }\n      remaining += items.length;\n    });\n    me._lastDate = date;\n    if (remaining === 0) {\n      me._running = false;\n    }\n  }\n  _getAnims(chart) {\n    const charts = this._charts;\n    let anims = charts.get(chart);\n    if (!anims) {\n      anims = {\n        running: false,\n        initial: true,\n        items: [],\n        listeners: {\n          complete: [],\n          progress: []\n        }\n      };\n      charts.set(chart, anims);\n    }\n    return anims;\n  }\n  listen(chart, event, cb) {\n    this._getAnims(chart).listeners[event].push(cb);\n  }\n  add(chart, items) {\n    if (!items || !items.length) {\n      return;\n    }\n    this._getAnims(chart).items.push(...items);\n  }\n  has(chart) {\n    return this._getAnims(chart).items.length > 0;\n  }\n  start(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims) {\n      return;\n    }\n    anims.running = true;\n    anims.start = Date.now();\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n    this._refresh();\n  }\n  running(chart) {\n    if (!this._running) {\n      return false;\n    }\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.running || !anims.items.length) {\n      return false;\n    }\n    return true;\n  }\n  stop(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.items.length) {\n      return;\n    }\n    const items = anims.items;\n    let i = items.length - 1;\n    for (; i >= 0; --i) {\n      items[i].cancel();\n    }\n    anims.items = [];\n    this._notify(chart, anims, Date.now(), 'complete');\n  }\n  remove(chart) {\n    return this._charts.delete(chart);\n  }\n}\nvar animator = new Animator();\n\nconst transparent = 'transparent';\nconst interpolators = {\n  boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  color(from, to, factor) {\n    const c0 = color(from || transparent);\n    const c1 = c0.valid && color(to || transparent);\n    return c1 && c1.valid\n      ? c1.mix(c0, factor).hexString()\n      : to;\n  },\n  number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\nclass Animation {\n  constructor(cfg, target, prop, to) {\n    const currentValue = target[prop];\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    const from = resolve([cfg.from, currentValue, to]);\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n  active() {\n    return this._active;\n  }\n  update(cfg, to, date) {\n    const me = this;\n    if (me._active) {\n      me._notify(false);\n      const currentValue = me._target[me._prop];\n      const elapsed = date - me._start;\n      const remain = me._duration - elapsed;\n      me._start = date;\n      me._duration = Math.floor(Math.max(remain, cfg.duration));\n      me._total += elapsed;\n      me._loop = !!cfg.loop;\n      me._to = resolve([cfg.to, to, currentValue, cfg.from]);\n      me._from = resolve([cfg.from, currentValue, to]);\n    }\n  }\n  cancel() {\n    const me = this;\n    if (me._active) {\n      me.tick(Date.now());\n      me._active = false;\n      me._notify(false);\n    }\n  }\n  tick(date) {\n    const me = this;\n    const elapsed = date - me._start;\n    const duration = me._duration;\n    const prop = me._prop;\n    const from = me._from;\n    const loop = me._loop;\n    const to = me._to;\n    let factor;\n    me._active = from !== to && (loop || (elapsed < duration));\n    if (!me._active) {\n      me._target[prop] = to;\n      me._notify(true);\n      return;\n    }\n    if (elapsed < 0) {\n      me._target[prop] = from;\n      return;\n    }\n    factor = (elapsed / duration) % 2;\n    factor = loop && factor > 1 ? 2 - factor : factor;\n    factor = me._easing(Math.min(1, Math.max(0, factor)));\n    me._target[prop] = me._fn(from, to, factor);\n  }\n  wait() {\n    const promises = this._promises || (this._promises = []);\n    return new Promise((res, rej) => {\n      promises.push({res, rej});\n    });\n  }\n  _notify(resolved) {\n    const method = resolved ? 'res' : 'rej';\n    const promises = this._promises || [];\n    for (let i = 0; i < promises.length; i++) {\n      promises[i][method]();\n    }\n  }\n}\n\nconst numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\nconst colors = ['color', 'borderColor', 'backgroundColor'];\ndefaults.set('animation', {\n  delay: undefined,\n  duration: 1000,\n  easing: 'easeOutQuart',\n  fn: undefined,\n  from: undefined,\n  loop: undefined,\n  to: undefined,\n  type: undefined,\n});\nconst animationOptions = Object.keys(defaults.animation);\ndefaults.describe('animation', {\n  _fallback: false,\n  _indexable: false,\n  _scriptable: (name) => name !== 'onProgress' && name !== 'onComplete' && name !== 'fn',\n});\ndefaults.set('animations', {\n  colors: {\n    type: 'color',\n    properties: colors\n  },\n  numbers: {\n    type: 'number',\n    properties: numbers\n  },\n});\ndefaults.describe('animations', {\n  _fallback: 'animation',\n});\ndefaults.set('transitions', {\n  active: {\n    animation: {\n      duration: 400\n    }\n  },\n  resize: {\n    animation: {\n      duration: 0\n    }\n  },\n  show: {\n    animations: {\n      colors: {\n        from: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        duration: 0\n      },\n    }\n  },\n  hide: {\n    animations: {\n      colors: {\n        to: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        easing: 'linear',\n        fn: v => v | 0\n      },\n    }\n  }\n});\nclass Animations {\n  constructor(chart, config) {\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n  configure(config) {\n    if (!isObject(config)) {\n      return;\n    }\n    const animatedProps = this._properties;\n    Object.getOwnPropertyNames(config).forEach(key => {\n      const cfg = config[key];\n      if (!isObject(cfg)) {\n        return;\n      }\n      const resolved = {};\n      for (const option of animationOptions) {\n        resolved[option] = cfg[option];\n      }\n      (isArray(cfg.properties) && cfg.properties || [key]).forEach((prop) => {\n        if (prop === key || !animatedProps.has(prop)) {\n          animatedProps.set(prop, resolved);\n        }\n      });\n    });\n  }\n  _animateOptions(target, values) {\n    const newOptions = values.options;\n    const options = resolveTargetOptions(target, newOptions);\n    if (!options) {\n      return [];\n    }\n    const animations = this._createAnimations(options, newOptions);\n    if (newOptions.$shared) {\n      awaitAll(target.options.$animations, newOptions).then(() => {\n        target.options = newOptions;\n      }, () => {\n      });\n    }\n    return animations;\n  }\n  _createAnimations(target, values) {\n    const animatedProps = this._properties;\n    const animations = [];\n    const running = target.$animations || (target.$animations = {});\n    const props = Object.keys(values);\n    const date = Date.now();\n    let i;\n    for (i = props.length - 1; i >= 0; --i) {\n      const prop = props[i];\n      if (prop.charAt(0) === '$') {\n        continue;\n      }\n      if (prop === 'options') {\n        animations.push(...this._animateOptions(target, values));\n        continue;\n      }\n      const value = values[prop];\n      let animation = running[prop];\n      const cfg = animatedProps.get(prop);\n      if (animation) {\n        if (cfg && animation.active()) {\n          animation.update(cfg, value, date);\n          continue;\n        } else {\n          animation.cancel();\n        }\n      }\n      if (!cfg || !cfg.duration) {\n        target[prop] = value;\n        continue;\n      }\n      running[prop] = animation = new Animation(cfg, target, prop, value);\n      animations.push(animation);\n    }\n    return animations;\n  }\n  update(target, values) {\n    if (this._properties.size === 0) {\n      Object.assign(target, values);\n      return;\n    }\n    const animations = this._createAnimations(target, values);\n    if (animations.length) {\n      animator.add(this._chart, animations);\n      return true;\n    }\n  }\n}\nfunction awaitAll(animations, properties) {\n  const running = [];\n  const keys = Object.keys(properties);\n  for (let i = 0; i < keys.length; i++) {\n    const anim = animations[keys[i]];\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n  return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n  let options = target.options;\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n  if (options.$shared) {\n    target.options = options = Object.assign({}, options, {$shared: false, $animations: {}});\n  }\n  return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n  const opts = scale && scale.options || {};\n  const reverse = opts.reverse;\n  const min = opts.min === undefined ? allowedOverflow : 0;\n  const max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n  const x = scaleClip(xScale, allowedOverflow);\n  const y = scaleClip(yScale, allowedOverflow);\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\nfunction toClip(value) {\n  let t, r, b, l;\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l,\n    disabled: value === false\n  };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  const keys = [];\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\n  let i, ilen;\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n  return keys;\n}\nfunction applyStack(stack, value, dsIndex, options) {\n  const keys = stack.keys;\n  const singleMode = options.mode === 'single';\n  let i, ilen, datasetIndex, otherValue;\n  if (value === null) {\n    return;\n  }\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n    if (datasetIndex === dsIndex) {\n      if (options.all) {\n        continue;\n      }\n      break;\n    }\n    otherValue = stack.values[datasetIndex];\n    if (isNumberFinite(otherValue) && (singleMode || (value === 0 || sign(value) === sign(otherValue)))) {\n      value += otherValue;\n    }\n  }\n  return value;\n}\nfunction convertObjectDataToArray(data) {\n  const keys = Object.keys(data);\n  const adata = new Array(keys.length);\n  let i, ilen, key;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      x: key,\n      y: data[key]\n    };\n  }\n  return adata;\n}\nfunction isStacked(scale, meta) {\n  const stacked = scale && scale.options.stacked;\n  return stacked || (stacked === undefined && meta.stack !== undefined);\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n  return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\nfunction getUserBounds(scale) {\n  const {min, max, minDefined, maxDefined} = scale.getUserBounds();\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive) {\n  for (const meta of vScale.getMatchingVisibleMetas('bar').reverse()) {\n    const value = stack[meta.index];\n    if ((positive && value > 0) || (!positive && value < 0)) {\n      return meta.index;\n    }\n  }\n  return null;\n}\nfunction updateStacks(controller, parsed) {\n  const {chart, _cachedMeta: meta} = controller;\n  const stacks = chart._stacks || (chart._stacks = {});\n  const {iScale, vScale, index: datasetIndex} = meta;\n  const iAxis = iScale.axis;\n  const vAxis = vScale.axis;\n  const key = getStackKey(iScale, vScale, meta);\n  const ilen = parsed.length;\n  let stack;\n  for (let i = 0; i < ilen; ++i) {\n    const item = parsed[i];\n    const {[iAxis]: index, [vAxis]: value} = item;\n    const itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n    stack._top = getLastIndexInStack(stack, vScale, true);\n    stack._bottom = getLastIndexInStack(stack, vScale, false);\n  }\n}\nfunction getFirstScaleId(chart, axis) {\n  const scales = chart.scales;\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n  return Object.assign(Object.create(parent),\n    {\n      active: false,\n      dataset: undefined,\n      datasetIndex: index,\n      index,\n      mode: 'default',\n      type: 'dataset'\n    }\n  );\n}\nfunction createDataContext(parent, index, element) {\n  return Object.assign(Object.create(parent), {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element,\n    index,\n    mode: 'default',\n    type: 'data'\n  });\n}\nfunction clearStacks(meta, items) {\n  const datasetIndex = meta.controller.index;\n  const axis = meta.vScale && meta.vScale.axis;\n  if (!axis) {\n    return;\n  }\n  items = items || meta._parsed;\n  for (const parsed of items) {\n    const stacks = parsed._stacks;\n    if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n      return;\n    }\n    delete stacks[axis][datasetIndex];\n  }\n}\nconst isDirectUpdateMode = (mode) => mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\nclass DatasetController {\n  constructor(chart, datasetIndex) {\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.$context = undefined;\n    this._syncList = [];\n    this.initialize();\n  }\n  initialize() {\n    const me = this;\n    const meta = me._cachedMeta;\n    me.configure();\n    me.linkScales();\n    meta._stacked = isStacked(meta.vScale, meta);\n    me.addElements();\n  }\n  updateIndex(datasetIndex) {\n    if (this.index !== datasetIndex) {\n      clearStacks(this._cachedMeta);\n    }\n    this.index = datasetIndex;\n  }\n  linkScales() {\n    const me = this;\n    const chart = me.chart;\n    const meta = me._cachedMeta;\n    const dataset = me.getDataset();\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n    const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n    const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n    const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n    const indexAxis = meta.indexAxis;\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n    meta.xScale = me.getScaleForId(xid);\n    meta.yScale = me.getScaleForId(yid);\n    meta.rScale = me.getScaleForId(rid);\n    meta.iScale = me.getScaleForId(iid);\n    meta.vScale = me.getScaleForId(vid);\n  }\n  getDataset() {\n    return this.chart.data.datasets[this.index];\n  }\n  getMeta() {\n    return this.chart.getDatasetMeta(this.index);\n  }\n  getScaleForId(scaleID) {\n    return this.chart.scales[scaleID];\n  }\n  _getOtherScale(scale) {\n    const meta = this._cachedMeta;\n    return scale === meta.iScale\n      ? meta.vScale\n      : meta.iScale;\n  }\n  reset() {\n    this._update('reset');\n  }\n  _destroy() {\n    const meta = this._cachedMeta;\n    if (this._data) {\n      unlistenArrayEvents(this._data, this);\n    }\n    if (meta._stacked) {\n      clearStacks(meta);\n    }\n  }\n  _dataCheck() {\n    const me = this;\n    const dataset = me.getDataset();\n    const data = dataset.data || (dataset.data = []);\n    const _data = me._data;\n    if (isObject(data)) {\n      me._data = convertObjectDataToArray(data);\n    } else if (_data !== data) {\n      if (_data) {\n        unlistenArrayEvents(_data, me);\n        const meta = me._cachedMeta;\n        clearStacks(meta);\n        meta._parsed = [];\n      }\n      if (data && Object.isExtensible(data)) {\n        listenArrayEvents(data, me);\n      }\n      me._syncList = [];\n      me._data = data;\n    }\n  }\n  addElements() {\n    const me = this;\n    const meta = me._cachedMeta;\n    me._dataCheck();\n    if (me.datasetElementType) {\n      meta.dataset = new me.datasetElementType();\n    }\n  }\n  buildOrUpdateElements(resetNewElements) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const dataset = me.getDataset();\n    let stackChanged = false;\n    me._dataCheck();\n    const oldStacked = meta._stacked;\n    meta._stacked = isStacked(meta.vScale, meta);\n    if (meta.stack !== dataset.stack) {\n      stackChanged = true;\n      clearStacks(meta);\n      meta.stack = dataset.stack;\n    }\n    me._resyncElements(resetNewElements);\n    if (stackChanged || oldStacked !== meta._stacked) {\n      updateStacks(me, meta._parsed);\n    }\n  }\n  configure() {\n    const me = this;\n    const config = me.chart.config;\n    const scopeKeys = config.datasetScopeKeys(me._type);\n    const scopes = config.getOptionScopes(me.getDataset(), scopeKeys, true);\n    me.options = config.createResolver(scopes, me.getContext());\n    me._parsing = me.options.parsing;\n  }\n  parse(start, count) {\n    const me = this;\n    const {_cachedMeta: meta, _data: data} = me;\n    const {iScale, _stacked} = meta;\n    const iAxis = iScale.axis;\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\n    let prev = start > 0 && meta._parsed[start - 1];\n    let i, cur, parsed;\n    if (me._parsing === false) {\n      meta._parsed = data;\n      meta._sorted = true;\n      parsed = data;\n    } else {\n      if (isArray(data[start])) {\n        parsed = me.parseArrayData(meta, data, start, count);\n      } else if (isObject(data[start])) {\n        parsed = me.parseObjectData(meta, data, start, count);\n      } else {\n        parsed = me.parsePrimitiveData(meta, data, start, count);\n      }\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || (prev && cur[iAxis] < prev[iAxis]);\n      for (i = 0; i < count; ++i) {\n        meta._parsed[i + start] = cur = parsed[i];\n        if (sorted) {\n          if (isNotInOrderComparedToPrev()) {\n            sorted = false;\n          }\n          prev = cur;\n        }\n      }\n      meta._sorted = sorted;\n    }\n    if (_stacked) {\n      updateStacks(me, parsed);\n    }\n  }\n  parsePrimitiveData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = new Array(count);\n    let i, ilen, index;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      parsed[i] = {\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\n        [vAxis]: vScale.parse(data[index], index)\n      };\n    }\n    return parsed;\n  }\n  parseArrayData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(item[0], index),\n        y: yScale.parse(item[1], index)\n      };\n    }\n    return parsed;\n  }\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n      };\n    }\n    return parsed;\n  }\n  getParsed(index) {\n    return this._cachedMeta._parsed[index];\n  }\n  getDataElement(index) {\n    return this._cachedMeta.data[index];\n  }\n  applyStack(scale, parsed, mode) {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const value = parsed[scale.axis];\n    const stack = {\n      keys: getSortedDatasetIndices(chart, true),\n      values: parsed._stacks[scale.axis]\n    };\n    return applyStack(stack, value, meta.index, {mode});\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    const parsedValue = parsed[scale.axis];\n    let value = parsedValue === null ? NaN : parsedValue;\n    const values = stack && parsed._stacks[scale.axis];\n    if (stack && values) {\n      stack.values = values;\n      range.min = Math.min(range.min, value);\n      range.max = Math.max(range.max, value);\n      value = applyStack(stack, parsedValue, this._cachedMeta.index, {all: true});\n    }\n    range.min = Math.min(range.min, value);\n    range.max = Math.max(range.max, value);\n  }\n  getMinMax(scale, canStack) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const _parsed = meta._parsed;\n    const sorted = meta._sorted && scale === meta.iScale;\n    const ilen = _parsed.length;\n    const otherScale = me._getOtherScale(scale);\n    const stack = canStack && meta._stacked && {keys: getSortedDatasetIndices(me.chart, true), values: null};\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    const {min: otherMin, max: otherMax} = getUserBounds(otherScale);\n    let i, value, parsed, otherValue;\n    function _skip() {\n      parsed = _parsed[i];\n      value = parsed[scale.axis];\n      otherValue = parsed[otherScale.axis];\n      return !isNumberFinite(value) || otherMin > otherValue || otherMax < otherValue;\n    }\n    for (i = 0; i < ilen; ++i) {\n      if (_skip()) {\n        continue;\n      }\n      me.updateRangeFromParsed(range, scale, parsed, stack);\n      if (sorted) {\n        break;\n      }\n    }\n    if (sorted) {\n      for (i = ilen - 1; i >= 0; --i) {\n        if (_skip()) {\n          continue;\n        }\n        me.updateRangeFromParsed(range, scale, parsed, stack);\n        break;\n      }\n    }\n    return range;\n  }\n  getAllParsedValues(scale) {\n    const parsed = this._cachedMeta._parsed;\n    const values = [];\n    let i, ilen, value;\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n      value = parsed[i][scale.axis];\n      if (isNumberFinite(value)) {\n        values.push(value);\n      }\n    }\n    return values;\n  }\n  getMaxOverflow() {\n    return false;\n  }\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const parsed = me.getParsed(index);\n    return {\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n    };\n  }\n  _update(mode) {\n    const me = this;\n    const meta = me._cachedMeta;\n    me.configure();\n    me._cachedDataOpts = {};\n    me.update(mode || 'default');\n    meta._clip = toClip(valueOrDefault(me.options.clip, defaultClip(meta.xScale, meta.yScale, me.getMaxOverflow())));\n  }\n  update(mode) {}\n  draw() {\n    const me = this;\n    const ctx = me._ctx;\n    const chart = me.chart;\n    const meta = me._cachedMeta;\n    const elements = meta.data || [];\n    const area = chart.chartArea;\n    const active = [];\n    const start = me._drawStart || 0;\n    const count = me._drawCount || (elements.length - start);\n    let i;\n    if (meta.dataset) {\n      meta.dataset.draw(ctx, area, start, count);\n    }\n    for (i = start; i < start + count; ++i) {\n      const element = elements[i];\n      if (element.hidden) {\n        continue;\n      }\n      if (element.active) {\n        active.push(element);\n      } else {\n        element.draw(ctx, area);\n      }\n    }\n    for (i = 0; i < active.length; ++i) {\n      active[i].draw(ctx, area);\n    }\n  }\n  getStyle(index, active) {\n    const mode = active ? 'active' : 'default';\n    return index === undefined && this._cachedMeta.dataset\n      ? this.resolveDatasetElementOptions(mode)\n      : this.resolveDataElementOptions(index || 0, mode);\n  }\n  getContext(index, active, mode) {\n    const me = this;\n    const dataset = me.getDataset();\n    let context;\n    if (index >= 0 && index < me._cachedMeta.data.length) {\n      const element = me._cachedMeta.data[index];\n      context = element.$context ||\n        (element.$context = createDataContext(me.getContext(), index, element));\n      context.parsed = me.getParsed(index);\n      context.raw = dataset.data[index];\n      context.index = context.dataIndex = index;\n    } else {\n      context = me.$context ||\n        (me.$context = createDatasetContext(me.chart.getContext(), me.index));\n      context.dataset = dataset;\n      context.index = context.datasetIndex = me.index;\n    }\n    context.active = !!active;\n    context.mode = mode;\n    return context;\n  }\n  resolveDatasetElementOptions(mode) {\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\n  }\n  resolveDataElementOptions(index, mode) {\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\n  }\n  _resolveElementOptions(elementType, mode = 'default', index) {\n    const me = this;\n    const active = mode === 'active';\n    const cache = me._cachedDataOpts;\n    const cacheKey = elementType + '-' + mode;\n    const cached = cache[cacheKey];\n    const sharing = me.enableOptionSharing && defined(index);\n    if (cached) {\n      return cloneIfNotShared(cached, sharing);\n    }\n    const config = me.chart.config;\n    const scopeKeys = config.datasetElementScopeKeys(me._type, elementType);\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\n    const scopes = config.getOptionScopes(me.getDataset(), scopeKeys);\n    const names = Object.keys(defaults.elements[elementType]);\n    const context = () => me.getContext(index, active);\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n    if (values.$shared) {\n      values.$shared = sharing;\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n    }\n    return values;\n  }\n  _resolveAnimations(index, transition, active) {\n    const me = this;\n    const chart = me.chart;\n    const cache = me._cachedDataOpts;\n    const cacheKey = `animation-${transition}`;\n    const cached = cache[cacheKey];\n    if (cached) {\n      return cached;\n    }\n    let options;\n    if (chart.options.animation !== false) {\n      const config = me.chart.config;\n      const scopeKeys = config.datasetAnimationScopeKeys(me._type, transition);\n      const scopes = config.getOptionScopes(me.getDataset(), scopeKeys);\n      options = config.createResolver(scopes, me.getContext(index, active, transition));\n    }\n    const animations = new Animations(chart, options && options.animations);\n    if (options && options._cacheable) {\n      cache[cacheKey] = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getSharedOptions(options) {\n    if (!options.$shared) {\n      return;\n    }\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n  }\n  includeOptions(mode, sharedOptions) {\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n  }\n  updateElement(element, index, properties, mode) {\n    if (isDirectUpdateMode(mode)) {\n      Object.assign(element, properties);\n    } else {\n      this._resolveAnimations(index, mode).update(element, properties);\n    }\n  }\n  updateSharedOptions(sharedOptions, mode, newOptions) {\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n    }\n  }\n  _setStyle(element, index, mode, active) {\n    element.active = active;\n    const options = this.getStyle(index, active);\n    this._resolveAnimations(index, mode, active).update(element, {\n      options: (!active && this.getSharedOptions(options)) || options\n    });\n  }\n  removeHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', false);\n  }\n  setHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', true);\n  }\n  _removeDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', false);\n    }\n  }\n  _setDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', true);\n    }\n  }\n  _resyncElements(resetNewElements) {\n    const me = this;\n    const data = me._data;\n    const elements = me._cachedMeta.data;\n    for (const [method, arg1, arg2] of me._syncList) {\n      me[method](arg1, arg2);\n    }\n    me._syncList = [];\n    const numMeta = elements.length;\n    const numData = data.length;\n    const count = Math.min(numData, numMeta);\n    if (count) {\n      me.parse(0, count);\n    }\n    if (numData > numMeta) {\n      me._insertElements(numMeta, numData - numMeta, resetNewElements);\n    } else if (numData < numMeta) {\n      me._removeElements(numData, numMeta - numData);\n    }\n  }\n  _insertElements(start, count, resetNewElements = true) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const data = meta.data;\n    const end = start + count;\n    let i;\n    const move = (arr) => {\n      arr.length += count;\n      for (i = arr.length - 1; i >= end; i--) {\n        arr[i] = arr[i - count];\n      }\n    };\n    move(data);\n    for (i = start; i < end; ++i) {\n      data[i] = new me.dataElementType();\n    }\n    if (me._parsing) {\n      move(meta._parsed);\n    }\n    me.parse(start, count);\n    if (resetNewElements) {\n      me.updateElements(data, start, count, 'reset');\n    }\n  }\n  updateElements(element, start, count, mode) {}\n  _removeElements(start, count) {\n    const me = this;\n    const meta = me._cachedMeta;\n    if (me._parsing) {\n      const removed = meta._parsed.splice(start, count);\n      if (meta._stacked) {\n        clearStacks(meta, removed);\n      }\n    }\n    meta.data.splice(start, count);\n  }\n  _onDataPush() {\n    const count = arguments.length;\n    this._syncList.push(['_insertElements', this.getDataset().data.length - count, count]);\n  }\n  _onDataPop() {\n    this._syncList.push(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n  }\n  _onDataShift() {\n    this._syncList.push(['_removeElements', 0, 1]);\n  }\n  _onDataSplice(start, count) {\n    this._syncList.push(['_removeElements', start, count]);\n    this._syncList.push(['_insertElements', start, arguments.length - 2]);\n  }\n  _onDataUnshift() {\n    this._syncList.push(['_insertElements', 0, arguments.length]);\n  }\n}\nDatasetController.defaults = {};\nDatasetController.prototype.datasetElementType = null;\nDatasetController.prototype.dataElementType = null;\n\nfunction getAllScaleValues(scale) {\n  if (!scale._cache.$bar) {\n    const metas = scale.getMatchingVisibleMetas('bar');\n    let values = [];\n    for (let i = 0, ilen = metas.length; i < ilen; i++) {\n      values = values.concat(metas[i].controller.getAllParsedValues(scale));\n    }\n    scale._cache.$bar = _arrayUnique(values.sort((a, b) => a - b));\n  }\n  return scale._cache.$bar;\n}\nfunction computeMinSampleSize(scale) {\n  const values = getAllScaleValues(scale);\n  let min = scale._length;\n  let i, ilen, curr, prev;\n  const updateMinAndPrev = () => {\n    if (curr === 32767 || curr === -32768) {\n      return;\n    }\n    if (defined(prev)) {\n      min = Math.min(min, Math.abs(curr - prev) || min);\n    }\n    prev = curr;\n  };\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n  prev = undefined;\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n  return min;\n}\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  const thickness = options.barThickness;\n  let size, ratio;\n  if (isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n  return {\n    chunk: size / stackCount,\n    ratio,\n    start: ruler.pixels[index] - (size / 2)\n  };\n}\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  const pixels = ruler.pixels;\n  const curr = pixels[index];\n  let prev = index > 0 ? pixels[index - 1] : null;\n  let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  const percent = options.categoryPercentage;\n  if (prev === null) {\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n  if (next === null) {\n    next = curr + curr - prev;\n  }\n  const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  const size = Math.abs(next - prev) / 2 * percent;\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start\n  };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n  const startValue = vScale.parse(entry[0], i);\n  const endValue = vScale.parse(entry[1], i);\n  const min = Math.min(startValue, endValue);\n  const max = Math.max(startValue, endValue);\n  let barStart = min;\n  let barEnd = max;\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n  item[vScale.axis] = barEnd;\n  item._custom = {\n    barStart,\n    barEnd,\n    start: startValue,\n    end: endValue,\n    min,\n    max\n  };\n}\nfunction parseValue(entry, item, vScale, i) {\n  if (isArray(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n  return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  const iScale = meta.iScale;\n  const vScale = meta.vScale;\n  const labels = iScale.getLabels();\n  const singleScale = iScale === vScale;\n  const parsed = [];\n  let i, ilen, item, entry;\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n  return parsed;\n}\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nfunction barSign(size, vScale, actualBase) {\n  if (size !== 0) {\n    return sign(size);\n  }\n  return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\nfunction borderProps(properties) {\n  let reverse, start, end, top, bottom;\n  if (properties.horizontal) {\n    reverse = properties.base > properties.x;\n    start = 'left';\n    end = 'right';\n  } else {\n    reverse = properties.base < properties.y;\n    start = 'bottom';\n    end = 'top';\n  }\n  if (reverse) {\n    top = 'end';\n    bottom = 'start';\n  } else {\n    top = 'start';\n    bottom = 'end';\n  }\n  return {start, end, reverse, top, bottom};\n}\nfunction setBorderSkipped(properties, options, stack, index) {\n  let edge = options.borderSkipped;\n  const res = {};\n  if (!edge) {\n    properties.borderSkipped = res;\n    return;\n  }\n  const {start, end, reverse, top, bottom} = borderProps(properties);\n  if (edge === 'middle' && stack) {\n    properties.enableBorderRadius = true;\n    if ((stack._top || 0) === index) {\n      edge = top;\n    } else if ((stack._bottom || 0) === index) {\n      edge = bottom;\n    } else {\n      res[parseEdge(bottom, start, end, reverse)] = true;\n      edge = top;\n    }\n  }\n  res[parseEdge(edge, start, end, reverse)] = true;\n  properties.borderSkipped = res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n  return edge;\n}\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\nclass BarController extends DatasetController {\n  parsePrimitiveData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseArrayData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseObjectData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const parsed = [];\n    let i, ilen, item, obj;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      obj = data[i];\n      item = {};\n      item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n      parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n    }\n    return parsed;\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    super.updateRangeFromParsed(range, scale, parsed, stack);\n    const custom = parsed._custom;\n    if (custom && scale === this._cachedMeta.vScale) {\n      range.min = Math.min(range.min, custom.min);\n      range.max = Math.max(range.max, custom.max);\n    }\n  }\n  getMaxOverflow() {\n    return 0;\n  }\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const {iScale, vScale} = meta;\n    const parsed = me.getParsed(index);\n    const custom = parsed._custom;\n    const value = isFloatBar(custom)\n      ? '[' + custom.start + ', ' + custom.end + ']'\n      : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n    return {\n      label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n      value\n    };\n  }\n  initialize() {\n    const me = this;\n    me.enableOptionSharing = true;\n    super.initialize();\n    const meta = me._cachedMeta;\n    meta.stack = me.getDataset().stack;\n  }\n  update(mode) {\n    const me = this;\n    const meta = me._cachedMeta;\n    me.updateElements(meta.data, 0, meta.data.length, mode);\n  }\n  updateElements(bars, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const {index, _cachedMeta: {vScale}} = me;\n    const base = vScale.getBasePixel();\n    const horizontal = vScale.isHorizontal();\n    const ruler = me._getRuler();\n    const firstOpts = me.resolveDataElementOptions(start, mode);\n    const sharedOptions = me.getSharedOptions(firstOpts);\n    const includeOptions = me.includeOptions(mode, sharedOptions);\n    me.updateSharedOptions(sharedOptions, mode, firstOpts);\n    for (let i = start; i < start + count; i++) {\n      const parsed = me.getParsed(i);\n      const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {base, head: base} : me._calculateBarValuePixels(i);\n      const ipixels = me._calculateBarIndexPixels(i, ruler);\n      const stack = (parsed._stacks || {})[vScale.axis];\n      const properties = {\n        horizontal,\n        base: vpixels.base,\n        enableBorderRadius: !stack || isFloatBar(parsed._custom) || (index === stack._top || index === stack._bottom),\n        x: horizontal ? vpixels.head : ipixels.center,\n        y: horizontal ? ipixels.center : vpixels.head,\n        height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n        width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || me.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n      }\n      setBorderSkipped(properties, properties.options || bars[i].options, stack, index);\n      me.updateElement(bars[i], i, properties, mode);\n    }\n  }\n  _getStacks(last, dataIndex) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const iScale = meta.iScale;\n    const metasets = iScale.getMatchingVisibleMetas(me._type);\n    const stacked = iScale.options.stacked;\n    const ilen = metasets.length;\n    const stacks = [];\n    let i, item;\n    for (i = 0; i < ilen; ++i) {\n      item = metasets[i];\n      if (!item.controller.options.grouped) {\n        continue;\n      }\n      if (typeof dataIndex !== 'undefined') {\n        const val = item.controller.getParsed(dataIndex)[\n          item.controller._cachedMeta.vScale.axis\n        ];\n        if (isNullOrUndef(val) || isNaN(val)) {\n          continue;\n        }\n      }\n      if (stacked === false || stacks.indexOf(item.stack) === -1 ||\n\t\t\t\t(stacked === undefined && item.stack === undefined)) {\n        stacks.push(item.stack);\n      }\n      if (item.index === last) {\n        break;\n      }\n    }\n    if (!stacks.length) {\n      stacks.push(undefined);\n    }\n    return stacks;\n  }\n  _getStackCount(index) {\n    return this._getStacks(undefined, index).length;\n  }\n  _getStackIndex(datasetIndex, name, dataIndex) {\n    const stacks = this._getStacks(datasetIndex, dataIndex);\n    const index = (name !== undefined)\n      ? stacks.indexOf(name)\n      : -1;\n    return (index === -1)\n      ? stacks.length - 1\n      : index;\n  }\n  _getRuler() {\n    const me = this;\n    const opts = me.options;\n    const meta = me._cachedMeta;\n    const iScale = meta.iScale;\n    const pixels = [];\n    let i, ilen;\n    for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n      pixels.push(iScale.getPixelForValue(me.getParsed(i)[iScale.axis], i));\n    }\n    const barThickness = opts.barThickness;\n    const min = barThickness || computeMinSampleSize(iScale);\n    return {\n      min,\n      pixels,\n      start: iScale._startPixel,\n      end: iScale._endPixel,\n      stackCount: me._getStackCount(),\n      scale: iScale,\n      grouped: opts.grouped,\n      ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n    };\n  }\n  _calculateBarValuePixels(index) {\n    const me = this;\n    const {_cachedMeta: {vScale, _stacked}, options: {base: baseValue, minBarLength}} = me;\n    const actualBase = baseValue || 0;\n    const parsed = me.getParsed(index);\n    const custom = parsed._custom;\n    const floating = isFloatBar(custom);\n    let value = parsed[vScale.axis];\n    let start = 0;\n    let length = _stacked ? me.applyStack(vScale, parsed, _stacked) : value;\n    let head, size;\n    if (length !== value) {\n      start = length - value;\n      length = value;\n    }\n    if (floating) {\n      value = custom.barStart;\n      length = custom.barEnd - custom.barStart;\n      if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n        start = 0;\n      }\n      start += value;\n    }\n    const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n    let base = vScale.getPixelForValue(startValue);\n    if (me.chart.getDataVisibility(index)) {\n      head = vScale.getPixelForValue(start + length);\n    } else {\n      head = base;\n    }\n    size = head - base;\n    if (Math.abs(size) < minBarLength) {\n      size = barSign(size, vScale, actualBase) * minBarLength;\n      if (value === actualBase) {\n        base -= size / 2;\n      }\n      head = base + size;\n    }\n    if (base === vScale.getPixelForValue(actualBase)) {\n      const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n      base += halfGrid;\n      size -= halfGrid;\n    }\n    return {\n      size,\n      base,\n      head,\n      center: head + size / 2\n    };\n  }\n  _calculateBarIndexPixels(index, ruler) {\n    const me = this;\n    const scale = ruler.scale;\n    const options = me.options;\n    const skipNull = options.skipNull;\n    const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n    let center, size;\n    if (ruler.grouped) {\n      const stackCount = skipNull ? me._getStackCount(index) : ruler.stackCount;\n      const range = options.barThickness === 'flex'\n        ? computeFlexCategoryTraits(index, ruler, options, stackCount)\n        : computeFitCategoryTraits(index, ruler, options, stackCount);\n      const stackIndex = me._getStackIndex(me.index, me._cachedMeta.stack, skipNull ? index : undefined);\n      center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\n      size = Math.min(maxBarThickness, range.chunk * range.ratio);\n    } else {\n      center = scale.getPixelForValue(me.getParsed(index)[scale.axis], index);\n      size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n    }\n    return {\n      base: center - size / 2,\n      head: center + size / 2,\n      center,\n      size\n    };\n  }\n  draw() {\n    const me = this;\n    const meta = me._cachedMeta;\n    const vScale = meta.vScale;\n    const rects = meta.data;\n    const ilen = rects.length;\n    let i = 0;\n    for (; i < ilen; ++i) {\n      if (me.getParsed(i)[vScale.axis] !== null) {\n        rects[i].draw(me._ctx);\n      }\n    }\n  }\n}\nBarController.id = 'bar';\nBarController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'bar',\n  categoryPercentage: 0.8,\n  barPercentage: 0.9,\n  grouped: true,\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'base', 'width', 'height']\n    }\n  }\n};\nBarController.overrides = {\n  interaction: {\n    mode: 'index'\n  },\n  scales: {\n    _index_: {\n      type: 'category',\n      offset: true,\n      grid: {\n        offset: true\n      }\n    },\n    _value_: {\n      type: 'linear',\n      beginAtZero: true,\n    }\n  }\n};\n\nclass BubbleController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = [];\n    let i, ilen, item;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      item = data[i];\n      parsed.push({\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), i),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), i),\n        _custom: item && item.r && +item.r\n      });\n    }\n    return parsed;\n  }\n  getMaxOverflow() {\n    const {data, _parsed} = this._cachedMeta;\n    let max = 0;\n    for (let i = data.length - 1; i >= 0; --i) {\n      max = Math.max(max, data[i].size() / 2, _parsed[i]._custom);\n    }\n    return max > 0 && max;\n  }\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const {xScale, yScale} = meta;\n    const parsed = me.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n    const r = parsed._custom;\n    return {\n      label: meta.label,\n      value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n    };\n  }\n  update(mode) {\n    const me = this;\n    const points = me._cachedMeta.data;\n    me.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const {iScale, vScale} = me._cachedMeta;\n    const firstOpts = me.resolveDataElementOptions(start, mode);\n    const sharedOptions = me.getSharedOptions(firstOpts);\n    const includeOptions = me.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const parsed = !reset && me.getParsed(i);\n      const properties = {};\n      const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n      const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel);\n      if (includeOptions) {\n        properties.options = me.resolveDataElementOptions(i, point.active ? 'active' : mode);\n        if (reset) {\n          properties.options.radius = 0;\n        }\n      }\n      me.updateElement(point, i, properties, mode);\n    }\n    me.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  resolveDataElementOptions(index, mode) {\n    const parsed = this.getParsed(index);\n    let values = super.resolveDataElementOptions(index, mode);\n    if (values.$shared) {\n      values = Object.assign({}, values, {$shared: false});\n    }\n    const radius = values.radius;\n    if (mode !== 'active') {\n      values.radius = 0;\n    }\n    values.radius += valueOrDefault(parsed && parsed._custom, radius);\n    return values;\n  }\n}\nBubbleController.id = 'bubble';\nBubbleController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'point',\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'borderWidth', 'radius']\n    }\n  }\n};\nBubbleController.overrides = {\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        }\n      }\n    }\n  }\n};\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  let ratioX = 1;\n  let ratioY = 1;\n  let offsetX = 0;\n  let offsetY = 0;\n  if (circumference < TAU) {\n    const startAngle = rotation;\n    const endAngle = startAngle + circumference;\n    const startX = Math.cos(startAngle);\n    const startY = Math.sin(startAngle);\n    const endX = Math.cos(endAngle);\n    const endY = Math.sin(endAngle);\n    const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n    const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n    const maxX = calcMax(0, startX, endX);\n    const maxY = calcMax(HALF_PI, startY, endY);\n    const minX = calcMin(PI, startX, endX);\n    const minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n  return {ratioX, ratioY, offsetX, offsetY};\n}\nclass DoughnutController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.enableOptionSharing = true;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.offsetX = undefined;\n    this.offsetY = undefined;\n  }\n  linkScales() {}\n  parse(start, count) {\n    const data = this.getDataset().data;\n    const meta = this._cachedMeta;\n    let i, ilen;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      meta._parsed[i] = +data[i];\n    }\n  }\n  _getRotation() {\n    return toRadians(this.options.rotation - 90);\n  }\n  _getCircumference() {\n    return toRadians(this.options.circumference);\n  }\n  _getRotationExtents() {\n    let min = TAU;\n    let max = -TAU;\n    const me = this;\n    for (let i = 0; i < me.chart.data.datasets.length; ++i) {\n      if (me.chart.isDatasetVisible(i)) {\n        const controller = me.chart.getDatasetMeta(i).controller;\n        const rotation = controller._getRotation();\n        const circumference = controller._getCircumference();\n        min = Math.min(min, rotation);\n        max = Math.max(max, rotation + circumference);\n      }\n    }\n    return {\n      rotation: min,\n      circumference: max - min,\n    };\n  }\n  update(mode) {\n    const me = this;\n    const chart = me.chart;\n    const {chartArea} = chart;\n    const meta = me._cachedMeta;\n    const arcs = meta.data;\n    const spacing = me.getMaxBorderWidth() + me.getMaxOffset(arcs) + me.options.spacing;\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n    const cutout = Math.min(toPercentage(me.options.cutout, maxSize), 1);\n    const chartWeight = me._getRingWeight(me.index);\n    const {circumference, rotation} = me._getRotationExtents();\n    const {ratioX, ratioY, offsetX, offsetY} = getRatioAndOffset(rotation, circumference, cutout);\n    const maxWidth = (chartArea.width - spacing) / ratioX;\n    const maxHeight = (chartArea.height - spacing) / ratioY;\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n    const outerRadius = toDimension(me.options.radius, maxRadius);\n    const innerRadius = Math.max(outerRadius * cutout, 0);\n    const radiusLength = (outerRadius - innerRadius) / me._getVisibleDatasetWeightTotal();\n    me.offsetX = offsetX * outerRadius;\n    me.offsetY = offsetY * outerRadius;\n    meta.total = me.calculateTotal();\n    me.outerRadius = outerRadius - radiusLength * me._getRingWeightOffset(me.index);\n    me.innerRadius = Math.max(me.outerRadius - radiusLength * chartWeight, 0);\n    me.updateElements(arcs, 0, arcs.length, mode);\n  }\n  _circumference(i, reset) {\n    const me = this;\n    const opts = me.options;\n    const meta = me._cachedMeta;\n    const circumference = me._getCircumference();\n    if ((reset && opts.animation.animateRotate) || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n      return 0;\n    }\n    return me.calculateCircumference(meta._parsed[i] * circumference / TAU);\n  }\n  updateElements(arcs, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const chart = me.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const centerX = (chartArea.left + chartArea.right) / 2;\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\n    const animateScale = reset && animationOpts.animateScale;\n    const innerRadius = animateScale ? 0 : me.innerRadius;\n    const outerRadius = animateScale ? 0 : me.outerRadius;\n    const firstOpts = me.resolveDataElementOptions(start, mode);\n    const sharedOptions = me.getSharedOptions(firstOpts);\n    const includeOptions = me.includeOptions(mode, sharedOptions);\n    let startAngle = me._getRotation();\n    let i;\n    for (i = 0; i < start; ++i) {\n      startAngle += me._circumference(i, reset);\n    }\n    for (i = start; i < start + count; ++i) {\n      const circumference = me._circumference(i, reset);\n      const arc = arcs[i];\n      const properties = {\n        x: centerX + me.offsetX,\n        y: centerY + me.offsetY,\n        startAngle,\n        endAngle: startAngle + circumference,\n        circumference,\n        outerRadius,\n        innerRadius\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || me.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n      }\n      startAngle += circumference;\n      me.updateElement(arc, i, properties, mode);\n    }\n    me.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  calculateTotal() {\n    const meta = this._cachedMeta;\n    const metaData = meta.data;\n    let total = 0;\n    let i;\n    for (i = 0; i < metaData.length; i++) {\n      const value = meta._parsed[i];\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n        total += Math.abs(value);\n      }\n    }\n    return total;\n  }\n  calculateCircumference(value) {\n    const total = this._cachedMeta.total;\n    if (total > 0 && !isNaN(value)) {\n      return TAU * (Math.abs(value) / total);\n    }\n    return 0;\n  }\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const chart = me.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index], chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n  getMaxBorderWidth(arcs) {\n    const me = this;\n    let max = 0;\n    const chart = me.chart;\n    let i, ilen, meta, controller, options;\n    if (!arcs) {\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n          arcs = meta.data;\n          controller = meta.controller;\n          if (controller !== me) {\n            controller.configure();\n          }\n          break;\n        }\n      }\n    }\n    if (!arcs) {\n      return 0;\n    }\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n      options = controller.resolveDataElementOptions(i);\n      if (options.borderAlign !== 'inner') {\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n      }\n    }\n    return max;\n  }\n  getMaxOffset(arcs) {\n    let max = 0;\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\n      const options = this.resolveDataElementOptions(i);\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n    }\n    return max;\n  }\n  _getRingWeightOffset(datasetIndex) {\n    let ringWeightOffset = 0;\n    for (let i = 0; i < datasetIndex; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        ringWeightOffset += this._getRingWeight(i);\n      }\n    }\n    return ringWeightOffset;\n  }\n  _getRingWeight(datasetIndex) {\n    return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n  }\n  _getVisibleDatasetWeightTotal() {\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n  }\n}\nDoughnutController.id = 'doughnut';\nDoughnutController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: false\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth', 'spacing']\n    },\n  },\n  cutout: '50%',\n  rotation: 0,\n  circumference: 360,\n  radius: '100%',\n  spacing: 0,\n  indexAxis: 'r',\n};\nDoughnutController.descriptors = {\n  _scriptable: (name) => name !== 'spacing',\n  _indexable: (name) => name !== 'spacing',\n};\nDoughnutController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            const {labels: {pointStyle}} = chart.legend.options;\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(tooltipItem) {\n          let dataLabel = tooltipItem.label;\n          const value = ': ' + tooltipItem.formattedValue;\n          if (isArray(dataLabel)) {\n            dataLabel = dataLabel.slice();\n            dataLabel[0] += value;\n          } else {\n            dataLabel += value;\n          }\n          return dataLabel;\n        }\n      }\n    }\n  }\n};\n\nclass LineController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n  update(mode) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const {dataset: line, data: points = [], _dataset} = meta;\n    const animationsDisabled = me.chart._animationsDisabled;\n    let {start, count} = getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n    me._drawStart = start;\n    me._drawCount = count;\n    if (scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n    line._datasetIndex = me.index;\n    line._decimated = !!_dataset._decimated;\n    line.points = points;\n    const options = me.resolveDatasetElementOptions(mode);\n    if (!me.options.showLine) {\n      options.borderWidth = 0;\n    }\n    options.segment = me.options.segment;\n    me.updateElement(line, undefined, {\n      animated: !animationsDisabled,\n      options\n    }, mode);\n    me.updateElements(points, start, count, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked} = me._cachedMeta;\n    const firstOpts = me.resolveDataElementOptions(start, mode);\n    const sharedOptions = me.getSharedOptions(firstOpts);\n    const includeOptions = me.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const spanGaps = me.options.spanGaps;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = me.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && me.getParsed(start - 1);\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = me.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? me.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n      properties.parsed = parsed;\n      if (includeOptions) {\n        properties.options = sharedOptions || me.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n      if (!directUpdate) {\n        me.updateElement(point, i, properties, mode);\n      }\n      prevParsed = parsed;\n    }\n    me.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  getMaxOverflow() {\n    const me = this;\n    const meta = me._cachedMeta;\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    const data = meta.data || [];\n    if (!data.length) {\n      return border;\n    }\n    const firstPoint = data[0].size(me.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(me.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n  draw() {\n    const meta = this._cachedMeta;\n    meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n    super.draw();\n  }\n}\nLineController.id = 'line';\nLineController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  showLine: true,\n  spanGaps: false,\n};\nLineController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category',\n    },\n    _value_: {\n      type: 'linear',\n    },\n  }\n};\nfunction getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n  const pointCount = points.length;\n  let start = 0;\n  let count = pointCount;\n  if (meta._sorted) {\n    const {iScale, _parsed} = meta;\n    const axis = iScale.axis;\n    const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n    if (minDefined) {\n      start = _limitValue(Math.min(\n        _lookupByKey(_parsed, iScale.axis, min).lo,\n        animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo),\n      0, pointCount - 1);\n    }\n    if (maxDefined) {\n      count = _limitValue(Math.max(\n        _lookupByKey(_parsed, iScale.axis, max).hi + 1,\n        animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max)).hi + 1),\n      start, pointCount) - start;\n    } else {\n      count = pointCount - start;\n    }\n  }\n  return {start, count};\n}\nfunction scaleRangesChanged(meta) {\n  const {xScale, yScale, _scaleRanges} = meta;\n  const newRanges = {\n    xmin: xScale.min,\n    xmax: xScale.max,\n    ymin: yScale.min,\n    ymax: yScale.max\n  };\n  if (!_scaleRanges) {\n    meta._scaleRanges = newRanges;\n    return true;\n  }\n  const changed = _scaleRanges.xmin !== xScale.min\n\t\t|| _scaleRanges.xmax !== xScale.max\n\t\t|| _scaleRanges.ymin !== yScale.min\n\t\t|| _scaleRanges.ymax !== yScale.max;\n  Object.assign(_scaleRanges, newRanges);\n  return changed;\n}\n\nclass PolarAreaController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n  }\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const chart = me.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n  update(mode) {\n    const arcs = this._cachedMeta.data;\n    this._updateRadius();\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n  _updateRadius() {\n    const me = this;\n    const chart = me.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n    const outerRadius = Math.max(minSize / 2, 0);\n    const innerRadius = Math.max(opts.cutoutPercentage ? (outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\n    const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n    me.outerRadius = outerRadius - (radiusLength * me.index);\n    me.innerRadius = me.outerRadius - radiusLength;\n  }\n  updateElements(arcs, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const chart = me.chart;\n    const dataset = me.getDataset();\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const scale = me._cachedMeta.rScale;\n    const centerX = scale.xCenter;\n    const centerY = scale.yCenter;\n    const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n    let angle = datasetStartAngle;\n    let i;\n    const defaultAngle = 360 / me.countVisibleElements();\n    for (i = 0; i < start; ++i) {\n      angle += me._computeAngle(i, mode, defaultAngle);\n    }\n    for (i = start; i < start + count; i++) {\n      const arc = arcs[i];\n      let startAngle = angle;\n      let endAngle = angle + me._computeAngle(i, mode, defaultAngle);\n      let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(dataset.data[i]) : 0;\n      angle = endAngle;\n      if (reset) {\n        if (animationOpts.animateScale) {\n          outerRadius = 0;\n        }\n        if (animationOpts.animateRotate) {\n          startAngle = endAngle = datasetStartAngle;\n        }\n      }\n      const properties = {\n        x: centerX,\n        y: centerY,\n        innerRadius: 0,\n        outerRadius,\n        startAngle,\n        endAngle,\n        options: me.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n      };\n      me.updateElement(arc, i, properties, mode);\n    }\n  }\n  countVisibleElements() {\n    const dataset = this.getDataset();\n    const meta = this._cachedMeta;\n    let count = 0;\n    meta.data.forEach((element, index) => {\n      if (!isNaN(dataset.data[index]) && this.chart.getDataVisibility(index)) {\n        count++;\n      }\n    });\n    return count;\n  }\n  _computeAngle(index, mode, defaultAngle) {\n    return this.chart.getDataVisibility(index)\n      ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle)\n      : 0;\n  }\n}\nPolarAreaController.id = 'polarArea';\nPolarAreaController.defaults = {\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: true\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n    },\n  },\n  indexAxis: 'r',\n  startAngle: 0,\n};\nPolarAreaController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            const {labels: {pointStyle}} = chart.legend.options;\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(context) {\n          return context.chart.data.labels[context.dataIndex] + ': ' + context.formattedValue;\n        }\n      }\n    }\n  },\n  scales: {\n    r: {\n      type: 'radialLinear',\n      angleLines: {\n        display: false\n      },\n      beginAtZero: true,\n      grid: {\n        circular: true\n      },\n      pointLabels: {\n        display: false\n      },\n      startAngle: 0\n    }\n  }\n};\n\nclass PieController extends DoughnutController {\n}\nPieController.id = 'pie';\nPieController.defaults = {\n  cutout: 0,\n  rotation: 0,\n  circumference: 360,\n  radius: '100%'\n};\n\nclass RadarController extends DatasetController {\n  getLabelAndValue(index) {\n    const me = this;\n    const vScale = me._cachedMeta.vScale;\n    const parsed = me.getParsed(index);\n    return {\n      label: vScale.getLabels()[index],\n      value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n    };\n  }\n  update(mode) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const line = meta.dataset;\n    const points = meta.data || [];\n    const labels = meta.iScale.getLabels();\n    line.points = points;\n    if (mode !== 'resize') {\n      const options = me.resolveDatasetElementOptions(mode);\n      if (!me.options.showLine) {\n        options.borderWidth = 0;\n      }\n      const properties = {\n        _loop: true,\n        _fullLoop: labels.length === points.length,\n        options\n      };\n      me.updateElement(line, undefined, properties, mode);\n    }\n    me.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const me = this;\n    const dataset = me.getDataset();\n    const scale = me._cachedMeta.rScale;\n    const reset = mode === 'reset';\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const options = me.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      const pointPosition = scale.getPointPositionForValue(i, dataset.data[i]);\n      const x = reset ? scale.xCenter : pointPosition.x;\n      const y = reset ? scale.yCenter : pointPosition.y;\n      const properties = {\n        x,\n        y,\n        angle: pointPosition.angle,\n        skip: isNaN(x) || isNaN(y),\n        options\n      };\n      me.updateElement(point, i, properties, mode);\n    }\n  }\n}\nRadarController.id = 'radar';\nRadarController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  indexAxis: 'r',\n  showLine: true,\n  elements: {\n    line: {\n      fill: 'start'\n    }\n  },\n};\nRadarController.overrides = {\n  aspectRatio: 1,\n  scales: {\n    r: {\n      type: 'radialLinear',\n    }\n  }\n};\n\nclass ScatterController extends LineController {\n}\nScatterController.id = 'scatter';\nScatterController.defaults = {\n  showLine: false,\n  fill: false\n};\nScatterController.overrides = {\n  interaction: {\n    mode: 'point'\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(item) {\n          return '(' + item.label + ', ' + item.formattedValue + ')';\n        }\n      }\n    }\n  },\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  }\n};\n\nvar controllers = /*#__PURE__*/Object.freeze({\n__proto__: null,\nBarController: BarController,\nBubbleController: BubbleController,\nDoughnutController: DoughnutController,\nLineController: LineController,\nPolarAreaController: PolarAreaController,\nPieController: PieController,\nRadarController: RadarController,\nScatterController: ScatterController\n});\n\nfunction abstract() {\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\nclass DateAdapter {\n  constructor(options) {\n    this.options = options || {};\n  }\n  formats() {\n    return abstract();\n  }\n  parse(value, format) {\n    return abstract();\n  }\n  format(timestamp, format) {\n    return abstract();\n  }\n  add(timestamp, amount, unit) {\n    return abstract();\n  }\n  diff(a, b, unit) {\n    return abstract();\n  }\n  startOf(timestamp, unit, weekday) {\n    return abstract();\n  }\n  endOf(timestamp, unit) {\n    return abstract();\n  }\n}\nDateAdapter.override = function(members) {\n  Object.assign(DateAdapter.prototype, members);\n};\nvar adapters = {\n  _date: DateAdapter\n};\n\nfunction getRelativePosition(e, chart) {\n  if ('native' in e) {\n    return {\n      x: e.x,\n      y: e.y\n    };\n  }\n  return getRelativePosition$1(e, chart);\n}\nfunction evaluateAllVisibleItems(chart, handler) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  let index, data, element;\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    ({index, data} = metasets[i]);\n    for (let j = 0, jlen = data.length; j < jlen; ++j) {\n      element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\nfunction binarySearch(metaset, axis, value, intersect) {\n  const {controller, data, _sorted} = metaset;\n  const iScale = controller._cachedMeta.iScale;\n  if (iScale && axis === iScale.axis && _sorted && data.length) {\n    const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n    if (!intersect) {\n      return lookupMethod(data, axis, value);\n    } else if (controller._sharedOptions) {\n      const el = data[0];\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\n      if (range) {\n        const start = lookupMethod(data, axis, value - range);\n        const end = lookupMethod(data, axis, value + range);\n        return {lo: start.lo, hi: end.hi};\n      }\n    }\n  }\n  return {lo: 0, hi: data.length - 1};\n}\nfunction optimizedEvaluateItems(chart, axis, position, handler, intersect) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  const value = position[axis];\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    const {index, data} = metasets[i];\n    const {lo, hi} = binarySearch(metasets[i], axis, value, intersect);\n    for (let j = lo; j <= hi; ++j) {\n      const element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\nfunction getDistanceMetricForAxis(axis) {\n  const useX = axis.indexOf('x') !== -1;\n  const useY = axis.indexOf('y') !== -1;\n  return function(pt1, pt2) {\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\nfunction getIntersectItems(chart, position, axis, useFinalPosition) {\n  const items = [];\n  if (!_isPointInArea(position, chart.chartArea, chart._minPadding)) {\n    return items;\n  }\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n  optimizedEvaluateItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition) {\n  const distanceMetric = getDistanceMetricForAxis(axis);\n  let minDistance = Number.POSITIVE_INFINITY;\n  let items = [];\n  if (!_isPointInArea(position, chart.chartArea, chart._minPadding)) {\n    return items;\n  }\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (intersect && !element.inRange(position.x, position.y, useFinalPosition)) {\n      return;\n    }\n    const center = element.getCenterPoint(useFinalPosition);\n    if (!_isPointInArea(center, chart.chartArea, chart._minPadding) && !element.inRange(position.x, position.y, useFinalPosition)) {\n      return;\n    }\n    const distance = distanceMetric(position, center);\n    if (distance < minDistance) {\n      items = [{element, datasetIndex, index}];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n  optimizedEvaluateItems(chart, axis, position, evaluationFunc);\n  return items;\n}\nfunction getAxisItems(chart, e, options, useFinalPosition) {\n  const position = getRelativePosition(e, chart);\n  const items = [];\n  const axis = options.axis;\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  let intersectsItem = false;\n  evaluateAllVisibleItems(chart, (element, datasetIndex, index) => {\n    if (element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      intersectsItem = true;\n    }\n  });\n  if (options.intersect && !intersectsItem) {\n    return [];\n  }\n  return items;\n}\nvar Interaction = {\n  modes: {\n    index(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'x';\n      const items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition)\n        : getNearestItems(chart, position, axis, false, useFinalPosition);\n      const elements = [];\n      if (!items.length) {\n        return [];\n      }\n      chart.getSortedVisibleDatasetMetas().forEach((meta) => {\n        const index = items[0].index;\n        const element = meta.data[index];\n        if (element && !element.skip) {\n          elements.push({element, datasetIndex: meta.index, index});\n        }\n      });\n      return elements;\n    },\n    dataset(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      let items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition) :\n        getNearestItems(chart, position, axis, false, useFinalPosition);\n      if (items.length > 0) {\n        const datasetIndex = items[0].datasetIndex;\n        const data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n        for (let i = 0; i < data.length; ++i) {\n          items.push({element: data[i], datasetIndex, index: i});\n        }\n      }\n      return items;\n    },\n    point(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      return getIntersectItems(chart, position, axis, useFinalPosition);\n    },\n    nearest(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition);\n    },\n    x(chart, e, options, useFinalPosition) {\n      options.axis = 'x';\n      return getAxisItems(chart, e, options, useFinalPosition);\n    },\n    y(chart, e, options, useFinalPosition) {\n      options.axis = 'y';\n      return getAxisItems(chart, e, options, useFinalPosition);\n    }\n  }\n};\n\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\nfunction filterByPosition(array, position) {\n  return array.filter(v => v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n  return array.sort((a, b) => {\n    const v0 = reverse ? b : a;\n    const v1 = reverse ? a : b;\n    return v0.weight === v1.weight ?\n      v0.index - v1.index :\n      v0.weight - v1.weight;\n  });\n}\nfunction wrapBoxes(boxes) {\n  const layoutBoxes = [];\n  let i, ilen, box, pos, stack, stackWeight;\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    ({position: pos, options: {stack, stackWeight = 1}} = box);\n    layoutBoxes.push({\n      index: i,\n      box,\n      pos,\n      horizontal: box.isHorizontal(),\n      weight: box.weight,\n      stack: stack && (pos + stack),\n      stackWeight\n    });\n  }\n  return layoutBoxes;\n}\nfunction buildStacks(layouts) {\n  const stacks = {};\n  for (const wrap of layouts) {\n    const {stack, pos, stackWeight} = wrap;\n    if (!stack || !STATIC_POSITIONS.includes(pos)) {\n      continue;\n    }\n    const _stack = stacks[stack] || (stacks[stack] = {count: 0, placed: 0, weight: 0, size: 0});\n    _stack.count++;\n    _stack.weight += stackWeight;\n  }\n  return stacks;\n}\nfunction setLayoutDims(layouts, params) {\n  const stacks = buildStacks(layouts);\n  const {vBoxMaxWidth, hBoxMaxHeight} = params;\n  let i, ilen, layout;\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    const {fullSize} = layout.box;\n    const stack = stacks[layout.stack];\n    const factor = stack && layout.stackWeight / stack.weight;\n    if (layout.horizontal) {\n      layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n      layout.height = hBoxMaxHeight;\n    } else {\n      layout.width = vBoxMaxWidth;\n      layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n    }\n  }\n  return stacks;\n}\nfunction buildLayoutBoxes(boxes) {\n  const layoutBoxes = wrapBoxes(boxes);\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n  return {\n    fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout, stacks) {\n  const {pos, box} = layout;\n  const maxPadding = chartArea.maxPadding;\n  if (!isObject(pos)) {\n    if (layout.size) {\n      chartArea[pos] -= layout.size;\n    }\n    const stack = stacks[layout.stack] || {size: 0, count: 1};\n    stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n    layout.size = stack.size / stack.count;\n    chartArea[pos] += layout.size;\n  }\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  const widthChanged = newWidth !== chartArea.w;\n  const heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n  return layout.horizontal\n    ? {same: widthChanged, other: heightChanged}\n    : {same: heightChanged, other: widthChanged};\n}\nfunction handleMaxPadding(chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function updatePos(pos) {\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function marginForPositions(positions) {\n    const margin = {left: 0, top: 0, right: 0, bottom: 0};\n    positions.forEach((pos) => {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n  return horizontal\n    ? marginForPositions(['left', 'right'])\n    : marginForPositions(['top', 'bottom']);\n}\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n  const refitBoxes = [];\n  let i, ilen, layout, box, refit, changed;\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n    box.update(\n      layout.width || chartArea.w,\n      layout.height || chartArea.h,\n      getMargins(layout.horizontal, chartArea)\n    );\n    const {same, other} = updateDims(chartArea, params, layout, stacks);\n    refit |= same && refitBoxes.length;\n    changed = changed || other;\n    if (!box.fullSize) {\n      refitBoxes.push(layout);\n    }\n  }\n  return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\nfunction setBoxDims(box, left, top, width, height) {\n  box.top = top;\n  box.left = left;\n  box.right = left + width;\n  box.bottom = top + height;\n  box.width = width;\n  box.height = height;\n}\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n  const userPadding = params.padding;\n  let {x, y} = chartArea;\n  for (const layout of boxes) {\n    const box = layout.box;\n    const stack = stacks[layout.stack] || {count: 1, placed: 0, weight: 1};\n    const weight = (layout.stackWeight / stack.weight) || 1;\n    if (layout.horizontal) {\n      const width = chartArea.w * weight;\n      const height = stack.size || box.height;\n      if (defined(stack.start)) {\n        y = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n      } else {\n        setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n      }\n      stack.start = y;\n      stack.placed += width;\n      y = box.bottom;\n    } else {\n      const height = chartArea.h * weight;\n      const width = stack.size || box.width;\n      if (defined(stack.start)) {\n        x = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n      } else {\n        setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n      }\n      stack.start = x;\n      stack.placed += height;\n      x = box.right;\n    }\n  }\n  chartArea.x = x;\n  chartArea.y = y;\n}\ndefaults.set('layout', {\n  padding: {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0\n  }\n});\nvar layouts = {\n  addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    item._layers = item._layers || function() {\n      return [{\n        z: 0,\n        draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n    chart.boxes.push(item);\n  },\n  removeBox(chart, layoutItem) {\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n  configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n  update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n    const padding = toPadding(chart.options.layout.padding);\n    const availableWidth = Math.max(width - padding.width, 0);\n    const availableHeight = Math.max(height - padding.height, 0);\n    const boxes = buildLayoutBoxes(chart.boxes);\n    const verticalBoxes = boxes.vertical;\n    const horizontalBoxes = boxes.horizontal;\n    each(chart.boxes, box => {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) =>\n      wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n    const params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding,\n      availableWidth,\n      availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    const maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    const chartArea = Object.assign({\n      maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n    const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n    fitBoxes(boxes.fullSize, chartArea, params, stacks);\n    fitBoxes(verticalBoxes, chartArea, params, stacks);\n    if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n      fitBoxes(verticalBoxes, chartArea, params, stacks);\n    }\n    handleMaxPadding(chartArea);\n    placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n    placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w,\n    };\n    each(boxes.chartArea, (layout) => {\n      const box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h);\n    });\n  }\n};\n\nclass BasePlatform {\n  acquireContext(canvas, aspectRatio) {}\n  releaseContext(context) {\n    return false;\n  }\n  addEventListener(chart, type, listener) {}\n  removeEventListener(chart, type, listener) {}\n  getDevicePixelRatio() {\n    return 1;\n  }\n  getMaximumSize(element, width, height, aspectRatio) {\n    width = Math.max(0, width || element.width);\n    height = height || element.height;\n    return {\n      width,\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n    };\n  }\n  isAttached(canvas) {\n    return true;\n  }\n}\n\nclass BasicPlatform extends BasePlatform {\n  acquireContext(item) {\n    return item && item.getContext && item.getContext('2d') || null;\n  }\n}\n\nconst EXPANDO_KEY = '$chartjs';\nconst EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\nconst isNullOrEmpty = value => value === null || value === '';\nfunction initCanvas(canvas, aspectRatio) {\n  const style = canvas.style;\n  const renderHeight = canvas.getAttribute('height');\n  const renderWidth = canvas.getAttribute('width');\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n  style.display = style.display || 'block';\n  style.boxSizing = style.boxSizing || 'border-box';\n  if (isNullOrEmpty(renderWidth)) {\n    const displayWidth = readUsedSize(canvas, 'width');\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      const displayHeight = readUsedSize(canvas, 'height');\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n  return canvas;\n}\nconst eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\nfunction addListener(node, type, listener) {\n  node.addEventListener(type, listener, eventListenerOptions);\n}\nfunction removeListener(chart, type, listener) {\n  chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\nfunction fromNativeEvent(event, chart) {\n  const type = EVENT_TYPES[event.type] || event.type;\n  const {x, y} = getRelativePosition$1(event, chart);\n  return {\n    type,\n    chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null,\n  };\n}\nfunction createAttachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  const element = container || canvas;\n  const observer = new MutationObserver(entries => {\n    const parent = _getParentNode(element);\n    entries.forEach(entry => {\n      for (let i = 0; i < entry.addedNodes.length; i++) {\n        const added = entry.addedNodes[i];\n        if (added === element || added === parent) {\n          listener(entry.target);\n        }\n      }\n    });\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const observer = new MutationObserver(entries => {\n    entries.forEach(entry => {\n      for (let i = 0; i < entry.removedNodes.length; i++) {\n        if (entry.removedNodes[i] === canvas) {\n          listener();\n          break;\n        }\n      }\n    });\n  });\n  observer.observe(container, {childList: true});\n  return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n  const dpr = window.devicePixelRatio;\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach((resize, chart) => {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n  drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\nfunction createResizeObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const resize = throttled((width, height) => {\n    const w = container.clientWidth;\n    listener(width, height);\n    if (w < container.clientWidth) {\n      listener();\n    }\n  }, window);\n  const observer = new ResizeObserver(entries => {\n    const entry = entries[0];\n    const width = entry.contentRect.width;\n    const height = entry.contentRect.height;\n    if (width === 0 && height === 0) {\n      return;\n    }\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n  return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\nfunction createProxyAndListen(chart, type, listener) {\n  const canvas = chart.canvas;\n  const proxy = throttled((event) => {\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart, (args) => {\n    const event = args[0];\n    return [event, event.offsetX, event.offsetY];\n  });\n  addListener(canvas, type, proxy);\n  return proxy;\n}\nclass DomPlatform extends BasePlatform {\n  acquireContext(canvas, aspectRatio) {\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\n    if (context && context.canvas === canvas) {\n      initCanvas(canvas, aspectRatio);\n      return context;\n    }\n    return null;\n  }\n  releaseContext(context) {\n    const canvas = context.canvas;\n    if (!canvas[EXPANDO_KEY]) {\n      return false;\n    }\n    const initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach((prop) => {\n      const value = initial[prop];\n      if (isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n    const style = initial.style || {};\n    Object.keys(style).forEach((key) => {\n      canvas.style[key] = style[key];\n    });\n    canvas.width = canvas.width;\n    delete canvas[EXPANDO_KEY];\n    return true;\n  }\n  addEventListener(chart, type, listener) {\n    this.removeEventListener(chart, type);\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const handlers = {\n      attach: createAttachObserver,\n      detach: createDetachObserver,\n      resize: createResizeObserver\n    };\n    const handler = handlers[type] || createProxyAndListen;\n    proxies[type] = handler(chart, type, listener);\n  }\n  removeEventListener(chart, type) {\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const proxy = proxies[type];\n    if (!proxy) {\n      return;\n    }\n    const handlers = {\n      attach: releaseObserver,\n      detach: releaseObserver,\n      resize: releaseObserver\n    };\n    const handler = handlers[type] || removeListener;\n    handler(chart, type, proxy);\n    proxies[type] = undefined;\n  }\n  getDevicePixelRatio() {\n    return window.devicePixelRatio;\n  }\n  getMaximumSize(canvas, width, height, aspectRatio) {\n    return getMaximumSize(canvas, width, height, aspectRatio);\n  }\n  isAttached(canvas) {\n    const container = _getParentNode(canvas);\n    return !!(container && container.isConnected);\n  }\n}\n\nfunction _detectPlatform(canvas) {\n  if (!_isDomSupported() || (typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas)) {\n    return BasicPlatform;\n  }\n  return DomPlatform;\n}\n\nclass Element {\n  constructor() {\n    this.x = undefined;\n    this.y = undefined;\n    this.active = false;\n    this.options = undefined;\n    this.$animations = undefined;\n  }\n  tooltipPosition(useFinalPosition) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n  hasValue() {\n    return isNumber(this.x) && isNumber(this.y);\n  }\n  getProps(props, final) {\n    const me = this;\n    const anims = this.$animations;\n    if (!final || !anims) {\n      return me;\n    }\n    const ret = {};\n    props.forEach(prop => {\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : me[prop];\n    });\n    return ret;\n  }\n}\nElement.defaults = {};\nElement.defaultRoutes = undefined;\n\nconst formatters = {\n  values(value) {\n    return isArray(value) ? value : '' + value;\n  },\n  numeric(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const locale = this.chart.options.locale;\n    let notation;\n    let delta = tickValue;\n    if (ticks.length > 1) {\n      const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\n        notation = 'scientific';\n      }\n      delta = calculateDelta(tickValue, ticks);\n    }\n    const logDelta = log10(Math.abs(delta));\n    const numDecimal = Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n    const options = {notation, minimumFractionDigits: numDecimal, maximumFractionDigits: numDecimal};\n    Object.assign(options, this.options.ticks.format);\n    return formatNumber(tickValue, locale, options);\n  },\n  logarithmic(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const remain = tickValue / (Math.pow(10, Math.floor(log10(tickValue))));\n    if (remain === 1 || remain === 2 || remain === 5) {\n      return formatters.numeric.call(this, tickValue, index, ticks);\n    }\n    return '';\n  }\n};\nfunction calculateDelta(tickValue, ticks) {\n  let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n  if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n    delta = tickValue - Math.floor(tickValue);\n  }\n  return delta;\n}\nvar Ticks = {formatters};\n\ndefaults.set('scale', {\n  display: true,\n  offset: false,\n  reverse: false,\n  beginAtZero: false,\n  bounds: 'ticks',\n  grace: 0,\n  grid: {\n    display: true,\n    lineWidth: 1,\n    drawBorder: true,\n    drawOnChartArea: true,\n    drawTicks: true,\n    tickLength: 8,\n    tickWidth: (_ctx, options) => options.lineWidth,\n    tickColor: (_ctx, options) => options.color,\n    offset: false,\n    borderDash: [],\n    borderDashOffset: 0.0,\n    borderWidth: 1\n  },\n  title: {\n    display: false,\n    text: '',\n    padding: {\n      top: 4,\n      bottom: 4\n    }\n  },\n  ticks: {\n    minRotation: 0,\n    maxRotation: 50,\n    mirror: false,\n    textStrokeWidth: 0,\n    textStrokeColor: '',\n    padding: 3,\n    display: true,\n    autoSkip: true,\n    autoSkipPadding: 3,\n    labelOffset: 0,\n    callback: Ticks.formatters.values,\n    minor: {},\n    major: {},\n    align: 'center',\n    crossAlign: 'near',\n    showLabelBackdrop: false,\n    backdropColor: 'rgba(255, 255, 255, 0.75)',\n    backdropPadding: 2,\n  }\n});\ndefaults.route('scale.ticks', 'color', '', 'color');\ndefaults.route('scale.grid', 'color', '', 'borderColor');\ndefaults.route('scale.grid', 'borderColor', '', 'borderColor');\ndefaults.route('scale.title', 'color', '', 'color');\ndefaults.describe('scale', {\n  _fallback: false,\n  _scriptable: (name) => !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n  _indexable: (name) => name !== 'borderDash' && name !== 'tickBorderDash',\n});\ndefaults.describe('scales', {\n  _fallback: 'scale',\n});\ndefaults.describe('scale.ticks', {\n  _scriptable: (name) => name !== 'backdropPadding' && name !== 'callback',\n  _indexable: (name) => name !== 'backdropPadding',\n});\n\nfunction autoSkip(scale, ticks) {\n  const tickOpts = scale.options.ticks;\n  const ticksLimit = tickOpts.maxTicksLimit || determineMaxTicks(scale);\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  const numMajorIndices = majorIndices.length;\n  const first = majorIndices[0];\n  const last = majorIndices[numMajorIndices - 1];\n  const newTicks = [];\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n  if (numMajorIndices > 0) {\n    let i, ilen;\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\nfunction determineMaxTicks(scale) {\n  const offset = scale.options.offset;\n  const tickLength = scale._tickSize();\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  const maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\n  const spacing = ticks.length / ticksLimit;\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n  const factors = _factorize(evenMajorSpacing);\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    const factor = factors[i];\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n  return Math.max(spacing, 1);\n}\nfunction getMajorIndices(ticks) {\n  const result = [];\n  let i, ilen;\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n  return result;\n}\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  let count = 0;\n  let next = majorIndices[0];\n  let i;\n  spacing = Math.ceil(spacing);\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  const start = valueOrDefault(majorStart, 0);\n  const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  let count = 0;\n  let length, i, next;\n  spacing = Math.ceil(spacing);\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n  next = start;\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\nfunction getEvenSpacing(arr) {\n  const len = arr.length;\n  let i, diff;\n  if (len < 2) {\n    return false;\n  }\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n  return diff;\n}\n\nconst reverseAlign = (align) => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nfunction sample(arr, numItems) {\n  const result = [];\n  const increment = arr.length / numItems;\n  const len = arr.length;\n  let i = 0;\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n  return result;\n}\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  const length = scale.ticks.length;\n  const validIndex = Math.min(index, length - 1);\n  const start = scale._startPixel;\n  const end = scale._endPixel;\n  const epsilon = 1e-6;\n  let lineValue = scale.getPixelForTick(validIndex);\n  let offset;\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n    lineValue += validIndex < index ? offset : -offset;\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n  return lineValue;\n}\nfunction garbageCollect(caches, length) {\n  each(caches, (cache) => {\n    const gc = cache.gc;\n    const gcLen = gc.length / 2;\n    let i;\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n      gc.splice(0, gcLen);\n    }\n  });\n}\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n  const font = toFont(options.font, fallback);\n  const padding = toPadding(options.padding);\n  const lines = isArray(options.text) ? options.text.length : 1;\n  return (lines * font.lineHeight) + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n  return Object.assign(Object.create(parent), {\n    scale,\n    type: 'scale'\n  });\n}\nfunction createTickContext(parent, index, tick) {\n  return Object.assign(Object.create(parent), {\n    tick,\n    index,\n    type: 'tick'\n  });\n}\nfunction titleAlign(align, position, reverse) {\n  let ret = _toLeftRightCenter(align);\n  if ((reverse && position !== 'right') || (!reverse && position === 'right')) {\n    ret = reverseAlign(ret);\n  }\n  return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n  const {top, left, bottom, right, chart} = scale;\n  const {chartArea, scales} = chart;\n  let rotation = 0;\n  let maxWidth, titleX, titleY;\n  const height = bottom - top;\n  const width = right - left;\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n    } else if (position === 'center') {\n      titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n    } else {\n      titleY = offsetFromEdge(scale, position, offset);\n    }\n    maxWidth = right - left;\n  } else {\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n    } else if (position === 'center') {\n      titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n    } else {\n      titleX = offsetFromEdge(scale, position, offset);\n    }\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n  return {titleX, titleY, maxWidth, rotation};\n}\nclass Scale extends Element {\n  constructor(cfg) {\n    super();\n    this.id = cfg.id;\n    this.type = cfg.type;\n    this.options = undefined;\n    this.ctx = cfg.ctx;\n    this.chart = cfg.chart;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    this.maxWidth = undefined;\n    this.maxHeight = undefined;\n    this.paddingTop = undefined;\n    this.paddingBottom = undefined;\n    this.paddingLeft = undefined;\n    this.paddingRight = undefined;\n    this.axis = undefined;\n    this.labelRotation = undefined;\n    this.min = undefined;\n    this.max = undefined;\n    this._range = undefined;\n    this.ticks = [];\n    this._gridLineItems = null;\n    this._labelItems = null;\n    this._labelSizes = null;\n    this._length = 0;\n    this._maxLength = 0;\n    this._longestTextCache = {};\n    this._startPixel = undefined;\n    this._endPixel = undefined;\n    this._reversePixels = false;\n    this._userMax = undefined;\n    this._userMin = undefined;\n    this._suggestedMax = undefined;\n    this._suggestedMin = undefined;\n    this._ticksLength = 0;\n    this._borderValue = 0;\n    this._cache = {};\n    this._dataLimitsCached = false;\n    this.$context = undefined;\n  }\n  init(options) {\n    const me = this;\n    me.options = options.setContext(me.getContext());\n    me.axis = options.axis;\n    me._userMin = me.parse(options.min);\n    me._userMax = me.parse(options.max);\n    me._suggestedMin = me.parse(options.suggestedMin);\n    me._suggestedMax = me.parse(options.suggestedMax);\n  }\n  parse(raw, index) {\n    return raw;\n  }\n  getUserBounds() {\n    let {_userMin, _userMax, _suggestedMin, _suggestedMax} = this;\n    _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n    _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n    _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n    _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n    return {\n      min: finiteOrDefault(_userMin, _suggestedMin),\n      max: finiteOrDefault(_userMax, _suggestedMax),\n      minDefined: isNumberFinite(_userMin),\n      maxDefined: isNumberFinite(_userMax)\n    };\n  }\n  getMinMax(canStack) {\n    const me = this;\n    let {min, max, minDefined, maxDefined} = me.getUserBounds();\n    let range;\n    if (minDefined && maxDefined) {\n      return {min, max};\n    }\n    const metas = me.getMatchingVisibleMetas();\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n      range = metas[i].controller.getMinMax(me, canStack);\n      if (!minDefined) {\n        min = Math.min(min, range.min);\n      }\n      if (!maxDefined) {\n        max = Math.max(max, range.max);\n      }\n    }\n    return {\n      min: finiteOrDefault(min, finiteOrDefault(max, min)),\n      max: finiteOrDefault(max, finiteOrDefault(min, max))\n    };\n  }\n  getPadding() {\n    const me = this;\n    return {\n      left: me.paddingLeft || 0,\n      top: me.paddingTop || 0,\n      right: me.paddingRight || 0,\n      bottom: me.paddingBottom || 0\n    };\n  }\n  getTicks() {\n    return this.ticks;\n  }\n  getLabels() {\n    const data = this.chart.data;\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n  }\n  beforeLayout() {\n    this._cache = {};\n    this._dataLimitsCached = false;\n  }\n  beforeUpdate() {\n    callback(this.options.beforeUpdate, [this]);\n  }\n  update(maxWidth, maxHeight, margins) {\n    const me = this;\n    const tickOpts = me.options.ticks;\n    const sampleSize = tickOpts.sampleSize;\n    me.beforeUpdate();\n    me.maxWidth = maxWidth;\n    me.maxHeight = maxHeight;\n    me._margins = margins = Object.assign({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n    me.ticks = null;\n    me._labelSizes = null;\n    me._gridLineItems = null;\n    me._labelItems = null;\n    me.beforeSetDimensions();\n    me.setDimensions();\n    me.afterSetDimensions();\n    me._maxLength = me.isHorizontal()\n      ? me.width + margins.left + margins.right\n      : me.height + margins.top + margins.bottom;\n    if (!me._dataLimitsCached) {\n      me.beforeDataLimits();\n      me.determineDataLimits();\n      me.afterDataLimits();\n      me._range = _addGrace(me, me.options.grace);\n      me._dataLimitsCached = true;\n    }\n    me.beforeBuildTicks();\n    me.ticks = me.buildTicks() || [];\n    me.afterBuildTicks();\n    const samplingEnabled = sampleSize < me.ticks.length;\n    me._convertTicksToLabels(samplingEnabled ? sample(me.ticks, sampleSize) : me.ticks);\n    me.configure();\n    me.beforeCalculateLabelRotation();\n    me.calculateLabelRotation();\n    me.afterCalculateLabelRotation();\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n      me.ticks = autoSkip(me, me.ticks);\n      me._labelSizes = null;\n    }\n    if (samplingEnabled) {\n      me._convertTicksToLabels(me.ticks);\n    }\n    me.beforeFit();\n    me.fit();\n    me.afterFit();\n    me.afterUpdate();\n  }\n  configure() {\n    const me = this;\n    let reversePixels = me.options.reverse;\n    let startPixel, endPixel;\n    if (me.isHorizontal()) {\n      startPixel = me.left;\n      endPixel = me.right;\n    } else {\n      startPixel = me.top;\n      endPixel = me.bottom;\n      reversePixels = !reversePixels;\n    }\n    me._startPixel = startPixel;\n    me._endPixel = endPixel;\n    me._reversePixels = reversePixels;\n    me._length = endPixel - startPixel;\n    me._alignToPixels = me.options.alignToPixels;\n  }\n  afterUpdate() {\n    callback(this.options.afterUpdate, [this]);\n  }\n  beforeSetDimensions() {\n    callback(this.options.beforeSetDimensions, [this]);\n  }\n  setDimensions() {\n    const me = this;\n    if (me.isHorizontal()) {\n      me.width = me.maxWidth;\n      me.left = 0;\n      me.right = me.width;\n    } else {\n      me.height = me.maxHeight;\n      me.top = 0;\n      me.bottom = me.height;\n    }\n    me.paddingLeft = 0;\n    me.paddingTop = 0;\n    me.paddingRight = 0;\n    me.paddingBottom = 0;\n  }\n  afterSetDimensions() {\n    callback(this.options.afterSetDimensions, [this]);\n  }\n  _callHooks(name) {\n    const me = this;\n    me.chart.notifyPlugins(name, me.getContext());\n    callback(me.options[name], [me]);\n  }\n  beforeDataLimits() {\n    this._callHooks('beforeDataLimits');\n  }\n  determineDataLimits() {}\n  afterDataLimits() {\n    this._callHooks('afterDataLimits');\n  }\n  beforeBuildTicks() {\n    this._callHooks('beforeBuildTicks');\n  }\n  buildTicks() {\n    return [];\n  }\n  afterBuildTicks() {\n    this._callHooks('afterBuildTicks');\n  }\n  beforeTickToLabelConversion() {\n    callback(this.options.beforeTickToLabelConversion, [this]);\n  }\n  generateTickLabels(ticks) {\n    const me = this;\n    const tickOpts = me.options.ticks;\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      tick = ticks[i];\n      tick.label = callback(tickOpts.callback, [tick.value, i, ticks], me);\n    }\n  }\n  afterTickToLabelConversion() {\n    callback(this.options.afterTickToLabelConversion, [this]);\n  }\n  beforeCalculateLabelRotation() {\n    callback(this.options.beforeCalculateLabelRotation, [this]);\n  }\n  calculateLabelRotation() {\n    const me = this;\n    const options = me.options;\n    const tickOpts = options.ticks;\n    const numTicks = me.ticks.length;\n    const minRotation = tickOpts.minRotation || 0;\n    const maxRotation = tickOpts.maxRotation;\n    let labelRotation = minRotation;\n    let tickWidth, maxHeight, maxLabelDiagonal;\n    if (!me._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !me.isHorizontal()) {\n      me.labelRotation = minRotation;\n      return;\n    }\n    const labelSizes = me._getLabelSizes();\n    const maxLabelWidth = labelSizes.widest.width;\n    const maxLabelHeight = labelSizes.highest.height;\n    const maxWidth = _limitValue(me.chart.width - maxLabelWidth, 0, me.maxWidth);\n    tickWidth = options.offset ? me.maxWidth / numTicks : maxWidth / (numTicks - 1);\n    if (maxLabelWidth + 6 > tickWidth) {\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n      maxHeight = me.maxHeight - getTickMarkLength(options.grid)\n\t\t\t\t- tickOpts.padding - getTitleHeight(options.title, me.chart.options.font);\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n      labelRotation = toDegrees(Math.min(\n        Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)),\n        Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))\n      ));\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n    }\n    me.labelRotation = labelRotation;\n  }\n  afterCalculateLabelRotation() {\n    callback(this.options.afterCalculateLabelRotation, [this]);\n  }\n  beforeFit() {\n    callback(this.options.beforeFit, [this]);\n  }\n  fit() {\n    const me = this;\n    const minSize = {\n      width: 0,\n      height: 0\n    };\n    const {chart, options: {ticks: tickOpts, title: titleOpts, grid: gridOpts}} = me;\n    const display = me._isVisible();\n    const isHorizontal = me.isHorizontal();\n    if (display) {\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n      if (isHorizontal) {\n        minSize.width = me.maxWidth;\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n      } else {\n        minSize.height = me.maxHeight;\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n      }\n      if (tickOpts.display && me.ticks.length) {\n        const {first, last, widest, highest} = me._getLabelSizes();\n        const tickPadding = tickOpts.padding * 2;\n        const angleRadians = toRadians(me.labelRotation);\n        const cos = Math.cos(angleRadians);\n        const sin = Math.sin(angleRadians);\n        if (isHorizontal) {\n          const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n          minSize.height = Math.min(me.maxHeight, minSize.height + labelHeight + tickPadding);\n        } else {\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n          minSize.width = Math.min(me.maxWidth, minSize.width + labelWidth + tickPadding);\n        }\n        me._calculatePadding(first, last, sin, cos);\n      }\n    }\n    me._handleMargins();\n    if (isHorizontal) {\n      me.width = me._length = chart.width - me._margins.left - me._margins.right;\n      me.height = minSize.height;\n    } else {\n      me.width = minSize.width;\n      me.height = me._length = chart.height - me._margins.top - me._margins.bottom;\n    }\n  }\n  _calculatePadding(first, last, sin, cos) {\n    const me = this;\n    const {ticks: {align, padding}, position} = me.options;\n    const isRotated = me.labelRotation !== 0;\n    const labelsBelowTicks = position !== 'top' && me.axis === 'x';\n    if (me.isHorizontal()) {\n      const offsetLeft = me.getPixelForTick(0) - me.left;\n      const offsetRight = me.right - me.getPixelForTick(me.ticks.length - 1);\n      let paddingLeft = 0;\n      let paddingRight = 0;\n      if (isRotated) {\n        if (labelsBelowTicks) {\n          paddingLeft = cos * first.width;\n          paddingRight = sin * last.height;\n        } else {\n          paddingLeft = sin * first.height;\n          paddingRight = cos * last.width;\n        }\n      } else if (align === 'start') {\n        paddingRight = last.width;\n      } else if (align === 'end') {\n        paddingLeft = first.width;\n      } else {\n        paddingLeft = first.width / 2;\n        paddingRight = last.width / 2;\n      }\n      me.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * me.width / (me.width - offsetLeft), 0);\n      me.paddingRight = Math.max((paddingRight - offsetRight + padding) * me.width / (me.width - offsetRight), 0);\n    } else {\n      let paddingTop = last.height / 2;\n      let paddingBottom = first.height / 2;\n      if (align === 'start') {\n        paddingTop = 0;\n        paddingBottom = first.height;\n      } else if (align === 'end') {\n        paddingTop = last.height;\n        paddingBottom = 0;\n      }\n      me.paddingTop = paddingTop + padding;\n      me.paddingBottom = paddingBottom + padding;\n    }\n  }\n  _handleMargins() {\n    const me = this;\n    if (me._margins) {\n      me._margins.left = Math.max(me.paddingLeft, me._margins.left);\n      me._margins.top = Math.max(me.paddingTop, me._margins.top);\n      me._margins.right = Math.max(me.paddingRight, me._margins.right);\n      me._margins.bottom = Math.max(me.paddingBottom, me._margins.bottom);\n    }\n  }\n  afterFit() {\n    callback(this.options.afterFit, [this]);\n  }\n  isHorizontal() {\n    const {axis, position} = this.options;\n    return position === 'top' || position === 'bottom' || axis === 'x';\n  }\n  isFullSize() {\n    return this.options.fullSize;\n  }\n  _convertTicksToLabels(ticks) {\n    const me = this;\n    me.beforeTickToLabelConversion();\n    me.generateTickLabels(ticks);\n    let i, ilen;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      if (isNullOrUndef(ticks[i].label)) {\n        ticks.splice(i, 1);\n        ilen--;\n        i--;\n      }\n    }\n    me.afterTickToLabelConversion();\n  }\n  _getLabelSizes() {\n    const me = this;\n    let labelSizes = me._labelSizes;\n    if (!labelSizes) {\n      const sampleSize = me.options.ticks.sampleSize;\n      let ticks = me.ticks;\n      if (sampleSize < ticks.length) {\n        ticks = sample(ticks, sampleSize);\n      }\n      me._labelSizes = labelSizes = me._computeLabelSizes(ticks, ticks.length);\n    }\n    return labelSizes;\n  }\n  _computeLabelSizes(ticks, length) {\n    const {ctx, _longestTextCache: caches} = this;\n    const widths = [];\n    const heights = [];\n    let widestLabelSize = 0;\n    let highestLabelSize = 0;\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n    for (i = 0; i < length; ++i) {\n      label = ticks[i].label;\n      tickFont = this._resolveTickFontOptions(i);\n      ctx.font = fontString = tickFont.string;\n      cache = caches[fontString] = caches[fontString] || {data: {}, gc: []};\n      lineHeight = tickFont.lineHeight;\n      width = height = 0;\n      if (!isNullOrUndef(label) && !isArray(label)) {\n        width = _measureText(ctx, cache.data, cache.gc, width, label);\n        height = lineHeight;\n      } else if (isArray(label)) {\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\n          nestedLabel = label[j];\n          if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n            height += lineHeight;\n          }\n        }\n      }\n      widths.push(width);\n      heights.push(height);\n      widestLabelSize = Math.max(width, widestLabelSize);\n      highestLabelSize = Math.max(height, highestLabelSize);\n    }\n    garbageCollect(caches, length);\n    const widest = widths.indexOf(widestLabelSize);\n    const highest = heights.indexOf(highestLabelSize);\n    const valueAt = (idx) => ({width: widths[idx] || 0, height: heights[idx] || 0});\n    return {\n      first: valueAt(0),\n      last: valueAt(length - 1),\n      widest: valueAt(widest),\n      highest: valueAt(highest),\n      widths,\n      heights,\n    };\n  }\n  getLabelForValue(value) {\n    return value;\n  }\n  getPixelForValue(value, index) {\n    return NaN;\n  }\n  getValueForPixel(pixel) {}\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n  getPixelForDecimal(decimal) {\n    const me = this;\n    if (me._reversePixels) {\n      decimal = 1 - decimal;\n    }\n    const pixel = me._startPixel + decimal * me._length;\n    return _int16Range(me._alignToPixels ? _alignPixel(me.chart, pixel, 0) : pixel);\n  }\n  getDecimalForPixel(pixel) {\n    const decimal = (pixel - this._startPixel) / this._length;\n    return this._reversePixels ? 1 - decimal : decimal;\n  }\n  getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  }\n  getBaseValue() {\n    const {min, max} = this;\n    return min < 0 && max < 0 ? max :\n      min > 0 && max > 0 ? min :\n      0;\n  }\n  getContext(index) {\n    const me = this;\n    const ticks = me.ticks || [];\n    if (index >= 0 && index < ticks.length) {\n      const tick = ticks[index];\n      return tick.$context ||\n\t\t\t\t(tick.$context = createTickContext(me.getContext(), index, tick));\n    }\n    return me.$context ||\n\t\t\t(me.$context = createScaleContext(me.chart.getContext(), me));\n  }\n  _tickSize() {\n    const me = this;\n    const optionTicks = me.options.ticks;\n    const rot = toRadians(me.labelRotation);\n    const cos = Math.abs(Math.cos(rot));\n    const sin = Math.abs(Math.sin(rot));\n    const labelSizes = me._getLabelSizes();\n    const padding = optionTicks.autoSkipPadding || 0;\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\n    return me.isHorizontal()\n      ? h * cos > w * sin ? w / cos : h / sin\n      : h * sin < w * cos ? h / cos : w / sin;\n  }\n  _isVisible() {\n    const display = this.options.display;\n    if (display !== 'auto') {\n      return !!display;\n    }\n    return this.getMatchingVisibleMetas().length > 0;\n  }\n  _computeGridLineItems(chartArea) {\n    const me = this;\n    const axis = me.axis;\n    const chart = me.chart;\n    const options = me.options;\n    const {grid, position} = options;\n    const offset = grid.offset;\n    const isHorizontal = me.isHorizontal();\n    const ticks = me.ticks;\n    const ticksLength = ticks.length + (offset ? 1 : 0);\n    const tl = getTickMarkLength(grid);\n    const items = [];\n    const borderOpts = grid.setContext(me.getContext());\n    const axisWidth = borderOpts.drawBorder ? borderOpts.borderWidth : 0;\n    const axisHalfWidth = axisWidth / 2;\n    const alignBorderValue = function(pixel) {\n      return _alignPixel(chart, pixel, axisWidth);\n    };\n    let borderValue, i, lineValue, alignedLineValue;\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n    if (position === 'top') {\n      borderValue = alignBorderValue(me.bottom);\n      ty1 = me.bottom - tl;\n      ty2 = borderValue - axisHalfWidth;\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n      y2 = chartArea.bottom;\n    } else if (position === 'bottom') {\n      borderValue = alignBorderValue(me.top);\n      y1 = chartArea.top;\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = me.top + tl;\n    } else if (position === 'left') {\n      borderValue = alignBorderValue(me.right);\n      tx1 = me.right - tl;\n      tx2 = borderValue - axisHalfWidth;\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n      x2 = chartArea.right;\n    } else if (position === 'right') {\n      borderValue = alignBorderValue(me.left);\n      x1 = chartArea.left;\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n      tx1 = borderValue + axisHalfWidth;\n      tx2 = me.left + tl;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(me.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      y1 = chartArea.top;\n      y2 = chartArea.bottom;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = ty1 + tl;\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(me.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      tx1 = borderValue - axisHalfWidth;\n      tx2 = tx1 - tl;\n      x1 = chartArea.left;\n      x2 = chartArea.right;\n    }\n    const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n    const step = Math.max(1, Math.ceil(ticksLength / limit));\n    for (i = 0; i < ticksLength; i += step) {\n      const optsAtIndex = grid.setContext(me.getContext(i));\n      const lineWidth = optsAtIndex.lineWidth;\n      const lineColor = optsAtIndex.color;\n      const borderDash = grid.borderDash || [];\n      const borderDashOffset = optsAtIndex.borderDashOffset;\n      const tickWidth = optsAtIndex.tickWidth;\n      const tickColor = optsAtIndex.tickColor;\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n      lineValue = getPixelForGridLine(me, i, offset);\n      if (lineValue === undefined) {\n        continue;\n      }\n      alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n      if (isHorizontal) {\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\n      } else {\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\n      }\n      items.push({\n        tx1,\n        ty1,\n        tx2,\n        ty2,\n        x1,\n        y1,\n        x2,\n        y2,\n        width: lineWidth,\n        color: lineColor,\n        borderDash,\n        borderDashOffset,\n        tickWidth,\n        tickColor,\n        tickBorderDash,\n        tickBorderDashOffset,\n      });\n    }\n    me._ticksLength = ticksLength;\n    me._borderValue = borderValue;\n    return items;\n  }\n  _computeLabelItems(chartArea) {\n    const me = this;\n    const axis = me.axis;\n    const options = me.options;\n    const {position, ticks: optionTicks} = options;\n    const isHorizontal = me.isHorizontal();\n    const ticks = me.ticks;\n    const {align, crossAlign, padding, mirror} = optionTicks;\n    const tl = getTickMarkLength(options.grid);\n    const tickAndPadding = tl + padding;\n    const hTickAndPadding = mirror ? -padding : tickAndPadding;\n    const rotation = -toRadians(me.labelRotation);\n    const items = [];\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n    let textBaseline = 'middle';\n    if (position === 'top') {\n      y = me.bottom - hTickAndPadding;\n      textAlign = me._getXAxisLabelAlignment();\n    } else if (position === 'bottom') {\n      y = me.top + hTickAndPadding;\n      textAlign = me._getXAxisLabelAlignment();\n    } else if (position === 'left') {\n      const ret = me._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (position === 'right') {\n      const ret = me._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        y = ((chartArea.top + chartArea.bottom) / 2) + tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        y = me.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n      }\n      textAlign = me._getXAxisLabelAlignment();\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        x = ((chartArea.left + chartArea.right) / 2) - tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        x = me.chart.scales[positionAxisID].getPixelForValue(value);\n      }\n      textAlign = me._getYAxisLabelAlignment(tl).textAlign;\n    }\n    if (axis === 'y') {\n      if (align === 'start') {\n        textBaseline = 'top';\n      } else if (align === 'end') {\n        textBaseline = 'bottom';\n      }\n    }\n    const labelSizes = me._getLabelSizes();\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      label = tick.label;\n      const optsAtIndex = optionTicks.setContext(me.getContext(i));\n      pixel = me.getPixelForTick(i) + optionTicks.labelOffset;\n      font = me._resolveTickFontOptions(i);\n      lineHeight = font.lineHeight;\n      lineCount = isArray(label) ? label.length : 1;\n      const halfCount = lineCount / 2;\n      const color = optsAtIndex.color;\n      const strokeColor = optsAtIndex.textStrokeColor;\n      const strokeWidth = optsAtIndex.textStrokeWidth;\n      if (isHorizontal) {\n        x = pixel;\n        if (position === 'top') {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n          } else {\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\n          }\n        } else {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n          } else {\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\n          }\n        }\n        if (mirror) {\n          textOffset *= -1;\n        }\n      } else {\n        y = pixel;\n        textOffset = (1 - lineCount) * lineHeight / 2;\n      }\n      let backdrop;\n      if (optsAtIndex.showLabelBackdrop) {\n        const labelPadding = toPadding(optsAtIndex.backdropPadding);\n        const height = labelSizes.heights[i];\n        const width = labelSizes.widths[i];\n        let top = y + textOffset - labelPadding.top;\n        let left = x - labelPadding.left;\n        switch (textBaseline) {\n        case 'middle':\n          top -= height / 2;\n          break;\n        case 'bottom':\n          top -= height;\n          break;\n        }\n        switch (textAlign) {\n        case 'center':\n          left -= width / 2;\n          break;\n        case 'right':\n          left -= width;\n          break;\n        }\n        backdrop = {\n          left,\n          top,\n          width: width + labelPadding.width,\n          height: height + labelPadding.height,\n          color: optsAtIndex.backdropColor,\n        };\n      }\n      items.push({\n        rotation,\n        label,\n        font,\n        color,\n        strokeColor,\n        strokeWidth,\n        textOffset,\n        textAlign,\n        textBaseline,\n        translation: [x, y],\n        backdrop,\n      });\n    }\n    return items;\n  }\n  _getXAxisLabelAlignment() {\n    const me = this;\n    const {position, ticks} = me.options;\n    const rotation = -toRadians(me.labelRotation);\n    if (rotation) {\n      return position === 'top' ? 'left' : 'right';\n    }\n    let align = 'center';\n    if (ticks.align === 'start') {\n      align = 'left';\n    } else if (ticks.align === 'end') {\n      align = 'right';\n    }\n    return align;\n  }\n  _getYAxisLabelAlignment(tl) {\n    const me = this;\n    const {position, ticks: {crossAlign, mirror, padding}} = me.options;\n    const labelSizes = me._getLabelSizes();\n    const tickAndPadding = tl + padding;\n    const widest = labelSizes.widest.width;\n    let textAlign;\n    let x;\n    if (position === 'left') {\n      if (mirror) {\n        textAlign = 'left';\n        x = me.right + padding;\n      } else {\n        x = me.right - tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x = me.left;\n        }\n      }\n    } else if (position === 'right') {\n      if (mirror) {\n        textAlign = 'right';\n        x = me.left + padding;\n      } else {\n        x = me.left + tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x = me.right;\n        }\n      }\n    } else {\n      textAlign = 'right';\n    }\n    return {textAlign, x};\n  }\n  _computeLabelArea() {\n    const me = this;\n    if (me.options.ticks.mirror) {\n      return;\n    }\n    const chart = me.chart;\n    const position = me.options.position;\n    if (position === 'left' || position === 'right') {\n      return {top: 0, left: me.left, bottom: chart.height, right: me.right};\n    } if (position === 'top' || position === 'bottom') {\n      return {top: me.top, left: 0, bottom: me.bottom, right: chart.width};\n    }\n  }\n  drawBackground() {\n    const {ctx, options: {backgroundColor}, left, top, width, height} = this;\n    if (backgroundColor) {\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(left, top, width, height);\n      ctx.restore();\n    }\n  }\n  getLineWidthForValue(value) {\n    const me = this;\n    const grid = me.options.grid;\n    if (!me._isVisible() || !grid.display) {\n      return 0;\n    }\n    const ticks = me.ticks;\n    const index = ticks.findIndex(t => t.value === value);\n    if (index >= 0) {\n      const opts = grid.setContext(me.getContext(index));\n      return opts.lineWidth;\n    }\n    return 0;\n  }\n  drawGrid(chartArea) {\n    const me = this;\n    const grid = me.options.grid;\n    const ctx = me.ctx;\n    const items = me._gridLineItems || (me._gridLineItems = me._computeGridLineItems(chartArea));\n    let i, ilen;\n    const drawLine = (p1, p2, style) => {\n      if (!style.width || !style.color) {\n        return;\n      }\n      ctx.save();\n      ctx.lineWidth = style.width;\n      ctx.strokeStyle = style.color;\n      ctx.setLineDash(style.borderDash || []);\n      ctx.lineDashOffset = style.borderDashOffset;\n      ctx.beginPath();\n      ctx.moveTo(p1.x, p1.y);\n      ctx.lineTo(p2.x, p2.y);\n      ctx.stroke();\n      ctx.restore();\n    };\n    if (grid.display) {\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n        if (grid.drawOnChartArea) {\n          drawLine(\n            {x: item.x1, y: item.y1},\n            {x: item.x2, y: item.y2},\n            item\n          );\n        }\n        if (grid.drawTicks) {\n          drawLine(\n            {x: item.tx1, y: item.ty1},\n            {x: item.tx2, y: item.ty2},\n            {\n              color: item.tickColor,\n              width: item.tickWidth,\n              borderDash: item.tickBorderDash,\n              borderDashOffset: item.tickBorderDashOffset\n            }\n          );\n        }\n      }\n    }\n  }\n  drawBorder() {\n    const me = this;\n    const {chart, ctx, options: {grid}} = me;\n    const borderOpts = grid.setContext(me.getContext());\n    const axisWidth = grid.drawBorder ? borderOpts.borderWidth : 0;\n    if (!axisWidth) {\n      return;\n    }\n    const lastLineWidth = grid.setContext(me.getContext(0)).lineWidth;\n    const borderValue = me._borderValue;\n    let x1, x2, y1, y2;\n    if (me.isHorizontal()) {\n      x1 = _alignPixel(chart, me.left, axisWidth) - axisWidth / 2;\n      x2 = _alignPixel(chart, me.right, lastLineWidth) + lastLineWidth / 2;\n      y1 = y2 = borderValue;\n    } else {\n      y1 = _alignPixel(chart, me.top, axisWidth) - axisWidth / 2;\n      y2 = _alignPixel(chart, me.bottom, lastLineWidth) + lastLineWidth / 2;\n      x1 = x2 = borderValue;\n    }\n    ctx.save();\n    ctx.lineWidth = borderOpts.borderWidth;\n    ctx.strokeStyle = borderOpts.borderColor;\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n    ctx.restore();\n  }\n  drawLabels(chartArea) {\n    const me = this;\n    const optionTicks = me.options.ticks;\n    if (!optionTicks.display) {\n      return;\n    }\n    const ctx = me.ctx;\n    const area = me._computeLabelArea();\n    if (area) {\n      clipArea(ctx, area);\n    }\n    const items = me._labelItems || (me._labelItems = me._computeLabelItems(chartArea));\n    let i, ilen;\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      const item = items[i];\n      const tickFont = item.font;\n      const label = item.label;\n      if (item.backdrop) {\n        ctx.fillStyle = item.backdrop.color;\n        ctx.fillRect(item.backdrop.left, item.backdrop.top, item.backdrop.width, item.backdrop.height);\n      }\n      let y = item.textOffset;\n      renderText(ctx, label, 0, y, tickFont, item);\n    }\n    if (area) {\n      unclipArea(ctx);\n    }\n  }\n  drawTitle() {\n    const {ctx, options: {position, title, reverse}} = this;\n    if (!title.display) {\n      return;\n    }\n    const font = toFont(title.font);\n    const padding = toPadding(title.padding);\n    const align = title.align;\n    let offset = font.lineHeight / 2;\n    if (position === 'bottom' || position === 'center' || isObject(position)) {\n      offset += padding.bottom;\n      if (isArray(title.text)) {\n        offset += font.lineHeight * (title.text.length - 1);\n      }\n    } else {\n      offset += padding.top;\n    }\n    const {titleX, titleY, maxWidth, rotation} = titleArgs(this, offset, position, align);\n    renderText(ctx, title.text, 0, 0, font, {\n      color: title.color,\n      maxWidth,\n      rotation,\n      textAlign: titleAlign(align, position, reverse),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n  draw(chartArea) {\n    const me = this;\n    if (!me._isVisible()) {\n      return;\n    }\n    me.drawBackground();\n    me.drawGrid(chartArea);\n    me.drawBorder();\n    me.drawTitle();\n    me.drawLabels(chartArea);\n  }\n  _layers() {\n    const me = this;\n    const opts = me.options;\n    const tz = opts.ticks && opts.ticks.z || 0;\n    const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n    if (!me._isVisible() || me.draw !== Scale.prototype.draw) {\n      return [{\n        z: tz,\n        draw(chartArea) {\n          me.draw(chartArea);\n        }\n      }];\n    }\n    return [{\n      z: gz,\n      draw(chartArea) {\n        me.drawBackground();\n        me.drawGrid(chartArea);\n        me.drawTitle();\n      }\n    }, {\n      z: gz + 1,\n      draw() {\n        me.drawBorder();\n      }\n    }, {\n      z: tz,\n      draw(chartArea) {\n        me.drawLabels(chartArea);\n      }\n    }];\n  }\n  getMatchingVisibleMetas(type) {\n    const me = this;\n    const metas = me.chart.getSortedVisibleDatasetMetas();\n    const axisID = me.axis + 'AxisID';\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      const meta = metas[i];\n      if (meta[axisID] === me.id && (!type || meta.type === type)) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  _resolveTickFontOptions(index) {\n    const opts = this.options.ticks.setContext(this.getContext(index));\n    return toFont(opts.font);\n  }\n  _maxDigits() {\n    const me = this;\n    const fontSize = me._resolveTickFontOptions(0).lineHeight;\n    return (me.isHorizontal() ? me.width : me.height) / fontSize;\n  }\n}\n\nclass TypedRegistry {\n  constructor(type, scope, override) {\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n  isForType(type) {\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n  }\n  register(item) {\n    const me = this;\n    const proto = Object.getPrototypeOf(item);\n    let parentScope;\n    if (isIChartComponent(proto)) {\n      parentScope = me.register(proto);\n    }\n    const items = me.items;\n    const id = item.id;\n    const scope = me.scope + '.' + id;\n    if (!id) {\n      throw new Error('class does not have id: ' + item);\n    }\n    if (id in items) {\n      return scope;\n    }\n    items[id] = item;\n    registerDefaults(item, scope, parentScope);\n    if (me.override) {\n      defaults.override(item.id, item.overrides);\n    }\n    return scope;\n  }\n  get(id) {\n    return this.items[id];\n  }\n  unregister(item) {\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope;\n    if (id in items) {\n      delete items[id];\n    }\n    if (scope && id in defaults[scope]) {\n      delete defaults[scope][id];\n      if (this.override) {\n        delete overrides[id];\n      }\n    }\n  }\n}\nfunction registerDefaults(item, scope, parentScope) {\n  const itemDefaults = merge(Object.create(null), [\n    parentScope ? defaults.get(parentScope) : {},\n    defaults.get(scope),\n    item.defaults\n  ]);\n  defaults.set(scope, itemDefaults);\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(property => {\n    const propertyParts = property.split('.');\n    const sourceName = propertyParts.pop();\n    const sourceScope = [scope].concat(propertyParts).join('.');\n    const parts = routes[property].split('.');\n    const targetName = parts.pop();\n    const targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n  constructor() {\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n  add(...args) {\n    this._each('register', args);\n  }\n  remove(...args) {\n    this._each('unregister', args);\n  }\n  addControllers(...args) {\n    this._each('register', args, this.controllers);\n  }\n  addElements(...args) {\n    this._each('register', args, this.elements);\n  }\n  addPlugins(...args) {\n    this._each('register', args, this.plugins);\n  }\n  addScales(...args) {\n    this._each('register', args, this.scales);\n  }\n  getController(id) {\n    return this._get(id, this.controllers, 'controller');\n  }\n  getElement(id) {\n    return this._get(id, this.elements, 'element');\n  }\n  getPlugin(id) {\n    return this._get(id, this.plugins, 'plugin');\n  }\n  getScale(id) {\n    return this._get(id, this.scales, 'scale');\n  }\n  removeControllers(...args) {\n    this._each('unregister', args, this.controllers);\n  }\n  removeElements(...args) {\n    this._each('unregister', args, this.elements);\n  }\n  removePlugins(...args) {\n    this._each('unregister', args, this.plugins);\n  }\n  removeScales(...args) {\n    this._each('unregister', args, this.scales);\n  }\n  _each(method, args, typedRegistry) {\n    const me = this;\n    [...args].forEach(arg => {\n      const reg = typedRegistry || me._getRegistryForType(arg);\n      if (typedRegistry || reg.isForType(arg) || (reg === me.plugins && arg.id)) {\n        me._exec(method, reg, arg);\n      } else {\n        each(arg, item => {\n          const itemReg = typedRegistry || me._getRegistryForType(item);\n          me._exec(method, itemReg, item);\n        });\n      }\n    });\n  }\n  _exec(method, registry, component) {\n    const camelMethod = _capitalize(method);\n    callback(component['before' + camelMethod], [], component);\n    registry[method](component);\n    callback(component['after' + camelMethod], [], component);\n  }\n  _getRegistryForType(type) {\n    for (let i = 0; i < this._typedRegistries.length; i++) {\n      const reg = this._typedRegistries[i];\n      if (reg.isForType(type)) {\n        return reg;\n      }\n    }\n    return this.plugins;\n  }\n  _get(id, typedRegistry, type) {\n    const item = typedRegistry.get(id);\n    if (item === undefined) {\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n    }\n    return item;\n  }\n}\nvar registry = new Registry();\n\nclass PluginService {\n  constructor() {\n    this._init = [];\n  }\n  notify(chart, hook, args, filter) {\n    const me = this;\n    if (hook === 'beforeInit') {\n      me._init = me._createDescriptors(chart, true);\n      me._notify(me._init, chart, 'install');\n    }\n    const descriptors = filter ? me._descriptors(chart).filter(filter) : me._descriptors(chart);\n    const result = me._notify(descriptors, chart, hook, args);\n    if (hook === 'destroy') {\n      me._notify(descriptors, chart, 'stop');\n      me._notify(me._init, chart, 'uninstall');\n    }\n    return result;\n  }\n  _notify(descriptors, chart, hook, args) {\n    args = args || {};\n    for (const descriptor of descriptors) {\n      const plugin = descriptor.plugin;\n      const method = plugin[hook];\n      const params = [chart, args, descriptor.options];\n      if (callback(method, params, plugin) === false && args.cancelable) {\n        return false;\n      }\n    }\n    return true;\n  }\n  invalidate() {\n    if (!isNullOrUndef(this._cache)) {\n      this._oldCache = this._cache;\n      this._cache = undefined;\n    }\n  }\n  _descriptors(chart) {\n    if (this._cache) {\n      return this._cache;\n    }\n    const descriptors = this._cache = this._createDescriptors(chart);\n    this._notifyStateChanges(chart);\n    return descriptors;\n  }\n  _createDescriptors(chart, all) {\n    const config = chart && chart.config;\n    const options = valueOrDefault(config.options && config.options.plugins, {});\n    const plugins = allPlugins(config);\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n  }\n  _notifyStateChanges(chart) {\n    const previousDescriptors = this._oldCache || [];\n    const descriptors = this._cache;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n  }\n}\nfunction allPlugins(config) {\n  const plugins = [];\n  const keys = Object.keys(registry.plugins.items);\n  for (let i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n  const local = config.plugins || [];\n  for (let i = 0; i < local.length; i++) {\n    const plugin = local[i];\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n    }\n  }\n  return plugins;\n}\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n  if (options === true) {\n    return {};\n  }\n  return options;\n}\nfunction createDescriptors(chart, plugins, options, all) {\n  const result = [];\n  const context = chart.getContext();\n  for (let i = 0; i < plugins.length; i++) {\n    const plugin = plugins[i];\n    const id = plugin.id;\n    const opts = getOpts(options[id], all);\n    if (opts === null) {\n      continue;\n    }\n    result.push({\n      plugin,\n      options: pluginOpts(chart.config, plugin, opts, context)\n    });\n  }\n  return result;\n}\nfunction pluginOpts(config, plugin, opts, context) {\n  const keys = config.pluginScopeKeys(plugin);\n  const scopes = config.getOptionScopes(opts, keys);\n  return config.createResolver(scopes, context, [''], {scriptable: false, indexable: false, allKeys: true});\n}\n\nfunction getIndexAxis(type, options) {\n  const datasetDefaults = defaults.datasets[type] || {};\n  const datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  let axis = id;\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n  return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\nfunction determineAxis(id, scaleOptions) {\n  if (id === 'x' || id === 'y') {\n    return id;\n  }\n  return scaleOptions.axis || axisFromPosition(scaleOptions.position) || id.charAt(0).toLowerCase();\n}\nfunction mergeScaleConfig(config, options) {\n  const chartDefaults = overrides[config.type] || {scales: {}};\n  const configScales = options.scales || {};\n  const chartIndexAxis = getIndexAxis(config.type, options);\n  const firstIDs = Object.create(null);\n  const scales = Object.create(null);\n  Object.keys(configScales).forEach(id => {\n    const scaleConf = configScales[id];\n    const axis = determineAxis(id, scaleConf);\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    const defaultScaleOptions = chartDefaults.scales || {};\n    firstIDs[axis] = firstIDs[axis] || id;\n    scales[id] = mergeIf(Object.create(null), [{axis}, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n  config.data.datasets.forEach(dataset => {\n    const type = dataset.type || config.type;\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    const datasetDefaults = overrides[type] || {};\n    const defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      const id = dataset[axis + 'AxisID'] || firstIDs[axis] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{axis}, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n  Object.keys(scales).forEach(key => {\n    const scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n  return scales;\n}\nfunction initOptions(config) {\n  const options = config.options || (config.options = {});\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n  initOptions(config);\n  return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n  let keys = keyCache.get(cacheKey);\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n  return keys;\n}\nconst addIfFound = (set, obj, key) => {\n  const opts = resolveObjectKey(obj, key);\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\nclass Config {\n  constructor(config) {\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n  get platform() {\n    return this._config.platform;\n  }\n  get type() {\n    return this._config.type;\n  }\n  set type(type) {\n    this._config.type = type;\n  }\n  get data() {\n    return this._config.data;\n  }\n  set data(data) {\n    this._config.data = initData(data);\n  }\n  get options() {\n    return this._config.options;\n  }\n  set options(options) {\n    this._config.options = options;\n  }\n  get plugins() {\n    return this._config.plugins;\n  }\n  update() {\n    const config = this._config;\n    this.clearCache();\n    initOptions(config);\n  }\n  clearCache() {\n    this._scopeCache.clear();\n    this._resolverCache.clear();\n  }\n  datasetScopeKeys(datasetType) {\n    return cachedKeys(datasetType,\n      () => [[\n        `datasets.${datasetType}`,\n        ''\n      ]]);\n  }\n  datasetAnimationScopeKeys(datasetType, transition) {\n    return cachedKeys(`${datasetType}.transition.${transition}`,\n      () => [\n        [\n          `datasets.${datasetType}.transitions.${transition}`,\n          `transitions.${transition}`,\n        ],\n        [\n          `datasets.${datasetType}`,\n          ''\n        ]\n      ]);\n  }\n  datasetElementScopeKeys(datasetType, elementType) {\n    return cachedKeys(`${datasetType}-${elementType}`,\n      () => [[\n        `datasets.${datasetType}.elements.${elementType}`,\n        `datasets.${datasetType}`,\n        `elements.${elementType}`,\n        ''\n      ]]);\n  }\n  pluginScopeKeys(plugin) {\n    const id = plugin.id;\n    const type = this.type;\n    return cachedKeys(`${type}-plugin-${id}`,\n      () => [[\n        `plugins.${id}`,\n        ...plugin.additionalOptionScopes || [],\n      ]]);\n  }\n  _cachedScopes(mainScope, resetCache) {\n    const _scopeCache = this._scopeCache;\n    let cache = _scopeCache.get(mainScope);\n    if (!cache || resetCache) {\n      cache = new Map();\n      _scopeCache.set(mainScope, cache);\n    }\n    return cache;\n  }\n  getOptionScopes(mainScope, keyLists, resetCache) {\n    const {options, type} = this;\n    const cache = this._cachedScopes(mainScope, resetCache);\n    const cached = cache.get(keyLists);\n    if (cached) {\n      return cached;\n    }\n    const scopes = new Set();\n    keyLists.forEach(keys => {\n      if (mainScope) {\n        scopes.add(mainScope);\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\n      }\n      keys.forEach(key => addIfFound(scopes, options, key));\n      keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\n      keys.forEach(key => addIfFound(scopes, defaults, key));\n      keys.forEach(key => addIfFound(scopes, descriptors, key));\n    });\n    const array = Array.from(scopes);\n    if (array.length === 0) {\n      array.push(Object.create(null));\n    }\n    if (keysCached.has(keyLists)) {\n      cache.set(keyLists, array);\n    }\n    return array;\n  }\n  chartOptionScopes() {\n    const {options, type} = this;\n    return [\n      options,\n      overrides[type] || {},\n      defaults.datasets[type] || {},\n      {type},\n      defaults,\n      descriptors\n    ];\n  }\n  resolveNamedOptions(scopes, names, context, prefixes = ['']) {\n    const result = {$shared: true};\n    const {resolver, subPrefixes} = getResolver(this._resolverCache, scopes, prefixes);\n    let options = resolver;\n    if (needContext(resolver, names)) {\n      result.$shared = false;\n      context = isFunction(context) ? context() : context;\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\n      options = _attachContext(resolver, context, subResolver);\n    }\n    for (const prop of names) {\n      result[prop] = options[prop];\n    }\n    return result;\n  }\n  createResolver(scopes, context, prefixes = [''], descriptorDefaults) {\n    const {resolver} = getResolver(this._resolverCache, scopes, prefixes);\n    return isObject(context)\n      ? _attachContext(resolver, context, undefined, descriptorDefaults)\n      : resolver;\n  }\n}\nfunction getResolver(resolverCache, scopes, prefixes) {\n  let cache = resolverCache.get(scopes);\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n  const cacheKey = prefixes.join();\n  let cached = cache.get(cacheKey);\n  if (!cached) {\n    const resolver = _createResolver(scopes, prefixes);\n    cached = {\n      resolver,\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n    };\n    cache.set(cacheKey, cached);\n  }\n  return cached;\n}\nfunction needContext(proxy, names) {\n  const {isScriptable, isIndexable} = _descriptors(proxy);\n  for (const prop of names) {\n    if ((isScriptable(prop) && isFunction(proxy[prop]))\n      || (isIndexable(prop) && isArray(proxy[prop]))) {\n      return true;\n    }\n  }\n  return false;\n}\n\nvar version = \"3.5.0\";\n\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || (KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x');\n}\nfunction compare2Level(l1, l2) {\n  return function(a, b) {\n    return a[l1] === b[l1]\n      ? a[l2] - b[l2]\n      : a[l1] - b[l1];\n  };\n}\nfunction onAnimationsComplete(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  chart.notifyPlugins('afterRender');\n  callback(animationOptions && animationOptions.onComplete, [context], chart);\n}\nfunction onAnimationProgress(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  callback(animationOptions && animationOptions.onProgress, [context], chart);\n}\nfunction getCanvas(item) {\n  if (_isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    item = item[0];\n  }\n  if (item && item.canvas) {\n    item = item.canvas;\n  }\n  return item;\n}\nconst instances = {};\nconst getChart = (key) => {\n  const canvas = getCanvas(key);\n  return Object.values(instances).filter((c) => c.canvas === canvas).pop();\n};\nclass Chart {\n  constructor(item, userConfig) {\n    const me = this;\n    const config = this.config = new Config(userConfig);\n    const initialCanvas = getCanvas(item);\n    const existingChart = getChart(initialCanvas);\n    if (existingChart) {\n      throw new Error(\n        'Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' +\n\t\t\t\t' must be destroyed before the canvas can be reused.'\n      );\n    }\n    const options = config.createResolver(config.chartOptionScopes(), me.getContext());\n    this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n    const context = me.platform.acquireContext(initialCanvas, options.aspectRatio);\n    const canvas = context && context.canvas;\n    const height = canvas && canvas.height;\n    const width = canvas && canvas.width;\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    this._responsiveListeners = undefined;\n    this._sortedMetasets = [];\n    this.scales = {};\n    this.scale = undefined;\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(() => this.update('resize'), options.resizeDelay || 0);\n    instances[me.id] = me;\n    if (!context || !canvas) {\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n    animator.listen(me, 'complete', onAnimationsComplete);\n    animator.listen(me, 'progress', onAnimationProgress);\n    me._initialize();\n    if (me.attached) {\n      me.update();\n    }\n  }\n  get aspectRatio() {\n    const {options: {aspectRatio, maintainAspectRatio}, width, height, _aspectRatio} = this;\n    if (!isNullOrUndef(aspectRatio)) {\n      return aspectRatio;\n    }\n    if (maintainAspectRatio && _aspectRatio) {\n      return _aspectRatio;\n    }\n    return height ? width / height : null;\n  }\n  get data() {\n    return this.config.data;\n  }\n  set data(data) {\n    this.config.data = data;\n  }\n  get options() {\n    return this._options;\n  }\n  set options(options) {\n    this.config.options = options;\n  }\n  _initialize() {\n    const me = this;\n    me.notifyPlugins('beforeInit');\n    if (me.options.responsive) {\n      me.resize();\n    } else {\n      retinaScale(me, me.options.devicePixelRatio);\n    }\n    me.bindEvents();\n    me.notifyPlugins('afterInit');\n    return me;\n  }\n  clear() {\n    clearCanvas(this.canvas, this.ctx);\n    return this;\n  }\n  stop() {\n    animator.stop(this);\n    return this;\n  }\n  resize(width, height) {\n    if (!animator.running(this)) {\n      this._resize(width, height);\n    } else {\n      this._resizeBeforeDraw = {width, height};\n    }\n  }\n  _resize(width, height) {\n    const me = this;\n    const options = me.options;\n    const canvas = me.canvas;\n    const aspectRatio = options.maintainAspectRatio && me.aspectRatio;\n    const newSize = me.platform.getMaximumSize(canvas, width, height, aspectRatio);\n    const newRatio = options.devicePixelRatio || me.platform.getDevicePixelRatio();\n    me.width = newSize.width;\n    me.height = newSize.height;\n    me._aspectRatio = me.aspectRatio;\n    if (!retinaScale(me, newRatio, true)) {\n      return;\n    }\n    me.notifyPlugins('resize', {size: newSize});\n    callback(options.onResize, [me, newSize], me);\n    if (me.attached) {\n      if (me._doResize()) {\n        me.render();\n      }\n    }\n  }\n  ensureScalesHaveIDs() {\n    const options = this.options;\n    const scalesOptions = options.scales || {};\n    each(scalesOptions, (axisOptions, axisID) => {\n      axisOptions.id = axisID;\n    });\n  }\n  buildOrUpdateScales() {\n    const me = this;\n    const options = me.options;\n    const scaleOpts = options.scales;\n    const scales = me.scales;\n    const updated = Object.keys(scales).reduce((obj, id) => {\n      obj[id] = false;\n      return obj;\n    }, {});\n    let items = [];\n    if (scaleOpts) {\n      items = items.concat(\n        Object.keys(scaleOpts).map((id) => {\n          const scaleOptions = scaleOpts[id];\n          const axis = determineAxis(id, scaleOptions);\n          const isRadial = axis === 'r';\n          const isHorizontal = axis === 'x';\n          return {\n            options: scaleOptions,\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n          };\n        })\n      );\n    }\n    each(items, (item) => {\n      const scaleOptions = item.options;\n      const id = scaleOptions.id;\n      const axis = determineAxis(id, scaleOptions);\n      const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n        scaleOptions.position = item.dposition;\n      }\n      updated[id] = true;\n      let scale = null;\n      if (id in scales && scales[id].type === scaleType) {\n        scale = scales[id];\n      } else {\n        const scaleClass = registry.getScale(scaleType);\n        scale = new scaleClass({\n          id,\n          type: scaleType,\n          ctx: me.ctx,\n          chart: me\n        });\n        scales[scale.id] = scale;\n      }\n      scale.init(scaleOptions, options);\n    });\n    each(updated, (hasUpdated, id) => {\n      if (!hasUpdated) {\n        delete scales[id];\n      }\n    });\n    each(scales, (scale) => {\n      layouts.configure(me, scale, scale.options);\n      layouts.addBox(me, scale);\n    });\n  }\n  _updateMetasets() {\n    const me = this;\n    const metasets = me._metasets;\n    const numData = me.data.datasets.length;\n    const numMeta = metasets.length;\n    metasets.sort((a, b) => a.index - b.index);\n    if (numMeta > numData) {\n      for (let i = numData; i < numMeta; ++i) {\n        me._destroyDatasetMeta(i);\n      }\n      metasets.splice(numData, numMeta - numData);\n    }\n    me._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n  }\n  _removeUnreferencedMetasets() {\n    const me = this;\n    const {_metasets: metasets, data: {datasets}} = me;\n    if (metasets.length > datasets.length) {\n      delete me._stacks;\n    }\n    metasets.forEach((meta, index) => {\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\n        me._destroyDatasetMeta(index);\n      }\n    });\n  }\n  buildOrUpdateControllers() {\n    const me = this;\n    const newControllers = [];\n    const datasets = me.data.datasets;\n    let i, ilen;\n    me._removeUnreferencedMetasets();\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\n      const dataset = datasets[i];\n      let meta = me.getDatasetMeta(i);\n      const type = dataset.type || me.config.type;\n      if (meta.type && meta.type !== type) {\n        me._destroyDatasetMeta(i);\n        meta = me.getDatasetMeta(i);\n      }\n      meta.type = type;\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, me.options);\n      meta.order = dataset.order || 0;\n      meta.index = i;\n      meta.label = '' + dataset.label;\n      meta.visible = me.isDatasetVisible(i);\n      if (meta.controller) {\n        meta.controller.updateIndex(i);\n        meta.controller.linkScales();\n      } else {\n        const ControllerClass = registry.getController(type);\n        const {datasetElementType, dataElementType} = defaults.datasets[type];\n        Object.assign(ControllerClass.prototype, {\n          dataElementType: registry.getElement(dataElementType),\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n        });\n        meta.controller = new ControllerClass(me, i);\n        newControllers.push(meta.controller);\n      }\n    }\n    me._updateMetasets();\n    return newControllers;\n  }\n  _resetElements() {\n    const me = this;\n    each(me.data.datasets, (dataset, datasetIndex) => {\n      me.getDatasetMeta(datasetIndex).controller.reset();\n    }, me);\n  }\n  reset() {\n    this._resetElements();\n    this.notifyPlugins('reset');\n  }\n  update(mode) {\n    const me = this;\n    const config = me.config;\n    config.update();\n    me._options = config.createResolver(config.chartOptionScopes(), me.getContext());\n    each(me.scales, (scale) => {\n      layouts.removeBox(me, scale);\n    });\n    const animsDisabled = me._animationsDisabled = !me.options.animation;\n    me.ensureScalesHaveIDs();\n    me.buildOrUpdateScales();\n    const existingEvents = new Set(Object.keys(me._listeners));\n    const newEvents = new Set(me.options.events);\n    if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== me.options.responsive) {\n      me.unbindEvents();\n      me.bindEvents();\n    }\n    me._plugins.invalidate();\n    if (me.notifyPlugins('beforeUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n    const newControllers = me.buildOrUpdateControllers();\n    me.notifyPlugins('beforeElementsUpdate');\n    let minPadding = 0;\n    for (let i = 0, ilen = me.data.datasets.length; i < ilen; i++) {\n      const {controller} = me.getDatasetMeta(i);\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n      controller.buildOrUpdateElements(reset);\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n    }\n    me._minPadding = minPadding;\n    me._updateLayout(minPadding);\n    if (!animsDisabled) {\n      each(newControllers, (controller) => {\n        controller.reset();\n      });\n    }\n    me._updateDatasets(mode);\n    me.notifyPlugins('afterUpdate', {mode});\n    me._layers.sort(compare2Level('z', '_idx'));\n    if (me._lastEvent) {\n      me._eventHandler(me._lastEvent, true);\n    }\n    me.render();\n  }\n  _updateLayout(minPadding) {\n    const me = this;\n    if (me.notifyPlugins('beforeLayout', {cancelable: true}) === false) {\n      return;\n    }\n    layouts.update(me, me.width, me.height, minPadding);\n    const area = me.chartArea;\n    const noArea = area.width <= 0 || area.height <= 0;\n    me._layers = [];\n    each(me.boxes, (box) => {\n      if (noArea && box.position === 'chartArea') {\n        return;\n      }\n      if (box.configure) {\n        box.configure();\n      }\n      me._layers.push(...box._layers());\n    }, me);\n    me._layers.forEach((item, index) => {\n      item._idx = index;\n    });\n    me.notifyPlugins('afterLayout');\n  }\n  _updateDatasets(mode) {\n    const me = this;\n    const isFunction = typeof mode === 'function';\n    if (me.notifyPlugins('beforeDatasetsUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n    for (let i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n      me._updateDataset(i, isFunction ? mode({datasetIndex: i}) : mode);\n    }\n    me.notifyPlugins('afterDatasetsUpdate', {mode});\n  }\n  _updateDataset(index, mode) {\n    const me = this;\n    const meta = me.getDatasetMeta(index);\n    const args = {meta, index, mode, cancelable: true};\n    if (me.notifyPlugins('beforeDatasetUpdate', args) === false) {\n      return;\n    }\n    meta.controller._update(mode);\n    args.cancelable = false;\n    me.notifyPlugins('afterDatasetUpdate', args);\n  }\n  render() {\n    const me = this;\n    if (me.notifyPlugins('beforeRender', {cancelable: true}) === false) {\n      return;\n    }\n    if (animator.has(me)) {\n      if (me.attached && !animator.running(me)) {\n        animator.start(me);\n      }\n    } else {\n      me.draw();\n      onAnimationsComplete({chart: me});\n    }\n  }\n  draw() {\n    const me = this;\n    let i;\n    if (me._resizeBeforeDraw) {\n      const {width, height} = me._resizeBeforeDraw;\n      me._resize(width, height);\n      me._resizeBeforeDraw = null;\n    }\n    me.clear();\n    if (me.width <= 0 || me.height <= 0) {\n      return;\n    }\n    if (me.notifyPlugins('beforeDraw', {cancelable: true}) === false) {\n      return;\n    }\n    const layers = me._layers;\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n      layers[i].draw(me.chartArea);\n    }\n    me._drawDatasets();\n    for (; i < layers.length; ++i) {\n      layers[i].draw(me.chartArea);\n    }\n    me.notifyPlugins('afterDraw');\n  }\n  _getSortedDatasetMetas(filterVisible) {\n    const me = this;\n    const metasets = me._sortedMetasets;\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const meta = metasets[i];\n      if (!filterVisible || meta.visible) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  getSortedVisibleDatasetMetas() {\n    return this._getSortedDatasetMetas(true);\n  }\n  _drawDatasets() {\n    const me = this;\n    if (me.notifyPlugins('beforeDatasetsDraw', {cancelable: true}) === false) {\n      return;\n    }\n    const metasets = me.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      me._drawDataset(metasets[i]);\n    }\n    me.notifyPlugins('afterDatasetsDraw');\n  }\n  _drawDataset(meta) {\n    const me = this;\n    const ctx = me.ctx;\n    const clip = meta._clip;\n    const useClip = !clip.disabled;\n    const area = me.chartArea;\n    const args = {\n      meta,\n      index: meta.index,\n      cancelable: true\n    };\n    if (me.notifyPlugins('beforeDatasetDraw', args) === false) {\n      return;\n    }\n    if (useClip) {\n      clipArea(ctx, {\n        left: clip.left === false ? 0 : area.left - clip.left,\n        right: clip.right === false ? me.width : area.right + clip.right,\n        top: clip.top === false ? 0 : area.top - clip.top,\n        bottom: clip.bottom === false ? me.height : area.bottom + clip.bottom\n      });\n    }\n    meta.controller.draw();\n    if (useClip) {\n      unclipArea(ctx);\n    }\n    args.cancelable = false;\n    me.notifyPlugins('afterDatasetDraw', args);\n  }\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n    const method = Interaction.modes[mode];\n    if (typeof method === 'function') {\n      return method(this, e, options, useFinalPosition);\n    }\n    return [];\n  }\n  getDatasetMeta(datasetIndex) {\n    const me = this;\n    const dataset = me.data.datasets[datasetIndex];\n    const metasets = me._metasets;\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n    if (!meta) {\n      meta = {\n        type: null,\n        data: [],\n        dataset: null,\n        controller: null,\n        hidden: null,\n        xAxisID: null,\n        yAxisID: null,\n        order: dataset && dataset.order || 0,\n        index: datasetIndex,\n        _dataset: dataset,\n        _parsed: [],\n        _sorted: false\n      };\n      metasets.push(meta);\n    }\n    return meta;\n  }\n  getContext() {\n    return this.$context || (this.$context = {chart: this, type: 'chart'});\n  }\n  getVisibleDatasetCount() {\n    return this.getSortedVisibleDatasetMetas().length;\n  }\n  isDatasetVisible(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    if (!dataset) {\n      return false;\n    }\n    const meta = this.getDatasetMeta(datasetIndex);\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n  }\n  setDatasetVisibility(datasetIndex, visible) {\n    const meta = this.getDatasetMeta(datasetIndex);\n    meta.hidden = !visible;\n  }\n  toggleDataVisibility(index) {\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\n  }\n  getDataVisibility(index) {\n    return !this._hiddenIndices[index];\n  }\n  _updateVisibility(datasetIndex, dataIndex, visible) {\n    const me = this;\n    const mode = visible ? 'show' : 'hide';\n    const meta = me.getDatasetMeta(datasetIndex);\n    const anims = meta.controller._resolveAnimations(undefined, mode);\n    if (defined(dataIndex)) {\n      meta.data[dataIndex].hidden = !visible;\n      me.update();\n    } else {\n      me.setDatasetVisibility(datasetIndex, visible);\n      anims.update(meta, {visible});\n      me.update((ctx) => ctx.datasetIndex === datasetIndex ? mode : undefined);\n    }\n  }\n  hide(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, false);\n  }\n  show(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, true);\n  }\n  _destroyDatasetMeta(datasetIndex) {\n    const me = this;\n    const meta = me._metasets && me._metasets[datasetIndex];\n    if (meta && meta.controller) {\n      meta.controller._destroy();\n      delete me._metasets[datasetIndex];\n    }\n  }\n  destroy() {\n    const me = this;\n    const {canvas, ctx} = me;\n    let i, ilen;\n    me.stop();\n    animator.remove(me);\n    for (i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n      me._destroyDatasetMeta(i);\n    }\n    me.config.clearCache();\n    if (canvas) {\n      me.unbindEvents();\n      clearCanvas(canvas, ctx);\n      me.platform.releaseContext(ctx);\n      me.canvas = null;\n      me.ctx = null;\n    }\n    me.notifyPlugins('destroy');\n    delete instances[me.id];\n  }\n  toBase64Image(...args) {\n    return this.canvas.toDataURL(...args);\n  }\n  bindEvents() {\n    this.bindUserEvents();\n    if (this.options.responsive) {\n      this.bindResponsiveEvents();\n    } else {\n      this.attached = true;\n    }\n  }\n  bindUserEvents() {\n    const me = this;\n    const listeners = me._listeners;\n    const platform = me.platform;\n    const _add = (type, listener) => {\n      platform.addEventListener(me, type, listener);\n      listeners[type] = listener;\n    };\n    const listener = function(e, x, y) {\n      e.offsetX = x;\n      e.offsetY = y;\n      me._eventHandler(e);\n    };\n    each(me.options.events, (type) => _add(type, listener));\n  }\n  bindResponsiveEvents() {\n    const me = this;\n    if (!me._responsiveListeners) {\n      me._responsiveListeners = {};\n    }\n    const listeners = me._responsiveListeners;\n    const platform = me.platform;\n    const _add = (type, listener) => {\n      platform.addEventListener(me, type, listener);\n      listeners[type] = listener;\n    };\n    const _remove = (type, listener) => {\n      if (listeners[type]) {\n        platform.removeEventListener(me, type, listener);\n        delete listeners[type];\n      }\n    };\n    const listener = (width, height) => {\n      if (me.canvas) {\n        me.resize(width, height);\n      }\n    };\n    let detached;\n    const attached = () => {\n      _remove('attach', attached);\n      me.attached = true;\n      me.resize();\n      _add('resize', listener);\n      _add('detach', detached);\n    };\n    detached = () => {\n      me.attached = false;\n      _remove('resize', listener);\n      _add('attach', attached);\n    };\n    if (platform.isAttached(me.canvas)) {\n      attached();\n    } else {\n      detached();\n    }\n  }\n  unbindEvents() {\n    const me = this;\n    each(me._listeners, (listener, type) => {\n      me.platform.removeEventListener(me, type, listener);\n    });\n    me._listeners = {};\n    each(me._responsiveListeners, (listener, type) => {\n      me.platform.removeEventListener(me, type, listener);\n    });\n    me._responsiveListeners = undefined;\n  }\n  updateHoverStyle(items, mode, enabled) {\n    const prefix = enabled ? 'set' : 'remove';\n    let meta, item, i, ilen;\n    if (mode === 'dataset') {\n      meta = this.getDatasetMeta(items[0].datasetIndex);\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\n    }\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n      if (controller) {\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n      }\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements) {\n    const me = this;\n    const lastActive = me._active || [];\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = me.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('No dataset found at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed) {\n      me._active = active;\n      me._updateHoverStyles(active, lastActive);\n    }\n  }\n  notifyPlugins(hook, args, filter) {\n    return this._plugins.notify(this, hook, args, filter);\n  }\n  _updateHoverStyles(active, lastActive, replay) {\n    const me = this;\n    const hoverOptions = me.options.hover;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n    const deactivated = diff(lastActive, active);\n    const activated = replay ? active : diff(active, lastActive);\n    if (deactivated.length) {\n      me.updateHoverStyle(deactivated, hoverOptions.mode, false);\n    }\n    if (activated.length && hoverOptions.mode) {\n      me.updateHoverStyle(activated, hoverOptions.mode, true);\n    }\n  }\n  _eventHandler(e, replay) {\n    const me = this;\n    const args = {event: e, replay, cancelable: true};\n    const eventFilter = (plugin) => (plugin.options.events || this.options.events).includes(e.type);\n    if (me.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n      return;\n    }\n    const changed = me._handleEvent(e, replay);\n    args.cancelable = false;\n    me.notifyPlugins('afterEvent', args, eventFilter);\n    if (changed || args.changed) {\n      me.render();\n    }\n    return me;\n  }\n  _handleEvent(e, replay) {\n    const me = this;\n    const {_active: lastActive = [], options} = me;\n    const hoverOptions = options.hover;\n    const useFinalPosition = replay;\n    let active = [];\n    let changed = false;\n    let lastEvent = null;\n    if (e.type !== 'mouseout') {\n      active = me.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n      lastEvent = e.type === 'click' ? me._lastEvent : e;\n    }\n    me._lastEvent = null;\n    if (_isPointInArea(e, me.chartArea, me._minPadding)) {\n      callback(options.onHover, [e, active, me], me);\n      if (e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu') {\n        callback(options.onClick, [e, active, me], me);\n      }\n    }\n    changed = !_elementsEqual(active, lastActive);\n    if (changed || replay) {\n      me._active = active;\n      me._updateHoverStyles(active, lastActive, replay);\n    }\n    me._lastEvent = lastEvent;\n    return changed;\n  }\n}\nconst invalidatePlugins = () => each(Chart.instances, (chart) => chart._plugins.invalidate());\nconst enumerable = true;\nObject.defineProperties(Chart, {\n  defaults: {\n    enumerable,\n    value: defaults\n  },\n  instances: {\n    enumerable,\n    value: instances\n  },\n  overrides: {\n    enumerable,\n    value: overrides\n  },\n  registry: {\n    enumerable,\n    value: registry\n  },\n  version: {\n    enumerable,\n    value: version\n  },\n  getChart: {\n    enumerable,\n    value: getChart\n  },\n  register: {\n    enumerable,\n    value: (...items) => {\n      registry.add(...items);\n      invalidatePlugins();\n    }\n  },\n  unregister: {\n    enumerable,\n    value: (...items) => {\n      registry.remove(...items);\n      invalidatePlugins();\n    }\n  }\n});\n\nfunction clipArc(ctx, element, endAngle) {\n  const {startAngle, pixelMargin, x, y, outerRadius, innerRadius} = element;\n  let angleMargin = pixelMargin / outerRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n  ctx.closePath();\n  ctx.clip();\n}\nfunction toRadiusCorners(value) {\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\nfunction parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n  const o = toRadiusCorners(arc.options.borderRadius);\n  const halfThickness = (outerRadius - innerRadius) / 2;\n  const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n  const computeOuterLimit = (val) => {\n    const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit),\n  };\n}\nfunction rThetaToXY(r, theta, x, y) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta),\n  };\n}\nfunction pathArc(ctx, element, offset, spacing, end) {\n  const {x, y, startAngle: start, pixelMargin, innerRadius: innerR} = element;\n  const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n  const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n  let spacingOffset = 0;\n  const alpha = end - start;\n  if (spacing) {\n    const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n    const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n    const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n    const adjustedAngle = avNogSpacingRadius !== 0 ? (alpha * avNogSpacingRadius) / (avNogSpacingRadius + spacing) : alpha;\n    spacingOffset = (alpha - adjustedAngle) / 2;\n  }\n  const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n  const angleOffset = (alpha - beta) / 2;\n  const startAngle = start + angleOffset + spacingOffset;\n  const endAngle = end - angleOffset - spacingOffset;\n  const {outerStart, outerEnd, innerStart, innerEnd} = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n  const outerStartAdjustedRadius = outerRadius - outerStart;\n  const outerEndAdjustedRadius = outerRadius - outerEnd;\n  const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n  const innerStartAdjustedRadius = innerRadius + innerStart;\n  const innerEndAdjustedRadius = innerRadius + innerEnd;\n  const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerEndAdjustedAngle);\n  if (outerEnd > 0) {\n    const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n  }\n  const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n  ctx.lineTo(p4.x, p4.y);\n  if (innerEnd > 0) {\n    const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n  }\n  ctx.arc(x, y, innerRadius, endAngle - (innerEnd / innerRadius), startAngle + (innerStart / innerRadius), true);\n  if (innerStart > 0) {\n    const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n  }\n  const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n  ctx.lineTo(p8.x, p8.y);\n  if (outerStart > 0) {\n    const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n  }\n  ctx.closePath();\n}\nfunction drawArc(ctx, element, offset, spacing) {\n  const {fullCircles, startAngle, circumference} = element;\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, startAngle + TAU);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.fill();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + circumference % TAU;\n      if (circumference % TAU === 0) {\n        endAngle += TAU;\n      }\n    }\n  }\n  pathArc(ctx, element, offset, spacing, endAngle);\n  ctx.fill();\n  return endAngle;\n}\nfunction drawFullCircleBorders(ctx, element, inner) {\n  const {x, y, startAngle, pixelMargin, fullCircles} = element;\n  const outerRadius = Math.max(element.outerRadius - pixelMargin, 0);\n  const innerRadius = element.innerRadius + pixelMargin;\n  let i;\n  if (inner) {\n    clipArc(ctx, element, startAngle + TAU);\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, innerRadius, startAngle + TAU, startAngle, true);\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle, startAngle + TAU);\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n}\nfunction drawBorder(ctx, element, offset, spacing, endAngle) {\n  const {options} = element;\n  const inner = options.borderAlign === 'inner';\n  if (!options.borderWidth) {\n    return;\n  }\n  if (inner) {\n    ctx.lineWidth = options.borderWidth * 2;\n    ctx.lineJoin = 'round';\n  } else {\n    ctx.lineWidth = options.borderWidth;\n    ctx.lineJoin = 'bevel';\n  }\n  if (element.fullCircles) {\n    drawFullCircleBorders(ctx, element, inner);\n  }\n  if (inner) {\n    clipArc(ctx, element, endAngle);\n  }\n  pathArc(ctx, element, offset, spacing, endAngle);\n  ctx.stroke();\n}\nclass ArcElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.circumference = undefined;\n    this.startAngle = undefined;\n    this.endAngle = undefined;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.pixelMargin = 0;\n    this.fullCircles = 0;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(chartX, chartY, useFinalPosition) {\n    const point = this.getProps(['x', 'y'], useFinalPosition);\n    const {angle, distance} = getAngleFromPoint(point, {x: chartX, y: chartY});\n    const {startAngle, endAngle, innerRadius, outerRadius, circumference} = this.getProps([\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference'\n    ], useFinalPosition);\n    const rAdjust = this.options.spacing / 2;\n    const betweenAngles = circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n    const withinRadius = (distance >= innerRadius + rAdjust && distance <= outerRadius + rAdjust);\n    return (betweenAngles && withinRadius);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y, startAngle, endAngle, innerRadius, outerRadius} = this.getProps([\n      'x',\n      'y',\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference',\n    ], useFinalPosition);\n    const {offset, spacing} = this.options;\n    const halfAngle = (startAngle + endAngle) / 2;\n    const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n    return {\n      x: x + Math.cos(halfAngle) * halfRadius,\n      y: y + Math.sin(halfAngle) * halfRadius\n    };\n  }\n  tooltipPosition(useFinalPosition) {\n    return this.getCenterPoint(useFinalPosition);\n  }\n  draw(ctx) {\n    const me = this;\n    const {options, circumference} = me;\n    const offset = (options.offset || 0) / 2;\n    const spacing = (options.spacing || 0) / 2;\n    me.pixelMargin = (options.borderAlign === 'inner') ? 0.33 : 0;\n    me.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n    if (circumference === 0 || me.innerRadius < 0 || me.outerRadius < 0) {\n      return;\n    }\n    ctx.save();\n    let radiusOffset = 0;\n    if (offset) {\n      radiusOffset = offset / 2;\n      const halfAngle = (me.startAngle + me.endAngle) / 2;\n      ctx.translate(Math.cos(halfAngle) * radiusOffset, Math.sin(halfAngle) * radiusOffset);\n      if (me.circumference >= PI) {\n        radiusOffset = offset;\n      }\n    }\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    const endAngle = drawArc(ctx, me, radiusOffset, spacing);\n    drawBorder(ctx, me, radiusOffset, spacing, endAngle);\n    ctx.restore();\n  }\n}\nArcElement.id = 'arc';\nArcElement.defaults = {\n  borderAlign: 'center',\n  borderColor: '#fff',\n  borderRadius: 0,\n  borderWidth: 2,\n  offset: 0,\n  spacing: 0,\n  angle: undefined,\n};\nArcElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor'\n};\n\nfunction setStyle(ctx, options, style = options) {\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierCurveTo;\n  }\n  return lineTo;\n}\nfunction pathVars(points, segment, params = {}) {\n  const count = points.length;\n  const {start: paramsStart = 0, end: paramsEnd = count - 1} = params;\n  const {start: segmentStart, end: segmentEnd} = segment;\n  const start = Math.max(paramsStart, segmentStart);\n  const end = Math.min(paramsEnd, segmentEnd);\n  const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n  return {\n    count,\n    start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\nfunction pathSegment(ctx, line, segment, params) {\n  const {points, options} = line;\n  const {count, start, loop, ilen} = pathVars(points, segment, params);\n  const lineMethod = getLineMethod(options);\n  let {move = true, reverse} = params || {};\n  let i, point, prev;\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n    if (point.skip) {\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    prev = point;\n  }\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n  return !!loop;\n}\nfunction fastPathSegment(ctx, line, segment, params) {\n  const points = line.points;\n  const {count, start, ilen} = pathVars(points, segment, params);\n  const {move = true, reverse} = params || {};\n  let avgX = 0;\n  let countX = 0;\n  let i, point, prevX, minY, maxY, lastY;\n  const pointIndex = (index) => (start + (reverse ? ilen - index : index)) % count;\n  const drawX = () => {\n    if (minY !== maxY) {\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n    if (point.skip) {\n      continue;\n    }\n    const x = point.x;\n    const y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      ctx.lineTo(x, y);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n    lastY = y;\n  }\n  drawX();\n}\nfunction _getSegmentMethod(line) {\n  const opts = line.options;\n  const borderDash = opts.borderDash && opts.borderDash.length;\n  const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierInterpolation;\n  }\n  return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n  let path = line._path;\n  if (!path) {\n    path = line._path = new Path2D();\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n  const {segments, options} = line;\n  const segmentMethod = _getSegmentMethod(line);\n  for (const segment of segments) {\n    setStyle(ctx, options, segment.style);\n    ctx.beginPath();\n    if (segmentMethod(ctx, line, segment, {start, end: start + count - 1})) {\n      ctx.closePath();\n    }\n    ctx.stroke();\n  }\n}\nconst usePath2D = typeof Path2D === 'function';\nfunction draw(ctx, line, start, count) {\n  if (usePath2D && line.segments.length === 1) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\nclass LineElement extends Element {\n  constructor(cfg) {\n    super();\n    this.animated = true;\n    this.options = undefined;\n    this._loop = undefined;\n    this._fullLoop = undefined;\n    this._path = undefined;\n    this._points = undefined;\n    this._segments = undefined;\n    this._decimated = false;\n    this._pointsUpdated = false;\n    this._datasetIndex = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  updateControlPoints(chartArea, indexAxis) {\n    const me = this;\n    const options = me.options;\n    if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !me._pointsUpdated) {\n      const loop = options.spanGaps ? me._loop : me._fullLoop;\n      _updateBezierControlPoints(me._points, options, chartArea, loop, indexAxis);\n      me._pointsUpdated = true;\n    }\n  }\n  set points(points) {\n    const me = this;\n    me._points = points;\n    delete me._segments;\n    delete me._path;\n    me._pointsUpdated = false;\n  }\n  get points() {\n    return this._points;\n  }\n  get segments() {\n    return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n  }\n  first() {\n    const segments = this.segments;\n    const points = this.points;\n    return segments.length && points[segments[0].start];\n  }\n  last() {\n    const segments = this.segments;\n    const points = this.points;\n    const count = segments.length;\n    return count && points[segments[count - 1].end];\n  }\n  interpolate(point, property) {\n    const me = this;\n    const options = me.options;\n    const value = point[property];\n    const points = me.points;\n    const segments = _boundSegments(me, {property, start: value, end: value});\n    if (!segments.length) {\n      return;\n    }\n    const result = [];\n    const _interpolate = _getInterpolationMethod(options);\n    let i, ilen;\n    for (i = 0, ilen = segments.length; i < ilen; ++i) {\n      const {start, end} = segments[i];\n      const p1 = points[start];\n      const p2 = points[end];\n      if (p1 === p2) {\n        result.push(p1);\n        continue;\n      }\n      const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n      const interpolated = _interpolate(p1, p2, t, options.stepped);\n      interpolated[property] = point[property];\n      result.push(interpolated);\n    }\n    return result.length === 1 ? result[0] : result;\n  }\n  pathSegment(ctx, segment, params) {\n    const segmentMethod = _getSegmentMethod(this);\n    return segmentMethod(ctx, this, segment, params);\n  }\n  path(ctx, start, count) {\n    const me = this;\n    const segments = me.segments;\n    const segmentMethod = _getSegmentMethod(me);\n    let loop = me._loop;\n    start = start || 0;\n    count = count || (me.points.length - start);\n    for (const segment of segments) {\n      loop &= segmentMethod(ctx, me, segment, {start, end: start + count - 1});\n    }\n    return !!loop;\n  }\n  draw(ctx, chartArea, start, count) {\n    const me = this;\n    const options = me.options || {};\n    const points = me.points || [];\n    if (!points.length || !options.borderWidth) {\n      return;\n    }\n    ctx.save();\n    draw(ctx, me, start, count);\n    ctx.restore();\n    if (me.animated) {\n      me._pointsUpdated = false;\n      me._path = undefined;\n    }\n  }\n}\nLineElement.id = 'line';\nLineElement.defaults = {\n  borderCapStyle: 'butt',\n  borderDash: [],\n  borderDashOffset: 0,\n  borderJoinStyle: 'miter',\n  borderWidth: 3,\n  capBezierPoints: true,\n  cubicInterpolationMode: 'default',\n  fill: false,\n  spanGaps: false,\n  stepped: false,\n  tension: 0,\n};\nLineElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\nLineElement.descriptors = {\n  _scriptable: true,\n  _indexable: (name) => name !== 'borderDash' && name !== 'fill',\n};\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n  const options = el.options;\n  const {[axis]: value} = el.getProps([axis], useFinalPosition);\n  return (Math.abs(pos - value) < options.radius + options.hitRadius);\n}\nclass PointElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.parsed = undefined;\n    this.skip = undefined;\n    this.stop = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    const options = this.options;\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return ((Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2)) < Math.pow(options.hitRadius + options.radius, 2));\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange$1(this, mouseX, 'x', useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange$1(this, mouseY, 'y', useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n  size(options) {\n    options = options || this.options || {};\n    let radius = options.radius || 0;\n    radius = Math.max(radius, radius && options.hoverRadius || 0);\n    const borderWidth = radius && options.borderWidth || 0;\n    return (radius + borderWidth) * 2;\n  }\n  draw(ctx, area) {\n    const me = this;\n    const options = me.options;\n    if (me.skip || options.radius < 0.1 || !_isPointInArea(me, area, me.size(options) / 2)) {\n      return;\n    }\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.fillStyle = options.backgroundColor;\n    drawPoint(ctx, options, me.x, me.y);\n  }\n  getRange() {\n    const options = this.options || {};\n    return options.radius + options.hitRadius;\n  }\n}\nPointElement.id = 'point';\nPointElement.defaults = {\n  borderWidth: 1,\n  hitRadius: 1,\n  hoverBorderWidth: 1,\n  hoverRadius: 4,\n  pointStyle: 'circle',\n  radius: 3,\n  rotation: 0\n};\nPointElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\n\nfunction getBarBounds(bar, useFinalPosition) {\n  const {x, y, base, width, height} = bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition);\n  let left, right, top, bottom, half;\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n  return {left, top, right, bottom};\n}\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : _limitValue(value, min, max);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n  const value = bar.options.borderWidth;\n  const skip = bar.borderSkipped;\n  const o = toTRBL(value);\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n  const {enableBorderRadius} = bar.getProps(['enableBorderRadius']);\n  const value = bar.options.borderRadius;\n  const o = toTRBLCorners(value);\n  const maxR = Math.min(maxW, maxH);\n  const skip = bar.borderSkipped;\n  const enableBorder = enableBorderRadius || isObject(value);\n  return {\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\nfunction boundingRects(bar) {\n  const bounds = getBarBounds(bar);\n  const width = bounds.right - bounds.left;\n  const height = bounds.bottom - bounds.top;\n  const border = parseBorderWidth(bar, width / 2, height / 2);\n  const radius = parseBorderRadius(bar, width / 2, height / 2);\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r)),\n      }\n    }\n  };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n  const skipX = x === null;\n  const skipY = y === null;\n  const skipBoth = skipX && skipY;\n  const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n  return bounds\n\t\t&& (skipX || x >= bounds.left && x <= bounds.right)\n\t\t&& (skipY || y >= bounds.top && y <= bounds.bottom);\n}\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nfunction inflateRect(rect, amount, refRect = {}) {\n  const x = rect.x !== refRect.x ? -amount : 0;\n  const y = rect.y !== refRect.y ? -amount : 0;\n  const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n  const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n  return {\n    x: rect.x + x,\n    y: rect.y + y,\n    w: rect.w + w,\n    h: rect.h + h,\n    radius: rect.radius\n  };\n}\nclass BarElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.horizontal = undefined;\n    this.base = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  draw(ctx) {\n    const options = this.options;\n    const {inner, outer} = boundingRects(this);\n    const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n    const inflateAmount = 0.33;\n    ctx.save();\n    if (outer.w !== inner.w || outer.h !== inner.h) {\n      ctx.beginPath();\n      addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n      ctx.clip();\n      addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n      ctx.fillStyle = options.borderColor;\n      ctx.fill('evenodd');\n    }\n    ctx.beginPath();\n    addRectPath(ctx, inflateRect(inner, inflateAmount, outer));\n    ctx.fillStyle = options.backgroundColor;\n    ctx.fill();\n    ctx.restore();\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    return inRange(this, mouseX, mouseY, useFinalPosition);\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange(this, mouseX, null, useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange(this, null, mouseY, useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y, base, horizontal} = this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition);\n    return {\n      x: horizontal ? (x + base) / 2 : x,\n      y: horizontal ? y : (y + base) / 2\n    };\n  }\n  getRange(axis) {\n    return axis === 'x' ? this.width / 2 : this.height / 2;\n  }\n}\nBarElement.id = 'bar';\nBarElement.defaults = {\n  borderSkipped: 'start',\n  borderWidth: 0,\n  borderRadius: 0,\n  enableBorderRadius: true,\n  pointStyle: undefined\n};\nBarElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\n\nvar elements = /*#__PURE__*/Object.freeze({\n__proto__: null,\nArcElement: ArcElement,\nLineElement: LineElement,\nPointElement: PointElement,\nBarElement: BarElement\n});\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n  const samples = options.samples || availableWidth;\n  if (samples >= count) {\n    return data.slice(start, start + count);\n  }\n  const decimated = [];\n  const bucketWidth = (count - 2) / (samples - 2);\n  let sampledIndex = 0;\n  const endIndex = start + count - 1;\n  let a = start;\n  let i, maxAreaPoint, maxArea, area, nextA;\n  decimated[sampledIndex++] = data[a];\n  for (i = 0; i < samples - 2; i++) {\n    let avgX = 0;\n    let avgY = 0;\n    let j;\n    const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n    const avgRangeLength = avgRangeEnd - avgRangeStart;\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\n      avgX += data[j].x;\n      avgY += data[j].y;\n    }\n    avgX /= avgRangeLength;\n    avgY /= avgRangeLength;\n    const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n    const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n    const {x: pointAx, y: pointAy} = data[a];\n    maxArea = area = -1;\n    for (j = rangeOffs; j < rangeTo; j++) {\n      area = 0.5 * Math.abs(\n        (pointAx - avgX) * (data[j].y - pointAy) -\n        (pointAx - data[j].x) * (avgY - pointAy)\n      );\n      if (area > maxArea) {\n        maxArea = area;\n        maxAreaPoint = data[j];\n        nextA = j;\n      }\n    }\n    decimated[sampledIndex++] = maxAreaPoint;\n    a = nextA;\n  }\n  decimated[sampledIndex++] = data[endIndex];\n  return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n  let avgX = 0;\n  let countX = 0;\n  let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n  const decimated = [];\n  const endIndex = start + count - 1;\n  const xMin = data[start].x;\n  const xMax = data[endIndex].x;\n  const dx = xMax - xMin;\n  for (i = start; i < start + count; ++i) {\n    point = data[i];\n    x = (point.x - xMin) / dx * availableWidth;\n    y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n        minIndex = i;\n      } else if (y > maxY) {\n        maxY = y;\n        maxIndex = i;\n      }\n      avgX = (countX * avgX + point.x) / ++countX;\n    } else {\n      const lastIndex = i - 1;\n      if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n        const intermediateIndex1 = Math.min(minIndex, maxIndex);\n        const intermediateIndex2 = Math.max(minIndex, maxIndex);\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex1],\n            x: avgX,\n          });\n        }\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex2],\n            x: avgX\n          });\n        }\n      }\n      if (i > 0 && lastIndex !== startIndex) {\n        decimated.push(data[lastIndex]);\n      }\n      decimated.push(point);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n      minIndex = maxIndex = startIndex = i;\n    }\n  }\n  return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n  if (dataset._decimated) {\n    const data = dataset._data;\n    delete dataset._decimated;\n    delete dataset._data;\n    Object.defineProperty(dataset, 'data', {value: data});\n  }\n}\nfunction cleanDecimatedData(chart) {\n  chart.data.datasets.forEach((dataset) => {\n    cleanDecimatedDataset(dataset);\n  });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n  const pointCount = points.length;\n  let start = 0;\n  let count;\n  const {iScale} = meta;\n  const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n  if (minDefined) {\n    start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n  }\n  if (maxDefined) {\n    count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n  } else {\n    count = pointCount - start;\n  }\n  return {start, count};\n}\nvar plugin_decimation = {\n  id: 'decimation',\n  defaults: {\n    algorithm: 'min-max',\n    enabled: false,\n  },\n  beforeElementsUpdate: (chart, args, options) => {\n    if (!options.enabled) {\n      cleanDecimatedData(chart);\n      return;\n    }\n    const availableWidth = chart.width;\n    chart.data.datasets.forEach((dataset, datasetIndex) => {\n      const {_data, indexAxis} = dataset;\n      const meta = chart.getDatasetMeta(datasetIndex);\n      const data = _data || dataset.data;\n      if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\n        return;\n      }\n      if (meta.type !== 'line') {\n        return;\n      }\n      const xAxis = chart.scales[meta.xAxisID];\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n        return;\n      }\n      if (chart.options.parsing) {\n        return;\n      }\n      let {start, count} = getStartAndCountOfVisiblePointsSimplified(meta, data);\n      const threshold = options.threshold || 4 * availableWidth;\n      if (count <= threshold) {\n        cleanDecimatedDataset(dataset);\n        return;\n      }\n      if (isNullOrUndef(_data)) {\n        dataset._data = data;\n        delete dataset.data;\n        Object.defineProperty(dataset, 'data', {\n          configurable: true,\n          enumerable: true,\n          get: function() {\n            return this._decimated;\n          },\n          set: function(d) {\n            this._data = d;\n          }\n        });\n      }\n      let decimated;\n      switch (options.algorithm) {\n      case 'lttb':\n        decimated = lttbDecimation(data, start, count, availableWidth, options);\n        break;\n      case 'min-max':\n        decimated = minMaxDecimation(data, start, count, availableWidth);\n        break;\n      default:\n        throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n      }\n      dataset._decimated = decimated;\n    });\n  },\n  destroy(chart) {\n    cleanDecimatedData(chart);\n  }\n};\n\nfunction getLineByIndex(chart, index) {\n  const meta = chart.getDatasetMeta(index);\n  const visible = meta && chart.isDatasetVisible(index);\n  return visible ? meta.dataset : null;\n}\nfunction parseFillOption(line) {\n  const options = line.options;\n  const fillOption = options.fill;\n  let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n  if (fill === undefined) {\n    fill = !!options.backgroundColor;\n  }\n  if (fill === false || fill === null) {\n    return false;\n  }\n  if (fill === true) {\n    return 'origin';\n  }\n  return fill;\n}\nfunction decodeFill(line, index, count) {\n  const fill = parseFillOption(line);\n  if (isObject(fill)) {\n    return isNaN(fill.value) ? false : fill;\n  }\n  let target = parseFloat(fill);\n  if (isNumberFinite(target) && Math.floor(target) === target) {\n    if (fill[0] === '-' || fill[0] === '+') {\n      target = index + target;\n    }\n    if (target === index || target < 0 || target >= count) {\n      return false;\n    }\n    return target;\n  }\n  return ['origin', 'start', 'end', 'stack', 'shape'].indexOf(fill) >= 0 && fill;\n}\nfunction computeLinearBoundary(source) {\n  const {scale = {}, fill} = source;\n  let target = null;\n  let horizontal;\n  if (fill === 'start') {\n    target = scale.bottom;\n  } else if (fill === 'end') {\n    target = scale.top;\n  } else if (isObject(fill)) {\n    target = scale.getPixelForValue(fill.value);\n  } else if (scale.getBasePixel) {\n    target = scale.getBasePixel();\n  }\n  if (isNumberFinite(target)) {\n    horizontal = scale.isHorizontal();\n    return {\n      x: horizontal ? target : null,\n      y: horizontal ? null : target\n    };\n  }\n  return null;\n}\nclass simpleArc {\n  constructor(opts) {\n    this.x = opts.x;\n    this.y = opts.y;\n    this.radius = opts.radius;\n  }\n  pathSegment(ctx, bounds, opts) {\n    const {x, y, radius} = this;\n    bounds = bounds || {start: 0, end: TAU};\n    ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n    return !opts.bounds;\n  }\n  interpolate(point) {\n    const {x, y, radius} = this;\n    const angle = point.angle;\n    return {\n      x: x + Math.cos(angle) * radius,\n      y: y + Math.sin(angle) * radius,\n      angle\n    };\n  }\n}\nfunction computeCircularBoundary(source) {\n  const {scale, fill} = source;\n  const options = scale.options;\n  const length = scale.getLabels().length;\n  const target = [];\n  const start = options.reverse ? scale.max : scale.min;\n  const end = options.reverse ? scale.min : scale.max;\n  let i, center, value;\n  if (fill === 'start') {\n    value = start;\n  } else if (fill === 'end') {\n    value = end;\n  } else if (isObject(fill)) {\n    value = fill.value;\n  } else {\n    value = scale.getBaseValue();\n  }\n  if (options.grid.circular) {\n    center = scale.getPointPositionForValue(0, start);\n    return new simpleArc({\n      x: center.x,\n      y: center.y,\n      radius: scale.getDistanceFromCenterForValue(value)\n    });\n  }\n  for (i = 0; i < length; ++i) {\n    target.push(scale.getPointPositionForValue(i, value));\n  }\n  return target;\n}\nfunction computeBoundary(source) {\n  const scale = source.scale || {};\n  if (scale.getPointPositionForValue) {\n    return computeCircularBoundary(source);\n  }\n  return computeLinearBoundary(source);\n}\nfunction findSegmentEnd(start, end, points) {\n  for (;end > start; end--) {\n    const point = points[end];\n    if (!isNaN(point.x) && !isNaN(point.y)) {\n      break;\n    }\n  }\n  return end;\n}\nfunction pointsFromSegments(boundary, line) {\n  const {x = null, y = null} = boundary || {};\n  const linePoints = line.points;\n  const points = [];\n  line.segments.forEach(({start, end}) => {\n    end = findSegmentEnd(start, end, linePoints);\n    const first = linePoints[start];\n    const last = linePoints[end];\n    if (y !== null) {\n      points.push({x: first.x, y});\n      points.push({x: last.x, y});\n    } else if (x !== null) {\n      points.push({x, y: first.y});\n      points.push({x, y: last.y});\n    }\n  });\n  return points;\n}\nfunction buildStackLine(source) {\n  const {chart, scale, index, line} = source;\n  const points = [];\n  const segments = line.segments;\n  const sourcePoints = line.points;\n  const linesBelow = getLinesBelow(chart, index);\n  linesBelow.push(createBoundaryLine({x: null, y: scale.bottom}, line));\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    for (let j = segment.start; j <= segment.end; j++) {\n      addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n  }\n  return new LineElement({points, options: {}});\n}\nconst isLineAndNotInHideAnimation = (meta) => meta.type === 'line' && !meta.hidden;\nfunction getLinesBelow(chart, index) {\n  const below = [];\n  const metas = chart.getSortedVisibleDatasetMetas();\n  for (let i = 0; i < metas.length; i++) {\n    const meta = metas[i];\n    if (meta.index === index) {\n      break;\n    }\n    if (isLineAndNotInHideAnimation(meta)) {\n      below.unshift(meta.dataset);\n    }\n  }\n  return below;\n}\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\n  const postponed = [];\n  for (let j = 0; j < linesBelow.length; j++) {\n    const line = linesBelow[j];\n    const {first, last, point} = findPoint(line, sourcePoint, 'x');\n    if (!point || (first && last)) {\n      continue;\n    }\n    if (first) {\n      postponed.unshift(point);\n    } else {\n      points.push(point);\n      if (!last) {\n        break;\n      }\n    }\n  }\n  points.push(...postponed);\n}\nfunction findPoint(line, sourcePoint, property) {\n  const point = line.interpolate(sourcePoint, property);\n  if (!point) {\n    return {};\n  }\n  const pointValue = point[property];\n  const segments = line.segments;\n  const linePoints = line.points;\n  let first = false;\n  let last = false;\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    const firstValue = linePoints[segment.start][property];\n    const lastValue = linePoints[segment.end][property];\n    if (pointValue >= firstValue && pointValue <= lastValue) {\n      first = pointValue === firstValue;\n      last = pointValue === lastValue;\n      break;\n    }\n  }\n  return {first, last, point};\n}\nfunction getTarget(source) {\n  const {chart, fill, line} = source;\n  if (isNumberFinite(fill)) {\n    return getLineByIndex(chart, fill);\n  }\n  if (fill === 'stack') {\n    return buildStackLine(source);\n  }\n  if (fill === 'shape') {\n    return true;\n  }\n  const boundary = computeBoundary(source);\n  if (boundary instanceof simpleArc) {\n    return boundary;\n  }\n  return createBoundaryLine(boundary, line);\n}\nfunction createBoundaryLine(boundary, line) {\n  let points = [];\n  let _loop = false;\n  if (isArray(boundary)) {\n    _loop = true;\n    points = boundary;\n  } else {\n    points = pointsFromSegments(boundary, line);\n  }\n  return points.length ? new LineElement({\n    points,\n    options: {tension: 0},\n    _loop,\n    _fullLoop: _loop\n  }) : null;\n}\nfunction resolveTarget(sources, index, propagate) {\n  const source = sources[index];\n  let fill = source.fill;\n  const visited = [index];\n  let target;\n  if (!propagate) {\n    return fill;\n  }\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isNumberFinite(fill)) {\n      return fill;\n    }\n    target = sources[fill];\n    if (!target) {\n      return false;\n    }\n    if (target.visible) {\n      return fill;\n    }\n    visited.push(fill);\n    fill = target.fill;\n  }\n  return false;\n}\nfunction _clip(ctx, target, clipY) {\n  ctx.beginPath();\n  target.path(ctx);\n  ctx.lineTo(target.last().x, clipY);\n  ctx.lineTo(target.first().x, clipY);\n  ctx.closePath();\n  ctx.clip();\n}\nfunction getBounds(property, first, last, loop) {\n  if (loop) {\n    return;\n  }\n  let start = first[property];\n  let end = last[property];\n  if (property === 'angle') {\n    start = _normalizeAngle(start);\n    end = _normalizeAngle(end);\n  }\n  return {property, start, end};\n}\nfunction _getEdge(a, b, prop, fn) {\n  if (a && b) {\n    return fn(a[prop], b[prop]);\n  }\n  return a ? a[prop] : b ? b[prop] : 0;\n}\nfunction _segments(line, target, property) {\n  const segments = line.segments;\n  const points = line.points;\n  const tpoints = target.points;\n  const parts = [];\n  for (const segment of segments) {\n    let {start, end} = segment;\n    end = findSegmentEnd(start, end, points);\n    const bounds = getBounds(property, points[start], points[end], segment.loop);\n    if (!target.segments) {\n      parts.push({\n        source: segment,\n        target: bounds,\n        start: points[start],\n        end: points[end]\n      });\n      continue;\n    }\n    const targetSegments = _boundSegments(target, bounds);\n    for (const tgt of targetSegments) {\n      const subBounds = getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n      const fillSources = _boundSegment(segment, points, subBounds);\n      for (const fillSource of fillSources) {\n        parts.push({\n          source: fillSource,\n          target: tgt,\n          start: {\n            [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n          },\n          end: {\n            [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n          }\n        });\n      }\n    }\n  }\n  return parts;\n}\nfunction clipBounds(ctx, scale, bounds) {\n  const {top, bottom} = scale.chart.chartArea;\n  const {property, start, end} = bounds || {};\n  if (property === 'x') {\n    ctx.beginPath();\n    ctx.rect(start, top, end - start, bottom - top);\n    ctx.clip();\n  }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n  const interpolatedPoint = target.interpolate(point, property);\n  if (interpolatedPoint) {\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n  }\n}\nfunction _fill(ctx, cfg) {\n  const {line, target, property, color, scale} = cfg;\n  const segments = _segments(line, target, property);\n  for (const {source: src, target: tgt, start, end} of segments) {\n    const {style: {backgroundColor = color} = {}} = src;\n    const notShape = target !== true;\n    ctx.save();\n    ctx.fillStyle = backgroundColor;\n    clipBounds(ctx, scale, notShape && getBounds(property, start, end));\n    ctx.beginPath();\n    const lineLoop = !!line.pathSegment(ctx, src);\n    let loop;\n    if (notShape) {\n      if (lineLoop) {\n        ctx.closePath();\n      } else {\n        interpolatedLineTo(ctx, target, end, property);\n      }\n      const targetLoop = !!target.pathSegment(ctx, tgt, {move: lineLoop, reverse: true});\n      loop = lineLoop && targetLoop;\n      if (!loop) {\n        interpolatedLineTo(ctx, target, start, property);\n      }\n    }\n    ctx.closePath();\n    ctx.fill(loop ? 'evenodd' : 'nonzero');\n    ctx.restore();\n  }\n}\nfunction doFill(ctx, cfg) {\n  const {line, target, above, below, area, scale} = cfg;\n  const property = line._loop ? 'angle' : cfg.axis;\n  ctx.save();\n  if (property === 'x' && below !== above) {\n    _clip(ctx, target, area.top);\n    _fill(ctx, {line, target, color: above, scale, property});\n    ctx.restore();\n    ctx.save();\n    _clip(ctx, target, area.bottom);\n  }\n  _fill(ctx, {line, target, color: below, scale, property});\n  ctx.restore();\n}\nfunction drawfill(ctx, source, area) {\n  const target = getTarget(source);\n  const {line, scale, axis} = source;\n  const lineOpts = line.options;\n  const fillOption = lineOpts.fill;\n  const color = lineOpts.backgroundColor;\n  const {above = color, below = color} = fillOption || {};\n  if (target && line.points.length) {\n    clipArea(ctx, area);\n    doFill(ctx, {line, target, above, below, area, scale, axis});\n    unclipArea(ctx);\n  }\n}\nvar plugin_filler = {\n  id: 'filler',\n  afterDatasetsUpdate(chart, _args, options) {\n    const count = (chart.data.datasets || []).length;\n    const sources = [];\n    let meta, i, line, source;\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      line = meta.dataset;\n      source = null;\n      if (line && line.options && line instanceof LineElement) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          index: i,\n          fill: decodeFill(line, i, count),\n          chart,\n          axis: meta.controller.options.indexAxis,\n          scale: meta.vScale,\n          line,\n        };\n      }\n      meta.$filler = source;\n      sources.push(source);\n    }\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n      if (!source || source.fill === false) {\n        continue;\n      }\n      source.fill = resolveTarget(sources, i, options.propagate);\n    }\n  },\n  beforeDraw(chart, _args, options) {\n    const draw = options.drawTime === 'beforeDraw';\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const area = chart.chartArea;\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (!source) {\n        continue;\n      }\n      source.line.updateControlPoints(area, source.axis);\n      if (draw) {\n        drawfill(chart.ctx, source, area);\n      }\n    }\n  },\n  beforeDatasetsDraw(chart, _args, options) {\n    if (options.drawTime !== 'beforeDatasetsDraw') {\n      return;\n    }\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (source) {\n        drawfill(chart.ctx, source, chart.chartArea);\n      }\n    }\n  },\n  beforeDatasetDraw(chart, args, options) {\n    const source = args.meta.$filler;\n    if (!source || source.fill === false || options.drawTime !== 'beforeDatasetDraw') {\n      return;\n    }\n    drawfill(chart.ctx, source, chart.chartArea);\n  },\n  defaults: {\n    propagate: true,\n    drawTime: 'beforeDatasetDraw'\n  }\n};\n\nconst getBoxSize = (labelOpts, fontSize) => {\n  let {boxHeight = fontSize, boxWidth = fontSize} = labelOpts;\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = Math.min(boxWidth, fontSize);\n  }\n  return {\n    boxWidth,\n    boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n  constructor(config) {\n    super();\n    this._added = false;\n    this.legendHitBoxes = [];\n    this._hoveredItem = null;\n    this.doughnutMode = false;\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this.legendItems = undefined;\n    this.columnSizes = undefined;\n    this.lineWidths = undefined;\n    this.maxHeight = undefined;\n    this.maxWidth = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this._margins = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight, margins) {\n    const me = this;\n    me.maxWidth = maxWidth;\n    me.maxHeight = maxHeight;\n    me._margins = margins;\n    me.setDimensions();\n    me.buildLabels();\n    me.fit();\n  }\n  setDimensions() {\n    const me = this;\n    if (me.isHorizontal()) {\n      me.width = me.maxWidth;\n      me.left = me._margins.left;\n      me.right = me.width;\n    } else {\n      me.height = me.maxHeight;\n      me.top = me._margins.top;\n      me.bottom = me.height;\n    }\n  }\n  buildLabels() {\n    const me = this;\n    const labelOpts = me.options.labels || {};\n    let legendItems = callback(labelOpts.generateLabels, [me.chart], me) || [];\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter((item) => labelOpts.filter(item, me.chart.data));\n    }\n    if (labelOpts.sort) {\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, me.chart.data));\n    }\n    if (me.options.reverse) {\n      legendItems.reverse();\n    }\n    me.legendItems = legendItems;\n  }\n  fit() {\n    const me = this;\n    const {options, ctx} = me;\n    if (!options.display) {\n      me.width = me.height = 0;\n      return;\n    }\n    const labelOpts = options.labels;\n    const labelFont = toFont(labelOpts.font);\n    const fontSize = labelFont.size;\n    const titleHeight = me._computeTitleHeight();\n    const {boxWidth, itemHeight} = getBoxSize(labelOpts, fontSize);\n    let width, height;\n    ctx.font = labelFont.string;\n    if (me.isHorizontal()) {\n      width = me.maxWidth;\n      height = me._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    } else {\n      height = me.maxHeight;\n      width = me._fitCols(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    }\n    me.width = Math.min(width, options.maxWidth || me.maxWidth);\n    me.height = Math.min(height, options.maxHeight || me.maxHeight);\n  }\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n    const me = this;\n    const {ctx, maxWidth, options: {labels: {padding}}} = me;\n    const hitboxes = me.legendHitBoxes = [];\n    const lineWidths = me.lineWidths = [0];\n    const lineHeight = itemHeight + padding;\n    let totalHeight = titleHeight;\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n    let row = -1;\n    let top = -lineHeight;\n    me.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n        totalHeight += lineHeight;\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n        top += lineHeight;\n        row++;\n      }\n      hitboxes[i] = {left: 0, top, row, width: itemWidth, height: itemHeight};\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\n    });\n    return totalHeight;\n  }\n  _fitCols(titleHeight, fontSize, boxWidth, itemHeight) {\n    const me = this;\n    const {ctx, maxHeight, options: {labels: {padding}}} = me;\n    const hitboxes = me.legendHitBoxes = [];\n    const columnSizes = me.columnSizes = [];\n    const heightLimit = maxHeight - titleHeight;\n    let totalWidth = padding;\n    let currentColWidth = 0;\n    let currentColHeight = 0;\n    let left = 0;\n    let col = 0;\n    me.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n      if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n        totalWidth += currentColWidth + padding;\n        columnSizes.push({width: currentColWidth, height: currentColHeight});\n        left += currentColWidth + padding;\n        col++;\n        currentColWidth = currentColHeight = 0;\n      }\n      hitboxes[i] = {left, top: currentColHeight, col, width: itemWidth, height: itemHeight};\n      currentColWidth = Math.max(currentColWidth, itemWidth);\n      currentColHeight += itemHeight + padding;\n    });\n    totalWidth += currentColWidth;\n    columnSizes.push({width: currentColWidth, height: currentColHeight});\n    return totalWidth;\n  }\n  adjustHitBoxes() {\n    const me = this;\n    if (!me.options.display) {\n      return;\n    }\n    const titleHeight = me._computeTitleHeight();\n    const {legendHitBoxes: hitboxes, options: {align, labels: {padding}, rtl}} = me;\n    const rtlHelper = getRtlAdapter(rtl, me.left, me.width);\n    if (this.isHorizontal()) {\n      let row = 0;\n      let left = _alignStartEnd(align, me.left + padding, me.right - me.lineWidths[row]);\n      for (const hitbox of hitboxes) {\n        if (row !== hitbox.row) {\n          row = hitbox.row;\n          left = _alignStartEnd(align, me.left + padding, me.right - me.lineWidths[row]);\n        }\n        hitbox.top += me.top + titleHeight + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n        left += hitbox.width + padding;\n      }\n    } else {\n      let col = 0;\n      let top = _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - me.columnSizes[col].height);\n      for (const hitbox of hitboxes) {\n        if (hitbox.col !== col) {\n          col = hitbox.col;\n          top = _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - me.columnSizes[col].height);\n        }\n        hitbox.top = top;\n        hitbox.left += me.left + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n        top += hitbox.height + padding;\n      }\n    }\n  }\n  isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  }\n  draw() {\n    const me = this;\n    if (me.options.display) {\n      const ctx = me.ctx;\n      clipArea(ctx, me);\n      me._draw();\n      unclipArea(ctx);\n    }\n  }\n  _draw() {\n    const me = this;\n    const {options: opts, columnSizes, lineWidths, ctx} = me;\n    const {align, labels: labelOpts} = opts;\n    const defaultColor = defaults.color;\n    const rtlHelper = getRtlAdapter(opts.rtl, me.left, me.width);\n    const labelFont = toFont(labelOpts.font);\n    const {color: fontColor, padding} = labelOpts;\n    const fontSize = labelFont.size;\n    const halfFontSize = fontSize / 2;\n    let cursor;\n    me.drawTitle();\n    ctx.textAlign = rtlHelper.textAlign('left');\n    ctx.textBaseline = 'middle';\n    ctx.lineWidth = 0.5;\n    ctx.font = labelFont.string;\n    const {boxWidth, boxHeight, itemHeight} = getBoxSize(labelOpts, fontSize);\n    const drawLegendBox = function(x, y, legendItem) {\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n        return;\n      }\n      ctx.save();\n      const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n      ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n      ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n      ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n      ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n      ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n      if (labelOpts.usePointStyle) {\n        const drawOptions = {\n          radius: boxWidth * Math.SQRT2 / 2,\n          pointStyle: legendItem.pointStyle,\n          rotation: legendItem.rotation,\n          borderWidth: lineWidth\n        };\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n        const centerY = y + halfFontSize;\n        drawPoint(ctx, drawOptions, centerX, centerY);\n      } else {\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n        const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n        const borderRadius = toTRBLCorners(legendItem.borderRadius);\n        ctx.beginPath();\n        if (Object.values(borderRadius).some(v => v !== 0)) {\n          addRoundedRectPath(ctx, {\n            x: xBoxLeft,\n            y: yBoxTop,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius,\n          });\n        } else {\n          ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n        }\n        ctx.fill();\n        if (lineWidth !== 0) {\n          ctx.stroke();\n        }\n      }\n      ctx.restore();\n    };\n    const fillText = function(x, y, legendItem) {\n      renderText(ctx, legendItem.text, x, y + (itemHeight / 2), labelFont, {\n        strikethrough: legendItem.hidden,\n        textAlign: rtlHelper.textAlign(legendItem.textAlign)\n      });\n    };\n    const isHorizontal = me.isHorizontal();\n    const titleHeight = this._computeTitleHeight();\n    if (isHorizontal) {\n      cursor = {\n        x: _alignStartEnd(align, me.left + padding, me.right - lineWidths[0]),\n        y: me.top + padding + titleHeight,\n        line: 0\n      };\n    } else {\n      cursor = {\n        x: me.left + padding,\n        y: _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - columnSizes[0].height),\n        line: 0\n      };\n    }\n    overrideTextDirection(me.ctx, opts.textDirection);\n    const lineHeight = itemHeight + padding;\n    me.legendItems.forEach((legendItem, i) => {\n      ctx.strokeStyle = legendItem.fontColor || fontColor;\n      ctx.fillStyle = legendItem.fontColor || fontColor;\n      const textWidth = ctx.measureText(legendItem.text).width;\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n      const width = boxWidth + halfFontSize + textWidth;\n      let x = cursor.x;\n      let y = cursor.y;\n      rtlHelper.setWidth(me.width);\n      if (isHorizontal) {\n        if (i > 0 && x + width + padding > me.right) {\n          y = cursor.y += lineHeight;\n          cursor.line++;\n          x = cursor.x = _alignStartEnd(align, me.left + padding, me.right - lineWidths[cursor.line]);\n        }\n      } else if (i > 0 && y + lineHeight > me.bottom) {\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\n        cursor.line++;\n        y = cursor.y = _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - columnSizes[cursor.line].height);\n      }\n      const realX = rtlHelper.x(x);\n      drawLegendBox(realX, y, legendItem);\n      x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : me.right, opts.rtl);\n      fillText(rtlHelper.x(x), y, legendItem);\n      if (isHorizontal) {\n        cursor.x += width + padding;\n      } else {\n        cursor.y += lineHeight;\n      }\n    });\n    restoreTextDirection(me.ctx, opts.textDirection);\n  }\n  drawTitle() {\n    const me = this;\n    const opts = me.options;\n    const titleOpts = opts.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    if (!titleOpts.display) {\n      return;\n    }\n    const rtlHelper = getRtlAdapter(opts.rtl, me.left, me.width);\n    const ctx = me.ctx;\n    const position = titleOpts.position;\n    const halfFontSize = titleFont.size / 2;\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n    let y;\n    let left = me.left;\n    let maxWidth = me.width;\n    if (this.isHorizontal()) {\n      maxWidth = Math.max(...me.lineWidths);\n      y = me.top + topPaddingPlusHalfFontSize;\n      left = _alignStartEnd(opts.align, left, me.right - maxWidth);\n    } else {\n      const maxHeight = me.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\n      y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, me.top, me.bottom - maxHeight - opts.labels.padding - me._computeTitleHeight());\n    }\n    const x = _alignStartEnd(position, left, left + maxWidth);\n    ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n    ctx.textBaseline = 'middle';\n    ctx.strokeStyle = titleOpts.color;\n    ctx.fillStyle = titleOpts.color;\n    ctx.font = titleFont.string;\n    renderText(ctx, titleOpts.text, x, y, titleFont);\n  }\n  _computeTitleHeight() {\n    const titleOpts = this.options.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n  }\n  _getLegendItemAt(x, y) {\n    const me = this;\n    let i, hitBox, lh;\n    if (x >= me.left && x <= me.right && y >= me.top && y <= me.bottom) {\n      lh = me.legendHitBoxes;\n      for (i = 0; i < lh.length; ++i) {\n        hitBox = lh[i];\n        if (x >= hitBox.left && x <= hitBox.left + hitBox.width && y >= hitBox.top && y <= hitBox.top + hitBox.height) {\n          return me.legendItems[i];\n        }\n      }\n    }\n    return null;\n  }\n  handleEvent(e) {\n    const me = this;\n    const opts = me.options;\n    if (!isListened(e.type, opts)) {\n      return;\n    }\n    const hoveredItem = me._getLegendItemAt(e.x, e.y);\n    if (e.type === 'mousemove') {\n      const previous = me._hoveredItem;\n      const sameItem = itemsEqual(previous, hoveredItem);\n      if (previous && !sameItem) {\n        callback(opts.onLeave, [e, previous, me], me);\n      }\n      me._hoveredItem = hoveredItem;\n      if (hoveredItem && !sameItem) {\n        callback(opts.onHover, [e, hoveredItem, me], me);\n      }\n    } else if (hoveredItem) {\n      callback(opts.onClick, [e, hoveredItem, me], me);\n    }\n  }\n}\nfunction isListened(type, opts) {\n  if (type === 'mousemove' && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n  return false;\n}\nvar plugin_legend = {\n  id: 'legend',\n  _element: Legend,\n  start(chart, _args, options) {\n    const legend = chart.legend = new Legend({ctx: chart.ctx, options, chart});\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n  stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n  beforeUpdate(chart, _args, options) {\n    const legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n  afterUpdate(chart) {\n    const legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n  afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n    onClick(e, legendItem, legend) {\n      const index = legendItem.datasetIndex;\n      const ci = legend.chart;\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n    onHover: null,\n    onLeave: null,\n    labels: {\n      color: (ctx) => ctx.chart.options.color,\n      boxWidth: 40,\n      padding: 10,\n      generateLabels(chart) {\n        const datasets = chart.data.datasets;\n        const {labels: {usePointStyle, pointStyle, textAlign, color}} = chart.legend.options;\n        return chart._getSortedDatasetMetas().map((meta) => {\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          const borderWidth = toPadding(style.borderWidth);\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: 0,\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n    },\n    title: {\n      color: (ctx) => ctx.chart.options.color,\n      display: false,\n      position: 'center',\n      text: '',\n    }\n  },\n  descriptors: {\n    _scriptable: (name) => !name.startsWith('on'),\n    labels: {\n      _scriptable: (name) => !['generateLabels', 'filter', 'sort'].includes(name),\n    }\n  },\n};\n\nclass Title extends Element {\n  constructor(config) {\n    super();\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this._padding = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight) {\n    const me = this;\n    const opts = me.options;\n    me.left = 0;\n    me.top = 0;\n    if (!opts.display) {\n      me.width = me.height = me.right = me.bottom = 0;\n      return;\n    }\n    me.width = me.right = maxWidth;\n    me.height = me.bottom = maxHeight;\n    const lineCount = isArray(opts.text) ? opts.text.length : 1;\n    me._padding = toPadding(opts.padding);\n    const textSize = lineCount * toFont(opts.font).lineHeight + me._padding.height;\n    if (me.isHorizontal()) {\n      me.height = textSize;\n    } else {\n      me.width = textSize;\n    }\n  }\n  isHorizontal() {\n    const pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  }\n  _drawArgs(offset) {\n    const {top, left, bottom, right, options} = this;\n    const align = options.align;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    if (this.isHorizontal()) {\n      titleX = _alignStartEnd(align, left, right);\n      titleY = top + offset;\n      maxWidth = right - left;\n    } else {\n      if (options.position === 'left') {\n        titleX = left + offset;\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = PI * -0.5;\n      } else {\n        titleX = right - offset;\n        titleY = _alignStartEnd(align, top, bottom);\n        rotation = PI * 0.5;\n      }\n      maxWidth = bottom - top;\n    }\n    return {titleX, titleY, maxWidth, rotation};\n  }\n  draw() {\n    const me = this;\n    const ctx = me.ctx;\n    const opts = me.options;\n    if (!opts.display) {\n      return;\n    }\n    const fontOpts = toFont(opts.font);\n    const lineHeight = fontOpts.lineHeight;\n    const offset = lineHeight / 2 + me._padding.top;\n    const {titleX, titleY, maxWidth, rotation} = me._drawArgs(offset);\n    renderText(ctx, opts.text, 0, 0, fontOpts, {\n      color: opts.color,\n      maxWidth,\n      rotation,\n      textAlign: _toLeftRightCenter(opts.align),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n}\nfunction createTitle(chart, titleOpts) {\n  const title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart\n  });\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\nvar plugin_title = {\n  id: 'title',\n  _element: Title,\n  start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n  stop(chart) {\n    const titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n  beforeUpdate(chart, _args, options) {\n    const title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold',\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n\nconst map = new WeakMap();\nvar plugin_subtitle = {\n  id: 'subtitle',\n  start(chart, _args, options) {\n    const title = new Title({\n      ctx: chart.ctx,\n      options,\n      chart\n    });\n    layouts.configure(chart, title, options);\n    layouts.addBox(chart, title);\n    map.set(chart, title);\n  },\n  stop(chart) {\n    layouts.removeBox(chart, map.get(chart));\n    map.delete(chart);\n  },\n  beforeUpdate(chart, _args, options) {\n    const title = map.get(chart);\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'normal',\n    },\n    fullSize: true,\n    padding: 0,\n    position: 'top',\n    text: '',\n    weight: 1500\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n\nconst positioners = {\n  average(items) {\n    if (!items.length) {\n      return false;\n    }\n    let i, len;\n    let x = 0;\n    let y = 0;\n    let count = 0;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const pos = el.tooltipPosition();\n        x += pos.x;\n        y += pos.y;\n        ++count;\n      }\n    }\n    return {\n      x: x / count,\n      y: y / count\n    };\n  },\n  nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n    let x = eventPosition.x;\n    let y = eventPosition.y;\n    let minDistance = Number.POSITIVE_INFINITY;\n    let i, len, nearestElement;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const center = el.getCenterPoint();\n        const d = distanceBetweenPoints(eventPosition, center);\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n    if (nearestElement) {\n      const tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n    return {\n      x,\n      y\n    };\n  }\n};\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n  return base;\n}\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n  return str;\n}\nfunction createTooltipItem(chart, item) {\n  const {element, datasetIndex, index} = item;\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\n  const {label, value} = controller.getLabelAndValue(index);\n  return {\n    chart,\n    label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex,\n    element\n  };\n}\nfunction getTooltipSize(tooltip, options) {\n  const ctx = tooltip._chart.ctx;\n  const {body, footer, title} = tooltip;\n  const {boxWidth, boxHeight} = options;\n  const bodyFont = toFont(options.bodyFont);\n  const titleFont = toFont(options.titleFont);\n  const footerFont = toFont(options.footerFont);\n  const titleLineCount = title.length;\n  const footerLineCount = footer.length;\n  const bodyLineItemCount = body.length;\n  const padding = toPadding(options.padding);\n  let height = padding.height;\n  let width = 0;\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight\n\t\t\t+ (titleLineCount - 1) * options.titleSpacing\n\t\t\t+ options.titleMarginBottom;\n  }\n  if (combinedBodyLength) {\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight\n\t\t\t+ (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight\n\t\t\t+ (combinedBodyLength - 1) * options.bodySpacing;\n  }\n  if (footerLineCount) {\n    height += options.footerMarginTop\n\t\t\t+ footerLineCount * footerFont.lineHeight\n\t\t\t+ (footerLineCount - 1) * options.footerSpacing;\n  }\n  let widthPadding = 0;\n  const maxLineWidth = function(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n  ctx.save();\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n  widthPadding = options.displayColors ? (boxWidth + 2) : 0;\n  each(body, (bodyItem) => {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n  widthPadding = 0;\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n  ctx.restore();\n  width += padding.width;\n  return {width, height};\n}\nfunction determineYAlign(chart, size) {\n  const {y, height} = size;\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > (chart.height - height / 2)) {\n    return 'bottom';\n  }\n  return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  const {x, width} = size;\n  const caret = options.caretSize + options.caretPadding;\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n  const {x, width} = size;\n  const {width: chartWidth, chartArea: {left, right}} = chart;\n  let xAlign = 'center';\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n  return xAlign;\n}\nfunction determineAlignment(chart, options, size) {\n  const yAlign = options.yAlign || determineYAlign(chart, size);\n  return {\n    xAlign: options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign\n  };\n}\nfunction alignX(size, xAlign) {\n  let {x, width} = size;\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= (width / 2);\n  }\n  return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n  let {y, height} = size;\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= (height / 2);\n  }\n  return y;\n}\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  const {caretSize, caretPadding, cornerRadius} = options;\n  const {xAlign, yAlign} = alignment;\n  const paddingAndSize = caretSize + caretPadding;\n  const radiusAndPadding = cornerRadius + caretPadding;\n  let x = alignX(size, xAlign);\n  const y = alignY(size, yAlign, paddingAndSize);\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= radiusAndPadding;\n  } else if (xAlign === 'right') {\n    x += radiusAndPadding;\n  }\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\nfunction getAlignedX(tooltip, align, options) {\n  const padding = toPadding(options.padding);\n  return align === 'center'\n    ? tooltip.x + tooltip.width / 2\n    : align === 'right'\n      ? tooltip.x + tooltip.width - padding.right\n      : tooltip.x + padding.left;\n}\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return Object.assign(Object.create(parent), {\n    tooltip,\n    tooltipItems,\n    type: 'tooltip'\n  });\n}\nfunction overrideCallbacks(callbacks, context) {\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\nclass Tooltip extends Element {\n  constructor(config) {\n    super();\n    this.opacity = 0;\n    this._active = [];\n    this._chart = config._chart;\n    this._eventPosition = undefined;\n    this._size = undefined;\n    this._cachedAnimations = undefined;\n    this._tooltipItems = [];\n    this.$animations = undefined;\n    this.$context = undefined;\n    this.options = config.options;\n    this.dataPoints = undefined;\n    this.title = undefined;\n    this.beforeBody = undefined;\n    this.body = undefined;\n    this.afterBody = undefined;\n    this.footer = undefined;\n    this.xAlign = undefined;\n    this.yAlign = undefined;\n    this.x = undefined;\n    this.y = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this.caretX = undefined;\n    this.caretY = undefined;\n    this.labelColors = undefined;\n    this.labelPointStyles = undefined;\n    this.labelTextColors = undefined;\n  }\n  initialize(options) {\n    this.options = options;\n    this._cachedAnimations = undefined;\n    this.$context = undefined;\n  }\n  _resolveAnimations() {\n    const me = this;\n    const cached = me._cachedAnimations;\n    if (cached) {\n      return cached;\n    }\n    const chart = me._chart;\n    const options = me.options.setContext(me.getContext());\n    const opts = options.enabled && chart.options.animation && options.animations;\n    const animations = new Animations(me._chart, opts);\n    if (opts._cacheable) {\n      me._cachedAnimations = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getContext() {\n    const me = this;\n    return me.$context ||\n\t\t\t(me.$context = createTooltipContext(me._chart.getContext(), me, me._tooltipItems));\n  }\n  getTitle(context, options) {\n    const me = this;\n    const {callbacks} = options;\n    const beforeTitle = callbacks.beforeTitle.apply(me, [context]);\n    const title = callbacks.title.apply(me, [context]);\n    const afterTitle = callbacks.afterTitle.apply(me, [context]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n    return lines;\n  }\n  getBeforeBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.beforeBody.apply(this, [tooltipItems]));\n  }\n  getBody(tooltipItems, options) {\n    const me = this;\n    const {callbacks} = options;\n    const bodyItems = [];\n    each(tooltipItems, (context) => {\n      const bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      const scoped = overrideCallbacks(callbacks, context);\n      pushOrConcat(bodyItem.before, splitNewlines(scoped.beforeLabel.call(me, context)));\n      pushOrConcat(bodyItem.lines, scoped.label.call(me, context));\n      pushOrConcat(bodyItem.after, splitNewlines(scoped.afterLabel.call(me, context)));\n      bodyItems.push(bodyItem);\n    });\n    return bodyItems;\n  }\n  getAfterBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.afterBody.apply(this, [tooltipItems]));\n  }\n  getFooter(tooltipItems, options) {\n    const me = this;\n    const {callbacks} = options;\n    const beforeFooter = callbacks.beforeFooter.apply(me, [tooltipItems]);\n    const footer = callbacks.footer.apply(me, [tooltipItems]);\n    const afterFooter = callbacks.afterFooter.apply(me, [tooltipItems]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n    return lines;\n  }\n  _createItems(options) {\n    const me = this;\n    const active = me._active;\n    const data = me._chart.data;\n    const labelColors = [];\n    const labelPointStyles = [];\n    const labelTextColors = [];\n    let tooltipItems = [];\n    let i, len;\n    for (i = 0, len = active.length; i < len; ++i) {\n      tooltipItems.push(createTooltipItem(me._chart, active[i]));\n    }\n    if (options.filter) {\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n    }\n    if (options.itemSort) {\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n    }\n    each(tooltipItems, (context) => {\n      const scoped = overrideCallbacks(options.callbacks, context);\n      labelColors.push(scoped.labelColor.call(me, context));\n      labelPointStyles.push(scoped.labelPointStyle.call(me, context));\n      labelTextColors.push(scoped.labelTextColor.call(me, context));\n    });\n    me.labelColors = labelColors;\n    me.labelPointStyles = labelPointStyles;\n    me.labelTextColors = labelTextColors;\n    me.dataPoints = tooltipItems;\n    return tooltipItems;\n  }\n  update(changed, replay) {\n    const me = this;\n    const options = me.options.setContext(me.getContext());\n    const active = me._active;\n    let properties;\n    let tooltipItems = [];\n    if (!active.length) {\n      if (me.opacity !== 0) {\n        properties = {\n          opacity: 0\n        };\n      }\n    } else {\n      const position = positioners[options.position].call(me, active, me._eventPosition);\n      tooltipItems = me._createItems(options);\n      me.title = me.getTitle(tooltipItems, options);\n      me.beforeBody = me.getBeforeBody(tooltipItems, options);\n      me.body = me.getBody(tooltipItems, options);\n      me.afterBody = me.getAfterBody(tooltipItems, options);\n      me.footer = me.getFooter(tooltipItems, options);\n      const size = me._size = getTooltipSize(me, options);\n      const positionAndSize = Object.assign({}, position, size);\n      const alignment = determineAlignment(me._chart, options, positionAndSize);\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, me._chart);\n      me.xAlign = alignment.xAlign;\n      me.yAlign = alignment.yAlign;\n      properties = {\n        opacity: 1,\n        x: backgroundPoint.x,\n        y: backgroundPoint.y,\n        width: size.width,\n        height: size.height,\n        caretX: position.x,\n        caretY: position.y\n      };\n    }\n    me._tooltipItems = tooltipItems;\n    me.$context = undefined;\n    if (properties) {\n      me._resolveAnimations().update(me, properties);\n    }\n    if (changed && options.external) {\n      options.external.call(me, {chart: me._chart, tooltip: me, replay});\n    }\n  }\n  drawCaret(tooltipPoint, ctx, size, options) {\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  }\n  getCaretPosition(tooltipPoint, size, options) {\n    const {xAlign, yAlign} = this;\n    const {cornerRadius, caretSize} = options;\n    const {x: ptX, y: ptY} = tooltipPoint;\n    const {width, height} = size;\n    let x1, x2, x3, y1, y2, y3;\n    if (yAlign === 'center') {\n      y2 = ptY + (height / 2);\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n      x3 = x1;\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + cornerRadius + (caretSize);\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - cornerRadius - caretSize;\n      } else {\n        x2 = this.caretX;\n      }\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n        x1 = x2 + caretSize;\n        x3 = x2 - caretSize;\n      }\n      y3 = y1;\n    }\n    return {x1, x2, x3, y1, y2, y3};\n  }\n  drawTitle(pt, ctx, options) {\n    const me = this;\n    const title = me.title;\n    const length = title.length;\n    let titleFont, titleSpacing, i;\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, me.x, me.width);\n      pt.x = getAlignedX(me, options.titleAlign, options);\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n      ctx.textBaseline = 'middle';\n      titleFont = toFont(options.titleFont);\n      titleSpacing = options.titleSpacing;\n      ctx.fillStyle = options.titleColor;\n      ctx.font = titleFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n        pt.y += titleFont.lineHeight + titleSpacing;\n        if (i + 1 === length) {\n          pt.y += options.titleMarginBottom - titleSpacing;\n        }\n      }\n    }\n  }\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\n    const me = this;\n    const labelColors = me.labelColors[i];\n    const labelPointStyle = me.labelPointStyles[i];\n    const {boxHeight, boxWidth} = options;\n    const bodyFont = toFont(options.bodyFont);\n    const colorX = getAlignedX(me, 'left', options);\n    const rtlColorX = rtlHelper.x(colorX);\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n    const colorY = pt.y + yOffSet;\n    if (options.usePointStyle) {\n      const drawOptions = {\n        radius: Math.min(boxWidth, boxHeight) / 2,\n        pointStyle: labelPointStyle.pointStyle,\n        rotation: labelPointStyle.rotation,\n        borderWidth: 1\n      };\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n      const centerY = colorY + boxHeight / 2;\n      ctx.strokeStyle = options.multiKeyBackground;\n      ctx.fillStyle = options.multiKeyBackground;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.fillStyle = labelColors.backgroundColor;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n    } else {\n      ctx.lineWidth = labelColors.borderWidth || 1;\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.setLineDash(labelColors.borderDash || []);\n      ctx.lineDashOffset = labelColors.borderDashOffset || 0;\n      const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth);\n      const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2);\n      const borderRadius = toTRBLCorners(labelColors.borderRadius);\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        ctx.fillStyle = options.multiKeyBackground;\n        addRoundedRectPath(ctx, {\n          x: outerX,\n          y: colorY,\n          w: boxWidth,\n          h: boxHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n        ctx.stroke();\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: innerX,\n          y: colorY + 1,\n          w: boxWidth - 2,\n          h: boxHeight - 2,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        ctx.fillStyle = options.multiKeyBackground;\n        ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n      }\n    }\n    ctx.fillStyle = me.labelTextColors[i];\n  }\n  drawBody(pt, ctx, options) {\n    const me = this;\n    const {body} = me;\n    const {bodySpacing, bodyAlign, displayColors, boxHeight, boxWidth} = options;\n    const bodyFont = toFont(options.bodyFont);\n    let bodyLineHeight = bodyFont.lineHeight;\n    let xLinePadding = 0;\n    const rtlHelper = getRtlAdapter(options.rtl, me.x, me.width);\n    const fillLineOfText = function(line) {\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n      pt.y += bodyLineHeight + bodySpacing;\n    };\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\n    ctx.textAlign = bodyAlign;\n    ctx.textBaseline = 'middle';\n    ctx.font = bodyFont.string;\n    pt.x = getAlignedX(me, bodyAlignForCalculation, options);\n    ctx.fillStyle = options.bodyColor;\n    each(me.beforeBody, fillLineOfText);\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right'\n      ? bodyAlign === 'center' ? (boxWidth / 2 + 1) : (boxWidth + 2)\n      : 0;\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\n      bodyItem = body[i];\n      textColor = me.labelTextColors[i];\n      ctx.fillStyle = textColor;\n      each(bodyItem.before, fillLineOfText);\n      lines = bodyItem.lines;\n      if (displayColors && lines.length) {\n        me._drawColorBox(ctx, pt, i, rtlHelper, options);\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n      }\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\n        fillLineOfText(lines[j]);\n        bodyLineHeight = bodyFont.lineHeight;\n      }\n      each(bodyItem.after, fillLineOfText);\n    }\n    xLinePadding = 0;\n    bodyLineHeight = bodyFont.lineHeight;\n    each(me.afterBody, fillLineOfText);\n    pt.y -= bodySpacing;\n  }\n  drawFooter(pt, ctx, options) {\n    const me = this;\n    const footer = me.footer;\n    const length = footer.length;\n    let footerFont, i;\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, me.x, me.width);\n      pt.x = getAlignedX(me, options.footerAlign, options);\n      pt.y += options.footerMarginTop;\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n      ctx.textBaseline = 'middle';\n      footerFont = toFont(options.footerFont);\n      ctx.fillStyle = options.footerColor;\n      ctx.font = footerFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n        pt.y += footerFont.lineHeight + options.footerSpacing;\n      }\n    }\n  }\n  drawBackground(pt, ctx, tooltipSize, options) {\n    const {xAlign, yAlign} = this;\n    const {x, y} = pt;\n    const {width, height} = tooltipSize;\n    const radius = options.cornerRadius;\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.beginPath();\n    ctx.moveTo(x + radius, y);\n    if (yAlign === 'top') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width - radius, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width, y + height - radius);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + radius, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x, y + radius);\n    ctx.quadraticCurveTo(x, y, x + radius, y);\n    ctx.closePath();\n    ctx.fill();\n    if (options.borderWidth > 0) {\n      ctx.stroke();\n    }\n  }\n  _updateAnimationTarget(options) {\n    const me = this;\n    const chart = me._chart;\n    const anims = me.$animations;\n    const animX = anims && anims.x;\n    const animY = anims && anims.y;\n    if (animX || animY) {\n      const position = positioners[options.position].call(me, me._active, me._eventPosition);\n      if (!position) {\n        return;\n      }\n      const size = me._size = getTooltipSize(me, options);\n      const positionAndSize = Object.assign({}, position, me._size);\n      const alignment = determineAlignment(chart, options, positionAndSize);\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n      if (animX._to !== point.x || animY._to !== point.y) {\n        me.xAlign = alignment.xAlign;\n        me.yAlign = alignment.yAlign;\n        me.width = size.width;\n        me.height = size.height;\n        me.caretX = position.x;\n        me.caretY = position.y;\n        me._resolveAnimations().update(me, point);\n      }\n    }\n  }\n  draw(ctx) {\n    const me = this;\n    const options = me.options.setContext(me.getContext());\n    let opacity = me.opacity;\n    if (!opacity) {\n      return;\n    }\n    me._updateAnimationTarget(options);\n    const tooltipSize = {\n      width: me.width,\n      height: me.height\n    };\n    const pt = {\n      x: me.x,\n      y: me.y\n    };\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n    const padding = toPadding(options.padding);\n    const hasTooltipContent = me.title.length || me.beforeBody.length || me.body.length || me.afterBody.length || me.footer.length;\n    if (options.enabled && hasTooltipContent) {\n      ctx.save();\n      ctx.globalAlpha = opacity;\n      me.drawBackground(pt, ctx, tooltipSize, options);\n      overrideTextDirection(ctx, options.textDirection);\n      pt.y += padding.top;\n      me.drawTitle(pt, ctx, options);\n      me.drawBody(pt, ctx, options);\n      me.drawFooter(pt, ctx, options);\n      restoreTextDirection(ctx, options.textDirection);\n      ctx.restore();\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements, eventPosition) {\n    const me = this;\n    const lastActive = me._active;\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = me._chart.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(lastActive, active);\n    const positionChanged = me._positionChanged(active, eventPosition);\n    if (changed || positionChanged) {\n      me._active = active;\n      me._eventPosition = eventPosition;\n      me.update(true);\n    }\n  }\n  handleEvent(e, replay) {\n    const me = this;\n    const options = me.options;\n    const lastActive = me._active || [];\n    let changed = false;\n    let active = [];\n    if (e.type !== 'mouseout') {\n      active = me._chart.getElementsAtEventForMode(e, options.mode, options, replay);\n      if (options.reverse) {\n        active.reverse();\n      }\n    }\n    const positionChanged = me._positionChanged(active, e);\n    changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n    if (changed) {\n      me._active = active;\n      if (options.enabled || options.external) {\n        me._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n        me.update(true, replay);\n      }\n    }\n    return changed;\n  }\n  _positionChanged(active, e) {\n    const {caretX, caretY, options} = this;\n    const position = positioners[options.position].call(this, active, e);\n    return position !== false && (caretX !== position.x || caretY !== position.y);\n  }\n}\nTooltip.positioners = positioners;\nvar plugin_tooltip = {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners,\n  afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({_chart: chart, options});\n    }\n  },\n  beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  afterDraw(chart) {\n    const tooltip = chart.tooltip;\n    const args = {\n      tooltip\n    };\n    if (chart.notifyPlugins('beforeTooltipDraw', args) === false) {\n      return;\n    }\n    if (tooltip) {\n      tooltip.draw(chart.ctx);\n    }\n    chart.notifyPlugins('afterTooltipDraw', args);\n  },\n  afterEvent(chart, args) {\n    if (chart.tooltip) {\n      const useFinalPosition = args.replay;\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition)) {\n        args.changed = true;\n      }\n    }\n  },\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold',\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {\n    },\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold',\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart',\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY'],\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: {\n      beforeTitle: noop,\n      title(tooltipItems) {\n        if (tooltipItems.length > 0) {\n          const item = tooltipItems[0];\n          const labels = item.chart.data.labels;\n          const labelCount = labels ? labels.length : 0;\n          if (this && this.options && this.options.mode === 'dataset') {\n            return item.dataset.label || '';\n          } else if (item.label) {\n            return item.label;\n          } else if (labelCount > 0 && item.dataIndex < labelCount) {\n            return labels[item.dataIndex];\n          }\n        }\n        return '';\n      },\n      afterTitle: noop,\n      beforeBody: noop,\n      beforeLabel: noop,\n      label(tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n          return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n          label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n          label += value;\n        }\n        return label;\n      },\n      labelColor(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          borderColor: options.borderColor,\n          backgroundColor: options.backgroundColor,\n          borderWidth: options.borderWidth,\n          borderDash: options.borderDash,\n          borderDashOffset: options.borderDashOffset,\n          borderRadius: 0,\n        };\n      },\n      labelTextColor() {\n        return this.options.bodyColor;\n      },\n      labelPointStyle(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          pointStyle: options.pointStyle,\n          rotation: options.rotation,\n        };\n      },\n      afterLabel: noop,\n      afterBody: noop,\n      beforeFooter: noop,\n      footer: noop,\n      afterFooter: noop\n    }\n  },\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n  descriptors: {\n    _scriptable: (name) => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false,\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n  additionalOptionScopes: ['interaction']\n};\n\nvar plugins = /*#__PURE__*/Object.freeze({\n__proto__: null,\nDecimation: plugin_decimation,\nFiller: plugin_filler,\nLegend: plugin_legend,\nSubTitle: plugin_subtitle,\nTitle: plugin_title,\nTooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index) => typeof raw === 'string'\n  ? labels.push(raw) - 1\n  : isNaN(raw) ? null : index;\nfunction findOrAddLabel(labels, raw, index) {\n  const first = labels.indexOf(raw);\n  if (first === -1) {\n    return addIfString(labels, raw, index);\n  }\n  const last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\nconst validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\nclass CategoryScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    const labels = this.getLabels();\n    index = isFinite(index) && labels[index] === raw ? index\n      : findOrAddLabel(labels, raw, valueOrDefault(index, raw));\n    return validIndex(index, labels.length - 1);\n  }\n  determineDataLimits() {\n    const me = this;\n    const {minDefined, maxDefined} = me.getUserBounds();\n    let {min, max} = me.getMinMax(true);\n    if (me.options.bounds === 'ticks') {\n      if (!minDefined) {\n        min = 0;\n      }\n      if (!maxDefined) {\n        max = me.getLabels().length - 1;\n      }\n    }\n    me.min = min;\n    me.max = max;\n  }\n  buildTicks() {\n    const me = this;\n    const min = me.min;\n    const max = me.max;\n    const offset = me.options.offset;\n    const ticks = [];\n    let labels = me.getLabels();\n    labels = (min === 0 && max === labels.length - 1) ? labels : labels.slice(min, max + 1);\n    me._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n    me._startValue = me.min - (offset ? 0.5 : 0);\n    for (let value = min; value <= max; value++) {\n      ticks.push({value});\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    const me = this;\n    const labels = me.getLabels();\n    if (value >= 0 && value < labels.length) {\n      return labels[value];\n    }\n    return value;\n  }\n  configure() {\n    const me = this;\n    super.configure();\n    if (!me.isHorizontal()) {\n      me._reversePixels = !me._reversePixels;\n    }\n  }\n  getPixelForValue(value) {\n    const me = this;\n    if (typeof value !== 'number') {\n      value = me.parse(value);\n    }\n    return value === null ? NaN : me.getPixelForDecimal((value - me._startValue) / me._valueRange);\n  }\n  getPixelForTick(index) {\n    const me = this;\n    const ticks = me.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return me.getPixelForValue(ticks[index].value);\n  }\n  getValueForPixel(pixel) {\n    const me = this;\n    return Math.round(me._startValue + me.getDecimalForPixel(pixel) * me._valueRange);\n  }\n  getBasePixel() {\n    return this.bottom;\n  }\n}\nCategoryScale.id = 'category';\nCategoryScale.defaults = {\n  ticks: {\n    callback: CategoryScale.prototype.getLabelForValue\n  }\n};\n\nfunction generateTicks$1(generationOptions, dataRange) {\n  const ticks = [];\n  const MIN_SPACING = 1e-14;\n  const {bounds, step, min, max, precision, count, maxTicks, maxDigits, includeBounds} = generationOptions;\n  const unit = step || 1;\n  const maxSpaces = maxTicks - 1;\n  const {min: rmin, max: rmax} = dataRange;\n  const minDefined = !isNullOrUndef(min);\n  const maxDefined = !isNullOrUndef(max);\n  const countDefined = !isNullOrUndef(count);\n  const minSpacing = (rmax - rmin) / (maxDigits + 1);\n  let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  let factor, niceMin, niceMax, numSpaces;\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{value: rmin}, {value: rmax}];\n  }\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n  if (numSpaces > maxSpaces) {\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n  if (!isNullOrUndef(precision)) {\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n  if (bounds === 'ticks') {\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing;\n  } else {\n    niceMin = rmin;\n    niceMax = rmax;\n  }\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    numSpaces = (niceMax - niceMin) / spacing;\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n  const decimalPlaces = Math.max(\n    _decimalPlaces(spacing),\n    _decimalPlaces(niceMin)\n  );\n  factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n  let j = 0;\n  if (minDefined) {\n    if (includeBounds && niceMin !== min) {\n      ticks.push({value: min});\n      if (niceMin < min) {\n        j++;\n      }\n      if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n        j++;\n      }\n    } else if (niceMin < min) {\n      j++;\n    }\n  }\n  for (; j < numSpaces; ++j) {\n    ticks.push({value: Math.round((niceMin + j * spacing) * factor) / factor});\n  }\n  if (maxDefined && includeBounds && niceMax !== max) {\n    if (almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({value: max});\n    }\n  } else if (!maxDefined || niceMax === max) {\n    ticks.push({value: niceMax});\n  }\n  return ticks;\n}\nfunction relativeLabelSize(value, minSpacing, {horizontal, minRotation}) {\n  const rad = toRadians(minRotation);\n  const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n  const length = 0.75 * minSpacing * ('' + value).length;\n  return Math.min(minSpacing / ratio, length);\n}\nclass LinearScaleBase extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._endValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n      return null;\n    }\n    return +raw;\n  }\n  handleTickRangeOptions() {\n    const me = this;\n    const {beginAtZero} = me.options;\n    const {minDefined, maxDefined} = me.getUserBounds();\n    let {min, max} = me;\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n    if (beginAtZero) {\n      const minSign = sign(min);\n      const maxSign = sign(max);\n      if (minSign < 0 && maxSign < 0) {\n        setMax(0);\n      } else if (minSign > 0 && maxSign > 0) {\n        setMin(0);\n      }\n    }\n    if (min === max) {\n      let offset = 1;\n      if (max >= Number.MAX_SAFE_INTEGER || min <= Number.MIN_SAFE_INTEGER) {\n        offset = Math.abs(max * 0.05);\n      }\n      setMax(max + offset);\n      if (!beginAtZero) {\n        setMin(min - offset);\n      }\n    }\n    me.min = min;\n    me.max = max;\n  }\n  getTickLimit() {\n    const me = this;\n    const tickOpts = me.options.ticks;\n    let {maxTicksLimit, stepSize} = tickOpts;\n    let maxTicks;\n    if (stepSize) {\n      maxTicks = Math.ceil(me.max / stepSize) - Math.floor(me.min / stepSize) + 1;\n    } else {\n      maxTicks = me.computeTickLimit();\n      maxTicksLimit = maxTicksLimit || 11;\n    }\n    if (maxTicksLimit) {\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\n    }\n    return maxTicks;\n  }\n  computeTickLimit() {\n    return Number.POSITIVE_INFINITY;\n  }\n  buildTicks() {\n    const me = this;\n    const opts = me.options;\n    const tickOpts = opts.ticks;\n    let maxTicks = me.getTickLimit();\n    maxTicks = Math.max(2, maxTicks);\n    const numericGeneratorOptions = {\n      maxTicks,\n      bounds: opts.bounds,\n      min: opts.min,\n      max: opts.max,\n      precision: tickOpts.precision,\n      step: tickOpts.stepSize,\n      count: tickOpts.count,\n      maxDigits: me._maxDigits(),\n      horizontal: me.isHorizontal(),\n      minRotation: tickOpts.minRotation || 0,\n      includeBounds: tickOpts.includeBounds !== false\n    };\n    const dataRange = me._range || me;\n    const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, me, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      me.start = me.max;\n      me.end = me.min;\n    } else {\n      me.start = me.min;\n      me.end = me.max;\n    }\n    return ticks;\n  }\n  configure() {\n    const me = this;\n    const ticks = me.ticks;\n    let start = me.min;\n    let end = me.max;\n    super.configure();\n    if (me.options.offset && ticks.length) {\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n      start -= offset;\n      end += offset;\n    }\n    me._startValue = start;\n    me._endValue = end;\n    me._valueRange = end - start;\n  }\n  getLabelForValue(value) {\n    return formatNumber(value, this.chart.options.locale);\n  }\n}\n\nclass LinearScale extends LinearScaleBase {\n  determineDataLimits() {\n    const me = this;\n    const {min, max} = me.getMinMax(true);\n    me.min = isNumberFinite(min) ? min : 0;\n    me.max = isNumberFinite(max) ? max : 1;\n    me.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    const me = this;\n    const horizontal = me.isHorizontal();\n    const length = horizontal ? me.width : me.height;\n    const minRotation = toRadians(me.options.ticks.minRotation);\n    const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n    const tickFont = me._resolveTickFontOptions(0);\n    return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n  }\n  getPixelForValue(value) {\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n  getValueForPixel(pixel) {\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n  }\n}\nLinearScale.id = 'linear';\nLinearScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.numeric\n  }\n};\n\nfunction isMajor(tickVal) {\n  const remain = tickVal / (Math.pow(10, Math.floor(log10(tickVal))));\n  return remain === 1;\n}\nfunction generateTicks(generationOptions, dataRange) {\n  const endExp = Math.floor(log10(dataRange.max));\n  const endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n  const ticks = [];\n  let tickVal = finiteOrDefault(generationOptions.min, Math.pow(10, Math.floor(log10(dataRange.min))));\n  let exp = Math.floor(log10(tickVal));\n  let significand = Math.floor(tickVal / Math.pow(10, exp));\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n  do {\n    ticks.push({value: tickVal, major: isMajor(tickVal)});\n    ++significand;\n    if (significand === 10) {\n      significand = 1;\n      ++exp;\n      precision = exp >= 0 ? 1 : precision;\n    }\n    tickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n  } while (exp < endExp || (exp === endExp && significand < endSignificand));\n  const lastTick = finiteOrDefault(generationOptions.max, tickVal);\n  ticks.push({value: lastTick, major: isMajor(tickVal)});\n  return ticks;\n}\nclass LogarithmicScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n    if (value === 0) {\n      this._zero = true;\n      return undefined;\n    }\n    return isNumberFinite(value) && value > 0 ? value : null;\n  }\n  determineDataLimits() {\n    const me = this;\n    const {min, max} = me.getMinMax(true);\n    me.min = isNumberFinite(min) ? Math.max(0, min) : null;\n    me.max = isNumberFinite(max) ? Math.max(0, max) : null;\n    if (me.options.beginAtZero) {\n      me._zero = true;\n    }\n    me.handleTickRangeOptions();\n  }\n  handleTickRangeOptions() {\n    const me = this;\n    const {minDefined, maxDefined} = me.getUserBounds();\n    let min = me.min;\n    let max = me.max;\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n    const exp = (v, m) => Math.pow(10, Math.floor(log10(v)) + m);\n    if (min === max) {\n      if (min <= 0) {\n        setMin(1);\n        setMax(10);\n      } else {\n        setMin(exp(min, -1));\n        setMax(exp(max, +1));\n      }\n    }\n    if (min <= 0) {\n      setMin(exp(max, -1));\n    }\n    if (max <= 0) {\n      setMax(exp(min, +1));\n    }\n    if (me._zero && me.min !== me._suggestedMin && min === exp(me.min, 0)) {\n      setMin(exp(min, -1));\n    }\n    me.min = min;\n    me.max = max;\n  }\n  buildTicks() {\n    const me = this;\n    const opts = me.options;\n    const generationOptions = {\n      min: me._userMin,\n      max: me._userMax\n    };\n    const ticks = generateTicks(generationOptions, me);\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, me, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      me.start = me.max;\n      me.end = me.min;\n    } else {\n      me.start = me.min;\n      me.end = me.max;\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    return value === undefined ? '0' : formatNumber(value, this.chart.options.locale);\n  }\n  configure() {\n    const me = this;\n    const start = me.min;\n    super.configure();\n    me._startValue = log10(start);\n    me._valueRange = log10(me.max) - log10(start);\n  }\n  getPixelForValue(value) {\n    const me = this;\n    if (value === undefined || value === 0) {\n      value = me.min;\n    }\n    if (value === null || isNaN(value)) {\n      return NaN;\n    }\n    return me.getPixelForDecimal(value === me.min\n      ? 0\n      : (log10(value) - me._startValue) / me._valueRange);\n  }\n  getValueForPixel(pixel) {\n    const me = this;\n    const decimal = me.getDecimalForPixel(pixel);\n    return Math.pow(10, me._startValue + decimal * me._valueRange);\n  }\n}\nLogarithmicScale.id = 'logarithmic';\nLogarithmicScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.logarithmic,\n    major: {\n      enabled: true\n    }\n  }\n};\n\nfunction getTickBackdropHeight(opts) {\n  const tickOpts = opts.ticks;\n  if (tickOpts.display && opts.display) {\n    const padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n  return 0;\n}\nfunction measureLabelSize(ctx, font, label) {\n  label = isArray(label) ? label : [label];\n  return {\n    w: _longestText(ctx, font.string, label),\n    h: label.length * font.lineHeight\n  };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - (size / 2),\n      end: pos + (size / 2)\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\nfunction fitWithPointLabels(scale) {\n  const furthestLimits = {\n    l: 0,\n    r: scale.width,\n    t: 0,\n    b: scale.height - scale.paddingTop\n  };\n  const furthestAngles = {};\n  const labelSizes = [];\n  const padding = [];\n  const valueCount = scale.getLabels().length;\n  for (let i = 0; i < valueCount; i++) {\n    const opts = scale.options.pointLabels.setContext(scale.getPointLabelContext(i));\n    padding[i] = opts.padding;\n    const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i]);\n    const plFont = toFont(opts.font);\n    const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n    const angleRadians = scale.getIndexAngle(i);\n    const angle = toDegrees(angleRadians);\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    if (hLimits.start < furthestLimits.l) {\n      furthestLimits.l = hLimits.start;\n      furthestAngles.l = angleRadians;\n    }\n    if (hLimits.end > furthestLimits.r) {\n      furthestLimits.r = hLimits.end;\n      furthestAngles.r = angleRadians;\n    }\n    if (vLimits.start < furthestLimits.t) {\n      furthestLimits.t = vLimits.start;\n      furthestAngles.t = angleRadians;\n    }\n    if (vLimits.end > furthestLimits.b) {\n      furthestLimits.b = vLimits.end;\n      furthestAngles.b = angleRadians;\n    }\n  }\n  scale._setReductions(scale.drawingArea, furthestLimits, furthestAngles);\n  scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n  const items = [];\n  const valueCount = scale.getLabels().length;\n  const opts = scale.options;\n  const tickBackdropHeight = getTickBackdropHeight(opts);\n  const outerDistance = scale.getDistanceFromCenterForValue(opts.ticks.reverse ? scale.min : scale.max);\n  for (let i = 0; i < valueCount; i++) {\n    const extra = (i === 0 ? tickBackdropHeight / 2 : 0);\n    const pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + padding[i]);\n    const angle = toDegrees(scale.getIndexAngle(i));\n    const size = labelSizes[i];\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n    items.push({\n      x: pointLabelPosition.x,\n      y,\n      textAlign,\n      left,\n      top: y,\n      right: left + size.w,\n      bottom: y + size.h\n    });\n  }\n  return items;\n}\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n  return 'right';\n}\nfunction leftForTextAlign(x, w, align) {\n  if (align === 'right') {\n    x -= w;\n  } else if (align === 'center') {\n    x -= (w / 2);\n  }\n  return x;\n}\nfunction yForAngle(y, h, angle) {\n  if (angle === 90 || angle === 270) {\n    y -= (h / 2);\n  } else if (angle > 270 || angle < 90) {\n    y -= h;\n  }\n  return y;\n}\nfunction drawPointLabels(scale, labelCount) {\n  const {ctx, options: {pointLabels}} = scale;\n  for (let i = labelCount - 1; i >= 0; i--) {\n    const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n    const plFont = toFont(optsAtIndex.font);\n    const {x, y, textAlign, left, top, right, bottom} = scale._pointLabelItems[i];\n    const {backdropColor} = optsAtIndex;\n    if (!isNullOrUndef(backdropColor)) {\n      const padding = toPadding(optsAtIndex.backdropPadding);\n      ctx.fillStyle = backdropColor;\n      ctx.fillRect(left - padding.left, top - padding.top, right - left + padding.width, bottom - top + padding.height);\n    }\n    renderText(\n      ctx,\n      scale._pointLabels[i],\n      x,\n      y + (plFont.lineHeight / 2),\n      plFont,\n      {\n        color: optsAtIndex.color,\n        textAlign: textAlign,\n        textBaseline: 'middle'\n      }\n    );\n  }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  const {ctx} = scale;\n  if (circular) {\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    let pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n    for (let i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount) {\n  const ctx = scale.ctx;\n  const circular = gridLineOpts.circular;\n  const {color, lineWidth} = gridLineOpts;\n  if ((!circular && !labelCount) || !color || !lineWidth || radius < 0) {\n    return;\n  }\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(gridLineOpts.borderDash);\n  ctx.lineDashOffset = gridLineOpts.borderDashOffset;\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\nfunction numberOrZero(param) {\n  return isNumber(param) ? param : 0;\n}\nfunction createPointLabelContext(parent, index, label) {\n  return Object.assign(Object.create(parent), {\n    label,\n    index,\n    type: 'pointLabel'\n  });\n}\nclass RadialLinearScale extends LinearScaleBase {\n  constructor(cfg) {\n    super(cfg);\n    this.xCenter = undefined;\n    this.yCenter = undefined;\n    this.drawingArea = undefined;\n    this._pointLabels = [];\n    this._pointLabelItems = [];\n  }\n  setDimensions() {\n    const me = this;\n    me.width = me.maxWidth;\n    me.height = me.maxHeight;\n    me.paddingTop = getTickBackdropHeight(me.options) / 2;\n    me.xCenter = Math.floor(me.width / 2);\n    me.yCenter = Math.floor((me.height - me.paddingTop) / 2);\n    me.drawingArea = Math.min(me.height - me.paddingTop, me.width) / 2;\n  }\n  determineDataLimits() {\n    const me = this;\n    const {min, max} = me.getMinMax(false);\n    me.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n    me.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n    me.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n  }\n  generateTickLabels(ticks) {\n    const me = this;\n    LinearScaleBase.prototype.generateTickLabels.call(me, ticks);\n    me._pointLabels = me.getLabels().map((value, index) => {\n      const label = callback(me.options.pointLabels.callback, [value, index], me);\n      return label || label === 0 ? label : '';\n    });\n  }\n  fit() {\n    const me = this;\n    const opts = me.options;\n    if (opts.display && opts.pointLabels.display) {\n      fitWithPointLabels(me);\n    } else {\n      me.setCenterPoint(0, 0, 0, 0);\n    }\n  }\n  _setReductions(largestPossibleRadius, furthestLimits, furthestAngles) {\n    const me = this;\n    let radiusReductionLeft = furthestLimits.l / Math.sin(furthestAngles.l);\n    let radiusReductionRight = Math.max(furthestLimits.r - me.width, 0) / Math.sin(furthestAngles.r);\n    let radiusReductionTop = -furthestLimits.t / Math.cos(furthestAngles.t);\n    let radiusReductionBottom = -Math.max(furthestLimits.b - (me.height - me.paddingTop), 0) / Math.cos(furthestAngles.b);\n    radiusReductionLeft = numberOrZero(radiusReductionLeft);\n    radiusReductionRight = numberOrZero(radiusReductionRight);\n    radiusReductionTop = numberOrZero(radiusReductionTop);\n    radiusReductionBottom = numberOrZero(radiusReductionBottom);\n    me.drawingArea = Math.max(largestPossibleRadius / 2, Math.min(\n      Math.floor(largestPossibleRadius - (radiusReductionLeft + radiusReductionRight) / 2),\n      Math.floor(largestPossibleRadius - (radiusReductionTop + radiusReductionBottom) / 2)));\n    me.setCenterPoint(radiusReductionLeft, radiusReductionRight, radiusReductionTop, radiusReductionBottom);\n  }\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n    const me = this;\n    const maxRight = me.width - rightMovement - me.drawingArea;\n    const maxLeft = leftMovement + me.drawingArea;\n    const maxTop = topMovement + me.drawingArea;\n    const maxBottom = (me.height - me.paddingTop) - bottomMovement - me.drawingArea;\n    me.xCenter = Math.floor(((maxLeft + maxRight) / 2) + me.left);\n    me.yCenter = Math.floor(((maxTop + maxBottom) / 2) + me.top + me.paddingTop);\n  }\n  getIndexAngle(index) {\n    const angleMultiplier = TAU / this.getLabels().length;\n    const startAngle = this.options.startAngle || 0;\n    return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n  }\n  getDistanceFromCenterForValue(value) {\n    const me = this;\n    if (isNullOrUndef(value)) {\n      return NaN;\n    }\n    const scalingFactor = me.drawingArea / (me.max - me.min);\n    if (me.options.reverse) {\n      return (me.max - value) * scalingFactor;\n    }\n    return (value - me.min) * scalingFactor;\n  }\n  getValueForDistanceFromCenter(distance) {\n    if (isNullOrUndef(distance)) {\n      return NaN;\n    }\n    const me = this;\n    const scaledDistance = distance / (me.drawingArea / (me.max - me.min));\n    return me.options.reverse ? me.max - scaledDistance : me.min + scaledDistance;\n  }\n  getPointLabelContext(index) {\n    const me = this;\n    const pointLabels = me._pointLabels || [];\n    if (index >= 0 && index < pointLabels.length) {\n      const pointLabel = pointLabels[index];\n      return createPointLabelContext(me.getContext(), index, pointLabel);\n    }\n  }\n  getPointPosition(index, distanceFromCenter) {\n    const me = this;\n    const angle = me.getIndexAngle(index) - HALF_PI;\n    return {\n      x: Math.cos(angle) * distanceFromCenter + me.xCenter,\n      y: Math.sin(angle) * distanceFromCenter + me.yCenter,\n      angle\n    };\n  }\n  getPointPositionForValue(index, value) {\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n  }\n  getBasePosition(index) {\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\n  }\n  getPointLabelPosition(index) {\n    const {left, top, right, bottom} = this._pointLabelItems[index];\n    return {\n      left,\n      top,\n      right,\n      bottom,\n    };\n  }\n  drawBackground() {\n    const me = this;\n    const {backgroundColor, grid: {circular}} = me.options;\n    if (backgroundColor) {\n      const ctx = me.ctx;\n      ctx.save();\n      ctx.beginPath();\n      pathRadiusLine(me, me.getDistanceFromCenterForValue(me._endValue), circular, me.getLabels().length);\n      ctx.closePath();\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }\n  drawGrid() {\n    const me = this;\n    const ctx = me.ctx;\n    const opts = me.options;\n    const {angleLines, grid} = opts;\n    const labelCount = me.getLabels().length;\n    let i, offset, position;\n    if (opts.pointLabels.display) {\n      drawPointLabels(me, labelCount);\n    }\n    if (grid.display) {\n      me.ticks.forEach((tick, index) => {\n        if (index !== 0) {\n          offset = me.getDistanceFromCenterForValue(tick.value);\n          const optsAtIndex = grid.setContext(me.getContext(index - 1));\n          drawRadiusLine(me, optsAtIndex, offset, labelCount);\n        }\n      });\n    }\n    if (angleLines.display) {\n      ctx.save();\n      for (i = me.getLabels().length - 1; i >= 0; i--) {\n        const optsAtIndex = angleLines.setContext(me.getPointLabelContext(i));\n        const {color, lineWidth} = optsAtIndex;\n        if (!lineWidth || !color) {\n          continue;\n        }\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = color;\n        ctx.setLineDash(optsAtIndex.borderDash);\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n        offset = me.getDistanceFromCenterForValue(opts.ticks.reverse ? me.min : me.max);\n        position = me.getPointPosition(i, offset);\n        ctx.beginPath();\n        ctx.moveTo(me.xCenter, me.yCenter);\n        ctx.lineTo(position.x, position.y);\n        ctx.stroke();\n      }\n      ctx.restore();\n    }\n  }\n  drawBorder() {}\n  drawLabels() {\n    const me = this;\n    const ctx = me.ctx;\n    const opts = me.options;\n    const tickOpts = opts.ticks;\n    if (!tickOpts.display) {\n      return;\n    }\n    const startAngle = me.getIndexAngle(0);\n    let offset, width;\n    ctx.save();\n    ctx.translate(me.xCenter, me.yCenter);\n    ctx.rotate(startAngle);\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n    me.ticks.forEach((tick, index) => {\n      if (index === 0 && !opts.reverse) {\n        return;\n      }\n      const optsAtIndex = tickOpts.setContext(me.getContext(index));\n      const tickFont = toFont(optsAtIndex.font);\n      offset = me.getDistanceFromCenterForValue(me.ticks[index].value);\n      if (optsAtIndex.showLabelBackdrop) {\n        ctx.font = tickFont.string;\n        width = ctx.measureText(tick.label).width;\n        ctx.fillStyle = optsAtIndex.backdropColor;\n        const padding = toPadding(optsAtIndex.backdropPadding);\n        ctx.fillRect(\n          -width / 2 - padding.left,\n          -offset - tickFont.size / 2 - padding.top,\n          width + padding.width,\n          tickFont.size + padding.height\n        );\n      }\n      renderText(ctx, tick.label, 0, -offset, tickFont, {\n        color: optsAtIndex.color,\n      });\n    });\n    ctx.restore();\n  }\n  drawTitle() {}\n}\nRadialLinearScale.id = 'radialLinear';\nRadialLinearScale.defaults = {\n  display: true,\n  animate: true,\n  position: 'chartArea',\n  angleLines: {\n    display: true,\n    lineWidth: 1,\n    borderDash: [],\n    borderDashOffset: 0.0\n  },\n  grid: {\n    circular: false\n  },\n  startAngle: 0,\n  ticks: {\n    showLabelBackdrop: true,\n    callback: Ticks.formatters.numeric\n  },\n  pointLabels: {\n    backdropColor: undefined,\n    backdropPadding: 2,\n    display: true,\n    font: {\n      size: 10\n    },\n    callback(label) {\n      return label;\n    },\n    padding: 5\n  }\n};\nRadialLinearScale.defaultRoutes = {\n  'angleLines.color': 'borderColor',\n  'pointLabels.color': 'color',\n  'ticks.color': 'color'\n};\nRadialLinearScale.descriptors = {\n  angleLines: {\n    _fallback: 'grid'\n  }\n};\n\nconst INTERVALS = {\n  millisecond: {common: true, size: 1, steps: 1000},\n  second: {common: true, size: 1000, steps: 60},\n  minute: {common: true, size: 60000, steps: 60},\n  hour: {common: true, size: 3600000, steps: 24},\n  day: {common: true, size: 86400000, steps: 30},\n  week: {common: false, size: 604800000, steps: 4},\n  month: {common: true, size: 2.628e9, steps: 12},\n  quarter: {common: false, size: 7.884e9, steps: 4},\n  year: {common: true, size: 3.154e10}\n};\nconst UNITS = (Object.keys(INTERVALS));\nfunction sorter(a, b) {\n  return a - b;\n}\nfunction parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n  const adapter = scale._adapter;\n  const {parser, round, isoWeekday} = scale._parseOpts;\n  let value = input;\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n  if (!isNumberFinite(value)) {\n    value = typeof parser === 'string'\n      ? adapter.parse(value, parser)\n      : adapter.parse(value);\n  }\n  if (value === null) {\n    return null;\n  }\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true)\n      ? adapter.startOf(value, 'isoWeek', isoWeekday)\n      : adapter.startOf(value, round);\n  }\n  return +value;\n}\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  const ilen = UNITS.length;\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    const interval = INTERVALS[UNITS[i]];\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n  return UNITS[ilen - 1];\n}\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    const unit = UNITS[i];\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\nfunction determineMajorUnit(unit) {\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    const {lo, hi} = _lookup(timestamps, time);\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  const adapter = scale._adapter;\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\n  const last = ticks[ticks.length - 1].value;\n  let major, index;\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n  return ticks;\n}\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  const ticks = [];\n  const map = {};\n  const ilen = values.length;\n  let i, value;\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n    ticks.push({\n      value,\n      major: false\n    });\n  }\n  return (ilen === 0 || !majorUnit) ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n  constructor(props) {\n    super(props);\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n    this._unit = 'day';\n    this._majorUnit = undefined;\n    this._offsets = {};\n    this._normalized = false;\n    this._parseOpts = undefined;\n  }\n  init(scaleOpts, opts) {\n    const time = scaleOpts.time || (scaleOpts.time = {});\n    const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n    mergeIf(time.displayFormats, adapter.formats());\n    this._parseOpts = {\n      parser: time.parser,\n      round: time.round,\n      isoWeekday: time.isoWeekday\n    };\n    super.init(scaleOpts);\n    this._normalized = opts.normalized;\n  }\n  parse(raw, index) {\n    if (raw === undefined) {\n      return null;\n    }\n    return parse(this, raw);\n  }\n  beforeLayout() {\n    super.beforeLayout();\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n  }\n  determineDataLimits() {\n    const me = this;\n    const options = me.options;\n    const adapter = me._adapter;\n    const unit = options.time.unit || 'day';\n    let {min, max, minDefined, maxDefined} = me.getUserBounds();\n    function _applyBounds(bounds) {\n      if (!minDefined && !isNaN(bounds.min)) {\n        min = Math.min(min, bounds.min);\n      }\n      if (!maxDefined && !isNaN(bounds.max)) {\n        max = Math.max(max, bounds.max);\n      }\n    }\n    if (!minDefined || !maxDefined) {\n      _applyBounds(me._getLabelBounds());\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n        _applyBounds(me.getMinMax(false));\n      }\n    }\n    min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n    max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n    me.min = Math.min(min, max - 1);\n    me.max = Math.max(min + 1, max);\n  }\n  _getLabelBounds() {\n    const arr = this.getLabelTimestamps();\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n    if (arr.length) {\n      min = arr[0];\n      max = arr[arr.length - 1];\n    }\n    return {min, max};\n  }\n  buildTicks() {\n    const me = this;\n    const options = me.options;\n    const timeOpts = options.time;\n    const tickOpts = options.ticks;\n    const timestamps = tickOpts.source === 'labels' ? me.getLabelTimestamps() : me._generate();\n    if (options.bounds === 'ticks' && timestamps.length) {\n      me.min = me._userMin || timestamps[0];\n      me.max = me._userMax || timestamps[timestamps.length - 1];\n    }\n    const min = me.min;\n    const max = me.max;\n    const ticks = _filterBetween(timestamps, min, max);\n    me._unit = timeOpts.unit || (tickOpts.autoSkip\n      ? determineUnitForAutoTicks(timeOpts.minUnit, me.min, me.max, me._getLabelCapacity(min))\n      : determineUnitForFormatting(me, ticks.length, timeOpts.minUnit, me.min, me.max));\n    me._majorUnit = !tickOpts.major.enabled || me._unit === 'year' ? undefined\n      : determineMajorUnit(me._unit);\n    me.initOffsets(timestamps);\n    if (options.reverse) {\n      ticks.reverse();\n    }\n    return ticksFromTimestamps(me, ticks, me._majorUnit);\n  }\n  initOffsets(timestamps) {\n    const me = this;\n    let start = 0;\n    let end = 0;\n    let first, last;\n    if (me.options.offset && timestamps.length) {\n      first = me.getDecimalForValue(timestamps[0]);\n      if (timestamps.length === 1) {\n        start = 1 - first;\n      } else {\n        start = (me.getDecimalForValue(timestamps[1]) - first) / 2;\n      }\n      last = me.getDecimalForValue(timestamps[timestamps.length - 1]);\n      if (timestamps.length === 1) {\n        end = last;\n      } else {\n        end = (last - me.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n      }\n    }\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\n    start = _limitValue(start, 0, limit);\n    end = _limitValue(end, 0, limit);\n    me._offsets = {start, end, factor: 1 / (start + 1 + end)};\n  }\n  _generate() {\n    const me = this;\n    const adapter = me._adapter;\n    const min = me.min;\n    const max = me.max;\n    const options = me.options;\n    const timeOpts = options.time;\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, me._getLabelCapacity(min));\n    const stepSize = valueOrDefault(timeOpts.stepSize, 1);\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    const hasWeekday = isNumber(weekday) || weekday === true;\n    const ticks = {};\n    let first = min;\n    let time, count;\n    if (hasWeekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n    }\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n    }\n    const timestamps = options.ticks.source === 'data' && me.getDataTimestamps();\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n      addTick(ticks, time, timestamps);\n    }\n    if (time === max || options.bounds === 'ticks' || count === 1) {\n      addTick(ticks, time, timestamps);\n    }\n    return Object.keys(ticks).sort((a, b) => a - b).map(x => +x);\n  }\n  getLabelForValue(value) {\n    const me = this;\n    const adapter = me._adapter;\n    const timeOpts = me.options.time;\n    if (timeOpts.tooltipFormat) {\n      return adapter.format(value, timeOpts.tooltipFormat);\n    }\n    return adapter.format(value, timeOpts.displayFormats.datetime);\n  }\n  _tickFormatFunction(time, index, ticks, format) {\n    const me = this;\n    const options = me.options;\n    const formats = options.time.displayFormats;\n    const unit = me._unit;\n    const majorUnit = me._majorUnit;\n    const minorFormat = unit && formats[unit];\n    const majorFormat = majorUnit && formats[majorUnit];\n    const tick = ticks[index];\n    const major = majorUnit && majorFormat && tick && tick.major;\n    const label = me._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    const formatter = options.ticks.callback;\n    return formatter ? callback(formatter, [label, index, ticks], me) : label;\n  }\n  generateTickLabels(ticks) {\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\n    }\n  }\n  getDecimalForValue(value) {\n    const me = this;\n    return value === null ? NaN : (value - me.min) / (me.max - me.min);\n  }\n  getPixelForValue(value) {\n    const me = this;\n    const offsets = me._offsets;\n    const pos = me.getDecimalForValue(value);\n    return me.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n  getValueForPixel(pixel) {\n    const me = this;\n    const offsets = me._offsets;\n    const pos = me.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return me.min + pos * (me.max - me.min);\n  }\n  _getLabelSize(label) {\n    const me = this;\n    const ticksOpts = me.options.ticks;\n    const tickLabelWidth = me.ctx.measureText(label).width;\n    const angle = toRadians(me.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n    const cosRotation = Math.cos(angle);\n    const sinRotation = Math.sin(angle);\n    const tickFontSize = me._resolveTickFontOptions(0).size;\n    return {\n      w: (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation),\n      h: (tickLabelWidth * sinRotation) + (tickFontSize * cosRotation)\n    };\n  }\n  _getLabelCapacity(exampleTime) {\n    const me = this;\n    const timeOpts = me.options.time;\n    const displayFormats = timeOpts.displayFormats;\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n    const exampleLabel = me._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(me, [exampleTime], me._majorUnit), format);\n    const size = me._getLabelSize(exampleLabel);\n    const capacity = Math.floor(me.isHorizontal() ? me.width / size.w : me.height / size.h) - 1;\n    return capacity > 0 ? capacity : 1;\n  }\n  getDataTimestamps() {\n    const me = this;\n    let timestamps = me._cache.data || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const metas = me.getMatchingVisibleMetas();\n    if (me._normalized && metas.length) {\n      return (me._cache.data = metas[0].controller.getAllParsedValues(me));\n    }\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(me));\n    }\n    return (me._cache.data = me.normalize(timestamps));\n  }\n  getLabelTimestamps() {\n    const me = this;\n    const timestamps = me._cache.labels || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const labels = me.getLabels();\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      timestamps.push(parse(me, labels[i]));\n    }\n    return (me._cache.labels = me._normalized ? timestamps : me.normalize(timestamps));\n  }\n  normalize(values) {\n    return _arrayUnique(values.sort(sorter));\n  }\n}\nTimeScale.id = 'time';\nTimeScale.defaults = {\n  bounds: 'data',\n  adapters: {},\n  time: {\n    parser: false,\n    unit: false,\n    round: false,\n    isoWeekday: false,\n    minUnit: 'millisecond',\n    displayFormats: {}\n  },\n  ticks: {\n    source: 'auto',\n    major: {\n      enabled: false\n    }\n  }\n};\n\nfunction interpolate(table, val, reverse) {\n  let lo = 0;\n  let hi = table.length - 1;\n  let prevSource, nextSource, prevTarget, nextTarget;\n  if (reverse) {\n    if (val >= table[lo].pos && val <= table[hi].pos) {\n      ({lo, hi} = _lookupByKey(table, 'pos', val));\n    }\n    ({pos: prevSource, time: prevTarget} = table[lo]);\n    ({pos: nextSource, time: nextTarget} = table[hi]);\n  } else {\n    if (val >= table[lo].time && val <= table[hi].time) {\n      ({lo, hi} = _lookupByKey(table, 'time', val));\n    }\n    ({time: prevSource, pos: prevTarget} = table[lo]);\n    ({time: nextSource, pos: nextTarget} = table[hi]);\n  }\n  const span = nextSource - prevSource;\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n  constructor(props) {\n    super(props);\n    this._table = [];\n    this._minPos = undefined;\n    this._tableRange = undefined;\n  }\n  initOffsets() {\n    const me = this;\n    const timestamps = me._getTimestampsForTable();\n    const table = me._table = me.buildLookupTable(timestamps);\n    me._minPos = interpolate(table, me.min);\n    me._tableRange = interpolate(table, me.max) - me._minPos;\n    super.initOffsets(timestamps);\n  }\n  buildLookupTable(timestamps) {\n    const {min, max} = this;\n    const items = [];\n    const table = [];\n    let i, ilen, prev, curr, next;\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n      if (curr >= min && curr <= max) {\n        items.push(curr);\n      }\n    }\n    if (items.length < 2) {\n      return [\n        {time: min, pos: 0},\n        {time: max, pos: 1}\n      ];\n    }\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      next = items[i + 1];\n      prev = items[i - 1];\n      curr = items[i];\n      if (Math.round((next + prev) / 2) !== curr) {\n        table.push({time: curr, pos: i / (ilen - 1)});\n      }\n    }\n    return table;\n  }\n  _getTimestampsForTable() {\n    const me = this;\n    let timestamps = me._cache.all || [];\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const data = me.getDataTimestamps();\n    const label = me.getLabelTimestamps();\n    if (data.length && label.length) {\n      timestamps = me.normalize(data.concat(label));\n    } else {\n      timestamps = data.length ? data : label;\n    }\n    timestamps = me._cache.all = timestamps;\n    return timestamps;\n  }\n  getDecimalForValue(value) {\n    return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n  }\n  getValueForPixel(pixel) {\n    const me = this;\n    const offsets = me._offsets;\n    const decimal = me.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return interpolate(me._table, decimal * me._tableRange + me._minPos, true);\n  }\n}\nTimeSeriesScale.id = 'timeseries';\nTimeSeriesScale.defaults = TimeScale.defaults;\n\nvar scales = /*#__PURE__*/Object.freeze({\n__proto__: null,\nCategoryScale: CategoryScale,\nLinearScale: LinearScale,\nLogarithmicScale: LogarithmicScale,\nRadialLinearScale: RadialLinearScale,\nTimeScale: TimeScale,\nTimeSeriesScale: TimeSeriesScale\n});\n\nconst registerables = [\n  controllers,\n  elements,\n  plugins,\n  scales,\n];\n\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, plugin_filler as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, plugin_subtitle as SubTitle, Ticks, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, _detectPlatform, animator, controllers, elements, layouts, plugins, registerables, registry, scales };\n"]},"metadata":{},"sourceType":"module"}